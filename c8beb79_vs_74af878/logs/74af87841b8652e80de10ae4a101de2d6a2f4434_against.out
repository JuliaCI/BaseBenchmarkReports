cset: moving following pidspec: 15312
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.498083632 seconds)
loading group "string"... done (took 0.511862241 seconds)
loading group "linalg"... done (took 8.919875501 seconds)
loading group "parallel"... done (took 0.177816865 seconds)
loading group "find"... done (took 1.293437414 seconds)
loading group "tuple"... done (took 1.913802817 seconds)
loading group "dates"... done (took 1.36827539 seconds)
loading group "micro"... done (took 0.19576087 seconds)
loading group "io"... done (took 0.510416502 seconds)
loading group "scalar"... done (took 51.397190338 seconds)
loading group "sparse"... done (took 14.118426926 seconds)
loading group "broadcast"... done (took 1.341205757 seconds)
loading group "union"... done (took 10.286870238 seconds)
loading group "simd"... done (took 3.072165276 seconds)
loading group "random"... done (took 11.78602425 seconds)
loading group "problem"... done (took 2.219199189 seconds)
loading group "array"... done (took 24.529619932 seconds)
loading group "misc"... done (took 1.147597977 seconds)
loading group "sort"... done (took 3.819165321 seconds)
loading group "collection"... done (took 19.452475645 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.627108612 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126448586 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.266312816 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.286656536 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.240985465 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167913109 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144318327 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.264728518 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.721439255 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213267265 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134042803 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.50264964 seconds)
done (took 6.526219585 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.257093773 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.18159274 seconds)
    (2/2) benchmarking "String"...
    done (took 0.171812362 seconds)
  done (took 1.124916092 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076124312 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154118441 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107778892 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093763865 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092225171 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10928194 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092695831 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10904372 seconds)
  done (took 1.533346683 seconds)
done (took 3.764783246 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.565592532 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.871020776 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.514137071 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.146124952 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.319547195 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.300248865 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319990975 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.203780248 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.108568747 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091452822 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176673451 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.38859226 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.437610315 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.943805863 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092088685 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.098117843 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.134655091 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.767387484 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08069265 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.112780054 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.507435565 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.191310631 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098034152 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124932929 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185786041 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133507022 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.163081508 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102629088 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664163891 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13317993 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185868169 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098011244 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161236606 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.196780387 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211142006 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092503522 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681482488 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202538942 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091832121 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098470308 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668004091 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120811394 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188800335 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103090335 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090316775 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183066116 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.094481426 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077939507 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.116137701 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084307519 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167487811 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.46306997 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106756801 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171833079 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092192791 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.689098908 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101403035 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276433386 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12623546 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092617718 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09069964 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087856788 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161951417 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094207047 seconds)
  done (took 20.255708229 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147621632 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165229861 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077399654 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156499659 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122696199 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079234143 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101706138 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077865817 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125744294 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.224321428 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138304408 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154324041 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091111143 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089772936 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.127211066 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249766852 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108008703 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123683415 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089484496 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089361121 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140713404 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095396798 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107144425 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092975049 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169839464 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204566016 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111139758 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122503732 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089504525 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095942234 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141561096 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146099034 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09149613 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088297936 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189256557 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10648407 seconds)
  done (took 5.324182098 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200610133 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123973841 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.211953514 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162815115 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144166315 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168549011 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151158362 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.281526301 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.210935473 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163275058 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131155133 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10558044 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078682797 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.189680448 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079014299 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096885044 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.490631117 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.137359758 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.174336112 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154683689 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088076962 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098919365 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368309124 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099761842 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080188375 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084992952 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084537514 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.197671 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085827014 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.101487625 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084752838 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087513883 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13624254 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195399218 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132689134 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12106999 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101620421 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082394069 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.217556747 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092702825 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076551748 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.126849437 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117114718 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132264306 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098646561 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094496727 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222534503 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082068566 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122150486 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.059175985 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199221103 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.12380361 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079922802 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290882917 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117967314 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087859323 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083073483 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.261101796 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.089328393 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113323493 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102145275 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081892405 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077805971 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105171847 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079364355 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.4333734 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093031942 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.804193672 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.101304509 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.142247618 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102458147 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10461985 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084121123 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085456389 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10246612 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102607403 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079688476 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094259395 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08077066 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079365263 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082979792 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111919582 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084102476 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097067094 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147317034 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.1018795 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118379751 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108941279 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102228821 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079495554 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128058113 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082353134 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083493776 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.165955367 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087280738 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110680136 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08485348 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144912561 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082830852 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.219247278 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084753811 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.107488007 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103043539 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128400656 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1003893 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079584509 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102441085 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079085368 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079737247 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160407562 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083381195 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081771654 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081858199 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110346915 seconds)
  done (took 23.03225975 seconds)
done (took 49.383250424 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.458982998 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087324989 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.0856266 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107496093 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087465853 seconds)
  done (took 1.679147806 seconds)
done (took 2.504650311 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.330248014 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197214337 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099800867 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193119828 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085367895 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200474156 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184841153 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093472731 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.210686469 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084105683 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192305284 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083864146 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10353952 seconds)
  done (took 2.91219338 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10139521 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108650686 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103325776 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119365744 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083690414 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09929259 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118039582 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110906137 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099564374 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112051546 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0837179 seconds)
  done (took 1.969129873 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099540534 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105572809 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097856746 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117710384 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083465568 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097321564 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115909964 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10816888 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097988905 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112496759 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085160684 seconds)
  done (took 1.95178876 seconds)
done (took 7.657470168 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.083654775 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.671256201 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146641384 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210901876 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.352378565 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.240219416 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.570858623 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.154056876 seconds)
  done (took 14.418215609 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.174560352 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.110785677 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09222751 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090827574 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09520112 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.113932749 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093352676 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090787686 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.114111223 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092051141 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094335701 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.112520344 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091685599 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090651579 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093088635 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.107860095 seconds)
  done (took 2.547437387 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141421911 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122838643 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116188668 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097744666 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093338856 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.11658977 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099918752 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.094326602 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.113086296 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093173982 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099642202 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.115657047 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095318828 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091128267 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.114626878 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.113572426 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090503328 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114406956 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.111614841 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114759434 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100420234 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095126251 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.11320432 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097625251 seconds)
  done (took 3.467401671 seconds)
done (took 21.263856787 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150308985 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101658649 seconds)
  done (took 1.087636995 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.143368945 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.161692705 seconds)
  done (took 1.143023676 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111881166 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088801977 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13940662 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102451243 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089200944 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107057634 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116574818 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105880568 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090748064 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090343252 seconds)
  done (took 1.884357703 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094198692 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094978073 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123380496 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139930176 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116076004 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093831746 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094288758 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091504804 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11432425 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090689538 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094694916 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12746046 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094625817 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127575214 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095976333 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095589771 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117647948 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094049918 seconds)
  done (took 2.745430013 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090620971 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090873191 seconds)
  done (took 1.025668065 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094404615 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088175699 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091447681 seconds)
    (4/7) benchmarking "year"...
    done (took 0.11084471 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08930512 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088376347 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10705128 seconds)
  done (took 1.513733507 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.49927493 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.27067406 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.374908335 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10680306 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.145454766 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.355039044 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146830011 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102706458 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101548501 seconds)
  done (took 2.98167606 seconds)
done (took 13.222672082 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092546868 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220802844 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.63730341 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112555573 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.207757329 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.164849123 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.290794512 seconds)
done (took 2.574403052 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352582813 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.150498638 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086821183 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.087918751 seconds)
  done (took 1.520232817 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081235255 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097759755 seconds)
  done (took 1.028881053 seconds)
done (took 3.399195418 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088941419 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.119928299 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.108257461 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088324155 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.087532209 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087089611 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.106826621 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088643163 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087169967 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085694295 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.107535899 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.087245861 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.087026069 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1069963 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088724921 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086561608 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086089071 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105165719 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.086965775 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087203313 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104851484 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087500334 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087232879 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08594576 seconds)
  done (took 3.127078751 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111791527 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089686716 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109777291 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093173571 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091959684 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109490756 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093312018 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090773881 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108582828 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090787896 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092047256 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.090495325 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108229344 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092757162 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087941706 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110475982 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09295477 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088486833 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108084864 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092709558 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091481081 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108573296 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093267658 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092507509 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110845696 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093225928 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089506704 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107556999 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093649737 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091913497 seconds)
  done (took 3.778475519 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096333794 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084508756 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087429927 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115088944 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085719 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088356999 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102763312 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086887783 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089454842 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087052607 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.10870666 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088228554 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085218982 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108425025 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091062759 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091716031 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096907335 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.104919285 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086373495 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089312068 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109603969 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087029171 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08828213 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087638988 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106507606 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086227389 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08923033 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106651079 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089265989 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087748031 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091086906 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109793943 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089846718 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097529914 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.111017108 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088958151 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094378111 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103777834 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09110028 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085708702 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084825399 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108037319 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086614827 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09481127 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106768276 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090446586 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084994197 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090500592 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.107811576 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093238222 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084515012 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.102661658 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092297227 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090657071 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.091578155 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.103046658 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089891404 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085534641 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108554753 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089504497 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085332876 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083904692 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111308868 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088961365 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.103286879 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113584293 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085947841 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089844432 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.107372885 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095303231 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091479365 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116876538 seconds)
  done (took 7.69159062 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102156038 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098579092 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089091607 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109653736 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089616741 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08826897 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112654031 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089142472 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089650286 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113686234 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091317562 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0887892 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089711136 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109988486 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088964806 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089944435 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114251888 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089107053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088657436 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108513876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090001973 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093743406 seconds)
  done (took 2.983140996 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.232742168 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094888187 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139938716 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122111237 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10899091 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11929614 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093567815 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093660441 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110556013 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099521168 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096875264 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111220739 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106255607 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096593979 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117045788 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099345713 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110575079 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103331645 seconds)
  done (took 2.916455752 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103618259 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090529157 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.131469205 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092138582 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090046379 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090037452 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116214827 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111887604 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.108783058 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09203663 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098399837 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090291338 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.110454318 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092409856 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090522475 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112038237 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091788132 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090894037 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11637433 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097511662 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095646326 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115443821 seconds)
  done (took 3.091116117 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106584254 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090393131 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128026341 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094363082 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088559113 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088867428 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115814079 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091365588 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097177898 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.109589537 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091097817 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089554552 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.1245502 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09144383 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09581867 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110076389 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091896322 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091049639 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108999194 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09226154 seconds)
  done (took 2.859041562 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17443622 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124447004 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108772477 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114572189 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126759766 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107740208 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113803404 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12631674 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108501007 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136502703 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108349988 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105959273 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134193088 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111972772 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107043735 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135282409 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114605397 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134537793 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106838125 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10714848 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139065759 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106770883 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133954237 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108013671 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106570927 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126278641 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10836729 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131038068 seconds)
  done (took 4.233601845 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090714739 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08981887 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089906294 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108968361 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090284265 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089873107 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088593706 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108457648 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091715632 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088619098 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107653395 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090005829 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08944849 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.0901747 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108713131 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092148891 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089090042 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107425905 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090709007 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089767514 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089212711 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108152966 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090254205 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089177517 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088858465 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108706353 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090094443 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088956064 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107338345 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090598132 seconds)
  done (took 3.708915646 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102779797 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099356655 seconds)
  done (took 1.071991273 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099765387 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104605964 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088710089 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110290117 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096643689 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089885729 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118069057 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096978373 seconds)
  done (took 1.675236941 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.144359538 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.166213375 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096516078 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102085936 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.166458634 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.1577863 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134739308 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.094068851 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109636974 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084456068 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.159344906 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083121728 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091224721 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106904895 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093405126 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096890683 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.109056832 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102561247 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097332667 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09318232 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115297999 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097657434 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111278072 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10213736 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085074861 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092905594 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113954281 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101986772 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087005109 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.114207518 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089477857 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089851798 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.114656671 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09560257 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091522125 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.166503685 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098913313 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107694402 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093225637 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094612958 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.14437334 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092048907 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091230087 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10944141 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095834124 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.094717899 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.114707986 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09275785 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083776631 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087098344 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.111519771 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08724691 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089729273 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112578003 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091778352 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098264459 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.112812888 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088550932 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087175982 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105350567 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091906836 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087369094 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112304915 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095073731 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093076243 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110883747 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092321969 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090641889 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.110722498 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094776738 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090687074 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126682244 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093092978 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094657906 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095321392 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.111073262 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088785203 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096558962 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109908925 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.0924228 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.093285433 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.138676153 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093807719 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08677556 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.107006327 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099422921 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094016836 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.112104409 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085205355 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100594661 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.112198902 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.091948621 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084383368 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107613322 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089326197 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0948836 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083656183 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112571685 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091052512 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.096367006 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116643547 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091506164 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092814817 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115833946 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097317544 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091141091 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.160072509 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088287719 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087297411 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.116205798 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096317406 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086412409 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112309248 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092293298 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089515263 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.106561736 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098593789 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09237853 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.113399138 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098609368 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094612676 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113081475 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096823469 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.0918466 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088104393 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.116504419 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1003012 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094072813 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.114635377 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09414776 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092092308 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.111015675 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097016296 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088965851 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115866826 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090840097 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091345986 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.092500086 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.116023079 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092782735 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086439237 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110907122 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093251899 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090108519 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.114903545 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094352829 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086533213 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104766491 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093411883 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087338375 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.112020376 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10232467 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08793355 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.112672055 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090784503 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100089034 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107818691 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098831846 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094702061 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097771034 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118462822 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085040989 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088837099 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.11542296 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09529338 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088407366 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.111727045 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093523365 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100338055 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.106241434 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097335728 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085074363 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088553413 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.117953248 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095303648 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095704379 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108385837 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133141164 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103360616 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11786775 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093144244 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095060643 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116860682 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093223158 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095047208 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118532625 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100261071 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092706805 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111146299 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100796391 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087952443 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093541668 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111180661 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094206389 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083704592 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113245658 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085243044 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097102031 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113716544 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097843196 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097128346 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113343964 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09371329 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100822034 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106863271 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097325347 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084293563 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096914053 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.122321264 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098448643 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098423985 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114829463 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090972646 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092150655 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120731111 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096062394 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092742265 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.11224832 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087267819 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086389209 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097809432 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.116317635 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090325195 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092769165 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11447089 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095642945 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089395528 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105040321 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.09846277 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096228177 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107391105 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093645463 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08892773 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112018619 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102223171 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085451074 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108983901 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096696723 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097712027 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.110244861 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093926969 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094809074 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097604288 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.115887351 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096142425 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090146738 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1201576 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092424627 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091065016 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109193881 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097312393 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08645836 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094976253 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.114081298 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090445739 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088223448 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117759853 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098600201 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097755374 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111109707 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098979437 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.09867793 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.118785629 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091936412 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098788171 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107676582 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086961545 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088903601 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103202584 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098098155 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090253254 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096294481 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111275089 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093270567 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095708845 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11496815 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091804494 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100141625 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125036134 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088976517 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085116524 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111540079 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092906469 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088146631 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109139695 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094565318 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094602277 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.116948196 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097932509 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089470415 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.112034514 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10170285 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08947831 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.098856956 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.118640822 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099840927 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088655814 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.117780157 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.100610038 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096829641 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10688896 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.102062448 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091613961 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112341341 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091559395 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091644189 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109604058 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088272517 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088916423 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.118186305 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093312504 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09680313 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091902057 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112072652 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089943759 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087789292 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.11968264 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093114704 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098844109 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.112145938 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08812232 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086438928 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.117103844 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094504591 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098828138 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087818525 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.118057588 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099369571 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096798158 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.1145724 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103648555 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102026032 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.119366829 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101322813 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086338492 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110899019 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099961987 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0933359 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.115872669 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096373453 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087343025 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096200744 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.120119095 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095742733 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.090588057 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.107493736 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096168045 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.098330956 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.117645343 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098830408 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.094462758 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114818869 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090012418 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097763346 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.098380355 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.115128325 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100161619 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091981483 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.117492898 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090026583 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099281454 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.113484422 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08938303 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086614129 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.11057777 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100810294 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087603265 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097920783 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.118871525 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.09131601 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091075737 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.117512008 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091489915 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096496248 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119276465 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.0925477 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103030544 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114343234 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092521117 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09733225 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097468543 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.107015369 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092780629 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092534119 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121730829 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092660172 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098206391 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113822636 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099268903 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095010176 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.11845081 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100778171 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098763707 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086363137 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.12075204 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098058242 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095712018 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111293713 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092868831 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087932399 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.11313769 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100445773 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090711363 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12241506 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100190281 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091187416 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111250029 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101393683 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092522533 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119971159 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092537613 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095360804 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087225 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118166053 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093040461 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100550352 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.111231667 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089891532 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098041831 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.119787179 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098878943 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09614295 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.119958467 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089168658 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08713094 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096313784 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.111864329 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104058765 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096802892 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113089574 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0931255 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095321585 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116547976 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101961757 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088551989 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110556152 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095537775 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095095239 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.11137154 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089920529 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097607946 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092276129 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116547869 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092681757 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088107296 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.114275285 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100313894 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091827231 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110692943 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091882877 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100144918 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113803829 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091789963 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088173152 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119999318 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097095669 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099731635 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110769006 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096143511 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091702899 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.115512096 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102765239 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092201887 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114312535 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09387763 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099495083 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099411918 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108503267 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091208473 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103580309 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119911227 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099437293 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096316453 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113276246 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101657014 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10114727 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.116321229 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089910795 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088847511 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092365932 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108726769 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095910832 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098872076 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114635483 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092498704 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097653046 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119347202 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099173938 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095422481 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107676824 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102482928 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091375346 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097151936 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109404634 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087930013 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097566758 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120701454 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09432264 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094246181 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.11666981 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097808527 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088702174 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111365627 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099417072 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098967814 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099562253 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115115254 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092673889 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.096798808 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125524169 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097095687 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092774175 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123489428 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10223136 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094542626 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114610403 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099095836 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10071405 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.118228316 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102198525 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091530594 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.114437806 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103256852 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101183065 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124969182 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095112141 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0882714 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099345537 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114100903 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088552121 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097817515 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123262999 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102124697 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094236671 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112728902 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105456404 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098839625 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11713532 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093255623 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091971694 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.120309788 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093527128 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098108444 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.11112422 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103016013 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101197341 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100521703 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.12532723 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089441316 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09944197 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119570522 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103602917 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094523055 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109935112 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089690747 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.096797846 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.12173218 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103709721 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097259037 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098215565 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120599164 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096713104 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094237558 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113391571 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103182559 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099635348 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.11476498 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099364385 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093653432 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116013102 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097930694 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101316435 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10122076 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117679304 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105433532 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102035106 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115212523 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09329519 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09438575 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.118970739 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096902402 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097996009 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112619765 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091730414 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101108087 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101738801 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116602326 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103298116 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100612167 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115667636 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098539175 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102742911 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.12164992 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098761168 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095707 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.119320559 seconds)
  done (took 61.446169162 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14740481 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103553641 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118812629 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098295184 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115760424 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119414627 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096912252 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097257434 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119599696 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108612855 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09634775 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116801147 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114556392 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11787609 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136608435 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107724245 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117989932 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098838044 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097256268 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097273638 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135923581 seconds)
  done (took 3.286877846 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116733057 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111634397 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129626087 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112049689 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104003408 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130778931 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108533295 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129116031 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113235109 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105152221 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133170563 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107924912 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125479964 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107671218 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106409502 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127288713 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112150354 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103747392 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130399317 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110041656 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126128633 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110320127 seconds)
  done (took 3.488346324 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.107051108 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100410976 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099915763 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119045394 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102170379 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097481142 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124929346 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099055894 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106231251 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116270614 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.09324837 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095933677 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.100067298 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119755485 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092259847 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096101973 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126949645 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102344761 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10389785 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11792859 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109634112 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097082418 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.117566328 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092065941 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.109063987 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101980584 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119755639 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101373645 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089821867 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.122584038 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.099354015 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094900517 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11746534 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092117839 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090043526 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100209509 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.122140894 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.098303292 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097018841 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.118399912 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09902865 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.101647233 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.121272975 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099435175 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.097843378 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.115674442 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102396487 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098268158 seconds)
  done (took 5.977997942 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127771779 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165623769 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100999012 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.138357108 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134957249 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106520732 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099681693 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138146595 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100229147 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124504777 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113625454 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111277995 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125160374 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106134615 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10007322 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125921383 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104254457 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100876383 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127067428 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101791362 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10622505 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125098109 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111263862 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132271345 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105278978 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100572639 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122108855 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106187688 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110397814 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128229643 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106085651 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105684933 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.376586984 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102104504 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100141815 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124196474 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113077498 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124352136 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104925762 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099397122 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101570165 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127049053 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102829825 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134796213 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103566639 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102815328 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121754962 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100847646 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111174345 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123679165 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107888548 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.111564931 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12511065 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10379057 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104756417 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132339334 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103265136 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100417573 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123763073 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110780775 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.11985679 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105608039 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110752418 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122523234 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109017877 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110834745 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.124376646 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.1046552 seconds)
  done (took 9.085857577 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.137077088 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105297081 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13481146 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113661475 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104457603 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127356533 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106182664 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104677728 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126798239 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110540966 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125050412 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.206165941 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124545751 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11121842 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103905361 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126782301 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106463968 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10484641 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127954294 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104874376 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104158976 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134999425 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105091866 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134158033 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117372502 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10116025 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126831192 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106044476 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112283911 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127310591 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116001954 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126452672 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107176381 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114328912 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13965772 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105283024 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099561134 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127344631 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106276881 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125147208 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10346242 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112339133 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12723462 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103984546 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105568406 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126798437 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115028489 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115874951 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132324676 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111563635 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126660922 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115417233 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10521873 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127830722 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114228857 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140657821 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115436925 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113303405 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127673017 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114755662 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134326531 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12292839 seconds)
  done (took 8.299046891 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099946506 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098676791 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097975448 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.12025989 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100178085 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098123387 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097721381 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121295633 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100508806 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098655806 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120395217 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099852483 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099139034 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098318874 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120816416 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10000836 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097123388 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118446788 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100694039 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098616257 seconds)
  done (took 3.026962011 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110005328 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115106656 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121360858 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108226307 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100183974 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127560388 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102252294 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101429513 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100252567 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123803199 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109836464 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129722193 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103228079 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10647649 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129224463 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107800234 seconds)
  done (took 2.739301992 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121550242 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118175944 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.19319106 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10287382 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124501868 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109623692 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102068153 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126047714 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101886824 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107166821 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105199373 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127281792 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102629221 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102194949 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124078903 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105080438 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10095976 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127583671 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10268331 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.189911487 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107280805 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104027285 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124188743 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10648968 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.1031745 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126952578 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110133019 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102309366 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103273331 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123921319 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103712161 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108431518 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.123650675 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107020867 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103410933 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.12480385 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103023551 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101711529 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126548686 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104077699 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104468582 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123953114 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104035944 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104431857 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100034901 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.125565081 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101003242 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107029637 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124727194 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105428685 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10233954 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131392792 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108934672 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110087774 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129625066 seconds)
  done (took 7.241373536 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116846021 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104037082 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136286366 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102628933 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102434559 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101469564 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12515101 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104001757 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102994067 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122356343 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104357733 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102812087 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122447967 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104488589 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102409799 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123585792 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101944872 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103166471 seconds)
  done (took 2.92863767 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107158554 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101510117 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106314224 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123662706 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102245242 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101135872 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123061673 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102874133 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10116064 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100968835 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125935996 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101552541 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100195851 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123542195 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103370102 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100942168 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124252673 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102469309 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101296797 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100049715 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124696966 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101780136 seconds)
  done (took 3.330203526 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112629933 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.186401099 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109402424 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.194156493 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.09946466 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096851135 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130088863 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099757723 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114516305 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120570281 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098436131 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09705872 seconds)
  done (took 2.41021643 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133038952 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14079466 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124467099 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105071786 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110777328 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12861322 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107210972 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106045897 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13752757 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118178134 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12919327 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115586593 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113229229 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137225276 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111338707 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132148505 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108062711 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106764223 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123856055 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122560387 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10627834 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13567534 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10701284 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1053459 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130112725 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115478239 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134896658 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120463103 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105663703 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136638617 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112436152 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127390032 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116823839 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118955349 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124802411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116150214 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10608902 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143351776 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112522372 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136908682 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103644928 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110451251 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136243158 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112704188 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136006117 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108427001 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111029665 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128409153 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108623294 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148305101 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114020234 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11412483 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13249356 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115351931 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113282664 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151782644 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117580004 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13741808 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11184797 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14119792 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115900095 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133668097 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116982107 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117973512 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133615086 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115315108 seconds)
  done (took 8.9676676 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145057044 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102964003 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12936536 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119766254 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136557535 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109040157 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107770134 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127399921 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108758477 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102916193 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173759895 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107907303 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137447753 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11753629 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107159805 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129110766 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108375312 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115403446 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125741459 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128830028 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128599765 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117744485 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114819755 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136193872 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117680956 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133393335 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107905724 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10771977 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128422795 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108301429 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112022761 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130405112 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116173637 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104440627 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138472723 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107414978 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128263251 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114000443 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108036798 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133869841 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116754678 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143020278 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109447951 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10799978 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141283023 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107675281 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106444535 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12586637 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109087673 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10452786 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141443671 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119277789 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140456451 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117329829 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106663446 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130829445 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107444894 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106377754 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130948083 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112490027 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137422983 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109430696 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127458619 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130497666 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108051533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137332617 seconds)
  done (took 8.929929854 seconds)
done (took 169.144083491 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151238105 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.192586587 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146550325 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.180797626 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095456418 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130943067 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.15003791 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.149338703 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092441721 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.117436591 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094824987 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096932964 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.185144343 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095074237 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09323455 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11947705 seconds)
  done (took 3.044820343 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192668277 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.311746724 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111110841 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121134248 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104820179 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100256321 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120295178 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101104366 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098240627 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128865211 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102178734 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096425259 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127692281 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09819495 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098035616 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123760201 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108227644 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100458862 seconds)
  done (took 3.205875497 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120858452 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149076696 seconds)
  done (took 1.236384544 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131969289 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199476583 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275263118 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172030035 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123820223 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139174751 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15234397 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134824184 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.182752026 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134094503 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11279183 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099409315 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149121828 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106195509 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114445155 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122137473 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127426756 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134524203 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115365887 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100565286 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14288098 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10304166 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104212529 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135527556 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.171005641 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133134204 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10379933 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101626946 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123429237 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114324522 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105312316 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138808597 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111125606 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175066794 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104614885 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170485624 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107608758 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123491192 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113606319 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098283321 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126143098 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103807411 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135310108 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101604218 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101860389 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128597741 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103207922 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101316001 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128978553 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109459111 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107380212 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128866327 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168778431 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11048171 seconds)
  done (took 7.927709058 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.858602542 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142359657 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100162639 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.012985908 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150577012 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114612116 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.857503011 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146690362 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252756185 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.878319462 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116845029 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.112460565 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261002411 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.234236951 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.0070861 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330476722 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.710992074 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11519358 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127390993 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165132302 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107871299 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149453508 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119724572 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42073729 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100632979 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099225068 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130125859 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112094003 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178687333 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098785454 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126328198 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193340807 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244314398 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206953687 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12214382 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099072509 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097578735 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18516133 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270187477 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218335601 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18303983 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095826147 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097514331 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130958686 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118903879 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095090804 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181733521 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188618294 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189533919 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102241741 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134526182 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110454414 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106014418 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179865926 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.1189853 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.33223689 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32931951 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098424637 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130235196 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115823832 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265413647 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099393253 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.254999403 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126443405 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21464609 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098601353 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809383954 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184365031 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098020643 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129950895 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106165687 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126478711 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107485833 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179862673 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.374188102 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134897663 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10515822 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09851077 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.244022438 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.120486988 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100987405 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181838151 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100690184 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107670072 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136434488 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1113172 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187946147 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248060755 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111276662 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130466385 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105672151 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110365414 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.124393951 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210943318 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.250259473 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.153437855 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234799283 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130087639 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161780572 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183781426 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106193109 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18753436 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128260118 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116911157 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106152281 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.246613137 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134713688 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099156251 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128286998 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108455313 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160669971 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102807712 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107530306 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186625406 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456319183 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184125473 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096798181 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103059147 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133073362 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178876433 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107053097 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266399786 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107711602 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184642653 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105503548 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.122511042 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107015562 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182658804 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108402221 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13285505 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108808361 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132509871 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.232136202 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221973063 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13690928 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242734118 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166581121 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131734798 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190542108 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109910277 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188485343 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110875295 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129597436 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102247866 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798212982 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112739314 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1310461 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104837476 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204510213 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100533407 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100558196 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122842477 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098563043 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805402073 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10262039 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097009841 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125836342 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107094062 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129678541 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108924583 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104418615 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181390847 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240317126 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.136814023 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107083663 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099802582 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.180948902 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123289376 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102728183 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100243897 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100186695 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.132701378 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104869291 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101675975 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193095443 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177761378 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230365832 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.524825589 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122297208 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102509753 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237179504 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099855297 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299736292 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132224346 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234021268 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187415347 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097976352 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.328883246 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188117133 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206928839 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102630767 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189157925 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098368937 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107384942 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179924584 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099577608 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131743514 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175522663 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116399058 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111575158 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.041517622 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101394195 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249540735 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09787135 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18737374 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101726157 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107541887 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.330779823 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103395455 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116353162 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180057825 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127791177 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104135908 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.603780528 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101680046 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111321226 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131102441 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234721887 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187199373 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108101885 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131811273 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115212885 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183743735 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232753878 seconds)
  done (took 45.393838762 seconds)
done (took 61.766407047 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298707569 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.261282042 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.305862975 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211672623 seconds)
  done (took 2.139281961 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.266599729 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163967894 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.237035873 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099635372 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248474798 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099165577 seconds)
  done (took 2.110223379 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.493542278 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.373684903 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.308500114 seconds)
  done (took 2.172819163 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.256214925 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252379446 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356011515 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.410376908 seconds)
  done (took 2.38611388 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.303607657 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131112366 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126937064 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.214230121 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.258519935 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.231009886 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149464588 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.197968482 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.154316283 seconds)
  done (took 2.809373645 seconds)
done (took 12.608231913 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.389497843 seconds)
    (2/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.338578762 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.144838492 seconds)
    (4/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.262454895 seconds)
    (5/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.336223459 seconds)
    (6/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.190905645 seconds)
    (7/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.338182378 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104632926 seconds)
    (9/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.14247281 seconds)
    (10/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.18644417 seconds)
    (11/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127803381 seconds)
    (12/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.343007969 seconds)
    (13/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.217958863 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111255565 seconds)
    (15/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.337732356 seconds)
    (16/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.346504757 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083622783 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.144419076 seconds)
    (19/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.210943371 seconds)
    (20/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.20924696 seconds)
    (21/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.263196869 seconds)
    (22/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.182345699 seconds)
    (23/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.237403332 seconds)
    (24/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.209873566 seconds)
    (25/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.122895988 seconds)
    (26/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.188230515 seconds)
    (27/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117112789 seconds)
    (28/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.234484045 seconds)
    (29/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.224122207 seconds)
    (30/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.190930514 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128553928 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.156615306 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.215033414 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.225674495 seconds)
    (35/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.186899243 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.158951982 seconds)
    (37/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082667141 seconds)
    (38/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.156748142 seconds)
    (39/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.107941057 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.137256585 seconds)
    (41/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134769918 seconds)
    (42/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.168918594 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.127552734 seconds)
    (44/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.176372752 seconds)
    (45/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.130339644 seconds)
    (46/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.082867434 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110625241 seconds)
    (48/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109897838 seconds)
    (49/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.137977042 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.214191378 seconds)
    (51/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.261366068 seconds)
    (52/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.19232571 seconds)
    (53/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.127879509 seconds)
    (54/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100109388 seconds)
    (55/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.082284079 seconds)
    (56/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.137361509 seconds)
    (57/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.189013345 seconds)
    (58/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.300693632 seconds)
    (59/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.185561941 seconds)
    (60/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083270705 seconds)
    (61/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.190391602 seconds)
    (62/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145536134 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103062846 seconds)
    (64/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.11478173 seconds)
    (65/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.083779914 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.105972296 seconds)
    (67/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.164167016 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.135403566 seconds)
    (69/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.144618007 seconds)
    (70/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.107557079 seconds)
    (71/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084097554 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100479142 seconds)
    (73/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.190750836 seconds)
    (74/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.179785901 seconds)
    (75/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.08298967 seconds)
    (76/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.158461568 seconds)
    (77/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110595451 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104218193 seconds)
    (79/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.08340255 seconds)
    (80/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.152974766 seconds)
    (81/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106322714 seconds)
    (82/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.217705832 seconds)
    (83/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083799519 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105496921 seconds)
    (85/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.207619697 seconds)
    (86/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084037115 seconds)
    (87/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.10974746 seconds)
    (88/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.215628008 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10451687 seconds)
    (90/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.143084484 seconds)
    (91/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148726813 seconds)
    (92/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.083943078 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106520326 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125271429 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.109061568 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106245094 seconds)
    (97/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.188219782 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.125756026 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.105168833 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110128074 seconds)
    (101/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.107759389 seconds)
    (102/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.210983344 seconds)
    (103/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.248257768 seconds)
    (104/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.083773127 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128023405 seconds)
    (106/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083437109 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.12935227 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085081941 seconds)
    (109/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083765521 seconds)
    (110/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.17460647 seconds)
    (111/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.195016238 seconds)
    (112/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.171003091 seconds)
    (113/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.154282322 seconds)
    (114/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.084236835 seconds)
    (115/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110568833 seconds)
    (116/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08346686 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.131245935 seconds)
    (118/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.083158141 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084325642 seconds)
    (120/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083925619 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.130419932 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10453684 seconds)
    (123/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099033618 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.13470758 seconds)
    (125/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11164768 seconds)
    (126/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084113785 seconds)
    (127/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.083307236 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.129642255 seconds)
    (129/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113802063 seconds)
    (130/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083135127 seconds)
    (131/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.083273909 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.216352037 seconds)
    (133/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083947309 seconds)
    (134/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110755794 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.153879857 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.128369606 seconds)
    (137/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084432274 seconds)
    (138/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.08181643 seconds)
    (139/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.113965581 seconds)
    (140/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.191187224 seconds)
    (141/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083202696 seconds)
    (142/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.235294143 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112346848 seconds)
    (144/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084960399 seconds)
    (145/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.138512627 seconds)
    (146/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.091519749 seconds)
    (147/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084545901 seconds)
    (148/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100321054 seconds)
    (149/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.107857526 seconds)
    (150/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.107730597 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105246642 seconds)
    (152/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083489229 seconds)
    (153/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.111998944 seconds)
    (154/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.090428377 seconds)
    (155/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089593381 seconds)
    (156/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.082817475 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104894939 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.127699408 seconds)
    (159/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.085565745 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.09954675 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.134695873 seconds)
    (162/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112864443 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111061426 seconds)
    (164/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.134092405 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129966994 seconds)
    (166/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085101072 seconds)
    (167/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.089431916 seconds)
    (168/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.134559678 seconds)
    (169/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.151348959 seconds)
    (170/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084292603 seconds)
    (171/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084853686 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.130500596 seconds)
    (173/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.101841157 seconds)
    (174/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084876123 seconds)
    (175/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102038805 seconds)
    (176/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.109845918 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105182796 seconds)
    (178/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083583123 seconds)
    (179/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.088355213 seconds)
    (180/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.111934423 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12790019 seconds)
    (182/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.084146728 seconds)
    (183/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089404486 seconds)
    (184/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083079581 seconds)
    (185/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.107333786 seconds)
    (186/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111689415 seconds)
    (187/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.10944777 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128320099 seconds)
    (189/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.19128786 seconds)
    (190/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.088832569 seconds)
    (191/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.134848556 seconds)
    (192/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.08485109 seconds)
  done (took 27.976732521 seconds)
done (took 28.977262649 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.215148088 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129987988 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109554691 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108378414 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.205448652 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.114994779 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.1475029 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112714268 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116633472 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134265937 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101452291 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119938944 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108803401 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206198864 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111462343 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.128335892 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101933687 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118462476 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.149434179 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124150273 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.207651994 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104157707 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.11697507 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128652713 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180627019 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12978477 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109138658 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108188558 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.144152269 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112813408 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107792415 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.125869595 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.121840017 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.12218009 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124583664 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11346015 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100467845 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089304734 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.136179467 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112789759 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.119778904 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.135544495 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111131983 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102384745 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.13544883 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111900236 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101505155 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13666331 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101214954 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108338387 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1033435 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.149574576 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109868018 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098841755 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.12627608 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103306503 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118281231 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127098166 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122534762 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101239886 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126893051 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103168777 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11252124 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101410402 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.135569781 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102726928 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111819997 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.14037023 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110368539 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103671496 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.12623301 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111206397 seconds)
done (took 9.916480658 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10684495 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148390711 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.203182059 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.216790226 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128675047 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141042508 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11774872 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125941205 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.13890353 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122476272 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.13885408 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160178042 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.184251535 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.142378351 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117359216 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113296899 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.139993434 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111210808 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.212946232 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125876556 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153989105 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118931757 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129991132 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144667898 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107025511 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12716979 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134889347 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115046818 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.1049999 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.149457451 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127354356 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104505305 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133855239 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126742496 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123786148 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.142393897 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117376663 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11352566 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.132152566 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106492365 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138638421 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123831038 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105795566 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14138981 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115752612 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121549073 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137557063 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122273308 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106789642 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113495036 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.132750701 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133499274 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142201401 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124584782 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117730041 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.144045631 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121361786 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119532809 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133297064 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121248279 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10622793 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.129297658 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109198911 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.128148451 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.133414967 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121181266 seconds)
  done (took 9.695014878 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127370183 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136889502 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14190966 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116732942 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111016689 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124870674 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100297687 seconds)
  done (took 1.91346287 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104363493 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.190331888 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210950236 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211878835 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.20851032 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.194871231 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150802445 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102136282 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135858305 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137724764 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189064069 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.243749748 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110585674 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142786773 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.213179003 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101966644 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.214977537 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102533652 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116239886 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213864421 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118318089 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158777642 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115887153 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101659758 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.21121837 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102354733 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.265737741 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119517821 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138116895 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116470428 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115509172 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207068295 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.21238513 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115044433 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109167962 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210829912 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.210594249 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116240268 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.225544992 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105999432 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.211941091 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115246345 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116725772 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.143910065 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117482106 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.196849494 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121327412 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11746371 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.141729043 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.194212619 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138416351 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.187795818 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.139973682 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117049852 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111633486 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143525324 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124328538 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116887535 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.222054064 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118369751 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.21121592 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.212458104 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.185728835 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212920084 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125122738 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.217220211 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.208392816 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11415802 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10922637 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.144595338 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186605741 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142229199 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113472034 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.201294522 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119693075 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.214121754 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.186347159 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141630155 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115166695 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105184877 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.141584575 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103295392 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.203925749 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117343618 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114144207 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145348176 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117159443 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116044634 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.134259376 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.124918703 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11623236 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.14002731 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12166933 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115338933 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144134532 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.216277847 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113853584 seconds)
  done (took 15.883392785 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107491698 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103904704 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108040602 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130971558 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104785357 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103588467 seconds)
  done (took 1.735829887 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142353774 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116967163 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152139793 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119722343 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168762361 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.220188131 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.223897606 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111361797 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160830896 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128711298 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.220882052 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.196282514 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.222422654 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119501362 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.227642858 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118819526 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.226793094 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141997966 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127413129 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115124563 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143683188 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122856556 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114949145 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.212829203 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118063148 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146351026 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112395026 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125692571 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153040988 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113123091 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120332551 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145222201 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110912654 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111136643 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.227901986 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.135154907 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115245843 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119924644 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.145516792 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120708632 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.226163811 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116396999 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123961756 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.147136785 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113593427 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109483968 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147051444 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111817585 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.227131569 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120903854 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119717738 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146222291 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119700285 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.11959625 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.137613769 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11167634 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.145394143 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.202220662 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.147334985 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111137291 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117935091 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145809797 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112854515 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120867121 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.146497045 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122003193 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109770875 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145214929 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117686242 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118571682 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.148293428 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120334297 seconds)
  done (took 11.383554401 seconds)
done (took 41.65918419 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.567898768 seconds)
  done (took 2.639950934 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.920638042 seconds)
  done (took 1.991868615 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.192576249 seconds)
  done (took 20.298688239 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.531906471 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.614306254 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.027901533 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154044925 seconds)
  done (took 3.403409028 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.033544 seconds)
  done (took 2.123589357 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297413819 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.268537349 seconds)
  done (took 1.645251471 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769325372 seconds)
  done (took 1.858826179 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.540779293 seconds)
  done (took 2.622615294 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.356365838 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179055344 seconds)
  done (took 1.629533674 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.627613642 seconds)
  done (took 1.723672955 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.49234281 seconds)
  done (took 21.589289299 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240357509 seconds)
  done (took 1.337775748 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284191356 seconds)
  done (took 1.382983836 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.823649704 seconds)
  done (took 4.922608489 seconds)
done (took 70.254184717 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115200591 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117227029 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116551938 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141581059 seconds)
  done (took 1.580109156 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124137974 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118700689 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121213423 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.145081251 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124915338 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118448053 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144815528 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120824189 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117657998 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146656122 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11936383 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116511048 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14812046 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117706851 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114432018 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147308241 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121831239 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116905668 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145249814 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121811148 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118925486 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146196344 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123138478 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120901775 seconds)
  done (took 4.162564236 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11486502 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108246708 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109365861 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133815825 seconds)
  done (took 1.573131233 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127971667 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131212309 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153957454 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127046378 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129890416 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155301074 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116724346 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114549263 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143803814 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127027984 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133171464 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156900074 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130450127 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119700181 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155890242 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112916383 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117898756 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.158579576 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.1264455 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126114824 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144265198 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125460088 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122102812 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.154093368 seconds)
  done (took 4.312428259 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194832398 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127267401 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.168908133 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163441029 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.17066735 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116293331 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.138032706 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149899231 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123520571 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117719203 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146940167 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162483598 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148390566 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119629291 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117377148 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149441903 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129425788 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12200645 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186036061 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120965125 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149771208 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127724678 seconds)
  done (took 4.254943509 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119833146 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108095561 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103351403 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.136323603 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.1203984 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109174079 seconds)
  done (took 1.80909357 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109255119 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101904188 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102307796 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128100637 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108318566 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102260107 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100021207 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129720674 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102582774 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101346378 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128898942 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101989994 seconds)
  done (took 2.431811289 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.341322561 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.110912057 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.137679689 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110715101 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113491836 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104843813 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145465827 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106893275 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.271670652 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103072977 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.144260834 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194889258 seconds)
  done (took 3.002091507 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207547007 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145147426 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298640501 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368489062 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164854628 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190683757 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269401594 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19339696 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.209061882 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135758439 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246551184 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154880972 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178447964 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174042298 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164813703 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156137861 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196423364 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189989042 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175833552 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227301613 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156131075 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19473223 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180085153 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177658683 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133813996 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190773229 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118199143 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126160428 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195523167 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190775649 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170170755 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173725478 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141685042 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220451813 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261576541 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170645854 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314312458 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132623948 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199203799 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.184911084 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258716244 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16401764 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188361783 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181575408 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127887843 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205916529 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151533209 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.203119188 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128833993 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170489418 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178826672 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201734331 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.205256861 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136397542 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31725185 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164160755 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170695802 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170536665 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211527281 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21651866 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166440211 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148740377 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180683456 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208036287 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204964879 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141335016 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191482917 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124228757 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19180898 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194337337 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206935486 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155834106 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225617888 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159130094 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157593594 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199913472 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178381932 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203932337 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157061823 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.146652638 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149273529 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161045194 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127740499 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196900759 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147501563 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198504347 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158747799 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341294794 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185691217 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182927636 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15742989 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186406303 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185312447 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145054874 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.105779634 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172090544 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162153246 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182222142 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13039509 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181952788 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137532492 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.127501953 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177967951 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119383823 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185047905 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.128290626 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190991272 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158381372 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.157201103 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164676367 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173829031 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.153982338 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193770582 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183941612 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157604757 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131468298 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216443689 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155795944 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.159039445 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177683812 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212219133 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143503435 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163003314 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163894774 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215382284 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139544436 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213743974 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135529226 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162162009 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140329955 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188013816 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156943378 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.179980569 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126682637 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.177445629 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196778041 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153632905 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136389708 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194424573 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132540157 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122374552 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165230524 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133895112 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.166097453 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145142875 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132293099 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181022422 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155435691 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182988336 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180583341 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13608715 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202857506 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132107389 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.156613975 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173909167 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.1174738 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20015547 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180561384 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157292747 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22761822 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163028887 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216846205 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156933714 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158754732 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174405847 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155089825 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117711644 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187744947 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154539182 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188339264 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179158905 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214630434 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194162875 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149767063 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175839999 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164628014 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.204565183 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179156034 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144241348 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156355547 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191942086 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118391646 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.150228019 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126441592 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134954622 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157396484 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133740118 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203165958 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160914678 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21089249 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187034526 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136874204 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211851456 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126043617 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187933985 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.163997537 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166495215 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18199083 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210051516 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162873749 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167666547 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158281713 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.148410606 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126190183 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131009862 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191560564 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132225074 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163892754 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139074568 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210445233 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198734571 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147467841 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221554217 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193322789 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19238293 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117801701 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.195950215 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194697435 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157192986 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182454694 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162925279 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156065561 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207893723 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13866727 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214931873 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154096691 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191784712 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216043098 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154002712 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155447826 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148906926 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185269912 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137691691 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161026572 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174452666 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127884472 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180863477 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136831507 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151719016 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182987248 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169688397 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1695709 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.18777664 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166195324 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155297685 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139664079 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188942121 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142277161 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108171898 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197068425 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210430168 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145818295 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183788882 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174799439 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157451572 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.315231009 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219054254 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202850582 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135776584 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139150875 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190572221 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161394339 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189227898 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205252926 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142710015 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202897516 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160590285 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138981946 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159321503 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147082444 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178082089 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141823163 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.158920237 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.156614897 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139061876 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211974942 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165487706 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160217816 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186266095 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148253753 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.1435017 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16893285 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194513947 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185277389 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202228382 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.154448422 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195486046 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19026807 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149310628 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127118624 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129611061 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209513738 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126720838 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189990291 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203297261 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217694434 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163082515 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189050393 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136397828 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124459079 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186319754 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145034617 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219536037 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162191857 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136553721 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219772947 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130944124 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129256428 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187302244 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306261372 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143801543 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203167257 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115535101 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.297152794 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127962015 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13127786 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193287194 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196668291 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133995027 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180133692 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192569642 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139060371 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19126945 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135795073 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212375056 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218802611 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167263325 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201161014 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142491987 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188773042 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158152702 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207098636 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140359146 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.175099465 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15886068 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211582262 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210063326 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132343383 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155351126 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186801543 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154909785 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199463951 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134722118 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218720464 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12593942 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191242797 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134824733 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153223636 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156270429 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.206120548 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128811126 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207109825 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186847863 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132634339 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126103621 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174021771 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154790295 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166593634 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128892376 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210791516 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127838842 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191197643 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180625969 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127153277 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184789743 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143468546 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156845165 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1414675 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167486155 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131273799 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169527412 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213170085 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130838993 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207514774 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161346748 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19255479 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18247992 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142213193 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668300814 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.155983887 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182820242 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176273255 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191248017 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177779385 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160770323 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187842338 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146588412 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193945036 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146972225 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.267958914 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160588656 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.18624159 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128061486 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169837738 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138772525 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.158400034 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15295522 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155099669 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169164978 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133625726 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.185601547 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13969338 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.17278219 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139414417 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212412168 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147133946 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213194421 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180891626 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167448261 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159719296 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200527837 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128240486 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.192522699 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171029464 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169973112 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147586769 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.16153848 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136998839 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209943425 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124238348 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156581357 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190818803 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156275573 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187176617 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13346545 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192082364 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141104623 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188387254 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126911111 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177833372 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162084934 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133570825 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.153950454 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157084487 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18596249 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155443638 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153756886 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173376385 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183462064 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.151881817 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132139721 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303812885 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157204694 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218288073 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139874628 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164015979 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143099843 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18428712 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15549315 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18804094 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13008175 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127469334 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.158900776 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.167968637 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.182462194 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158666565 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204797423 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158427106 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22248737 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134161715 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.319960295 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138565059 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187698282 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.121256116 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12552528 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170244435 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132522867 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168758647 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214978538 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182330726 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.152639109 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.175512342 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135517478 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.154665486 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13029829 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163987801 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179222428 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158184164 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174678349 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107084987 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1708833 seconds)
  done (took 84.172775181 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204392114 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153378823 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168050937 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.227017334 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195388321 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.297957188 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.235550057 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263658521 seconds)
  done (took 2.939375436 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121997357 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158667398 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140955048 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145810216 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.119270779 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.451076843 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158297435 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119477471 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165524505 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.160567099 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.142294711 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.631066949 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113974863 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146326811 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.129460454 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.118211854 seconds)
  done (took 4.21468847 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.596338181 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.604165503 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.415188112 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.285948054 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238570998 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.182709432 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.839096661 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.707361184 seconds)
  done (took 14.072841395 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.148092497 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136849887 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.320805988 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.264338275 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.15174738 seconds)
  done (took 2.227483339 seconds)
done (took 131.843499891 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124126332 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122025508 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121758527 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155143809 seconds)
  done (took 1.715267189 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.184007117 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0946495 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096631744 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.12353986 seconds)
  done (took 1.701231351 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.449322905 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094082572 seconds)
  done (took 1.77349428 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147949728 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145531222 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.173257774 seconds)
  done (took 1.681848987 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.144609452 seconds)
  done (took 1.349425287 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128365359 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12057941 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.243099043 seconds)
  done (took 1.697887057 seconds)
done (took 11.127832746 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120516076 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.415431817 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433925524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134974991 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709971187 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429117538 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030116858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176087309 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173862255 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139457233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133134754 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.689561823 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.049544408 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.364123705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002753708 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.482106015 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69402303 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111139303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147186222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112506834 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.008587311 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138210039 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111826744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111063041 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.7194783 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422138219 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108609929 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.49425903 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110477845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112259163 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428083789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111337739 seconds)
  done (took 17.622931388 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118146801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172710579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146673594 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111725801 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112404634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140590182 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121847349 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121624656 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207386561 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108107321 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162099623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109728071 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114937045 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139934501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137203088 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108421243 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.140575968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113252534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117594857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140436522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133982106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108520075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140086019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113675971 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109271929 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160262069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110556094 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121972291 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137796872 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115112505 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113627161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137285066 seconds)
  done (took 5.364740271 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157809307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179329532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14898978 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148186093 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187326442 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11248783 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222816357 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147841031 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205597954 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111148815 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132860003 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139284621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152563647 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110358146 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1668762 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110644096 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112440918 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141795956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118418021 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111388532 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163645982 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109026369 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111231342 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142998854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111665175 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13368617 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14091521 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122700157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109127486 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144560103 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115334508 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110113235 seconds)
  done (took 5.645231593 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125688729 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126826118 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133053423 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164838151 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120209885 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123330005 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155834106 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121948821 seconds)
  done (took 2.291297224 seconds)
done (took 32.131690025 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137278746 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.12972744 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129906798 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15601901 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.193114908 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.147691304 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128564538 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115622349 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.154108793 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132676725 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109594829 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116235154 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.162235251 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120637461 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.227413535 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125495206 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.231548422 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.195226107 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.148293575 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125643651 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118239229 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.231178751 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123044891 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.148152508 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.203816269 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112909946 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.216361889 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119037978 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.15050309 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11299305 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.225708597 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122209198 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115946387 seconds)
  done (took 6.193339541 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.212442948 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118627345 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.150595066 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118645096 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119690821 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149947673 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.213871464 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148517655 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.11897533 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11812237 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116536847 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.228125157 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123510041 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.146037905 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122312003 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114212986 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.248121776 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120216789 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109085127 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.127259288 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.11399638 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.11743656 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.259373952 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.114472499 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117365258 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.150561775 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121745354 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.12287915 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.150398549 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121881644 seconds)
  done (took 5.542110086 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126330169 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132053173 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13613452 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.219437637 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145658325 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162570062 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141967958 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134314918 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174085365 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112968141 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127529213 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181709841 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130163925 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121410161 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14821184 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131180408 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133671857 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143894854 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120867627 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129474107 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16424547 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131491375 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138810559 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151939172 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110864632 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119526059 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152665793 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.129064571 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120371459 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.155845233 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115565906 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116097673 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.142595204 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149406973 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113176246 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.156345465 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137496868 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123722252 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156942981 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.143547228 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115495921 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144918036 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140083416 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168538095 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143528492 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126315736 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122794899 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.156263672 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112564168 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13041537 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.185139102 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11309807 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133598226 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143089842 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.112000136 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120762138 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111933705 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.147166483 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127414217 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115765753 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.168181142 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120243528 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121995873 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.145295745 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124470582 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11069191 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.141488242 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118175577 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139357342 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.14882133 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.152006356 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111690102 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123252765 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.156242109 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123015876 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.122986077 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.142546281 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124521899 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122166396 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.148779386 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126183506 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114585768 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.145351378 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.131324431 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.13278905 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.158447232 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125370111 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124525025 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.144692594 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116149165 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129914891 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112159026 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.150069041 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.12675102 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112274107 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.146698365 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126650609 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122841489 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.141208565 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139387389 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115910669 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.142294743 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139909685 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118129233 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.148426472 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12484539 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154733568 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.141260327 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125789184 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125325183 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112550681 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.151348433 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.117142669 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111199752 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.162839622 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128434469 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119351452 seconds)
  done (took 17.020738953 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.32865969 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.315781256 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.18171719 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315414125 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.158596202 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.208704159 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.311814355 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.312815275 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112644172 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183466491 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.195751071 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.248976591 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146893067 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140674776 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.314264156 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.366112202 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.176318012 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149716731 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.18323844 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126915608 seconds)
  done (took 5.719801916 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134402303 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149950303 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167931498 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143418512 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123830165 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159300714 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112955101 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133405005 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155991608 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124124551 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115259808 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160746572 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12560653 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130167805 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159802765 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.15489071 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121255982 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149150786 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136807745 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117613106 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137054459 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139849715 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121436567 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168351963 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132420518 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125435697 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143051004 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119526758 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120183574 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.154037742 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118822116 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131916195 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150261095 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10988579 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125407737 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130160288 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.151484151 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117421588 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117924236 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.147601599 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129029596 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125844634 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.152978374 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104034429 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13263704 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115470452 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.156898027 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128063885 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110408603 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.131849513 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.158438687 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12797698 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120340849 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.167011596 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121101016 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130572963 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156812136 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128028925 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118240655 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.143272992 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113194201 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118165081 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.151935642 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130285054 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125875634 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.163672792 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131878799 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112842705 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.147445874 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.11995493 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.11778446 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127886258 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.168643664 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122189851 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120077181 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.158193463 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122142447 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.098871737 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.153075492 seconds)
  done (took 11.85250398 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140496545 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122978944 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132378684 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.185528032 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126181015 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118736244 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154495846 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134715384 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126162934 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164385898 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127907117 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12710234 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168134435 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123272442 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12163999 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162316263 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12779236 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153162819 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164823753 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141883958 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.155859953 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121224445 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126798717 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12528175 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175804169 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125814393 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.171172403 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.129787019 seconds)
  done (took 5.201948524 seconds)
done (took 52.748448841 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.372152204 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.577908295 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.347671524 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.342559306 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.371475713 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.368469877 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.347429753 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.339722835 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.964222499 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.320118103 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.340481296 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.338831761 seconds)
done (took 30.275676183 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.358177582 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.862955435 seconds)
    (2/2) benchmarking "String"...
    done (took 1.624185465 seconds)
  done (took 4.733395194 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.334674788 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.33223894 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.55884852 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.33219214 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.337162105 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.355382993 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.332534148 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.332827862 seconds)
  done (took 16.814315349 seconds)
done (took 27.475453188 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.432909259 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.694134048 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.649356814 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.345646505 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.339713483 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.334953946 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.343280622 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.335917823 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.358837614 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.355418443 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.773729921 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.672856823 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.350330152 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.769022926 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.336496832 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.368499518 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.350393347 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.7140004 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.342195791 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.383188148 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.318067003 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.322170512 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.371951426 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.349463029 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.347194614 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.34202997 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.40292417 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.344668001 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.647703247 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.370926285 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.381712163 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.334717481 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.396264406 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.353728098 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.335379869 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.349053595 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.647032704 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.348581311 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.320963889 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.343644598 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.671384062 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.349804596 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.336324926 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.343018796 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.357323006 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.398484665 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.329471922 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.458749855 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.37241184 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.340264799 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.418718781 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.753496483 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.339534708 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.35420878 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.348961371 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.689255416 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.367448938 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.453235088 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.371619535 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.345764342 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.338103594 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.346796922 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.378427793 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.355294232 seconds)
  done (took 153.934483462 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.336144195 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.339834414 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.337609091 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.344185074 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.33793238 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.338538668 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.337517538 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.336445414 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.338177586 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.358909315 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.340259305 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.339259677 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.344400648 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.285387092 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.346181182 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.359919043 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.344412098 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.339351832 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.346983404 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.33814952 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.358646462 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.339613195 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.357543647 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.340136637 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.348435759 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.430555399 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.352662736 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.351906783 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.354607452 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.340232821 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.346280625 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.345692406 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.995851624 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.212619167 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.346210441 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.373525065 seconds)
  done (took 85.22333811 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.339390488 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.34046482 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.34049125 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.376419299 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.342925564 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.967103327 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.973329225 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.92534016 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.680408859 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.86458352 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.644779349 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.34120663 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.438608104 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.339722036 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.354529898 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.342957744 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.357377905 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.367112446 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.348009616 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.342523849 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.953245146 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.352339903 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.354158832 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.526728721 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.36128139 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.377247691 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.740341499 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.342104072 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.377392487 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.685423328 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.397632247 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.341160297 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.775268657 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.547164142 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.460904417 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.345717701 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.377298678 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.346454356 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.629775268 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.343989258 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.342981356 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.345989415 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.036866447 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.34402335 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.97396136 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.347891561 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.33732148 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.342459281 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.34180532 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.702726414 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.071633954 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.34333153 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.343277902 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.346758644 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.344021699 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.34307654 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.378668328 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.862838779 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.35520153 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.438880083 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.350192004 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.345266685 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.348013428 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.381144098 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.349242258 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.835627937 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.344970315 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.723322927 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.406932749 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.470209823 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.95609867 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.344912776 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.347106695 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.445852604 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.470377089 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.345395641 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.344930646 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.344349943 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.345409553 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.459338926 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.345073047 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.795754558 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.532461506 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.364225911 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.887114741 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.450592571 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.346236617 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.761711269 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.346677969 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.345151629 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.134191579 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.446195279 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.345215233 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.344742802 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.346362511 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.796008365 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.977120851 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.666354439 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.350883137 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.039152509 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.353757153 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.811390046 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.949248479 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.100126021 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.352261684 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.462980126 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.531686856 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.365363319 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.345793082 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.877860011 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.352873484 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.406863981 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.347752923 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.750192486 seconds)
  done (took 384.439636143 seconds)
done (took 624.830165058 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.224824558 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.167924397 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.331019824 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.180861895 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.162133722 seconds)
  done (took 12.314571744 seconds)
done (took 13.560807191 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.550194414 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.551560334 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.414087209 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554561368 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.383179444 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.570985835 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.540141654 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.369372662 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.46666649 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.436035412 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.466253964 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.405553169 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.384423111 seconds)
  done (took 20.340927673 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.645701291 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.363850866 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.421613396 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.642619211 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.399249594 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.662795511 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.702104626 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.362507662 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.539829309 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.370820986 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.367248843 seconds)
  done (took 19.727874604 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.644221611 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.363768436 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.416695886 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.627278951 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.39676269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.643259033 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.69270085 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.364324341 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.541772283 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.371452118 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.368398737 seconds)
  done (took 19.67916497 seconds)
done (took 60.995847959 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.388115475 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.456737494 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.386126935 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.367832456 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.365762791 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.367181119 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.371283064 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.366626075 seconds)
  done (took 12.319198692 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.365619865 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.365028346 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.364786948 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.366531271 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.365713217 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.365392177 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.367505927 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.365476192 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.366158979 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.36781502 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.366608058 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.3662052 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.367669416 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.366291265 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.366515342 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.36718386 seconds)
  done (took 23.110257541 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.368820115 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.366959701 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.366825047 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.367823496 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.36751365 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.367407755 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.367352996 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.365268622 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.367581949 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.368233804 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.367955732 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.366695319 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.366779067 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.367270671 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.36972099 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.368458719 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.368302624 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.365727603 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.372052666 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.367057762 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.369766239 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.368546055 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.368815545 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.367963361 seconds)
  done (took 34.080158156 seconds)
done (took 70.758678055 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.352227952 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.373390505 seconds)
  done (took 5.97745018 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.428738558 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.427415943 seconds)
  done (took 4.108434996 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.369274782 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.366841344 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.37016101 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.369998319 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.368276933 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.369289608 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.367516345 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.369954075 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.36864647 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.368817241 seconds)
  done (took 14.941787195 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.370035864 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.368293796 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.369347005 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.369332865 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.36904624 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.368747763 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.370769592 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.370722773 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.371615606 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.368490856 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.369854488 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.369271072 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.369770566 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.370902227 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.370308091 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.369591496 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.368910934 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.369635221 seconds)
  done (took 25.907440676 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.384208969 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.39128141 seconds)
  done (took 4.027155242 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.510534532 seconds)
    (2/7) benchmarking "second"...
    done (took 1.410973764 seconds)
    (3/7) benchmarking "month"...
    done (took 1.486433985 seconds)
    (4/7) benchmarking "year"...
    done (took 1.476608005 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.412851873 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.391743634 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.413273567 seconds)
  done (took 11.356305101 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.372170403 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.582627303 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.709226895 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.893095074 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.372124917 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.375003248 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.185458443 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.377485794 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.37733761 seconds)
  done (took 15.500116221 seconds)
done (took 83.069307939 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.355184386 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.396627557 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.386111178 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.386575715 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.709994486 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.404976248 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.362866081 seconds)
done (took 17.257678705 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.349400827 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.344870569 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.347091948 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.373774739 seconds)
  done (took 10.6697816 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.375353816 seconds)
    (2/2) benchmarking "read"...
    done (took 1.652367821 seconds)
  done (took 5.28150305 seconds)
done (took 17.206430609 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.373593757 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.371875427 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.374438909 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.374543901 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.374159786 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.372653 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.372813984 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.374764519 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.372675793 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.371410856 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.372051268 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.372180352 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.374279668 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371560941 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.371278817 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372814495 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37146856 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.371247993 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.372970837 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373259302 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.374829188 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.373443682 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.374053062 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.373382098 seconds)
  done (took 34.209703634 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.373304102 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.374935952 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.374877555 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.375650548 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.375154154 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.375220117 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.374677984 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.372594069 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.374147631 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.375593058 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.374737907 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.376132683 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.375301922 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.373686114 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.375631144 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.376110901 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.37621905 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.37590182 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376295495 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.375215099 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.374705841 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.374131446 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.375858097 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.376832671 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.376931778 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.376124663 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.37706553 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.376405874 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.376400787 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.376037913 seconds)
  done (took 42.519781 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.38136715 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.381515784 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.376469205 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.376337604 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.375359734 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.374865342 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.375328466 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.37614574 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.37563677 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.375565053 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.375522373 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.373659011 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.375816889 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.374527397 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.376567285 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.37762239 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.375839814 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.377170086 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.376097983 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.3763782 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.377862405 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.377755099 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.377659269 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.374970224 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.377124085 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.37605585 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.37686511 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.37726886 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.375982798 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.377632459 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.377429182 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.378119233 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.377642439 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.377075241 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.377031266 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.378281065 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.382319862 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.382891423 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.379784735 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.377569015 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.376976508 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.378873043 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.376644427 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.378654183 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.379132528 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.377128745 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.377651729 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.378384307 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.378947847 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.379222297 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.379948758 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.378900326 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.378334392 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.380706162 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.378970069 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.379434457 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.380363469 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.379577243 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.379630096 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.379437943 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.378179506 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.380327417 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.379186252 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.379875569 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.379255535 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.380460911 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.380150526 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.380460953 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.379449722 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.379822813 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.378593396 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.379417433 seconds)
  done (took 100.478710109 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.381784385 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.380637859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.380109666 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.379669439 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.379868103 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.38013958 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.382128504 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381952975 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381791575 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.379074418 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.380723892 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.38144955 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.380275622 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.382113646 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.381935817 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.380451996 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.381944713 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.380886082 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.381871836 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.382873104 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.380916262 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.38207329 seconds)
  done (took 31.649122323 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.381757209 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.383429411 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.380936123 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.382812722 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.385614216 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.383797238 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.383066594 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.384750276 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383103366 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.382589511 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381146627 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.381996485 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.384454926 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381238794 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.381148195 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.383528059 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.383307395 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.383828038 seconds)
  done (took 26.156800271 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.382670671 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.383450303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.382980212 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.380695478 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.382202364 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.383653606 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.38326874 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.383600482 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.384930614 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.383695935 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.382203109 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384136756 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.382776809 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.383149606 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383448556 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.384909484 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.383983214 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38224948 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.382630647 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.38419172 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.383307195 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.383495761 seconds)
  done (took 31.696756404 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.386326742 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.383512055 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.385432691 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.384494356 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.384488295 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.384023395 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.384918384 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.38564357 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.386905297 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.383942049 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.38477218 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.386079478 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.387096003 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.38690631 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.386656507 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.386182063 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.385096969 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.385441745 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.387983247 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.386402677 seconds)
  done (took 28.97954449 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.387151263 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.387189398 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.387282906 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.384279902 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.386566298 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.386483228 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.385988383 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.387794132 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.387566574 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.386827806 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.387158904 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.386937913 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.385318021 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.387108578 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.387118481 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.394382878 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.384647573 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.387200989 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.386025015 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.387196494 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.38674035 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.386928066 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.387040993 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.389082275 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.388326179 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.387646442 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.388516956 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.388442191 seconds)
  done (took 40.110931095 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.388426601 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.386985801 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.387799243 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.387423957 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.386133254 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.387773486 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.388658675 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.389124205 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.387144878 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.386597137 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.387034865 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.387973515 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.389441128 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.389227754 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.389712959 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.387739552 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.387150039 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.389657046 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.388441746 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.389990115 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.38907945 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.389350963 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.389249602 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.387103181 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.389538158 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.390374895 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.388782703 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.389804594 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.390599691 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.388865929 seconds)
  done (took 42.925966704 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.409250154 seconds)
    (2/2) benchmarking "in"...
    done (took 1.410150967 seconds)
  done (took 4.090361239 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.38911916 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.389889388 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.390340852 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.391154049 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.389728346 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.390811694 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.388614013 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.389151608 seconds)
  done (took 12.390444121 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.382722685 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.390414092 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.392525368 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.391887414 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.391167388 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.38414379 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.390218933 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.395926576 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.38366619 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.384681458 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.387812359 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.387575454 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.386221019 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.384468419 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.384740594 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3871452 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.39509839 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.390419877 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.39205091 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.392877503 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.391620373 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.385885168 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.389190248 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.394658072 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.385486475 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.393323592 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.39231785 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.395291151 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.385027628 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.390105105 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.386797945 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.394644298 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.391509878 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.39277738 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.393376255 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.39207316 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.395001542 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389879105 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.392647961 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.395012378 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.39271859 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.394429277 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.386745261 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.388266369 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.388355249 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.396054969 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.394887141 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.393996622 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.38533915 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.389999258 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.39866962 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.385827374 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.39317954 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.389720534 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.38872998 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.395287116 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.39888361 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.390925954 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.392654784 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.395903793 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.402215098 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.399342542 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.389970747 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.39630752 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.395790327 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.406409398 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.396356699 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.400266908 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.39558123 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.395886164 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.39462985 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.402993763 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.401267513 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.396080375 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.39415236 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.395065154 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.387811615 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.397576563 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.395963145 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.395024189 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.399088363 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.397018184 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.397725881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.405550257 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.389534953 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.3945735 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.395133707 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.395032537 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.389072797 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.397306629 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.400579873 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.397333165 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.388244605 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.389502773 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.39147829 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.396385689 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.388997858 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.389714938 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.397664814 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.397380099 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.398415534 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.393667341 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.395687122 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.398653214 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396767718 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.395644176 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.398660851 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.38843838 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.397209277 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.401131868 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.396803 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.391602767 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.396216132 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.398466616 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.393159864 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.397394353 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.39836993 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.391394788 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.400478536 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.399371642 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.400946405 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.412482639 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.399769948 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.400217339 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.396354641 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.406032453 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.398453946 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.395498794 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.400128918 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.400677828 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.401049126 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.393686281 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.403393303 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.392873864 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.399551982 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.392445891 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.401100322 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.400730782 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.398427511 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.392983235 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.394631823 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.394583598 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.395160837 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.397996575 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.400296151 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.395719329 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.402187912 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.395688969 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.395998582 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.395689486 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.403892188 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.40358308 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.395081084 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.401805876 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.393987598 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.403375859 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.393802482 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.402659407 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.401292545 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.402455325 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.401702407 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.3956626 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.39629725 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.402166271 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.398484344 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.395821651 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.402825629 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.403092277 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.401205606 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.395227125 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.402574648 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.392888406 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.397799622 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.407109926 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.402685294 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.401774245 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.39705216 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.401568906 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.401213374 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.401246257 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.397299282 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.400419628 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.402435445 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.401895925 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.403972641 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.401679237 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.403001664 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.394867327 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.396640973 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.403681394 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.39847414 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.409442604 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.408296434 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.409743536 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.397055802 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.406215733 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.397343935 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.406515515 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.399132225 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.405375429 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.40443708 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.403443757 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.394896447 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.40364052 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.397479747 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.403311323 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.395873217 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.404221469 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.404244447 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.402275979 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.404461889 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.397057005 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.397915915 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.406042667 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.404436965 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.40371853 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.397222849 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.404328574 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.39666268 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.397768985 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.405484275 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.405222199 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.404813248 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.408246123 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.401244578 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.402468016 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.40131907 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.398193322 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.407846523 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.402375438 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.401606664 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.406861248 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.40460301 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.400061259 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.409274354 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.403192448 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.400828998 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.403956928 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.41123162 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.407520559 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.403172395 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.412880264 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.407521221 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.40619506 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.406188002 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.402136723 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.406992408 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.407877436 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.410543027 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.400858275 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.409279354 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.400586635 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.407748773 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.402039493 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.402720317 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.402326369 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.403349043 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.410557182 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.407853345 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.402934124 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.408390952 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.407901021 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.408053716 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.40343822 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.413908165 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.406747339 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.402766034 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.404999729 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.402230464 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.413711519 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.40325372 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.408203172 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.403008825 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.415198738 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.419916863 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.40913988 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.40494035 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.411290704 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.407100957 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.405493605 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.405125318 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.402510162 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.402475062 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.402834635 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.403017252 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.41059956 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.402864876 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.411213436 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.404624543 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.405524883 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.414021499 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.409799829 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.401332706 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.410683579 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.409683255 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.410546581 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.401498721 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.411113225 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.404538663 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.404932464 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.404919974 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.403447031 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.410849641 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.407543333 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.404786698 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.404654175 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.405362542 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.403288679 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.405115152 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.412769797 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.407455978 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.41726863 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.405195083 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.41003026 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.405482601 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.414830968 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.412949816 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.407000272 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.416407214 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.41353521 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.402998118 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.405929861 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.412089697 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.411757731 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.415235558 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.4058286 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.415913226 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.4122798 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.412887129 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.412478062 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.411222238 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.413496379 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.411380592 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.413025859 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.410915621 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.407887016 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.408320929 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.414496027 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.411323003 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.414396858 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.404913445 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.408095267 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.41329534 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.407206582 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.408319016 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.406935618 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.414731646 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.414012758 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.414228755 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.41617588 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.414121466 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.412647747 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.411253951 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.415939913 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.414465202 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.414264566 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.415859939 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.413987415 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.418192533 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.406498679 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.415037667 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.414486132 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.408543403 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.407524586 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.409050353 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.41457125 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.409484554 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.419638426 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.416348125 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.410986315 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.409343947 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.415732686 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.40718061 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.417106205 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.432435981 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.407952525 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.419089224 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.414348869 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.409140226 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.419897877 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.415217855 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.407575275 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.410820022 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.416592356 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.422243062 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.409664476 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.415412551 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.410076501 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.416334812 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.41632284 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.41664997 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.415407371 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.417605137 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.409133228 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.414731744 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.412933443 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.420485474 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.409982833 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.412244312 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.411626687 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.419653232 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.419375186 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.409716745 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.418652432 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.417912998 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.408596704 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.41150478 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.418122194 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.412356766 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.420433459 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.411127587 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.416218265 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.415585398 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.411945079 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.413769983 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.419625042 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.412126826 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.411920299 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.418734417 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.417370702 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.416532186 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.411028298 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.417570933 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.411751272 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.410620475 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.419223606 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.411825129 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.419270881 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.413623491 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.417741976 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.412649099 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.421103234 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.419687785 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.420585791 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.411567776 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.410471921 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.42012701 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.41717872 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.420285224 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.418915523 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.422684354 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.411612476 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.416599984 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.417891516 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.413478169 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.412986072 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.421372394 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.414389421 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.414871458 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.416885627 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.419609384 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.419479317 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.414095087 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.412513565 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.422413954 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.420046428 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.422531939 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.415485635 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.418219282 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.414396688 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.422615663 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.421997542 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.412483655 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.423223861 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.419415784 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.421086154 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.417464336 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.415620397 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.416364895 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.425298316 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.421834108 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.415418795 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.422380159 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.414117838 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.423261197 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.421901663 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.42265642 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.413360189 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.414972984 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.418342447 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.42032795 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.423112647 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.417096209 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.417456659 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.417421205 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.425366716 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.423420693 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.42370471 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.421808333 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.415547077 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.422621368 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.415906071 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.419174752 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.415280021 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.418553231 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.42711686 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.424608979 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.417961937 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.424516918 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.42880521 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.423250072 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.416296874 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.416575904 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.419444636 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.425215609 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.423470493 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.416616603 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.42172946 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.426823213 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.423174681 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.424794289 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.42079218 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.430415909 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.429116411 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.417388335 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.417595072 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.42157206 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.425857724 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.424398383 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.425677931 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.420724837 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.4227819 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.430603311 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.424024244 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.423197142 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.422428691 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.419381662 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.428186723 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.419412944 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.42358449 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.421375782 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.426432679 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.424707325 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.423359982 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.433265442 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.427370159 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.42816352 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.444729602 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.422858917 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.421684271 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.427612298 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.419592794 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.426917263 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.420572999 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.428625891 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.42666536 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.427746219 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.424814423 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.419097744 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.42460997 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.421965545 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.430738013 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.426716366 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.419773964 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.421897273 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.429877595 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.427010892 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.426919032 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.426804232 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.426098841 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.42631973 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.419711615 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.433248789 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.435645408 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.430051995 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.427665292 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.427898423 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.424605497 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.425514444 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.429235293 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.433794579 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.426136149 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.42712968 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.422985691 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.430444745 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.430102826 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.420487896 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.421591031 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.423162332 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.429855725 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.434032536 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.440508665 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.427024811 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.424545079 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.429847619 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.430480121 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.423201889 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.429355423 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.430265072 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.423770732 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.424772157 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.432687135 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.430596664 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.429249229 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.425482567 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.435515194 seconds)
  done (took 840.864073011 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.430864016 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.430392821 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.430027122 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.431505973 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.43016091 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.431245172 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.429369653 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.430159257 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.430524101 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.431248887 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.428770447 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.431013137 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.430303203 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.430886221 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.430302612 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.429375274 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.429689055 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.430720205 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.430203198 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.432005024 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.431302063 seconds)
  done (took 31.346848731 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.432285406 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.431270437 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.431290864 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.431573663 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.432123167 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.433346454 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.43122299 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.432850765 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.431363353 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.430983367 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.43183609 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.432565747 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.433001724 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.431109027 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.431031073 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.432057813 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.431285434 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.432032319 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.433682312 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.43301357 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.431830834 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.431039689 seconds)
  done (took 32.811066581 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.432272748 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.432462937 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.424484022 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.432835294 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.433727304 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.433139999 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.432629178 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.432982039 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.432173653 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.425422433 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.426586385 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.426926924 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.431860857 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.440439623 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.427416968 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.434578248 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.433488606 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.433152664 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.433645962 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.433932691 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.433294968 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.437528178 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.433803436 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.424965595 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.435452115 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.433886834 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.434085387 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.434110223 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.427670335 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.437663277 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.433277406 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.426438659 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.430691987 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.428584642 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.42885565 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.438568935 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.434930606 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.434219879 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.43442879 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.436845017 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.452738305 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.43426508 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.433748562 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.439026814 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.437020033 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.430695443 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.441125402 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.4348161 seconds)
  done (took 70.105593078 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.436179809 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.435880606 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.435368202 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.437259632 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.435594749 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.436878123 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.435649467 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.436719813 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.435230373 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.435604334 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.436717772 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.436172242 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.438047456 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.436249124 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.436346897 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.436120314 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.435516754 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.437947476 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.437587177 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.437196891 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.436393559 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.437638178 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.435597307 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.437585611 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.437262187 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.438082033 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.437341889 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.439545231 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.436259643 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.439316589 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.437223276 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.438272692 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.439035927 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.439081918 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.437509091 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.438490665 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.438099801 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.436217917 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.437657406 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.438741817 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.437657417 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.438472656 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.436624594 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.437359574 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.438217862 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.439576104 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.438589674 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.438580154 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.440738074 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.438342061 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.438607735 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.437550215 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.440360129 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.43948325 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.439331462 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.440027561 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.437464189 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.440352718 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.440189766 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.441032163 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.439723867 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.439891037 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.440753617 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.438671333 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.440507003 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.439002765 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.439522057 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.440847881 seconds)
  done (took 99.093771214 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.441000013 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.439395973 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.44029298 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.439251608 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.440589436 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.439783508 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.440907291 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.441520295 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.439884593 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.439939364 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.43953417 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.441946659 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.440678199 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.441717047 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.441071055 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.440859795 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.441264731 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.440100786 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.440869955 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.440787476 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.442263777 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.441678103 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.442191286 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.439718412 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.441784897 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.440269905 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.442079668 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.439623027 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.44334606 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.441575436 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.441512396 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.440852914 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.442693452 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.441919795 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.443296653 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.44198817 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.442632764 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.442662145 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.441942062 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.44145888 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.442183691 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.442169365 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.442553816 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.441224128 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.443682766 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.44263782 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.443042953 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.44415263 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.443959014 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.442225711 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.442996218 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.442070889 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.442701663 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.44390069 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.443887015 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.445186154 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.443192118 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.444338254 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.442918895 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.444344177 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.44344929 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.444706731 seconds)
  done (took 90.714940028 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.444195544 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.445307288 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.444605824 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.444465762 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.446356781 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.445132196 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.445542408 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.444699086 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.444427968 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.443870888 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.44625613 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.44550465 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.445508337 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.446784599 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.446797879 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.44461797 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.444206821 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.446586948 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.445887114 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.446985433 seconds)
  done (took 30.225693141 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.446503488 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.446333638 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.445959563 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.447319819 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.446874923 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.447628865 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.44608661 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.446239666 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.446168005 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.445732662 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.444955919 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.446407442 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.446855761 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.445897327 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.446866882 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.447085667 seconds)
  done (took 24.46158512 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.445670057 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.44744674 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.44547202 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.447032674 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.445759019 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.445729342 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.447652304 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.447499235 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.445856026 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.44635328 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.447019031 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.447815152 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.446485754 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.445791489 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.447040852 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.447242867 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.447138767 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.446398816 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.448895552 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.448063215 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.448056408 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.448264983 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.447442944 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.447498949 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.448952798 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.449532739 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.447921386 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.448636656 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.446687281 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.448456262 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.448332443 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.449122824 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.449017358 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.448842346 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.447511054 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.44951173 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.448206114 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.448191802 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.448268492 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.450183938 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.448464859 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.450070172 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.448769559 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.449296632 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.450895894 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.449641761 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.449416348 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.450938175 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.450798241 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.449916252 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.450440098 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.450871405 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.450247312 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.45064859 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.451526544 seconds)
  done (took 80.978189053 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.45028477 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.449466111 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.451077258 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.450638022 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.451289926 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.450789552 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.451910709 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.452547094 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.450365118 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.451248986 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.451612755 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.451842374 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.451015977 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.450629932 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.451163216 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.450611007 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.450035963 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.450935098 seconds)
  done (took 27.43978324 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.452323361 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.452244072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.451840959 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.450114897 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.451522968 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.452734709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.453011603 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.452168003 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.452721377 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.451943006 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.451722313 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.451883696 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.451635271 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.451427685 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.453189252 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.452471638 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.452473339 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.453237457 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.452612986 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.45247261 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.4535619 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.452408885 seconds)
  done (took 33.274578019 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.44358764 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.443547814 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.44513243 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.461943043 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.459240233 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.443932309 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.444517522 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.443983563 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.467376447 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.49055451 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.484722411 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.460563978 seconds)
  done (took 18.813619981 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454622098 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.456955464 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.455981551 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.454753514 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.454524982 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455950238 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45534061 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454508616 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.454402516 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454730643 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.455998157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.454740084 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.454622068 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.453664436 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455345916 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.456786122 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45626827 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454496105 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455508652 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455903842 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.453385182 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.454207392 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.454803384 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454911717 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455532266 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.456165499 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.45543049 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.454500555 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.454544235 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455134234 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.455356467 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455692143 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.456049218 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.457643414 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.457385265 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.456118225 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45577797 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.456710009 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.454877658 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457222699 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.456411541 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.457666197 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455960062 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455017658 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.456315852 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455890012 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.457294849 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.456678522 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.455937717 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.457458781 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.457189301 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.456879864 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.458656033 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.457079207 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.457982382 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.457741009 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457991055 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4576047 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.45930103 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458084807 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45883787 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.458119338 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.457406669 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.457445418 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459268207 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458553404 seconds)
  done (took 97.438778373 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460112604 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.457243762 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.45940297 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.459604204 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458812254 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.458321878 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.460643692 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458949552 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.458391659 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.4576656 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458162734 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.460069456 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.459660449 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.458698631 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459682054 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459768709 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.459236438 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45807207 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459317687 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.461773687 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459372546 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.458427661 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459725764 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459218331 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459250135 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459771496 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.459495105 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460692083 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458026167 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.461168085 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.45969516 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.460678625 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.46027233 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.459484193 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460074794 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460710727 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.460903295 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459785052 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460083515 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.460862367 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460135776 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.461838329 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460191124 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461276578 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.459762846 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.461011981 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.461540448 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461631742 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.4605434 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.46238774 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.461153839 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461963939 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.460759824 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.462022544 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460577199 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.46066065 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.461322077 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.462309459 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.46058439 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.461557505 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.46083141 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.461439829 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.464337093 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460991173 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.462163373 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.462224429 seconds)
  done (took 97.70977042 seconds)
done (took 1971.742436993 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.621012016 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.576708194 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.453131933 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.472139975 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.453484702 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.454593711 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.466208396 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.454968821 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.454454079 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.453991128 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.45535602 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.648884783 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.486984956 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.454566305 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.45455254 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.550367728 seconds)
  done (took 29.245914426 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.485321501 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.462522973 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.59121131 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.456271783 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.485749358 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.675150036 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.526449287 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.459948494 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.659238884 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.47985725 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.449577205 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.483210174 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.458856944 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.466339883 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.486470625 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.675420455 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.752491287 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.460165954 seconds)
  done (took 31.848976125 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.994562271 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.49335907 seconds)
  done (took 5.820388079 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.482518904 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.459689238 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.459938075 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.45714127 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.449763082 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.450505088 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.460211534 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.462583016 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.453068834 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.613542045 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.467342719 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.471769508 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.459651614 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.45990345 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.46749012 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.50761175 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.607750657 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.468580068 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.467426593 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.464569778 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.459700622 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.560429927 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.508776934 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.473384142 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.606664916 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.45789063 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.46908597 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.466440677 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.591379471 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.471103876 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.461306398 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.458827604 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.462443817 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.453749629 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.966235216 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.456584961 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.487702786 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.46833061 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.468409049 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.617642665 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.462981401 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.467124512 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.45413359 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.946330498 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.610085584 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.59929628 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.46968475 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.463198223 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.46329803 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.535452247 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.466971044 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.462645896 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.521337765 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.355143228 seconds)
  done (took 92.579560307 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.473041284 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.456326693 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.629649024 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.477245645 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.455052514 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.458306497 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.459623345 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.799138201 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.505790025 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.455214449 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.790052562 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.038837643 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.463198557 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.504323568 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.082208646 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.465625811 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.458361801 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.456075937 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.456598405 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.4632986 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.013760427 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.460891927 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.479141153 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.50418771 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.500712258 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.992305017 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.459491605 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.482125653 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.461555888 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.459187369 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.995722361 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.471874153 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.528732331 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.459483358 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.758516761 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.886074018 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.85178787 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.46117034 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.460249545 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.45815927 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.484988388 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.983185889 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.863516025 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.459773719 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.457286484 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.981638759 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.458912699 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.459997447 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.466824976 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.688520233 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.461075715 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.459588526 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.462193287 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.483564362 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.473394404 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.525335476 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.463971164 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.018658073 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.46015735 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.459982721 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.494434011 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.462973424 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.463724021 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.465029248 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.461025149 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.873304736 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.671979515 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.465538941 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.87147681 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.986059878 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.461054345 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086398433 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.460487228 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.473482067 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.666346766 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.462008392 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.458748987 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033560854 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.479065641 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.460495214 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.854191592 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.465574577 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.785767392 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.481153565 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.462698721 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.040518386 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.461406792 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.489673036 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.474259423 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.460879158 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.460062541 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.463514944 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.766942918 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.496966137 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.462929668 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.460547858 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.48938236 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.463261429 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.462493893 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.463233375 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067005597 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.471205941 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.462538694 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.465687692 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.462801618 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.462849571 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.465084029 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.46413394 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.712218517 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.462690604 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.463933856 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.462787726 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.470471581 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.465158431 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.511315273 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.462622864 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.821149912 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.46609806 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.463624785 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.486825249 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.462984659 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.529086313 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.463363994 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.467204178 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.379322864 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.700336426 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.48393476 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.464949453 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.464167881 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.463374376 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.46474496 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.466183816 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.497842708 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.469320626 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.278856635 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.481223705 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.488353553 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.463340114 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.468524359 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.464255386 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.467161297 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.465467849 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.775738696 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.767041627 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.650633317 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.464770824 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.467011538 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.274931481 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.479950602 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.609485304 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.48540079 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.466313343 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.68955416 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.670248123 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.466549274 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.466846631 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.469209485 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.703942714 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.466117079 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818047868 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.028092165 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.466134469 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.471214591 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.277358984 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.207943874 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.466741722 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.471255754 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.783287365 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.485521397 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.466386863 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.466663663 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.468070081 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.466508567 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.467159205 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.47475838 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.467796437 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.466681298 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.742194155 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.644915866 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.486170059 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.473722452 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.001579825 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.48170176 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.467846261 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.473689337 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.470361612 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.468549875 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.555494455 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.471997322 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.477809927 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.468640195 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.477848791 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.020310836 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.468415726 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.469284773 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.626938357 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.197733792 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.469331873 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.469590443 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.469765965 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.060999374 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.060389112 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.538910969 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.829851326 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.476368469 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.51143966 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.468974205 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.507231617 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.027176117 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.469714855 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.470884432 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.15878616 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.469451476 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.87548338 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.468731039 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.471632104 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.077665397 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.467631046 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.47591456 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.470912813 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.470159787 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.747990051 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.472971537 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.473766729 seconds)
  done (took 528.030002482 seconds)
done (took 688.857303301 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.470911696 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.471818461 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.461145432 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.477652882 seconds)
  done (took 11.232521453 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.487150487 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.477106433 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.487194713 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.476238682 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.487582535 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.475909729 seconds)
  done (took 10.243781664 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.470350434 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.470605917 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.476366069 seconds)
  done (took 8.768777761 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.723545023 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.495011858 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.892564047 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.472720457 seconds)
  done (took 9.936604403 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.484899494 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.486531644 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.485843808 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.488321813 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.489317744 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.490795951 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.489125461 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.488305827 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.492505424 seconds)
  done (took 14.745799031 seconds)
done (took 56.277359661 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.341606904 seconds)
    (2/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.595585343 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.51121146 seconds)
    (4/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.460337049 seconds)
    (5/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.4614103 seconds)
    (6/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.502280666 seconds)
    (7/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.604891238 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.549097941 seconds)
    (9/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.478392948 seconds)
    (10/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.782347543 seconds)
    (11/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.559195157 seconds)
    (12/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.346430283 seconds)
    (13/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.630061007 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.508623436 seconds)
    (15/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.455635288 seconds)
    (16/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.48495711 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.672909515 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.583140087 seconds)
    (19/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.458168328 seconds)
    (20/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.587900535 seconds)
    (21/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.14229317 seconds)
    (22/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.459333832 seconds)
    (23/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.636434206 seconds)
    (24/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.456539675 seconds)
    (25/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.462616389 seconds)
    (26/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.325832913 seconds)
    (27/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.478609019 seconds)
    (28/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.547044044 seconds)
    (29/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.509739977 seconds)
    (30/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.457141141 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.578101454 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.588915948 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.180901337 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.612095539 seconds)
    (35/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.384068929 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.638670661 seconds)
    (37/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.705617726 seconds)
    (38/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.727210147 seconds)
    (39/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.46279871 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.734475229 seconds)
    (41/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.643268247 seconds)
    (42/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.571734878 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.566687368 seconds)
    (44/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.674627391 seconds)
    (45/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.617040075 seconds)
    (46/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.565576286 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.591914475 seconds)
    (48/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.511248857 seconds)
    (49/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.538731746 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.575993091 seconds)
    (51/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.298613288 seconds)
    (52/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.266656368 seconds)
    (53/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.483862002 seconds)
    (54/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.606166273 seconds)
    (55/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.633192327 seconds)
    (56/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.649979071 seconds)
    (57/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.457343656 seconds)
    (58/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.598118779 seconds)
    (59/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.468663304 seconds)
    (60/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.35942979 seconds)
    (61/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.595790775 seconds)
    (62/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.459309062 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.61144771 seconds)
    (64/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.459091783 seconds)
    (65/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.457871936 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.598922618 seconds)
    (67/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.476490717 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.653252301 seconds)
    (69/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.479386955 seconds)
    (70/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.198784486 seconds)
    (71/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.464780602 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.634275347 seconds)
    (73/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.461642088 seconds)
    (74/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.474139678 seconds)
    (75/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.485355964 seconds)
    (76/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.479237215 seconds)
    (77/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.514363872 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.647970867 seconds)
    (79/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.462907983 seconds)
    (80/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.59781675 seconds)
    (81/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.677705296 seconds)
    (82/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.554933385 seconds)
    (83/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.190782518 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.54390111 seconds)
    (85/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.459819212 seconds)
    (86/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.482578246 seconds)
    (87/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.516379149 seconds)
    (88/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.616723494 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.58586533 seconds)
    (90/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.578491568 seconds)
    (91/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.570247607 seconds)
    (92/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.27060393 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.609784408 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.569814449 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.461795392 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.633156007 seconds)
    (97/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.678317034 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.61171532 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.648811958 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.511667218 seconds)
    (101/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.460763738 seconds)
    (102/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.464876515 seconds)
    (103/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.782962042 seconds)
    (104/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.556104973 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.55048806 seconds)
    (106/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.348746029 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.604346397 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.657614719 seconds)
    (109/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.622147521 seconds)
    (110/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.609830233 seconds)
    (111/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.593511547 seconds)
    (112/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.63104587 seconds)
    (113/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.552463071 seconds)
    (114/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.327115951 seconds)
    (115/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.522617862 seconds)
    (116/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.462668018 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.656146402 seconds)
    (118/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.513475378 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.625067849 seconds)
    (120/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.462568886 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.755072963 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.651163982 seconds)
    (123/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.684702409 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.523654535 seconds)
    (125/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.518103288 seconds)
    (126/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.301497373 seconds)
    (127/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.469434325 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.595231805 seconds)
    (129/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.56397905 seconds)
    (130/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.154077773 seconds)
    (131/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.541563501 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.748705058 seconds)
    (133/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.675675113 seconds)
    (134/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.528938844 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.619553512 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.580872742 seconds)
    (137/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.487949914 seconds)
    (138/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.574133337 seconds)
    (139/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.735037627 seconds)
    (140/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.580886008 seconds)
    (141/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.196665926 seconds)
    (142/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.235161177 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.545438398 seconds)
    (144/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.675334844 seconds)
    (145/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.550429977 seconds)
    (146/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.761550411 seconds)
    (147/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.61072139 seconds)
    (148/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.554739576 seconds)
    (149/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.474122643 seconds)
    (150/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.490505129 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.490969487 seconds)
    (152/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.470529023 seconds)
    (153/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.465241911 seconds)
    (154/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.81641315 seconds)
    (155/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.469911432 seconds)
    (156/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.537525684 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.483031043 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.571126515 seconds)
    (159/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.470529525 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.549180894 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.583118082 seconds)
    (162/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.555946347 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.523412962 seconds)
    (164/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.52240407 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.604149447 seconds)
    (166/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.497276486 seconds)
    (167/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.760534152 seconds)
    (168/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.521103576 seconds)
    (169/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.657125794 seconds)
    (170/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.240095769 seconds)
    (171/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.467224954 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.738011492 seconds)
    (173/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.604964343 seconds)
    (174/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.490308223 seconds)
    (175/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.510120289 seconds)
    (176/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.486670542 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.489287057 seconds)
    (178/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.330258841 seconds)
    (179/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.683614671 seconds)
    (180/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.734403136 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.690141971 seconds)
    (182/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.40404478 seconds)
    (183/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.887516054 seconds)
    (184/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.47392141 seconds)
    (185/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.517406567 seconds)
    (186/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.516200438 seconds)
    (187/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.515556547 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.59909386 seconds)
    (189/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.329437228 seconds)
    (190/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.615365662 seconds)
    (191/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.527987864 seconds)
    (192/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.643992075 seconds)
  done (took 370.127895374 seconds)
done (took 371.481465263 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.51066663 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.572219883 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.493664315 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.493141109 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.495292513 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.486035029 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.516648057 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.492878777 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.507425378 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.507581461 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.485893398 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.504200807 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.507955485 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.504230884 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.52723152 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.493522405 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.494519458 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.50457322 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.508860419 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.510773462 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.496463155 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.494191057 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.517556819 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.49596638 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.502189791 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.504217876 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.501079238 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.484328696 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.522154047 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.508787613 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.490087577 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.501637683 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.512625534 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.506309694 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.497603334 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.505782119 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.497350117 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.574790788 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.515706918 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.505435381 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.503231688 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.512429104 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.50099862 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.502682814 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.506432897 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.519033116 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.505246473 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.511673814 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.493042477 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.499918864 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.513126499 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.508123039 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.504695162 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.500274442 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.488505852 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.513407598 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.506027134 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.513728904 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.504620348 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.497298235 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.530356636 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.51283603 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.509912261 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.50493039 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.503511421 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.51238296 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.506915398 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.514309996 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.504897621 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.500393974 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.500173347 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.505293065 seconds)
done (took 117.82968092 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.618682947 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.498020219 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.63293801 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.504309279 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.663038044 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.630504565 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.505093607 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.506122303 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.505521734 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.295512148 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.505408609 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.506536922 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.499797087 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.505584538 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.624957199 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.505412506 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.507081758 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.220755793 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.506784085 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.636109986 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.496228945 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.506527934 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.507656734 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.298251057 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.498579109 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.495334353 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.637264462 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.507231781 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.222005943 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.49396089 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.496251648 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.200767896 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.637722108 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.526205158 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.519215654 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.51741645 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.663086992 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.513695947 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.621294285 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.619893753 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.636592438 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.54529305 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.492865664 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.499763262 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.511435966 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.509356506 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.508633474 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.536281559 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.49910659 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.507706229 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.195396429 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.517719114 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.5187269 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.509481841 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.509391823 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.529100811 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.508777334 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.510331249 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.639380943 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.509281181 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.623540694 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.328454505 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.32908453 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.509791512 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.500018915 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.510727901 seconds)
  done (took 119.722775107 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.570468375 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.576856872 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.621713631 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.502064525 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.553573364 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.624007715 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.50272661 seconds)
  done (took 12.322350803 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.509151475 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.510991117 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.552385181 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.554016334 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.511814213 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.659556904 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.511307255 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.515048326 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.511008455 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.556290753 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.512596644 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.511934854 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.521614896 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.502288113 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.55117628 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.514407693 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.618621891 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.504894119 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.511125207 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.658331997 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.512338387 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.521154287 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.555260724 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.514470322 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.512521961 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.510306068 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.271375812 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.511392084 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.512257977 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.511726197 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.512023231 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.559672924 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.513828514 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.502940358 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.512678778 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.61927232 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.513652573 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.51127978 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.514063703 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.506208409 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.513400768 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.513583447 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.513165883 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.51241614 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.513204812 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.528958038 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.512425499 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.513237924 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.512461298 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.513169997 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.55524891 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.512751145 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.51434426 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.515428354 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.560916785 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.522602303 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.513400405 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.514420362 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.513884193 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.513761864 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.658304869 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.553450794 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.515482424 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.553895189 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.513416075 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.515019959 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.514150496 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.514158709 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.561024059 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.514232479 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.555018412 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.514026414 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.68510977 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.530841079 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.515906917 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.509550857 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.510083583 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.514540754 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.505653134 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.514409702 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.516851098 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.509634312 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.514726494 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.516228069 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.516080838 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.670754251 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.616278983 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.515051183 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.520839542 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.516401934 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.514529602 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.562414641 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.517305331 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.517684326 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.561769041 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.623731572 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.561173707 seconds)
  done (took 154.796625426 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.523123961 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.521524348 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.511826471 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.534161587 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.51018234 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.509212391 seconds)
  done (took 10.488250553 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.512426017 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.520036937 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.518055399 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.517650909 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.517894451 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.517297091 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.516681991 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.511495731 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.520508351 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.517332353 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.517749429 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.520637824 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.519654395 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.517816006 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.517538446 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.516581458 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.517587415 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.517028546 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.518256989 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.520026265 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.508364076 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.518895887 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.518878861 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.511453773 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.522554565 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.519148511 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.532789786 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.52027192 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.519850591 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.51902323 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.521382224 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.518384314 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.51329134 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.516020685 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.522461553 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.513605342 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.523317009 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.52215691 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.517761843 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.518887111 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.521578243 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.521745285 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.519759679 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.522878001 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.514678271 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.51696662 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.526426699 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.535542799 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.519344236 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.523096115 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.522368123 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.520609104 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.520702244 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.524432019 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.515634369 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.518021277 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.525923035 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.521079039 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.521679483 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.515477528 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.524460916 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.52074584 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.515024622 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.524935425 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.521013931 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.523185192 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.514154577 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.52415446 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.522612649 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.52124897 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.523726906 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.521770809 seconds)
  done (took 111.796387188 seconds)
done (took 410.494406994 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.912558912 seconds)
  done (took 4.296260045 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.629196039 seconds)
  done (took 4.013344206 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.299148699 seconds)
  done (took 26.685772765 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.551490148 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.56765426 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.536612602 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.5136281 seconds)
  done (took 11.552905853 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.948931187 seconds)
  done (took 4.332409877 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.51728822 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.516272106 seconds)
  done (took 6.417244719 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.861048781 seconds)
  done (took 4.24470739 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.876861059 seconds)
  done (took 4.266459213 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.529399439 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.531587335 seconds)
  done (took 6.45234827 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.490774364 seconds)
  done (took 3.875962579 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.254834036 seconds)
  done (took 22.639419058 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.526946756 seconds)
  done (took 3.914656676 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.527240939 seconds)
  done (took 3.91201443 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.72885734 seconds)
  done (took 7.113422404 seconds)
done (took 115.101358963 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.50910662 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.514949338 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.516443603 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.516361104 seconds)
  done (took 11.441473196 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.575972962 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.575223683 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.580829913 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.576978042 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.574807735 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.576638087 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.548753762 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.550723513 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.575686274 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.576291558 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.580927593 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.576702889 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.576499202 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.550543901 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.574102061 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.58123291 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.578507761 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.582994346 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.550588334 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.575877484 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.526805699 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.578910147 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.575334016 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.524436589 seconds)
  done (took 39.030837086 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.036636622 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.592692192 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.672750326 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.568481183 seconds)
  done (took 8.256148194 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.603454349 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.608676132 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.625892024 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.66205023 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.690863219 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.623584548 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.551581047 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.548236907 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.532851234 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.608690425 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.658405555 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.591583792 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.696527377 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.526939879 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.746522022 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.526176201 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.527312281 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.606464851 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.658335793 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.689391961 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.52616585 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.605757304 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.612199872 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.594510962 seconds)
  done (took 40.010280235 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.533915701 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.546537194 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.527415324 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.541881255 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.527449018 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.529457259 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.528737428 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.535024176 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.52683806 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.527697034 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.528377515 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.541367219 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.529489582 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.528583952 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.53467147 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.528746536 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.528422026 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.535552356 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.537799988 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.529553625 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.530120628 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.534359839 seconds)
  done (took 35.100210505 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.513891389 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.512994068 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.86557014 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.770395068 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.513930116 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.523220639 seconds)
  done (took 15.089616496 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.607674044 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.763158424 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.522213831 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.950788425 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.033779254 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.52127124 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.520994783 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.809578208 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.19915049 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.204066734 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.597779725 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.603921287 seconds)
  done (took 22.724272581 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.515585593 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.522560023 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.538899058 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.538300264 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.587244405 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.524745393 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.528771658 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.515837703 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.595772507 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.592086205 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.525451768 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.59006333 seconds)
  done (took 23.966879542 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614086338 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.527082871 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.526533101 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523878128 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530694188 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37045606 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.528800914 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311279991 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.532144359 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.800829285 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543535406 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622904966 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.783379137 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53289098 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.534615572 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.511715655 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757860369 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135446985 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53513896 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539849644 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565003055 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.537327064 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.541196008 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.794692849 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380561863 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527873146 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.791042483 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.528978307 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887032613 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866680498 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864630231 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.538555179 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.80314297 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240736546 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625521486 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787488877 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534647937 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.559605334 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.530154543 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.546689792 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549329801 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.538365719 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85939495 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536749795 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.530857027 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529090754 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324708459 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.535335395 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.52916685 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.529483267 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863122724 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632423526 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.535324013 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.529486118 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.572781808 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535547484 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.534626265 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658684074 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097792423 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529193652 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538257357 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.537514029 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.527557443 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53830846 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296873038 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.53907303 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.534891608 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535820754 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530831438 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.543702007 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560656405 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531193967 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.55112183 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530944676 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446396306 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.530612162 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560035164 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200947251 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543092595 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.538897827 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764035844 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532177584 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534664989 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.533569559 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.533172042 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396023508 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539350964 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.505252516 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573475694 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312452303 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.789782488 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556375317 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564075181 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.756884402 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.504814057 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530955117 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.532280239 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559978525 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551215889 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328245412 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531266348 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.539594569 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790538752 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.742388879 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539809397 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.5134979 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084348719 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54020771 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.562962264 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.549088444 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.800418015 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.303354843 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874225175 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541981904 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564962172 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.533222276 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.455570163 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544027261 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.54726474 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.556138241 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855844747 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.496911942 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535158797 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604014957 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.538687652 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.535943367 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534050979 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54454524 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.533608738 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.777253965 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.546006076 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876434068 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.542219369 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53630164 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.534127453 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543151589 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.543171089 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.760583434 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546015044 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.819166976 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536077464 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535687616 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535809003 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.757395077 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.540454776 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.54944049 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.799865278 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544025451 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.553438073 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87650384 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573086033 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644105416 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565313003 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.545741782 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.799074553 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.543189377 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.542171706 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.536283307 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.545839231 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538734687 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.544591989 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540524056 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298065796 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5062886 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.539530065 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.537499484 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.553236371 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60696881 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546463562 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.798838874 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.545314005 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550675196 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.55241705 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.538894213 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771244691 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872946565 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.562149956 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620701799 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.088864398 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290174744 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552154126 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.53829628 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.537754418 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.539958798 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537758396 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538815006 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.53934729 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798594215 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884645354 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.551874914 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.292556613 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541043969 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.558590551 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.551787525 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87271495 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.55532912 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539987519 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.551837305 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540244525 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.551017292 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.879446865 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682279378 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.555636273 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.540527351 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.058341181 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546932257 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.538367178 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.540238714 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571092735 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.54113035 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496474313 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804444878 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.538346794 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88195864 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.546385642 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.585778661 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.538815557 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540853788 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548519503 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.555550478 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554432801 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.802221619 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.563096467 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549744537 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101685062 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462775022 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242821196 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.542229204 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.561399771 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.54784965 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.329940069 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541386279 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541970012 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820890029 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330350656 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54191517 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094397706 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.55376486 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.4621041 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887096891 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781061916 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548737791 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.549988079 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888581567 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.76099608 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57581151 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.559374068 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551096337 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.516754619 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175412251 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.559046119 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632719834 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332203457 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545122442 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.551802604 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.602481455 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.559621222 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005581625 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.543804531 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544560162 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.560375647 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.551156401 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480417638 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.543453986 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.543199423 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301606846 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.563493487 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.105803723 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544289676 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.806753027 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.884935131 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.867258793 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.551947683 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.549725313 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.80566054 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882282411 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552496893 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.562791618 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255389847 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.422004164 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.55175456 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544985577 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475198124 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56409114 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914143869 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.570494123 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.552402936 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560286901 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.546406595 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544941981 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.544851568 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.551910319 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517208502 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160251439 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.562259995 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.573611785 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.57028627 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55433466 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.80357505 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.562595449 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.321030871 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.781449248 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.557622036 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.583506419 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.552422731 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553231022 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.528147554 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.546885394 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.547270136 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588531445 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.774729604 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.546706066 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.519729825 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.547370043 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.764576068 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.545836631 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.548207528 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828237551 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.553552966 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.5619742 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474666134 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579921586 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.549153645 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556839625 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.568473753 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594780993 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615551771 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808773758 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.89109367 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.891622931 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020171713 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547017954 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.555000679 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.562049012 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64433385 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54869053 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.551725046 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.330881655 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33002553 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483406845 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.329716599 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895688766 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.556712754 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.555066301 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549979749 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687472424 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549033364 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8242362 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550088436 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.55484327 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578051268 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555158016 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57063261 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767599638 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.825770458 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550043242 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.566665373 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.558462618 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.550483365 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891574705 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.771220736 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172572729 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252632109 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558239531 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.553923446 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348278223 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82640357 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552501531 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550069244 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551819515 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.567705978 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.57532969 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.559474795 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.558547384 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692717579 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888232491 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276198661 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.889476732 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.594519092 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.070694755 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552522911 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.815749361 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321839618 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.814724044 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317761806 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.472682538 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82590663 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623286962 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816889389 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.556860752 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691202857 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.571787558 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.559193141 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.554051554 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554298898 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.555512775 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.889461922 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331344158 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825941083 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.55764622 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.552384946 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589040797 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.816408165 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.781487503 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.43014704 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.776253202 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893467036 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.566015186 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.555147601 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32387166 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899022217 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562128069 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.560390601 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830163622 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.56076405 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580638722 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.244189768 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.553967217 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241291097 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.45275744 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575300607 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56670078 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473426205 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340409641 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.562720684 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181774346 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.561601076 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555878389 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837889087 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.563407919 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.572257366 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841846684 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.561582773 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.554422337 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847573992 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.335298235 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.487210423 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.586106057 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.563034283 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.563970178 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556175131 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582449563 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561653406 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.563761298 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.032707461 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.553422384 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55503887 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57027736 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.562685935 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.580620703 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.562341676 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556860761 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.56463937 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.53915978 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.538136131 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.580636032 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691964584 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193954552 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.564808126 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.233582651 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.908675931 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.812108663 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.564832843 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.538688064 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.562439109 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.558681755 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.558863122 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55825917 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.557531379 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250654805 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.570594222 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.906273015 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572506676 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.769216709 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770594482 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.562416273 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831145714 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581870067 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585308303 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.53183047 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558294317 seconds)
  done (took 1072.781811266 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.586992795 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.578965313 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.595823785 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.588642601 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.60683599 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.610487381 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.6020444 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.676114251 seconds)
  done (took 22.265499867 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.562877238 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.55901946 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.561423393 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.559255657 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.566389305 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.125486357 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.56699286 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.560422323 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.573375628 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.555460116 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.566534197 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.355311833 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.591635898 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.568130407 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.542409535 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.561850202 seconds)
  done (took 35.802416432 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.190708621 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.936113593 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.562932604 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.615409516 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.576763196 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.566456002 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.096243254 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.587496529 seconds)
  done (took 30.553520872 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.566372487 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.56535556 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.569272456 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.566803633 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.568111968 seconds)
  done (took 9.257604854 seconds)
done (took 1367.665069471 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.567030414 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.567618919 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.567020725 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.567472066 seconds)
  done (took 7.692238667 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.535943855 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.535181587 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.535722866 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.551306018 seconds)
  done (took 10.580622159 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.436860011 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.318298682 seconds)
  done (took 6.176540977 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.092628366 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.100569834 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.09443728 seconds)
  done (took 7.711696208 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.859234844 seconds)
  done (took 3.282575109 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.521009739 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.561916702 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.273037361 seconds)
  done (took 8.779628913 seconds)
done (took 45.643993233 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.568144454 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.807864525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.709836127 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.554165141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.715912364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.778571378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.314681742 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.565401163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.56082642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.557923756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.569201273 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.716643042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.300560341 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.809186493 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.302010884 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.904199776 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.719371702 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.55498507 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.558257261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.564265084 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.317395817 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.57094165 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.558515386 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.555660972 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.729092443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.70144077 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.562567955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.903292452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.555627604 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.556134136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.707461231 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.565703392 seconds)
  done (took 88.839842415 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.566845844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.555991114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.555684833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.576218971 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.555898992 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.558956428 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.590551794 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.571788975 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.556245421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.592991094 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.557777967 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.557428872 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.594918575 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.558266912 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.556253585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.579149558 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.56113578 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.573575202 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.557114716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.557539455 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.572986216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.570921601 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.575516239 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.565556548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.557154302 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.558480866 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.579039713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.556186917 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.579959581 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.559758833 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.558567531 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.594059221 seconds)
  done (took 83.589797901 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.571062025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.559108496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.558612691 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.578546936 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.566350748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.562929876 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.579672277 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.576165822 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.577365341 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.569498747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.55817231 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.559372093 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.561537947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.560394408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.562135912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.568187118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.564026451 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.583873176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.566359525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.560332411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.582601253 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.565869582 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.559753607 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.558368449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.566426495 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.575968687 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.567801667 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.560859019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.57829625 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.560826511 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.583205581 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.561461589 seconds)
  done (took 83.591614841 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.800786733 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.575455346 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.577064829 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.570202044 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.57850199 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.57455455 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.569933332 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.80370338 seconds)
  done (took 16.478228382 seconds)
done (took 273.922986588 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.577898439 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.172885637 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.60203 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.568914211 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.592929307 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.595499306 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.819107512 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.596748698 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.82703478 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.595894932 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.59097781 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.574674552 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.559744063 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.739105122 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.507774015 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.581722635 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.571741657 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.569450401 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.270819134 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.891976938 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.595556133 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.567352781 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.502932838 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.583810066 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.5525442 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.668993215 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.688521696 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.822364263 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.751717253 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.66389741 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.169462204 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.573363703 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.60624285 seconds)
  done (took 71.983237099 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.571075281 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.576705512 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.579364202 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.579606471 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.578796454 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.579189204 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.571953741 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.579183601 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.578815926 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.580341467 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.579601972 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.578886273 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.579286869 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.579694741 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.579139062 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.557380936 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.570402377 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.579457295 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.570920971 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.557422753 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.579772517 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.57967468 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.580419945 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.579076534 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.579562888 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.578857937 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.580316068 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.57963305 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.580305854 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.580817802 seconds)
  done (took 48.737712174 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.580535904 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.247583768 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.415019785 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.58075465 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.570840643 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.576922643 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.929341409 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.579086877 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.578114335 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.575773309 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.129575728 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.583190266 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.61099709 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.427160766 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.576358864 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.580742046 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.581248811 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.574380491 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.264326619 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.588974359 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.937372235 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.587965457 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.938024231 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.589648991 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.577925219 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.575218764 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.579768468 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.484426446 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.606819148 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.151479928 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.58352933 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.940598897 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.425378865 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.487783782 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.575904337 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.590929099 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.585684734 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.153683624 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.582109544 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.57595658 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.929174776 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.575901447 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.433141233 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.283510229 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.601446329 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.582897209 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.510227125 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.142154896 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.879510118 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.582522495 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.469463818 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.581673693 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.586020956 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.578526376 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.878138395 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.579967761 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.576375797 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.54702651 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.584286408 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.929427926 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.584780172 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.576782156 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.252684599 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.576966972 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.261447243 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.586890436 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.584620492 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.577934079 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.433717882 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.582101798 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.29998853 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.6007625 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.585140921 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.136594683 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.254732794 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.55236952 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.579977478 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.264358237 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.420791179 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.95461338 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.587051024 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.454195989 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.953905683 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.583523516 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.589031979 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.588838095 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.586825539 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.650169542 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.92928589 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.229855063 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.300543184 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.602451208 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.941450045 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.588166714 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.580439621 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.581387466 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.592465086 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.587629183 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.452414575 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.308612485 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.602450181 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.587457852 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.296949657 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.608141004 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.935778235 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.58541579 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.493569773 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.586222489 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.653609163 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.587534895 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.587433963 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.584421294 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.934470786 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.585311525 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.588856922 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.289678099 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.178660305 seconds)
  done (took 221.391359687 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.576031298 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.574388209 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.586440171 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.574876773 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.575679456 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.582307043 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.57586733 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.576612641 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.58116952 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.574994919 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.577233013 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.584760352 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.581881545 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.574928583 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.578138036 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.576407784 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.575634462 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.583775416 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.577262717 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.576539746 seconds)
  done (took 49.005263825 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.589242229 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.261796115 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.237959655 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.591743405 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.589073011 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.582641847 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.653227995 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.599437514 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.590952051 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.949298395 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.801204712 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.596777266 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.590794073 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.590433494 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.249686836 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.575129576 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.948003095 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.264731579 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.592803593 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.264824503 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.569243569 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.591130099 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.581553065 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.289856508 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.965812534 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.939617863 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.662309279 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.272783439 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.593482226 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.595294313 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.268142721 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.593922505 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.584746739 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.274420894 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.599213331 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.605883701 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.591555822 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.654839951 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.656832145 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.951455519 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.274035216 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.95350802 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.609711032 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.775733108 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.600725436 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.569614558 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.282007609 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.592769321 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.570225088 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.594762541 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.59907283 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.265019155 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.593805029 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.263821257 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.600282851 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.594480868 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.26922454 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.263921552 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.253958838 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.805203127 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.593286407 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.94075773 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.595525897 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.281406267 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.596556914 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.593970535 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.594621591 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.802819756 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.271434335 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.941381794 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.953678123 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.95703096 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.595949795 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.666086264 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.596261017 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.955423997 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.666632183 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.040163447 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.961658435 seconds)
  done (took 145.34250726 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.90106195 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.728970874 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.03000486 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.242751394 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.16205398 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.740924175 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.7208518 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.870083304 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.618203731 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.678448328 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.358919084 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.702800972 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.447066932 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.673778326 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.714996151 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.727822613 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.070031078 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.59728548 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.31253166 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.326292758 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.592063779 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.705006705 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.140720815 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.806668206 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.593232746 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.215771672 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.630246967 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.178483973 seconds)
  done (took 59.933173919 seconds)
done (took 597.82132132 seconds)
SAVING RESULT...
DONE!
