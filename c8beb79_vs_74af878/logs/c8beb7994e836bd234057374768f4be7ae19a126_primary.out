cset: moving following pidspec: 8592
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.503304786 seconds)
loading group "string"... done (took 0.520901898 seconds)
loading group "linalg"... done (took 9.049207076 seconds)
loading group "parallel"... done (took 0.181495484 seconds)
loading group "find"... done (took 1.32238797 seconds)
loading group "tuple"... done (took 1.941763298 seconds)
loading group "dates"... done (took 1.39129571 seconds)
loading group "micro"... done (took 0.200540197 seconds)
loading group "io"... done (took 0.519373404 seconds)
loading group "scalar"... done (took 54.066796274 seconds)
loading group "sparse"... done (took 14.360126575 seconds)
loading group "broadcast"... done (took 1.344373398 seconds)
loading group "union"... done (took 10.325541076 seconds)
loading group "simd"... done (took 3.085876117 seconds)
loading group "random"... done (took 11.752465749 seconds)
loading group "problem"... done (took 2.247620207 seconds)
loading group "array"... done (took 24.636900217 seconds)
loading group "misc"... done (took 1.155413291 seconds)
loading group "sort"... done (took 3.831222428 seconds)
loading group "collection"... done (took 19.587740273 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.623840832 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122739301 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.265469549 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.284284556 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243074371 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158768421 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139642718 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.260785161 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.65656315 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210713091 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134970483 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.498578868 seconds)
done (took 6.428451548 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255113494 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.182891495 seconds)
    (2/2) benchmarking "String"...
    done (took 0.171341728 seconds)
  done (took 1.127089074 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077138412 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.155273461 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107644521 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093134886 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091951308 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109783762 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093073379 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109276275 seconds)
  done (took 1.535141427 seconds)
done (took 3.77120069 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.517907528 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.888223346 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.555269122 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.168163444 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.304227189 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.303564812 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320226138 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.206097686 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.106958223 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091995483 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176626567 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.444170706 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.440191246 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.022011384 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09273637 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.098194557 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.133574098 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.80743909 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080992714 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.128259688 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.494803113 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.193386709 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098012633 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.129581997 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184860075 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134529893 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.166244684 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104386228 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.676231038 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136092552 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185995522 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09845729 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.164150717 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.197180035 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211960228 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092463771 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.696299192 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.2043393 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091378893 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099044426 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679822953 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.124607485 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.190874189 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104691583 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090888745 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184743635 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.093472608 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078263179 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.117098476 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086435469 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.171948116 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.478512168 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106797716 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.172636927 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093397348 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688568701 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102840006 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.28096432 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126349578 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094933209 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091754785 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088608754 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.1615363 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095168795 seconds)
  done (took 20.562377741 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148796577 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165792738 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07829908 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15842314 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.127389698 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081647723 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103417582 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079543116 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129137678 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.226745779 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140249556 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.15655245 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093690967 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087209852 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.147827754 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233601719 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108725819 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125748503 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091570047 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111470913 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12742847 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099331278 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110408126 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094423442 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172461501 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205413961 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111470392 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126530747 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090039403 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100136092 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14414894 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147361549 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093647572 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088417811 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.192526548 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106104696 seconds)
  done (took 5.400594771 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.201563264 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124829553 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.213483319 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163386095 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14447728 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.170636372 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150626357 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.285098087 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.214241921 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16577592 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129978378 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105584119 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097083278 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080851291 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079015826 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.515881513 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.140284702 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.174409447 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.135319891 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108726491 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081736689 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.386684646 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084527301 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.100229841 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087918798 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067522573 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.202382928 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102234207 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.089098103 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.106517458 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089725771 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133982765 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20083519 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115532418 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14022069 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086843512 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080361293 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219027459 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111751059 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078907298 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.110156885 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136587579 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132249702 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085317721 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110888117 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223797325 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083334204 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.105706537 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.085315326 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200343129 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.158201037 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100254702 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29168266 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100607975 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087209402 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.107567187 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.084002724 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.27999656 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117251446 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083129832 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100171022 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087824216 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079830067 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.466403845 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109004102 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.300354506 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081863524 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160901158 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084994222 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106791524 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.137278505 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103520529 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086867021 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101339154 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.100589839 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079497945 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081561006 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099941863 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086420201 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096378556 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104467728 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080395667 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150380346 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.118063465 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101459512 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12839018 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090028178 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083065098 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13105361 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085923157 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080640717 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08291599 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168180785 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105308143 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.096061278 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101060737 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128857913 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086812837 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.101057024 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.223903122 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.100184838 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113018259 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104236726 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129486931 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101563342 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079553076 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102990535 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078929963 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079773584 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164853249 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083556395 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082741976 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082182156 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112901645 seconds)
  done (took 23.781786582 seconds)
done (took 50.515643391 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.472102331 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086935737 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085403148 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106944837 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087286314 seconds)
  done (took 1.692014212 seconds)
done (took 2.51789492 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.331181032 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200300818 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099825736 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.197624147 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085885411 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202376829 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189100252 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094147538 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214198858 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083459068 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19476743 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083768207 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104768682 seconds)
  done (took 2.93583793 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097096785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104769217 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097816566 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116065431 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080115834 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095400564 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115249574 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106183175 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094498595 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108705616 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080293926 seconds)
  done (took 1.927598255 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095832275 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101576393 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092098337 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113301534 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078648352 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092788367 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112824929 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105075909 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095603326 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109382172 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081931215 seconds)
  done (took 1.914218106 seconds)
done (took 7.602672084 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.139257255 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.278309069 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146439368 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.219120094 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.354725511 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.240925732 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.580491681 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.155282859 seconds)
  done (took 15.107471037 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.17519256 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.111611801 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088288149 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088199892 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089408888 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.109637642 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092460379 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.092683506 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.109500621 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094334418 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090314027 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.109481602 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089496819 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087529081 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.108736762 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093924615 seconds)
  done (took 2.52185933 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.14002313 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.14146896 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094320287 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.09594621 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.109664366 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.096222846 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.097751479 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.112294563 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091386921 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092162068 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.11535377 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.096027782 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093157624 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.107309399 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.095474474 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10948947 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.107256432 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.095427388 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108608351 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112900831 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096350667 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092870661 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110979204 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.095622135 seconds)
  done (took 3.424212255 seconds)
done (took 21.888397326 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149905458 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101264066 seconds)
  done (took 1.086505284 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.141337836 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.160097494 seconds)
  done (took 1.140385623 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109783142 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08593571 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136962886 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101341623 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.086618191 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.104669598 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11437513 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.104235611 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.087467175 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08719268 seconds)
  done (took 1.859969342 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091638136 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.090749995 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121097612 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139441837 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113864808 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.091899281 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090658107 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.108541639 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.094469176 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0872971 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095690057 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125457213 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.091712325 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126119974 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092372822 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094447701 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115851263 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092491715 seconds)
  done (took 2.707343433 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.087975782 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.088341501 seconds)
  done (took 1.020552937 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091354182 seconds)
    (2/7) benchmarking "second"...
    done (took 0.086991395 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088967866 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108391201 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088982467 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087601437 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105091778 seconds)
  done (took 1.502024441 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.499027924 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.267450558 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.371826775 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104731661 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.145008123 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.352274758 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145050971 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.101151517 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099969684 seconds)
  done (took 2.965583235 seconds)
done (took 13.121847467 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093235651 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.225655279 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.639848172 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.109841168 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.206767391 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165081137 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.292977498 seconds)
done (took 2.583011004 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35429373 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.150876823 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086713349 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085220809 seconds)
  done (took 1.518411757 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081822685 seconds)
    (2/2) benchmarking "read"...
    done (took 0.095318921 seconds)
  done (took 1.029407565 seconds)
done (took 3.396309343 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087727504 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.119883454 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.10356413 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.085108221 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086256122 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.083949325 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.104578024 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085404352 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08586487 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.106160748 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.086210626 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.085217832 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084878322 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104895818 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084557814 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088087887 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.106884476 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089044287 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087269601 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085830482 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105793303 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.085098608 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083964685 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.103654117 seconds)
  done (took 3.114419223 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110827123 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088036255 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107603029 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091989152 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.089830182 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108091596 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091956138 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.086503512 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.1087435 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.088338762 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089431119 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.106777119 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.089406654 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091321431 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105519137 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.090963375 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090429648 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086216468 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106532478 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090549471 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09038363 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105288499 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090644074 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089772791 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.108430704 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090619014 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087216531 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.105717297 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091665553 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090290422 seconds)
  done (took 3.71974752 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098503773 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086003284 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088464442 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116926295 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085732026 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089164325 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102640966 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087904446 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090242663 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088405414 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110985375 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089776682 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086248585 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108372778 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091326716 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09220691 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115363594 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087305752 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086627373 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090615403 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111329217 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086325426 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088459367 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108185153 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09017664 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086095443 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08790008 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107204249 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089958048 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088562167 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110074223 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093388811 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089835855 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117173509 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094070172 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089296614 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092778538 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105835318 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090483822 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084944838 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.10546045 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089096262 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087375686 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.113868474 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090245804 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091727497 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086036587 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.109858435 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090849849 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092404369 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.104300867 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.087535687 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092236826 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090229575 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.11145587 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087489306 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090292678 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.104911085 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09203644 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088709322 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08570797 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.105600812 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09451088 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089164063 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123330487 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097635629 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086137838 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.110030853 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090882072 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094825849 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111758386 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100630866 seconds)
  done (took 7.758896001 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101889183 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095819666 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08703025 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106033302 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087370494 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087214568 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110702946 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089213685 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087160274 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111955582 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088237584 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087783605 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105020539 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088618852 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087636197 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086668562 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112533104 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087432199 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088235409 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107173297 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088294285 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091689507 seconds)
  done (took 2.944873978 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233260139 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093163119 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136768879 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119003713 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105363773 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118194323 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09202499 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091988095 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109886618 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096240711 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095611507 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109612113 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.104732285 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112929202 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096591478 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095369029 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112462429 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096939982 seconds)
  done (took 2.882704008 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101665913 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089087343 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129266695 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.089424887 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08897789 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088759218 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113021363 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110360179 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.107855793 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.089413553 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095840901 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10812984 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09036688 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089232227 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089342 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111617466 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.089329989 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086926989 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115828646 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09502464 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093358827 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116075006 seconds)
  done (took 3.052722566 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104871537 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089704991 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125715741 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092143822 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087566162 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107304815 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.095573447 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.088602819 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.11316151 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09043042 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088987663 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087786171 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.12239664 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08851337 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.093292217 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107591836 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089679817 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08814863 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108075598 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087500095 seconds)
  done (took 2.824018204 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174252859 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125502109 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108679756 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114202663 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127066621 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107009514 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135103884 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108848565 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107563175 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137126822 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108666593 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108281279 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134315288 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113415903 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125015105 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116027 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115721662 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134189863 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107763094 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125046028 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120283746 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106957044 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134963822 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107572115 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125685123 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108895098 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108168579 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13230325 seconds)
  done (took 4.247329806 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089267419 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088721837 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085190489 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105495179 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.088006518 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.087116399 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.085245678 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106138781 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087839061 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086373368 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107080654 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087791409 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087485971 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086247043 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107400356 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089446879 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086470949 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.104620287 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088416852 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086013498 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.087607623 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108395591 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087545091 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085848195 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104752245 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.089248908 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087457382 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084808294 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106712484 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086364143 seconds)
  done (took 3.638479135 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098687623 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097980426 seconds)
  done (took 1.069348575 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095183303 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103449827 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086618999 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106363607 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095320001 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088482667 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115374126 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093649385 seconds)
  done (took 1.658556387 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.144357873 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.164448826 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094429585 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.100609756 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.165728414 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.158528056 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135266625 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.092414443 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110481508 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084850982 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.160180013 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084249469 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092812594 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107693987 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092427151 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096762873 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.109113836 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100834879 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.094932358 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.109908518 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096115186 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096989941 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112594606 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100004251 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085741575 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113878857 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096738762 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102600661 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107221777 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094715938 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089521246 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.107390657 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.094485931 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094360237 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.107553048 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.146256473 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098798769 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108165407 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093585009 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093990342 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144423963 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.088593802 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093322134 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110600834 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096639425 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.092942128 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113936334 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.089492831 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08381613 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10757041 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.089429182 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086848647 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.10664937 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094297064 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091519777 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117827221 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.091946229 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088486517 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105989812 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088907012 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091222267 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106186196 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095514765 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.092136898 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111997263 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094199267 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091624933 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.106961195 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092209832 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.090062763 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09048955 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109866788 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093563123 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.112426905 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095964745 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.090214934 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107797635 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096934152 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091381101 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111380609 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096021075 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118055283 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113293156 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088575209 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088045841 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096235771 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.111427605 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093109819 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084714142 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119903175 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0929031 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.089958464 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104104521 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091063674 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087826664 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.111897338 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086125551 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093196156 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.105566902 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09543332 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096317212 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108924283 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095266072 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09634059 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113770293 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093954454 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.138043814 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109477955 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088248564 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091082461 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114486093 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086865656 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092575158 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.107473761 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090783079 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088337977 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.113668934 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092828616 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.092408982 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.093218322 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114296782 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094206674 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.091110184 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.108539833 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089703323 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.093095083 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117057964 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095387714 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.091767985 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.109137445 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09107578 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092411643 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.113125344 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090382075 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094722939 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108752413 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089201129 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091550595 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.113437986 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095795045 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087898451 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.108962251 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094543075 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091541479 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.112005085 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094416137 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088246475 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084335624 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112329226 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087633698 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.088593087 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118033897 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088675417 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.091676558 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109920622 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099187031 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089309348 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.115292961 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092975574 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.095034422 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114618743 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086464538 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089260476 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.111528797 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096616613 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088486271 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.108628159 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.090134315 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097049695 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085274949 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.11361283 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085717902 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088710023 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.114556288 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.0921952 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093161088 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108738155 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131365081 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101255959 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115780152 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09301728 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093939427 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.113401787 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092524026 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094308712 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115855572 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09645124 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092909819 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110844863 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097655891 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089210433 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091137624 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111620384 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095453325 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085441409 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.111080668 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086025963 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.094881132 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115016544 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09668074 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.095723953 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11261415 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093026166 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099539478 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108564125 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.095410944 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08567392 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.114457703 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101614217 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097413492 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114494841 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096123958 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090993155 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.088925466 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118030334 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092145972 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093264696 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.110546512 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087738966 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085538286 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.11567814 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.095094038 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088424861 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.108637719 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096084871 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095567542 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.108891934 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087451966 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.095196052 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115859358 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08989781 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093540547 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109390426 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093194937 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100315674 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.104896653 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091841619 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095859405 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.113446106 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091636402 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093417708 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.092167474 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.118794354 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.094698808 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09238227 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110745215 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099874095 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091119742 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.109833712 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090628128 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.093983803 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086136116 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.11123501 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095268998 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089687844 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109658737 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09768547 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096368982 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.116774149 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092957779 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095447669 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.116560657 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098036258 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090225193 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.117291427 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089368486 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086263307 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109347407 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086497316 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09269164 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109162609 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098010885 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091121345 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110592669 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.096036846 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095477953 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.109118778 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098335146 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104164755 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106030878 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087804753 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091801296 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112563793 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091914666 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090238034 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.090226625 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115752061 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095454681 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095785461 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.110536077 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.091433465 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.097217028 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.110534411 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.098324624 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.096404965 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.117034257 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090520563 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.095387299 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109294964 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108065246 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08726638 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114645695 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102661283 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093182274 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109385224 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093234624 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089564273 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105625658 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091180678 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.096790788 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091609087 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.115885399 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093741912 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091034093 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110968557 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089904276 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.096840934 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.112064451 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098109777 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090591988 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.107497205 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088021033 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.095752018 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113310383 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098742632 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089160258 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.095430404 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119532695 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.095847905 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.091150367 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.120384728 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100168982 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.096960445 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1199333 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087151603 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089984679 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119102512 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091565503 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.095425473 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.116871427 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088379148 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096303246 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.11702998 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097101009 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092075825 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106138152 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093036566 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097835413 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.094378586 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.115201729 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09407692 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094102213 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.109190304 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096418869 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.097264733 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114389805 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098666581 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093625169 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.115720512 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091668799 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.097780108 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.110501307 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089410534 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087158828 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092894672 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.123333031 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08902391 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101249634 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.122434832 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091775029 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092272898 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.118755122 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091370529 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097829927 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116566356 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093505018 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101171355 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111284187 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093707623 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096987391 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.095897121 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.108155576 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093171828 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092815904 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118318365 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092624905 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09638971 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11451359 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098324203 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.0938076 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.11785453 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098197062 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096834142 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107506191 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099841452 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098732778 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.112850379 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091908015 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093443805 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088524528 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113033227 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099259748 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.0912267 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121943054 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097884126 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092665249 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113210664 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098547431 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092557583 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118772513 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091838316 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096288687 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.106960312 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098305677 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092817434 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117857385 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092053159 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088212171 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116411485 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098083804 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096172136 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09494817 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.119976661 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088573186 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08701851 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.115584465 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091975979 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101005944 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118689661 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093862213 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092087006 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.11276036 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093347008 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098299128 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108384937 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092586588 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09562577 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115077868 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094595591 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088986282 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.095712216 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11415117 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096536387 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092783754 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.110044828 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094081359 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098066973 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113207055 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091629317 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091871499 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119924206 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095495805 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091034046 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.109855077 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101860094 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096552592 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119649948 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091923357 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094664783 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111745451 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0952272 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.098471642 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.11193755 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097178842 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092831875 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117461117 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102399566 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088201903 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.111428572 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103368872 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097874552 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117160917 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.094950714 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092872821 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097881433 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12041052 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.094344634 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087871477 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109655018 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094579461 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088568071 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.113382142 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101440835 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092969752 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110992149 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098454962 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096497492 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.093250067 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.116693751 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089779394 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098868944 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.112547107 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099820622 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088204512 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109666679 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.0946398 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097942139 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114545933 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096298504 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.093672402 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.113442043 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091487133 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092474326 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097427624 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118579743 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099150197 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093717562 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114006759 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09669094 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101519088 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.114892087 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09469021 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102996794 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.119037617 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096553174 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094261345 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120541348 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.099457712 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093245333 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.119181087 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093331773 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094715155 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.119328242 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101211406 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104833008 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113609149 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090137878 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.096139431 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113035284 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091149751 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098863936 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119577946 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100863716 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095383782 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091257213 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123063687 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100332048 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094368222 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.114767849 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092655799 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096531856 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113628527 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09732869 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091518472 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.122047718 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100258186 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098112491 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122169309 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089513307 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100970072 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118605721 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.1045816 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.092210604 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110765833 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091642522 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.094894722 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.099119476 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122115329 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097729288 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096223302 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.117396012 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097463921 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094846286 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.11243084 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101053009 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098893285 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092124126 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118464619 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093932866 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115792619 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096374033 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.099680119 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099545712 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.11753515 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105471879 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097821652 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.11622678 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093998129 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095404942 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.11508991 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097729894 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097628013 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111801398 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091706704 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098530269 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.120640735 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097056908 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100113267 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100349219 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.11585415 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098590522 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099873497 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.119000153 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.093822719 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097184676 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.116349229 seconds)
  done (took 61.117157693 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146212132 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100030658 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115550538 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094678657 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112674347 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116982929 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094363164 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095111005 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117184762 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105115321 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094071789 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11621703 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110816578 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135365476 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114072504 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104374309 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115629496 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095805668 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09405942 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114319797 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111335814 seconds)
  done (took 3.226135968 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115474865 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108065094 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126883171 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109527599 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100247775 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129778164 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105016285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126920854 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110629895 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102194722 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130603184 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106188425 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.122868307 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.103654667 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101908159 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125610438 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110443397 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121844758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.109117059 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1064573 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125415409 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106458096 seconds)
  done (took 3.431774849 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.105540595 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098618845 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.10066804 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115732474 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100202367 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.093207643 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12296609 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096100729 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103392721 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.1163115 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092633712 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096857252 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.12065819 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.096681981 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092052054 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.09483587 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125299829 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.098655382 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100976149 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.115464517 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109517807 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.094012772 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.117241146 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092792346 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107378933 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.121502369 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.09624092 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.098738988 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.111488629 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100645978 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.09610708 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095468156 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.118273396 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092208655 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090220011 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.120792925 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100603343 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.095011991 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.116226763 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.098147391 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096130311 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.120436036 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.101873679 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095294651 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.096177918 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.117156195 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099803342 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095291598 seconds)
  done (took 5.909752088 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127988421 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164848822 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099153642 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137370957 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133286202 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106229734 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.121248974 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136422301 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.096239647 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122421124 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.111021487 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.131250668 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101822614 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103094378 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.119748738 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101108535 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10113128 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.118216388 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.103742569 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098307897 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.123080791 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.102028739 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.108883171 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130086174 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103100202 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09745574 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11968541 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103335632 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.127545215 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.105033952 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103325562 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12424341 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.354604168 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099017888 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.119824366 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102057077 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111583689 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.122193342 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.101901584 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097317851 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.122891959 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10429972 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100234845 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134015451 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101709047 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.120067339 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102010362 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09787896 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128513351 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.101502377 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.105639787 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.131681449 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103093687 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.099059239 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124301067 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.110508394 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.098391027 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.118394108 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.101134445 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12694779 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098784259 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102740711 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.129862142 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.101334727 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.104999147 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.130431507 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.101096986 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102442613 seconds)
  done (took 8.942108985 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136441284 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103041941 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132531415 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112244809 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102500111 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125314146 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104151029 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.123604812 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105040455 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108509464 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124271811 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201696398 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121825989 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108044586 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103218777 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126101865 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104037277 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123429011 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104818994 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103561146 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.124428829 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113302633 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103222086 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13197044 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115654672 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121335079 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105116414 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103264711 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131908407 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104814381 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114572304 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125153615 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104642639 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132304392 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.115819738 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103362042 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.119897242 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105636349 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103709398 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126655615 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102889661 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11118897 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126261979 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101965601 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10294539 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125620921 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111910173 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.136703188 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108998098 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109329247 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.12626914 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1132663 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125041325 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106696993 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112813575 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140597627 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113804272 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133030097 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104981077 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112016057 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133512233 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.118263782 seconds)
  done (took 8.200615759 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098350048 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097095323 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095630818 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117358864 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098299205 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096241975 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097117942 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118981725 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097375191 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096933144 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119248205 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096370249 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095935106 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09615305 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117680468 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096097738 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095511439 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117513589 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099047449 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096910716 seconds)
  done (took 2.988423814 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107638863 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114610821 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.118940673 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105156687 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099388858 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.124048158 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.099846577 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100280392 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118776896 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100983551 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107406884 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127579574 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099710384 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104962488 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128792254 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105044062 seconds)
  done (took 2.708862506 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119430952 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11631272 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.193326127 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103106047 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122062015 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107057757 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099006996 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123496139 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.099788047 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10527984 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103390017 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125616754 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100131855 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100722693 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121785722 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10377809 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096832781 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124798942 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100392457 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.191350934 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.103443384 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.100239452 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.12458174 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104006913 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.100240055 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126047597 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105490243 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.098095549 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.122405269 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102179186 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101120656 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131188675 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.099330771 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104127498 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.122413604 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.1016657 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10167733 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.099567445 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127319625 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.099817851 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101923537 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.122524921 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.100930078 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102370722 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.119128911 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10154134 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.097992685 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.126131308 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101849363 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10051909 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.12198644 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109643473 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.104898394 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.129177085 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.108906805 seconds)
  done (took 7.129276197 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113614926 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100145844 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132219427 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099600776 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100538791 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.099610315 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122604494 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101627618 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099345291 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120118435 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100762885 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100680574 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123204828 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10234275 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100607084 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121620995 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098655568 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.099942004 seconds)
  done (took 2.886946388 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106353114 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098894268 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104041693 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120787431 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099667861 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099313095 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119724222 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099912335 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098015215 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.120686753 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100844291 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10060057 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098534803 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12428706 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100338401 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098682077 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122557152 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10047534 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098496867 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118596491 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10257873 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100084853 seconds)
  done (took 3.284879454 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11394374 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185853993 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109628672 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.195952452 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100503699 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097876222 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130224989 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099641409 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115752872 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.121224193 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098930904 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097352115 seconds)
  done (took 2.419933582 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130314927 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139609784 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121119773 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101911278 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108823921 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126140472 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105198401 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103542113 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135850195 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115949472 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125384635 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113771632 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112772087 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133758377 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109126965 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130568372 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105134136 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103169993 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121366705 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121105296 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103024943 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134824847 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104190907 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125488499 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105554012 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111838856 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134547332 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115759422 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125310763 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114828609 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108527547 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125548391 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113667974 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137064931 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102753047 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112518902 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125798064 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121443915 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108291119 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133806166 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101613202 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130826491 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114815863 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108393258 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134917854 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104608422 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129924961 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106749597 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103481706 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148345386 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1102032 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133441834 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111068536 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113094809 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135367001 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125814399 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138565623 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113202321 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13056467 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118357637 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111272513 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132293766 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113200366 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137988635 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110701555 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133913547 seconds)
  done (took 8.839066885 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142834255 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100863994 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125784091 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117323719 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133237662 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106438572 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104598513 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126004408 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105378337 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100923432 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172339379 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105354919 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137031814 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114414194 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103956454 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126332375 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105220799 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11213945 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123700778 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125906433 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125806013 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114704849 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112294389 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136042136 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115342598 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131476411 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104920125 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104192797 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127883934 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105202757 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130597418 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10619137 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112816979 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123029679 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114354886 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105466619 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126009623 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110537247 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104124691 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133006349 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113258941 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14313922 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105920466 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104703377 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13877491 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104506863 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125799034 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102817093 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105352673 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122669133 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11779609 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116371172 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139044149 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112930888 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127887366 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105703079 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104868971 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127214484 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106204634 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109904472 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135237502 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104921485 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148597116 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105218484 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104281957 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136685504 seconds)
  done (took 8.760723157 seconds)
done (took 167.608450732 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151870034 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.19352945 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148075191 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.182645211 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095937318 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130270062 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.152199085 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.149364897 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.115771439 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.097945892 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094883489 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097752817 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.185102169 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095470178 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094106832 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.121648538 seconds)
  done (took 3.061701966 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194691394 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.315004712 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110316372 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121237358 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10459858 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101519604 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120509048 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101498015 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099126914 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129152539 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103049252 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096315869 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128491747 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099054735 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098476083 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.124184476 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107954956 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100240595 seconds)
  done (took 3.218512548 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120208878 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144538032 seconds)
  done (took 1.233755387 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132500484 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199835181 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278879977 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.17231365 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123931229 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139660155 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152628891 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135276637 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.182582589 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.1357482 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113391514 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099341296 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148193227 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10628785 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135565356 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101473692 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128240587 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134246792 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111722023 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101526463 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144283803 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103416592 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105205463 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133813836 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.171295514 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134826304 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103962143 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101766277 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12551643 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111569965 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.127703254 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117925809 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111396742 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176061581 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105084185 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173105868 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130632435 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100716653 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109797376 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122994773 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105388056 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102901541 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138197884 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100690475 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102306308 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.13216479 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103004889 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.123091872 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.109166819 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107921498 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.129510878 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107142023 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.170467808 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109558183 seconds)
  done (took 7.952649686 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.861317027 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.146949759 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099680409 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.016429854 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150787806 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114934257 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.867096295 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147022961 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254771576 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.874059785 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115627081 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.13689796 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241949543 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25287603 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.998187722 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.328541099 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.721341201 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114276201 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128324983 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165944757 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108398207 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.150054971 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120739139 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.422001987 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100348261 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123457047 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112234193 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13441588 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15770276 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.122918033 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104362745 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197401601 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.266421102 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210687421 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102327744 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098771187 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122185053 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16249002 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270553994 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.241993125 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.167212408 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096998105 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122089265 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108475541 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141558848 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097632832 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181574192 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.167529931 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191210261 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125490774 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113617652 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130136172 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108913726 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180036707 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099482467 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.338164437 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329928988 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122951472 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108703162 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137226611 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270514429 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100452028 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232946154 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147983818 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217125131 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101615428 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808897024 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184204642 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100390597 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105532286 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130534926 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105740555 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129476164 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160344109 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397843198 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112620371 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126057257 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10109875 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.244791073 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10051476 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098623508 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184655766 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123686912 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109760067 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113337211 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135729478 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188334124 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229993709 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135163384 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109136914 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128152516 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113629633 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100174673 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234186422 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2307241 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179155296 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235540894 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109953418 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184541767 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184461936 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107890963 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189711544 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105887079 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139800205 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108645391 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224783328 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156990947 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101113509 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126716365 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110436411 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160295079 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104507637 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109380299 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187700179 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458250258 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184577618 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097496963 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103138064 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131514129 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159192347 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131446125 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263500063 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10909964 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185681738 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106744203 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.12052412 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109367398 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183916107 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108505231 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132393605 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109550317 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110670675 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.254153424 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222483517 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136790695 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247342704 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.170203327 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131651331 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189535481 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110305016 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188802144 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111004198 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107276268 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125230777 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802567543 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113649796 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.13149942 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107025783 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.206384034 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101752717 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10147809 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12229256 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09877469 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826871082 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102469988 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120598426 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10297116 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107271439 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130594601 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110099525 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.1052884 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181840792 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243357717 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.13731794 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108467679 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122229043 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159021561 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124127632 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102053926 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10110694 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12242795 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111377939 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104585945 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124310108 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171449829 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178643055 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232018868 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.560008414 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123442334 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101564618 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241078444 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099951358 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322614676 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111015415 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235520426 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188479625 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097532651 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327708963 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.191143718 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205619869 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10352968 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19034023 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098007353 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130398757 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16020184 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123832443 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109455402 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178698329 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115277742 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136582677 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.002574578 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101836681 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252607099 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098185606 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189268393 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102207653 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132186289 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.309958331 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100854933 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141305374 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157313743 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130940884 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101986877 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.606654079 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101722652 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135724918 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108616021 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234105944 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187381315 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131370562 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112080002 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113437569 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182195109 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235463172 seconds)
  done (took 45.698107437 seconds)
done (took 62.127965859 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297443912 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.260616053 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.307684265 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211927412 seconds)
  done (took 2.141083038 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.268987622 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163732151 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.236074178 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.0994951 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.247711505 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098975631 seconds)
  done (took 2.111538357 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.494290866 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.375396171 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.310999465 seconds)
  done (took 2.180960816 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.258833549 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.24889206 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.355788211 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.412678848 seconds)
  done (took 2.390785003 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.305321588 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132148008 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126511438 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.213807036 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.262429689 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.235899519 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148199659 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198468289 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.156738336 seconds)
  done (took 2.825444912 seconds)
done (took 12.642330279 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.325090169 seconds)
    (2/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.143135646 seconds)
    (3/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.340573474 seconds)
    (4/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110176084 seconds)
    (5/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.266166172 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.170454322 seconds)
    (7/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.191147497 seconds)
    (8/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.379163497 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110626032 seconds)
    (10/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.325022037 seconds)
    (11/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.317466598 seconds)
    (12/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.153464345 seconds)
    (13/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.206448662 seconds)
    (14/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.241080775 seconds)
    (15/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.344107022 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.173601365 seconds)
    (17/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.150912478 seconds)
    (18/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.21175298 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.162680733 seconds)
    (20/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.16729265 seconds)
    (21/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.301563105 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.205654633 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.159888526 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.138277102 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.151448994 seconds)
    (26/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125539467 seconds)
    (27/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.143326191 seconds)
    (28/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.200067443 seconds)
    (29/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.328437295 seconds)
    (30/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.208077915 seconds)
    (31/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.235161344 seconds)
    (32/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.1660527 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123792256 seconds)
    (34/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.217043308 seconds)
    (35/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.082317527 seconds)
    (36/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.208770556 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088121949 seconds)
    (38/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10569439 seconds)
    (39/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.328599079 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.229907363 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109365395 seconds)
    (42/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107395526 seconds)
    (43/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.279388489 seconds)
    (44/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.185792074 seconds)
    (45/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.132581376 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138426098 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109992398 seconds)
    (48/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.137228191 seconds)
    (49/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.175702685 seconds)
    (50/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.232680922 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.10608999 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104960513 seconds)
    (53/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.106950864 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106996957 seconds)
    (55/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.109934148 seconds)
    (56/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.189540717 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100520794 seconds)
    (58/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.15406932 seconds)
    (59/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.19987909 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106282118 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103998346 seconds)
    (62/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.13280492 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.134317981 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105786849 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.159946407 seconds)
    (66/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.093798872 seconds)
    (67/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083001007 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.129125322 seconds)
    (69/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.082422418 seconds)
    (70/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092040152 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.0996016 seconds)
    (72/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.208892298 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124380341 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083420255 seconds)
    (75/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.166897737 seconds)
    (76/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.18769661 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103712819 seconds)
    (78/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.112422461 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107238698 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.16539179 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.147725956 seconds)
    (82/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.103831469 seconds)
    (83/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.141563311 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130422441 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1248225 seconds)
    (86/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.188210472 seconds)
    (87/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.215799139 seconds)
    (88/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.182905816 seconds)
    (89/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.107736309 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084262985 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.137087588 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.129248438 seconds)
    (93/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.186338785 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10380339 seconds)
    (95/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.176555379 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101526128 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.106863638 seconds)
    (98/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.132135448 seconds)
    (99/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.195847568 seconds)
    (100/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.093209914 seconds)
    (101/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088928752 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.149605152 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100699365 seconds)
    (104/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082819992 seconds)
    (105/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.151166174 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.107406737 seconds)
    (107/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.108284001 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.129588947 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101594157 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105366677 seconds)
    (111/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.087554825 seconds)
    (112/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.132572172 seconds)
    (113/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084830947 seconds)
    (114/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.08395651 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.106226265 seconds)
    (116/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.231423615 seconds)
    (117/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082996388 seconds)
    (118/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.107559942 seconds)
    (119/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.108963675 seconds)
    (120/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.094278976 seconds)
    (121/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084543034 seconds)
    (122/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.186847114 seconds)
    (123/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.142521824 seconds)
    (124/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.082931094 seconds)
    (125/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.188602679 seconds)
    (126/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.144431049 seconds)
    (127/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.083003017 seconds)
    (128/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083437511 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.148251375 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12605184 seconds)
    (131/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084197499 seconds)
    (132/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082455288 seconds)
    (133/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.082912945 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.135205327 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085107 seconds)
    (136/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083707175 seconds)
    (137/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083196001 seconds)
    (138/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.108332133 seconds)
    (139/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.08467735 seconds)
    (140/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.207848325 seconds)
    (141/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.106734711 seconds)
    (142/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.090190572 seconds)
    (143/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084504979 seconds)
    (144/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133796955 seconds)
    (145/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084010159 seconds)
    (146/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.21610039 seconds)
    (147/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.08339165 seconds)
    (148/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107612037 seconds)
    (149/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.108066295 seconds)
    (150/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.151543445 seconds)
    (151/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.089129333 seconds)
    (152/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107507972 seconds)
    (153/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.112379727 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107096349 seconds)
    (155/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.083227367 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099930543 seconds)
    (157/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.109407978 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.10808072 seconds)
    (159/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115663687 seconds)
    (160/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.212822075 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106088017 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125567055 seconds)
    (163/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.109050134 seconds)
    (164/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.165493666 seconds)
    (165/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090230259 seconds)
    (166/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.130644848 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.107009465 seconds)
    (168/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084634471 seconds)
    (169/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084441626 seconds)
    (170/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.125525495 seconds)
    (171/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.10841641 seconds)
    (172/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.094469388 seconds)
    (173/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.082080724 seconds)
    (174/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.107764377 seconds)
    (175/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.083905902 seconds)
    (176/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108137401 seconds)
    (177/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103722121 seconds)
    (178/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.129428895 seconds)
    (179/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083609262 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122373464 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.129805152 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109417435 seconds)
    (183/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.083164738 seconds)
    (184/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.083396732 seconds)
    (185/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.08399154 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.107812738 seconds)
    (187/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.084968382 seconds)
    (188/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.088325836 seconds)
    (189/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.08190872 seconds)
    (190/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083177664 seconds)
    (191/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.109379075 seconds)
    (192/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101465816 seconds)
  done (took 27.815286098 seconds)
done (took 28.818108709 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.217848788 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130327941 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110710435 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109209589 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.209347015 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115736173 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.14597753 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112461978 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115253327 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132983458 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102170414 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.11880966 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133311924 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.180068694 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137935487 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104683706 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10176309 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14126691 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.120003822 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.120975847 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.20795825 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104231402 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.113726866 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128212623 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180886543 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130209682 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109313305 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109854693 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.141558652 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110177792 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108421812 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.127787064 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.119792115 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119356106 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127047634 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110310951 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101501599 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.113245789 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110283608 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109669926 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116478271 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.134339092 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110835192 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102138331 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135240294 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109219188 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10164434 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.139958505 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101450867 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108435178 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129954964 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121189497 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.107335252 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125970494 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101594919 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102778431 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.14176205 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104050916 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.119293813 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126303012 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104597507 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10193918 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110174602 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129398179 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.109683598 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102070781 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134682612 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.111631651 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.107226792 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130235104 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103165786 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.1088402 seconds)
done (took 9.882344949 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108212314 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.150206645 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.203584982 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.214414714 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129765706 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.14224487 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.114963116 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123858393 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.136816189 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123374111 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.135803891 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.156445483 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.184481382 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.140332582 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116921772 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111672568 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.137438745 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110939519 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.212318234 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126857013 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153732354 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.116336828 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127325633 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144793599 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106386244 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126871258 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13586589 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112328058 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104718965 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.150123851 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127203802 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130111499 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.10971286 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122450074 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.146313194 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.115108984 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117166455 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.137029218 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107826433 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105796808 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141082644 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121961229 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105887422 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.144404648 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.112903561 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119632228 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137356639 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117697454 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107473886 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.136531378 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10910567 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130143038 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.140542838 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121768328 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.139372742 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11969382 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118005174 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116429037 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.135974032 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119115412 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106069767 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.132327474 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108899587 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151515821 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110851889 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117548384 seconds)
  done (took 9.642114499 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128254086 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137913464 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142118872 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119083703 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.1105784 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125409927 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100945123 seconds)
  done (took 1.924191823 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102928382 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189328126 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211553738 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211768806 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.208452365 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.195681136 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148815741 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102818738 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133153239 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137909053 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189986297 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.24285946 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.107881364 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143395969 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.214354752 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.102504126 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.216719499 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103513734 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113878987 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213902945 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114662665 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.156448103 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114451933 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101367324 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211582328 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102992475 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.267149832 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14263691 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110151823 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116032598 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112649157 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206906012 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.210974977 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116083611 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106523609 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.212307373 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.210275 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112898581 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.227302777 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106312013 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.212608653 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113724638 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.1438954 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.115019481 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117590432 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.199134466 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120418536 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.139742092 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114638375 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.219869276 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114550159 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210806357 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.110833342 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.113024604 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.138149154 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115473639 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122340079 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.139585219 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.197085158 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141668993 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185828165 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.211431554 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.213476381 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.187803543 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.151491971 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.188398438 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.209333715 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.112118233 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138247376 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116394807 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.214752183 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113167589 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112714145 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.204183596 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117176393 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.215637657 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.214538658 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112667338 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114278773 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.134073355 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.111512905 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102331806 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.206593106 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112621534 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.139278553 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121815795 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115033222 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.140147456 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108478514 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.149664986 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115971876 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114024336 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.144967248 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115839449 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118037387 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.217725201 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111491394 seconds)
  done (took 15.828292402 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108747484 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104285973 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108322088 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130551205 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105336196 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104863593 seconds)
  done (took 1.74184473 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144604901 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115555342 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150651559 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117343709 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.193757717 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.19610025 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.229926488 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111243264 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158108651 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128417384 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.221946968 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.202980695 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.227675804 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117575025 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.226780157 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.146107383 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.203907358 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139229755 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125739719 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113195243 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.145520663 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120349658 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112865572 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.214056666 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116748286 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.147215659 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111738799 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12729763 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.151874006 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112868469 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.144391738 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119931073 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110033471 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.138216917 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.204946479 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.13805802 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112758722 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124424073 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143805743 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118741934 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.23223541 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113877703 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124007724 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.152904665 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112253806 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.13580329 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.126015043 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112143899 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.228450658 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.126288537 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.152026402 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.118089266 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116384678 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.152506256 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.111639141 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111532653 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.152288562 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.231845011 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120814279 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111061658 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.142763794 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.11866225 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112360296 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.15017097 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.117078866 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12391463 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136737722 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117537623 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11248674 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.143505143 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.125647564 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.115438945 seconds)
  done (took 11.422586515 seconds)
done (took 41.608006801 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.565353607 seconds)
  done (took 2.637445349 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.918558563 seconds)
  done (took 1.991461565 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.654931066 seconds)
  done (took 19.758343101 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.540694482 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.615645362 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.028326228 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154906194 seconds)
  done (took 3.413849343 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.034628834 seconds)
  done (took 2.128038317 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.319906533 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238839872 seconds)
  done (took 1.641664643 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.755039593 seconds)
  done (took 1.84893381 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.559207268 seconds)
  done (took 2.642855085 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.352610413 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176795814 seconds)
  done (took 1.625889406 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.631547838 seconds)
  done (took 1.729235524 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.843946307 seconds)
  done (took 20.944828549 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239322509 seconds)
  done (took 1.339969369 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282860131 seconds)
  done (took 1.384094308 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.751561606 seconds)
  done (took 4.854232197 seconds)
done (took 69.026918541 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115818359 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118870301 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116546567 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142523887 seconds)
  done (took 1.583428759 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124791427 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118067667 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147904847 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118829345 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126287328 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117078203 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143934889 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120112697 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117352938 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14846059 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117925884 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116498568 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146037143 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118740987 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115529981 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147963967 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122388121 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117815941 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146189091 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122438431 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119546975 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147723972 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12234256 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120871147 seconds)
  done (took 4.172293547 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115226332 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108775772 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109704191 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133975277 seconds)
  done (took 1.577742154 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12851436 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131094868 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154642751 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127468088 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13099529 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156001444 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118077065 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114597402 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144873088 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12785944 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134792996 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157799972 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131675863 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119088378 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156037912 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112468136 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120025646 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156984337 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12682591 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.152626819 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.12059668 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124925069 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.150535228 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127682677 seconds)
  done (took 4.331764556 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.19083808 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125231493 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.167290241 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160388335 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.16805806 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.112638741 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.13536006 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14762475 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12051023 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.141314793 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.118224433 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161348089 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.146583395 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11689775 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115726848 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147223675 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.125883542 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.119375656 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.183485703 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.11862413 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147314841 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.126180213 seconds)
  done (took 4.209018358 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121320988 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107854124 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.128913195 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110067468 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120330818 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.136758075 seconds)
  done (took 1.837431307 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.1093415 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103153592 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102727525 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128988963 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108113618 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102628708 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.126414363 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104103349 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102739458 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101979263 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129684905 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102711693 seconds)
  done (took 2.427655098 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.3391236 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.10902945 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136443701 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112252884 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113020877 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106040965 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146475792 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107393154 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.273011198 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102604763 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.145235247 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196633577 seconds)
  done (took 2.999532371 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206641079 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143134601 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298138546 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36967565 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163220575 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187124071 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269643047 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190834844 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205621157 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134804631 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243525282 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153094199 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177266168 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171985026 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163658841 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159973728 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194214313 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187817522 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173739734 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225770619 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154790349 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190820324 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17682642 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175157838 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131923796 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187437787 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115894217 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152252086 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166172654 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189585679 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166355421 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173035904 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138127794 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218570302 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257770551 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196413422 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287313857 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130509393 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.206404422 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180954921 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254351329 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164226895 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211912019 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152128558 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125810889 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204452848 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176774649 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.172587332 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.126186648 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168468257 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203514606 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171386438 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201112656 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132848533 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317882585 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189399726 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.140129259 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196579837 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181192391 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214586615 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162546497 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148075697 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207153883 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180204986 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206016025 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.136546309 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189168916 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12035763 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192077192 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216422004 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176971168 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182292518 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.222246378 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128391979 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181036706 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169838404 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201946884 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175055042 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18422945 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.116843711 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17220716 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13314329 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123669194 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.224429763 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118058905 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224202182 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128035645 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.34861147 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213926275 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15307664 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18529641 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154042274 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184614553 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141610685 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.136875695 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143514587 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.185930543 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153481567 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157035581 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153962203 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161235762 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126153716 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146678401 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.146909001 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154858304 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.15961049 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160944373 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181900305 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128932534 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188335166 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14588541 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.17654729 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165582489 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207925135 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127592751 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156752865 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187125825 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18100678 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.128354178 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20194627 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180570689 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175085992 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133360005 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19038354 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183935602 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166654332 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210526518 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135655022 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130170543 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.174491753 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156787066 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18337762 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15108979 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153045875 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.147126622 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220013562 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.123709099 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162359353 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165515537 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15810094 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122163062 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133773013 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161338696 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13688106 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.168178732 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131387813 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178037887 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15499772 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179382355 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153572182 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159305931 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174629951 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155744392 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.157216529 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17001461 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115936055 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195861468 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182234945 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152477049 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199680944 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188504604 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216686712 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15601575 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156226129 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175823578 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152500086 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116898414 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157513747 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179769642 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18533169 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.177952267 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213981272 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.192538622 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147243367 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173105205 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165403071 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.201884192 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14918929 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170461745 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153936016 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188624 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117490745 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146470904 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125034298 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134627212 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15437972 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133179962 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201213019 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15988682 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211298828 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183593721 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136004888 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207607078 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123157202 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185342895 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.162547059 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163558106 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178067098 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207032609 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162228451 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165233465 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156822378 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.14486214 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123823778 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.127446334 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189677572 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130690732 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160622071 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137259384 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208165833 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196845305 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144312086 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223189885 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190988283 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19109213 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.143404885 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.163332382 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193435071 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155283256 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180716683 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159995018 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15453272 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205321688 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135446208 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214205732 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182494881 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16142711 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214413723 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152106985 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156319223 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147281416 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186802419 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134881002 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189619062 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143245635 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125585139 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178362094 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133844167 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149608085 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17997176 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168710459 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194471693 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158181964 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193400701 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122318202 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164128332 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15853481 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138929151 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.141098508 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167096834 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209672423 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141257155 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18104041 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19789961 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12846436 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316015847 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213742143 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203633066 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131055001 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165364408 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158541879 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187410028 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159784634 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205967556 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13658172 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205337504 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155258076 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.169254137 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126782036 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173035416 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148777573 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.173550738 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129975734 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152363838 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.165993385 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210338989 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135755842 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182061822 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158092605 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.141702221 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.170618443 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136400026 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222193118 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152728876 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200682039 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.179763914 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.16487527 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217505684 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120369903 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123148914 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.157951986 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177563098 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154586596 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158045024 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.206356496 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220651294 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186883498 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159292782 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16267094 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124689736 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153654363 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173827596 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217163243 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133605603 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160914019 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190123186 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.162790097 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127865772 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185572611 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279093651 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173157399 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16935216 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.148045091 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27380606 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15639956 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13045266 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187058804 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16906495 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.15548101 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18043983 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158183456 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167577262 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160351191 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163263698 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212362055 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190526484 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194755644 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197954533 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142173626 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184305011 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158215298 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202623596 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141232373 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.168566274 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160802184 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207899428 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177835154 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.156714593 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15664529 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183292598 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153748769 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197884311 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13253597 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218081148 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125077194 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189782791 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134834385 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11967763 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184091952 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.204147303 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128504065 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205282241 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155768535 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15758921 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123182744 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170088684 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154656436 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161937711 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.12750336 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206320562 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126432604 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158931701 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206530131 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126886622 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181999614 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143109096 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154752945 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139705453 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136593085 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156773159 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168632621 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209438656 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126984418 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203729616 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159274953 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189741711 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153332773 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169374671 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666959563 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.15340902 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180497437 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174020026 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185701204 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177534039 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157579422 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186248215 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14529548 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192041763 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144002755 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.265894204 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158956909 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.183087948 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128032544 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168653803 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135674613 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.156588026 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151699813 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182445767 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138813388 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131153146 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.182522814 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138383849 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.171101323 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13771481 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209706637 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145589138 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209602083 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178047265 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164086883 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158078699 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198842202 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126456992 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.190306355 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199196566 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138493359 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143201709 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.158879299 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134053447 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209455444 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.120602405 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18359818 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160550346 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183354131 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156440186 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.129600852 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188805625 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136164967 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186527787 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122984735 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178035297 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157301733 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15782692 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.122768397 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155387327 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185037492 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151863894 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152113648 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168829863 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210574955 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.119321254 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128998072 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305592277 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187125124 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186551916 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.174686395 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13382152 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140657244 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181004136 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151008161 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188032534 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.125764106 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156471883 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.126743554 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.196695332 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.152761508 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183646866 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1777309 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186938956 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190475466 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.158412961 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.287154159 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164685945 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156540715 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.123729276 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.154848572 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138971018 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15835416 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13897893 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215267951 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178484997 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.182262368 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.142294994 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160927648 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122760298 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127108191 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192943742 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147971537 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186418097 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140422596 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.140270072 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141416797 seconds)
  done (took 83.320917082 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168518851 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153470685 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.169955036 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.227480393 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196889001 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.3001876 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236384356 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265499106 seconds)
  done (took 2.919461189 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121062943 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161039063 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143179952 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14709372 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.118532331 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.450151454 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158868035 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120420204 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.166853325 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.16058305 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.143956288 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.631622222 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120388101 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146660219 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.129297353 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.118822392 seconds)
  done (took 4.229712958 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.529261642 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.603475578 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.397678318 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.287074154 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.237906645 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.182287408 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.825901093 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.706021162 seconds)
  done (took 13.972103687 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.148624291 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137824994 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.318660021 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.263856824 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150626837 seconds)
  done (took 2.226639589 seconds)
done (took 130.896718347 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121436504 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120642368 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119171595 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15267733 seconds)
  done (took 1.706362079 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.185156443 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094824514 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096689266 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122413865 seconds)
  done (took 1.700706142 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.45179698 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094380952 seconds)
  done (took 1.774572153 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147328365 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141344679 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166217504 seconds)
  done (took 1.671877791 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.140302078 seconds)
  done (took 1.345059291 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128951428 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.121600659 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.242110528 seconds)
  done (took 1.702250336 seconds)
done (took 11.112275761 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121046382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.416073712 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434140635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135498335 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710347738 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.43044958 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033714137 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176995386 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174546328 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139538701 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13374736 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688532502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.050084881 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.359987118 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004713106 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.484123024 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69431066 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111597072 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147902342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111582612 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.041002504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11169821 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111243836 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111702479 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.720677286 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421287192 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108687718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.498420175 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109556904 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112560757 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.430078551 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110177297 seconds)
  done (took 17.640072684 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118630413 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173843468 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146460127 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112766583 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113014708 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141388288 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122416516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122212259 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206200886 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109428983 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163319649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110115418 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11560005 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140792646 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137266742 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109716146 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143815157 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112805746 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118500758 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.14211291 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134038717 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109152481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141882733 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113040352 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110188327 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162194291 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110897418 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120773998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140785558 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114760384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114487305 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140485889 seconds)
  done (took 5.386706224 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15952488 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180770387 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149805722 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150650905 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188722858 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112769481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.223611714 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148162796 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205368808 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111584497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133258512 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139883725 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15193522 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110333957 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166975714 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111372573 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113371159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143034118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118671679 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111560857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164141558 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109686178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139842761 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114770926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110583416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162405772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112863028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123895527 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138547324 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115532534 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116145194 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139621662 seconds)
  done (took 5.689738348 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12685637 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127188451 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134552431 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165164784 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121785452 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124880944 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15492078 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121151162 seconds)
  done (took 2.285915241 seconds)
done (took 32.212551291 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131560969 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.125420213 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.125684104 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.149844185 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.195130042 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.14384508 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124680612 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.111693277 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.151000593 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129157814 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110127187 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.111219384 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.15752756 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.116502584 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.227822755 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.121709741 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.231519934 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.196797391 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.144069433 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.120427608 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.113384959 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.23210488 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.117601991 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.142939882 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.205360307 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11360962 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.21715902 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.114954268 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146868362 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113431631 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.227282396 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.117637745 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112089136 seconds)
  done (took 6.105991695 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.212677932 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.117906744 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.150818237 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119413043 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.116928589 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149349664 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.216465904 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.149740035 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118983887 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11868233 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.118130669 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226404563 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122301866 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.143100841 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12007604 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.113978744 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.247870569 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117459854 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.140120267 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096344483 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.112479647 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118971567 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.25823147 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.110594035 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.150169755 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120578459 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.119042712 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121483897 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.149461307 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.118612691 seconds)
  done (took 5.523049204 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127490163 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133020634 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.165873704 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187370088 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147641543 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163034444 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142858592 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134169325 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174206035 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113235427 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127142617 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181051637 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129881967 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122014457 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149676889 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133185487 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134886478 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144737759 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121003037 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130755302 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165557281 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130968492 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139712606 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152304218 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110887101 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118999421 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153803862 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127597857 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121246396 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.158222162 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116409275 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115751243 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145143816 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149296823 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11413317 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158230521 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140029497 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124512881 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.158474803 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.143612298 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116428891 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.147916917 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138235552 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.198989663 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116101862 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126049615 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.153236135 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129502355 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111688501 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131129741 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.188208022 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112271132 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.16354476 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.114696643 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.110888238 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120447407 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.144802705 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116293234 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12747752 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.146864083 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.13759923 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119782055 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154712827 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116053866 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123817699 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.1418615 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112948858 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.11731594 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.169950886 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121502752 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150888594 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.142166541 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126445195 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125651297 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122874643 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1572184 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112467665 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122755412 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154597347 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120015921 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124860122 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.145558511 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117389554 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.1303685 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163873847 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128692721 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125811625 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.157209254 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116950541 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114227435 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161045605 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114986156 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118865626 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.156055792 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11442013 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.11708081 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.15650285 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127306936 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112067608 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137827166 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148825946 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112872773 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137674725 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.149942787 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120074697 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122755061 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.187944691 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112922891 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12342913 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.156567833 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114455506 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120480216 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148995274 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113252173 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131275378 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.159740093 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12121814 seconds)
  done (took 17.130180687 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.330189723 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.316419956 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.183652732 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.316002064 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.158242715 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.210731907 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.310200265 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.314524302 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112724854 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182049265 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.197149469 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.280852949 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115065706 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.14111584 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.31565031 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.368520482 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175743551 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150755489 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183723261 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127363178 seconds)
  done (took 5.731197911 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137223533 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150128029 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.1695495 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143839994 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121507904 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.16010502 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113893359 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131617556 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152303171 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125396596 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116663901 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160727605 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124130031 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127152979 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160577101 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.153030326 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121753103 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149789909 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138071309 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117871777 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137192488 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141217608 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120899873 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.170521828 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130342154 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.155817843 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.115245529 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120070106 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116763489 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.152076942 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119038158 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132610348 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151539138 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10957319 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125850519 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.160682002 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.119036007 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116286385 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118050683 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.152293466 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128912833 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12371325 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153318602 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10414386 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131114678 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114999457 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155819384 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127131734 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109504869 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.160526309 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128645171 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124429669 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.152210741 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.133998765 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.117736122 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162680823 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12729469 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123601241 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.15052747 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114381535 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11207455 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.148498423 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.121464269 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.125232679 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126737172 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.167805759 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131601301 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.143525733 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120261392 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118889526 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.147689317 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13180491 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135017817 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.14989292 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120908155 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127244487 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118349972 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.128784493 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125711967 seconds)
  done (took 11.840926623 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.142021079 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.117901115 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133472434 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.18306293 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.121870055 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119597302 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.149721283 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135893593 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.122086866 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.158077845 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123421966 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127795895 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16851253 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123583227 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.11714881 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162323904 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.122100936 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153370616 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.167661453 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143175856 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.15389618 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121597648 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127278197 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12555232 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.176048595 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125802495 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.173104374 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.123545299 seconds)
  done (took 5.175048192 seconds)
done (took 52.726928754 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.367408873 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.578406454 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.342727228 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.33979514 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.337374171 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.366806327 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.337684928 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.337365835 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.906293483 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.316969123 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.340438479 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.333960614 seconds)
done (took 30.152511135 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.414741385 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.879929831 seconds)
    (2/2) benchmarking "String"...
    done (took 1.627606806 seconds)
  done (took 4.743860689 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.336559679 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.336391146 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.559299797 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.337306377 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.336315231 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.355599905 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.336515912 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.351219775 seconds)
  done (took 16.848455271 seconds)
done (took 27.580268226 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.433956344 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.551341862 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.577056932 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.341179208 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.338258629 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.350400196 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.339002742 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.369429988 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.344950639 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.349641843 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.782212423 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.610360873 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.343032762 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.730600379 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.341457255 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.362513996 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.35251454 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.608106159 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.342688668 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.377993535 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.319152289 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.32488365 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.357451811 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.345557225 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.348033394 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.352213787 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.360717709 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.338189 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.530157254 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.373689884 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.376128009 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.341536107 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.356205861 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.35393323 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.342052442 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.340653501 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.550349257 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.347795074 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.320667327 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.34691334 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.544139484 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.356043126 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.351018031 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.348105709 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.338335382 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.414722424 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.320868598 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.455400052 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.368996812 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.347921692 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.389840244 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.714005341 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.354494638 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.349011522 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.345009979 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.576145513 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.364753385 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.417908896 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.366837527 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.349089901 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.353012369 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.340445625 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.383808333 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.348486468 seconds)
  done (took 152.907926006 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.340387167 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.345928002 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.344197422 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.361939231 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.343737198 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.344679641 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.342393748 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.341615231 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.349141773 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.370691969 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.346818315 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.345003789 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.362820606 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.288039736 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.348587452 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.363534658 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.346060867 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.361442598 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.345568555 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.341330142 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.348363332 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.34661845 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.347006882 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.344165795 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.354944782 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.427903654 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.388026011 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.361963831 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.351441735 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.344349328 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.35151882 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.352156931 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.007937508 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.206554098 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.350125764 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.384777571 seconds)
  done (took 85.44171036 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.343601689 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.34272859 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.342839648 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.377346474 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.342831882 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.967311094 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.973813697 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.067860049 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.639413312 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.845683942 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.687897054 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.347423619 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.437176988 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.354975437 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.347379643 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.36139134 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.368708978 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.345629824 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.343545673 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.968362773 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.358395756 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.334469939 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.526719535 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.362029824 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.374171101 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.736381304 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.340580732 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37649628 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.679305499 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.387991468 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.343184158 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.772543099 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.18972804 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.460700088 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.346678301 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.379966912 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.344655987 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.627274543 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.346179952 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.344910849 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.348216059 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.075242013 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.345234002 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.964538138 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.345824044 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.353479316 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.344649772 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.343328341 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.420639473 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.122693187 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.341994201 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.338307378 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.341255841 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.338033057 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.336791965 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.337222766 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.371451635 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.457284963 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.433022933 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.336991188 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.338977368 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370497041 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.334011808 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.422309765 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.335074455 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.003345368 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.394354352 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.45386131 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.928741079 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.337820341 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.335462645 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.432397406 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.455001392 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.333368849 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.336926473 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.334568075 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.335535738 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.450622814 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.334725474 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.751383772 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.514068706 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.350078436 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.742921476 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.436795685 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.33465804 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.741413606 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.337756731 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.337055876 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.140465084 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.337899464 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.435420244 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.33501517 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.338361966 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.336702318 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.753277679 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.93141834 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.59854534 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.338565491 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.33643182 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.492526021 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.338054757 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.766486405 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.925839743 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.068992245 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.339885003 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.453105134 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.514775152 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.352086489 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.337156163 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.743974947 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.338907074 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.396452081 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.336678743 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.74068426 seconds)
  done (took 382.822283691 seconds)
done (took 622.407882075 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.220693055 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.165173362 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.316425758 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.176635451 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.154022151 seconds)
  done (took 12.264274409 seconds)
done (took 13.497291278 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.540223207 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.533702775 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.398906601 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537142592 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.370760343 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551328465 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.517684506 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.358521745 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.455554052 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.420893562 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.455439274 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.392548695 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.37229536 seconds)
  done (took 20.13756314 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.630219626 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.341060706 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.401522565 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.612669773 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.381544956 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.616549796 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.661395069 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.342388395 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.478846375 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.372011175 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.353440737 seconds)
  done (took 19.42838745 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.627566998 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.338874829 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.395221503 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.617965237 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.37870036 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.640493673 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.663496829 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.342432385 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.490685461 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.353820946 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.353458861 seconds)
  done (took 19.436819088 seconds)
done (took 60.237411387 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.424820712 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.752493421 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.369962977 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.362362697 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.355093631 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.357116537 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.364256685 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.351388791 seconds)
  done (took 12.57074487 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.352066455 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.352054516 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.350710897 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.350035417 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.353074978 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.353461221 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.352433947 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.353875482 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.350901545 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.353255142 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.354274015 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.353150467 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.356656828 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.350995405 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.352139471 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.355534912 seconds)
  done (took 22.878190933 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.356714568 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.354370459 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.353032598 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.35311903 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.352967913 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.35406487 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.355290692 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.354266101 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.35393746 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.351926422 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.355464417 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.352664527 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.353937637 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.353722843 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.352220716 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.354755825 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.35186534 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.351139778 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.357873679 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.353159738 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.353947146 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.351559656 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.355880619 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.354794719 seconds)
  done (took 33.728657158 seconds)
done (took 70.411222105 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.3409916 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.347287006 seconds)
  done (took 5.923463885 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.414099644 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.411727257 seconds)
  done (took 4.063191322 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.352824775 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.351425742 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.35207728 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.353518374 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.356522487 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.353572861 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.351707175 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.351263977 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.350024994 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.352131038 seconds)
  done (took 14.758104916 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.351656649 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.354144336 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.351615341 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.356107121 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.35134627 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.35185327 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.352126848 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.352559956 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.351340769 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.351643122 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.352234835 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.352213763 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.353515202 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.3544803 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.353258351 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.3495675 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.351597965 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.354144751 seconds)
  done (took 25.582136152 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.366739866 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.372074228 seconds)
  done (took 3.975105672 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.494690319 seconds)
    (2/7) benchmarking "second"...
    done (took 1.395462733 seconds)
    (3/7) benchmarking "month"...
    done (took 1.468169234 seconds)
    (4/7) benchmarking "year"...
    done (took 1.460976441 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.390342692 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.374512504 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.397848411 seconds)
  done (took 11.218883789 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.358320725 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.572781479 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.695059234 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.907952591 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.355423217 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.356911253 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.15339946 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.356509468 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.355454248 seconds)
  done (took 15.348340662 seconds)
done (took 82.104255873 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.340615968 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.411065296 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.352130736 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.364020669 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.695892256 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.356255782 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.345067182 seconds)
done (took 17.1028003 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.337715486 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.327135903 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.330443368 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.34690881 seconds)
  done (took 10.574954135 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.345531511 seconds)
    (2/2) benchmarking "read"...
    done (took 1.628970231 seconds)
  done (took 5.211071902 seconds)
done (took 17.024480822 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.35388482 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.355573098 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.357942815 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.3533942 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.354630701 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.354894194 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.353411334 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.35470709 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.358026839 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.355348277 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.354150036 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.355751399 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356993039 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.355361379 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354703551 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357368748 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.356144464 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353233787 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355110338 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.355583737 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.35499431 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.354873504 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.355828332 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.357919197 seconds)
  done (took 33.767510399 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.357027527 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.356114462 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.355201107 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.356972611 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.352242797 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.355517509 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.355092593 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.353078697 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.35527913 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.35672629 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.350765717 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.354852745 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.355689097 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.35264214 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35471411 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.355244516 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.356077807 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353675214 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355957544 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.354004409 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.354558419 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355060282 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.352509853 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355112719 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.354837566 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355580368 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.355254284 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.353264263 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.357780547 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.355761516 seconds)
  done (took 41.885666359 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.363770545 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.365247951 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.355204365 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.356660107 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.35884683 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.359367048 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.360937211 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.359348054 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.360475862 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.358513504 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.358959548 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.360046964 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.360102977 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.35769965 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.357179566 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.359591984 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.358260543 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.362940801 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.360649717 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.358872851 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.357537929 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.360179851 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.35898471 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.360378588 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.358046581 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.358341328 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.358462983 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.358811974 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.361942611 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.360296046 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.361104539 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.359780974 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.361155344 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.358659241 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.361949292 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.357811635 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.363082778 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.365987442 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.362208476 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.361781741 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.360214245 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.360552429 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.360114083 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.362088984 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.361274552 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.362659713 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.361118857 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.358959279 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.362036436 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.362454546 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.363415611 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.361878861 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.359910414 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.363168854 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.362354202 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.362274576 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.362831853 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.362153267 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.361809857 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.361300691 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.363331211 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.361645908 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.359090374 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.364526716 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.362253897 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.363609111 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.359286265 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.363415078 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.363665994 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.364396015 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.36132643 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.361663347 seconds)
  done (took 99.220708973 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.361144578 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.361696924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.361330172 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.361210833 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359300574 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.360745401 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.360483504 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.361714715 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.361749382 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.359942132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362014914 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.36098241 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361528735 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.361505279 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.361182259 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.361280039 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.3609588 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.360629607 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.36198099 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.36289617 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.362373515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.361701799 seconds)
  done (took 31.189444237 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.362361169 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.364668398 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.360256887 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.36383973 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.363836236 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.366376093 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.362628244 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.364253149 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36297971 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.361966733 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363948972 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362777722 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.364693461 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361875564 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.362711211 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.365800879 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.363839906 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.364242241 seconds)
  done (took 25.787133755 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.362689016 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.361168777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.364068918 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.362874265 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.363154764 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.360491843 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.363561073 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.362390367 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.364239424 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.362331023 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.366014176 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364640092 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.366180295 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.36336864 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363746241 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.362686057 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.364744067 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361221465 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363900852 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.362332675 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.362794546 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.365035291 seconds)
  done (took 31.238841717 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365260773 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.365587298 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.364756044 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.36527786 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.362344483 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.364544205 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.364773994 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.363607641 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.364908437 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.370613554 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.364263152 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.365424959 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.365205934 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.364366679 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.365154099 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.364279682 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.366434526 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.364457113 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.367226612 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.36488711 seconds)
  done (took 28.549157079 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.365072562 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366591455 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.364735063 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.367165389 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.367351533 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.367916106 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368829055 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.36782248 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.371048668 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.370898162 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.368479557 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.369926249 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.369943085 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.3684743 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.369328014 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369424262 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.366969442 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.369749485 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.371171318 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.36974319 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.369396522 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.365322743 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.370012534 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.368125459 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.371129315 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.371028658 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.370063925 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.36641527 seconds)
  done (took 39.568980017 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.369906253 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.368953329 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.366292542 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.367520646 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.364929398 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.366953698 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.367181673 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.367154735 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.369438847 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.368021323 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.368972457 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.366655822 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.369137836 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.368375005 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.368886776 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.368487204 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.368252046 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.367074469 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.365495366 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365185484 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.369891166 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.369368568 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.36893028 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.368518999 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36940536 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.370698063 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.365737164 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.366891535 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.370406421 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.366064672 seconds)
  done (took 42.285201977 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.389333635 seconds)
    (2/2) benchmarking "in"...
    done (took 1.385608704 seconds)
  done (took 4.024771241 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.369950187 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.369231924 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.368111052 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.370395944 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.368888237 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.371661827 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.371154026 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.368142517 seconds)
  done (took 12.206489591 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.362073188 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.37219543 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.367557494 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.370363289 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.371030218 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.36367518 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.37262407 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.375217915 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.367872782 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.36756301 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.369927581 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.371642488 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.369429627 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.365831649 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.367422796 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369261013 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.371994156 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.368800743 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.37016004 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.369382341 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373349732 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.367153799 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.370171581 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.37272869 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.367009014 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.377908881 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.369713325 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.378236776 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.363608149 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.370345432 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.365877061 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.371541817 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.371314822 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.372187007 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.369471764 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.373371511 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.373558094 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.372647002 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.370975918 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.376706916 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.375192871 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.37125488 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.368601892 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.368223929 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.370068319 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.373140865 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.369383498 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.371057944 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.362979958 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.370134064 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.37587773 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.36271688 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.371405791 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.36959273 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.366882087 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.37613317 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.379164547 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.367978195 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.372467168 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.373039651 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.380429378 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.378018523 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.372399422 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.375920928 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.376272708 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.383916522 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.376672832 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.37368513 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.375166661 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.372889142 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.377973873 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.384358094 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.379936488 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.376093308 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.373019631 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.375944892 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.370286328 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.373643372 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.376676563 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.373096326 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.377906182 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.376178916 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.377852668 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.381397394 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.369163162 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.376357218 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.375783528 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.376787654 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.370846356 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.377492805 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.37885277 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.375409968 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.369015172 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.370238917 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.373838849 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.375738253 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.368356823 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.369907256 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.37429426 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.374148891 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.375757975 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.3733369 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.376005043 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.379293862 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.374902813 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.376008478 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.378010027 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.370577615 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.377566272 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.378762699 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.375859467 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.369574686 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.373937412 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.375361163 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.374629061 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.371307568 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.377207252 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.369838999 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.377403577 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.376053713 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.380891367 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.385684936 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.379101582 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.376487752 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.37455851 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.382014013 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.37593013 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.375653498 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.374919598 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.37140252 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.376643492 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.375512232 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.379686387 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.369903079 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.380867286 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.375965329 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.377022216 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.378479921 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.376767213 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.372387722 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.376377754 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.372761062 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.374575683 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.379721134 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.38112371 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.377193573 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.382464692 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.379110701 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.377099667 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.377906445 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.381099733 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.379790199 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.376261954 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.38196105 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.377663021 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.377771211 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.375758801 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.380392373 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.381893995 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.37969817 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.377545267 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.374943181 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.378829013 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.381859471 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.378681975 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.378151825 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.380155706 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.379782659 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.381076887 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.373133849 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.379790054 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.374867204 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.377618593 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.383853489 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.37959545 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.37948216 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.374796748 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.382365425 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.382026235 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.379075381 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.379176558 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.381843723 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.378156304 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.38259172 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.383032172 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.382842865 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.380368457 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.376240521 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.374140935 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.382444035 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.379930884 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.386352871 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.387423206 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.385950785 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.378141658 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.385335789 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.375604472 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.382480781 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.381427164 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.383220721 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.382085639 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.382724539 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.372688319 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.383206155 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.377291576 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.383310355 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.377491475 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.381305074 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.382815273 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.384090394 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.382938245 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.378963099 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.381836279 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.382954222 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.384059314 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.382631913 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.375470752 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.384004364 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.373256229 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.374436857 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.381409477 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.384008865 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.385583959 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.383131673 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.38275604 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.380630507 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.381726013 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.378679146 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.384812175 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.382918861 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.382043256 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.388097503 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.384114461 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.378709436 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.388825836 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.383267275 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.381923367 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.381855787 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.386609377 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.38442823 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.382227739 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.390145566 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.389258381 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.384087732 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.388613087 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.383041424 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.3857936 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.384705896 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.385935492 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.379854193 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.385036652 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.382939518 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.384759115 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.383297393 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.383169583 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.380315321 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381918747 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.38804817 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.383417243 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.381890696 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.387490784 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.387493304 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.386223632 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.381824294 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.387937988 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.386240661 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.384063584 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.384279816 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.382888728 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.389299693 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.382573558 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.388338759 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.382756469 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.39350792 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.399298392 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.389116882 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.387735204 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.388017402 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.38939708 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.384669507 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.386693459 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.383907938 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.386401701 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.384465564 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.384124084 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.391630175 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.385188233 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.38979606 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.384398776 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.388277982 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.391610616 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.39068226 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.383949832 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.390434321 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.387334809 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.386929337 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.380818058 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.388752088 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.386123917 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.386891316 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.384984746 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.385068401 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.392750411 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.386581918 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.386994146 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.386236629 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.38506527 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.382531333 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.383566294 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.39145953 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.388398659 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.393329713 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.387474262 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.391369924 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.386960473 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.395018703 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.392141067 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.389292836 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.394959311 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.389098258 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.385260773 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.386977435 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.3915559 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.394680829 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.395480878 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.387385833 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.395014509 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.391702639 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.391248189 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.389037236 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.391086068 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.390830142 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.390241415 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.394089101 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.390325086 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.389180679 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.388455274 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.390436263 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.392104321 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.390083357 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.387239324 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.391241787 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.390627668 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.386093699 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.387808274 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.388508201 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.388264054 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.39024116 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.389819113 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.392068304 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.389806618 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.392904696 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.390231148 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.393144855 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.392526883 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.395215667 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.394551779 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.392936353 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.391920274 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.38650953 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.39295563 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.388736763 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.38787366 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.383864904 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.385352442 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.391293951 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.387457389 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.396915545 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.391568397 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.391576072 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.389258757 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.391643004 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.390346025 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.395158444 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.408276973 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.386738072 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.392541454 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.391196366 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.38763804 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.396956328 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.392392761 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.38888894 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.387648872 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.393581752 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.399245079 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.386334979 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.394386141 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.388657117 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.393647869 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.393281172 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.392435911 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.391845731 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.392079627 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.385717496 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.394046234 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.391099673 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.391678809 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.38883593 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.389840862 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.3900794 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.399143946 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.394263646 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.393087178 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.395756677 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.390085766 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.390320923 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.389526425 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.393652337 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.388719992 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.392534963 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.388793502 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.394971641 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.390413987 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.394228857 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.392319662 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.395120292 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.390837186 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.389938497 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.393865653 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.394399633 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.397003875 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.386979781 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.396539718 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.388662901 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.38932789 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.396751779 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.392489209 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.398974293 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.393707838 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.392986859 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.390311659 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.397261756 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.395862083 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.397748357 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.388950952 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.392769801 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.398851615 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.396156719 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.400682734 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.396747804 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.398887683 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.393262895 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.396351047 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.397879731 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.390484198 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.392297704 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.395322316 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.394308915 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.393979476 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.394909434 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.398755012 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.402525408 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.395838074 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.393200678 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.399976593 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.396607303 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.39712214 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.392855449 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.395547154 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.394919252 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.39673545 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.396026968 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.393564547 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.400209041 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.396945966 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.401682787 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.394766622 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.395434435 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.391353526 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.400074336 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.397620738 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.391376018 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.398057203 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.391117543 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.400985423 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.400547531 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.39625235 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.390977137 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.391516369 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.392949849 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.396264458 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.401012325 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.394903246 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.395592935 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.393226874 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.402517474 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.398740924 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.399306234 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.397967074 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.394342491 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.400255125 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.391825869 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.396942603 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.396010826 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.393961504 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.403163677 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.39866889 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.396189875 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.400543806 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.403219381 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.397319739 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.394788065 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.397639629 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.400003693 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.402491785 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.400375736 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.393478418 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.395475873 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.399230807 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.399376559 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.397696996 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.39802294 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.408109294 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.403391907 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.39878741 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.396814123 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.396384859 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.403467459 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.401505427 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.402719135 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.401924047 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.394926185 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.405130993 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.401464734 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.404762954 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.40143789 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.400336001 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.402903737 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.39868056 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.400688782 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.400189072 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.400858995 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.403301955 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.401387947 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.409180375 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.403893758 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.40494504 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.420436909 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.402243654 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.398590553 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.402766391 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.395487502 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.400527666 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.402650789 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.40223433 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.402432806 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.404542849 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.40121548 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.396177144 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.405071786 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.399484548 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.406737407 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.405377133 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.397821202 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.397015027 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.400083026 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.403649532 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.407138458 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.399739501 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.40179326 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.403572609 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.397823498 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.410161029 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.41064608 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.402007288 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.401117902 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.403081013 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.39956004 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.404258506 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.404218794 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.408315377 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.404038228 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.401668749 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.397705414 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.405146107 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.404660091 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.397820489 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.401691064 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.401057169 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.404447537 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.41146136 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.414542787 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.405888345 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.402219047 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.402348681 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.406553259 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.400108669 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.404450049 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.402915562 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.401928467 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.404776598 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.409614828 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.405600595 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.404166699 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.400080068 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.410045837 seconds)
  done (took 827.981041001 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.404934319 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.402891649 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.402779514 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.403668264 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.406550381 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.407258327 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.404162653 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.404039547 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.405215847 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.404495577 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.403505822 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.402572889 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.405403132 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.403531959 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407443013 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.406366136 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.406493242 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.405252241 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.405323183 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.405954527 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.405136655 seconds)
  done (took 30.78189082 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.40591284 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.405625492 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.40460119 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.403876344 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.403088144 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.406675319 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.403994506 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.404247411 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.408282741 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.407578651 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.40581852 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.406408227 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.406106801 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.405957549 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.408801101 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.407994136 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.406904106 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.405763646 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.409896688 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.40863692 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.409890817 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.408752874 seconds)
  done (took 32.224754791 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.409284851 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.408851613 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.402801122 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.407896943 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.40798742 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.409317702 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.407689201 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.409044309 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.407504897 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.404735784 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.404730993 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.403574244 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.410189733 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.410065883 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.40576769 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.408068338 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.40938293 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.410801719 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.409852716 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.406931765 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.409660811 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.409901918 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.410039157 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.406056435 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.410701652 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.409834027 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.411080965 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.41417472 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.407508767 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.413929 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.41072544 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.407824867 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.407197678 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.404818651 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.406411687 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.41081333 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.412106523 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.411269731 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.406712773 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.413207286 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.426162632 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.41336635 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.414996179 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.411006905 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.411804101 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.40894193 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.415671909 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.412512121 seconds)
  done (took 68.944751031 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.4114945 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.410838041 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.410314778 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.414811869 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.411091239 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.410446898 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.410444388 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.410696047 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.408229007 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.409390354 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.412469827 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.411036086 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.413432659 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.413819317 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.413308204 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.410771532 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.410952863 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.413344119 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.409522419 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.410519067 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.413592238 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.410406843 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.411085594 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.411619513 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.412673622 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.415129715 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.413488228 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.412739154 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.411234097 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.411477968 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.412124093 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.416033135 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.412096216 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.413877792 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.412563121 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.411959987 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.414363016 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.412577876 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.413548618 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.412754544 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.411835993 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.41178667 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.415931608 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.412110079 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.412995095 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.410924135 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.416540609 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.414246114 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.414061398 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.413312006 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.416954756 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.416823386 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.41489489 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.41561543 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.416281962 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.414753778 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.418602983 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.413230725 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.41520699 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.415030649 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.414567591 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.41539553 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.41416147 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.417891716 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.41542416 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.41379943 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.41543143 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.414660388 seconds)
  done (took 97.379334721 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.417910512 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.41603834 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.414670547 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.415691053 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.414922078 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.415373756 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.417773353 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.416131876 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.415913499 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.414789553 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.416394636 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.416325389 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.418628326 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.417717258 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.416750738 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.417021429 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.416952004 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.417360466 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.415458679 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.417227763 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.414108693 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.41647309 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.416397654 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.41747126 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.416223855 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.418564967 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.418156544 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.415445306 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.416991831 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.417891043 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.417076653 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.418648765 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.416133705 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.417822816 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.418049401 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.419610915 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.417934482 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.418547509 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.418017631 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.417788198 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.41873466 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.416913403 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.41887513 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.420096956 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.421165412 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.418549332 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.420051655 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.420059478 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.418385619 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.419595487 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.41622944 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.419319087 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.418196816 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.419550648 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.419956342 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.417568418 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.424068374 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.41951576 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.420009785 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.420902079 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.419365781 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.417680982 seconds)
  done (took 89.191174415 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.418657463 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.418189571 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.420267582 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.41918749 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.41938112 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.418956636 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.421741216 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.418127342 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.421104948 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.420563961 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.420490253 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.418818527 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.420888696 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.420470068 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.418024376 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.420010641 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.420509286 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.419519062 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.420133771 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.420411367 seconds)
  done (took 29.687212058 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.42202702 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.42149701 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.421346438 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.419620238 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.420314006 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.422117144 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.420156861 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.422921656 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.420503175 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.422306585 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.421272406 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.42195266 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.423837957 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.422630073 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.425307244 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.424125967 seconds)
  done (took 24.045236035 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.424963877 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.423326052 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.425445887 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.421829384 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.422112509 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.421456004 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.423324552 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.425418525 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.425609369 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.422682876 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.421980836 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.424859065 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.424408013 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.426017379 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.423110101 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.423653152 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.421895876 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.423392491 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.423366078 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.422441142 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.422458463 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.42035512 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.424423045 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.424244195 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.423558613 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.423032803 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.42161636 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.42332723 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.425235307 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.423759153 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.42519607 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.422371145 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.424267429 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.424987083 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.425517688 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.424720984 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.421910147 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.422336576 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.427854103 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.427160461 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.426615386 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.423576037 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.424714881 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.422854419 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.42293845 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.427108522 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.42357716 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.42579073 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.422019074 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.4243634 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.427549403 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.427810491 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.42772676 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.427088743 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.426611339 seconds)
  done (took 79.62428029 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.428883876 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.427535248 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.425123869 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.427436686 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.426042224 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.423694705 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.427568606 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.427870288 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.426339253 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.425840993 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.430545952 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.42827892 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.426996578 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.427185289 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.428550959 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.428938283 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.428426473 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.423874338 seconds)
  done (took 26.984759161 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.427904451 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.427883664 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.429478861 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.426844767 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.427287499 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.427431143 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.427102842 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.430375514 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.431055314 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.429998205 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.428553833 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.430927261 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.43111612 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.429824575 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.429399271 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.42876182 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.431225733 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.429314535 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.429926415 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.428007199 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.432014358 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.431169171 seconds)
  done (took 32.743317059 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.423958843 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.423590607 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.423964675 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.437884322 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.436423641 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.423554618 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.424394783 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.42448381 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.446430149 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.466654526 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.460560632 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.435668607 seconds)
  done (took 18.528925784 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431098999 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431906101 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.430441565 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433253769 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429068619 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430938543 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426214296 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430316514 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43060962 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43035931 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430877963 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428483744 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430090817 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429957563 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432678821 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430600508 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431466832 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.432870229 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429854153 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431367542 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431664144 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431648893 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431844865 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430550561 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433532503 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430224305 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.4323662 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431316718 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431671909 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432821325 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431827449 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429986542 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433462067 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.43135459 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432799237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435616132 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429787667 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433299377 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43214445 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434004168 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.431976293 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433631572 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.43138833 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431307276 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433803374 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432099821 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433376123 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433747449 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434417959 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.434814892 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434998143 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435766779 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432215091 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431166317 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436400811 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43409191 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42976567 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432243539 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.434252163 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434885085 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433012181 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434297723 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43713899 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433699449 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436062749 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434154939 seconds)
  done (took 95.830923378 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432439967 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.432869267 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434275085 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436142704 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435150602 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433735266 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432367587 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43466732 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433548648 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432646388 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437439247 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433297658 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432718378 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433585935 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434626216 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435699745 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433992375 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435407666 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433455571 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436534214 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433074502 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433366322 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433628458 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433196246 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433812465 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432353464 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43582614 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432049139 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436996385 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432490058 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435395637 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434321506 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436130451 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.43582275 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436503286 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433324143 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434777589 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437045174 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435817738 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438260264 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.439100738 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438743714 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435448255 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436248198 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.434545706 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.434198014 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436170831 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435165622 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437898796 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433867072 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433522925 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433873432 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436644337 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437811401 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436536028 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434794633 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436196334 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434607239 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437397045 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440360299 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438172481 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435648616 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43951097 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43739329 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435412092 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438849371 seconds)
  done (took 96.033576593 seconds)
done (took 1940.940459737 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.598001332 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.551316936 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.432501227 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.447784559 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.430414391 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.451838854 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.441235371 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.431310016 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.432881247 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.431682472 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.433625153 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.621574659 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.487468291 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.432694413 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.435963208 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.531062775 seconds)
  done (took 28.897240436 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.460961016 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.443177232 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.557547425 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.439604867 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.46526713 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.635819378 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.497874604 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.439928635 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.621029 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.456378616 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.427784087 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.477144668 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.440207316 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.441696662 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.458509535 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.634572743 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.702087639 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.435727576 seconds)
  done (took 31.342392817 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.913320852 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.435416037 seconds)
  done (took 5.656922181 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.454738531 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.435891539 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.435423425 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.435140041 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.428600116 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.428283478 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.435295641 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.434935091 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.456224114 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.566374483 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.440681261 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.447070525 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.452944518 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.435655777 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.438080452 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.480121682 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.583813847 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.44293835 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.438751489 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.443036499 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.436002146 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.529674951 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.481840801 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.4452122 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.566833426 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.444599722 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.438315074 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.440771487 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.603540627 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.441617342 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.434792918 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.433806519 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.438364001 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.427809282 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.961911735 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.428876065 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.459556809 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.442561122 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.439732133 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.594555237 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.43592529 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.443187047 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.425598779 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.946690157 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.564007879 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.5607871 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.449527136 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.436851032 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.437200922 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.50222317 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.438279019 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.439603947 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.496661609 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.282095597 seconds)
  done (took 91.178420958 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.480782707 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.429611486 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601168415 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.449896425 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.429433654 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.447716101 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.427636551 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.729979412 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.477204935 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.430406419 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.741473226 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96438661 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.428432802 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.451320111 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.962348475 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.510089582 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.430248729 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.428704764 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.44545803 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.431069309 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.957815618 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.435931008 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.429287111 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.479729233 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.475599065 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.900984321 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.433356438 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.453719388 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.431510696 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.4301633 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.916546005 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.432119448 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.520489993 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.430848042 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.71381628 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.808805901 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.782046385 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.434366873 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.480739197 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.431081754 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.451704225 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.903519494 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.797135698 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.435563973 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.432470506 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.916617098 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.43886991 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.43948259 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.433180647 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.658646394 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.434211854 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.437337107 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.436063139 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.45189841 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.452494302 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.481987964 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.533159335 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.952782694 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43915886 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.443993694 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.460630681 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.437911409 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.441213039 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.442875109 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.439590075 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.802769801 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.627857405 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.441913218 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.79957852 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.916247572 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.446665391 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989767565 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.43821089 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.460312468 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.645318628 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.438282263 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.438172482 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.931972234 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.473064506 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.439801535 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.782777718 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.44188499 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.733222512 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.456330512 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.439323026 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.985150935 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.443312074 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.492356378 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.441142264 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.452768792 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.439216506 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.442284345 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.723103469 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.479584256 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.439894483 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.439592966 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.460790784 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.438745833 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.456357224 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.447149305 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990544122 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.447620442 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.441251425 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.444347136 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.440524215 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.441090724 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.443907919 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.441930306 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.681820537 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.440987363 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.460260542 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.437919203 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.440103446 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.449434874 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.491190414 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.444428127 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.757041243 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.43972716 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.441214403 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.44454534 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.44199151 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.448688788 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.440905693 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.442994226 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.358159932 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.651400643 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.458244388 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.441024813 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.443927294 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.442467109 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.469534257 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.441264599 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.448887335 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.44727638 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.200690749 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.46017714 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.448285784 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.442422597 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.452283368 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.447107824 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.452427994 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.443506842 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74553283 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.723890061 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.628654472 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.444508301 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.444393525 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.182642573 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.47133843 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.590556075 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.461336447 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.444540771 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.647886666 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.65725854 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.446604331 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.443350888 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.444383866 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.693832589 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.449430832 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.762442818 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.957800078 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.443471439 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.451399167 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.199526267 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.15448594 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.448366954 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.445399642 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.735215154 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.46249976 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.443329304 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.445239652 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.445689729 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.443886637 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.447452283 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.451554436 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.444585297 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.445816643 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.509593359 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.619769082 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.461085342 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.452678319 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.908108777 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.493231544 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.447766592 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.451786866 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.44878102 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.444826947 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.54023881 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.450107793 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.472483972 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.447903215 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.4537038 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.93643369 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.447015254 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.446952389 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.59915699 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.114067142 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.44547264 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.447558388 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.44879322 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.999096653 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.976100948 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.512940194 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.762914859 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.451740737 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.48618973 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.446364859 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.515847993 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.931353079 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.44750312 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.446838157 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.07285276 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.445604233 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.856238609 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.447697408 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.448316224 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.002351932 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.448184195 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.452830616 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.447742928 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.467230605 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.737637509 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.448054385 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.498246042 seconds)
  done (took 520.839937961 seconds)
done (took 679.221641007 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.447477004 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.449207721 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.435691981 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.454234821 seconds)
  done (took 11.1143327 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.469248594 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.453836715 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.464158184 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.453958085 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.463519302 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.456749795 seconds)
  done (took 10.089306635 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.4467439 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.44765645 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.456049196 seconds)
  done (took 8.681668347 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.677944367 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.469506859 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.829340352 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.451203094 seconds)
  done (took 9.759519845 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.46330089 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.4629345 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.464286647 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.463550716 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.471950434 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.471481518 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.465168991 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.465198815 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.470745378 seconds)
  done (took 14.525372256 seconds)
done (took 55.499289191 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.709756047 seconds)
    (2/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.480859962 seconds)
    (3/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.156250411 seconds)
    (4/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.479494693 seconds)
    (5/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.538002535 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.521592841 seconds)
    (7/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.433559681 seconds)
    (8/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.517589726 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.484182481 seconds)
    (10/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.43393589 seconds)
    (11/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.683150768 seconds)
    (12/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.608918707 seconds)
    (13/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.435527814 seconds)
    (14/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.597375155 seconds)
    (15/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.304121838 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.607888227 seconds)
    (17/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.687328198 seconds)
    (18/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.579361901 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.473011508 seconds)
    (20/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.59734646 seconds)
    (21/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.639330274 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.261858445 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.566493395 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.563458792 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.520012026 seconds)
    (26/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.516592561 seconds)
    (27/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.519644871 seconds)
    (28/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.435564499 seconds)
    (29/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.276861959 seconds)
    (30/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.203733841 seconds)
    (31/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.353924185 seconds)
    (32/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.586687935 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.535897522 seconds)
    (34/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.536755452 seconds)
    (35/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.205983691 seconds)
    (36/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.575256932 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.805266466 seconds)
    (38/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.564476442 seconds)
    (39/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.349056658 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.312105837 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.51216946 seconds)
    (42/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.489645092 seconds)
    (43/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.160374306 seconds)
    (44/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.679043395 seconds)
    (45/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.478866204 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.683460334 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.570001478 seconds)
    (48/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.52679933 seconds)
    (49/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.434784106 seconds)
    (50/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.757669427 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.617412712 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.480997141 seconds)
    (53/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.421494154 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.467494324 seconds)
    (55/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.529107591 seconds)
    (56/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.483576785 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.572428718 seconds)
    (58/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.433915838 seconds)
    (59/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.445086546 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.708118397 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.566728737 seconds)
    (62/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.488784778 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.611605087 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.541988293 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.583656662 seconds)
    (66/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.435376114 seconds)
    (67/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.645636107 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.690951764 seconds)
    (69/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.490075628 seconds)
    (70/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.438055121 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.54952676 seconds)
    (72/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.437930359 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.547556175 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.437524428 seconds)
    (75/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.495942289 seconds)
    (76/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.167979597 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.609037785 seconds)
    (78/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.686753065 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.580423762 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.599341095 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.541441179 seconds)
    (82/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.60225212 seconds)
    (83/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.546120871 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.573849216 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.539418368 seconds)
    (86/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.286279082 seconds)
    (87/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.44237258 seconds)
    (88/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.455291464 seconds)
    (89/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.312893507 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.307098989 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.46113617 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.569648983 seconds)
    (93/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.603032465 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.559910449 seconds)
    (95/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.718385935 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.58287722 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.485888342 seconds)
    (98/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.490096054 seconds)
    (99/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.121526419 seconds)
    (100/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.438209973 seconds)
    (101/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.495173604 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.5364218 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.57746289 seconds)
    (104/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.288201181 seconds)
    (105/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.529412782 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.456466212 seconds)
    (107/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.518273001 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.557721384 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.575217419 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.46072786 seconds)
    (111/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.685238684 seconds)
    (112/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.495571325 seconds)
    (113/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.440269503 seconds)
    (114/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.439004948 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.49120077 seconds)
    (116/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.43785922 seconds)
    (117/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.562574186 seconds)
    (118/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.493000046 seconds)
    (119/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.437958407 seconds)
    (120/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.439040573 seconds)
    (121/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.440445916 seconds)
    (122/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.225994653 seconds)
    (123/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.487163867 seconds)
    (124/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.589216997 seconds)
    (125/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.445382825 seconds)
    (126/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.480666809 seconds)
    (127/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.550681239 seconds)
    (128/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.642479851 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.589223891 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.54694909 seconds)
    (131/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.437777835 seconds)
    (132/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.60875487 seconds)
    (133/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.447814106 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.512729442 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.455435562 seconds)
    (136/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.638753605 seconds)
    (137/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.164654192 seconds)
    (138/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.443120913 seconds)
    (139/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.439030237 seconds)
    (140/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.43900839 seconds)
    (141/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.565757896 seconds)
    (142/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.730980919 seconds)
    (143/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.439632196 seconds)
    (144/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.589618005 seconds)
    (145/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.44061045 seconds)
    (146/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.57476748 seconds)
    (147/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.589638736 seconds)
    (148/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.499150922 seconds)
    (149/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.131468053 seconds)
    (150/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.581071571 seconds)
    (151/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.646864225 seconds)
    (152/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.492484112 seconds)
    (153/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.440710475 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.623733948 seconds)
    (155/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.571359085 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.517755855 seconds)
    (157/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.438713451 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.511492198 seconds)
    (159/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.59450651 seconds)
    (160/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.611257888 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.589000688 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.566690584 seconds)
    (163/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.625070577 seconds)
    (164/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.686164306 seconds)
    (165/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.463070029 seconds)
    (166/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.532718562 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.580588272 seconds)
    (168/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.43961058 seconds)
    (169/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.269520012 seconds)
    (170/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.529393175 seconds)
    (171/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.486400957 seconds)
    (172/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.422798268 seconds)
    (173/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.55362106 seconds)
    (174/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.231101706 seconds)
    (175/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.569484322 seconds)
    (176/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.644670685 seconds)
    (177/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.463892808 seconds)
    (178/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.542401 seconds)
    (179/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.670728433 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.653054219 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.616527146 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.490492844 seconds)
    (183/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.494413563 seconds)
    (184/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.451661574 seconds)
    (185/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.442620219 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.482446787 seconds)
    (187/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.470992494 seconds)
    (188/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.587116003 seconds)
    (189/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.533941274 seconds)
    (190/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.287296524 seconds)
    (191/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.444492226 seconds)
    (192/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.659840781 seconds)
  done (took 364.271024557 seconds)
done (took 365.600916367 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.484086618 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.550213541 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.467728157 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.47073365 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.471226183 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.458154771 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.489798818 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.469674639 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.477872457 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.48069439 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.462097513 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.472551002 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.481422685 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.475551965 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.499952687 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.467514339 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.466425869 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.479832328 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.476452832 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.48199171 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.471844725 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.470260398 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.487053572 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.471494259 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.479822496 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477647281 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.479752544 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.472127563 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.476901721 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.482713972 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.460053444 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.478179198 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.482646436 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.482525046 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.469981361 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.477002304 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.470650204 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.552633143 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.488474118 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.478002009 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.475887289 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.483699995 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.474180637 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.47916117 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.480670923 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.492246529 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.476494141 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.483012055 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.463847953 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.472258339 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.486193986 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.482543435 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.478314036 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.475159073 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.474228991 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.488666881 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.478646912 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.488159244 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.474601014 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.475104346 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.507377228 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.487228387 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.483041845 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.484175471 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.476151571 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.486939753 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.47610934 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.482539504 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.474251071 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.478016919 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.47524127 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.47674334 seconds)
done (took 115.903842813 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.597548537 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.463844917 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.610046408 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.480238287 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.636320011 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.602613643 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.480827657 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.481535718 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.481267118 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.27300242 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.477050288 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.477914858 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.469924088 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.474941095 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.600274158 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.479611114 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.47785329 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.16637588 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.482280329 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.615387981 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.475121697 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.480563222 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.481839732 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.277039949 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.473121477 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.474849018 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.613100376 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.478839776 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.173399149 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.476044505 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.479112328 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.172194423 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.614744732 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.502637404 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.490241095 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.490514998 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.639560304 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.484261128 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.599443249 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.595674362 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.615014656 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.518946733 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.476959713 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.475265453 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.483335106 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.482721459 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.481936282 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.507779373 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.466475209 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.486617157 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.171250648 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.491640103 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.480655974 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.482858509 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.47947967 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.511951765 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.484179155 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.480487358 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.617691524 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.485370221 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.599968939 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.28084282 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.297065771 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.48334511 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.478414311 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.483182718 seconds)
  done (took 117.947294187 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.544820706 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.554690092 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.593352149 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.482146093 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.527201914 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.593359686 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.482923046 seconds)
  done (took 12.122747361 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.48574965 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.486408494 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.525958047 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.528098424 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.483055828 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.635412327 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.483518871 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.49032686 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.48349742 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.528088994 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.487894007 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.486495505 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.49229207 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.481006171 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.526061778 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.48945096 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.596600011 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.477788554 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.484866341 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.629196605 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.484673673 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.494440087 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.528459478 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.491459144 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.484713769 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.483915643 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.254416433 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.486684033 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.48516116 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.487510152 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.48570563 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.533885597 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.487572314 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.479315313 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.484545804 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.593391367 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.484646378 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.484195473 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.488752923 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.478019676 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.490115754 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.484963462 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.487331431 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.486600066 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.489921432 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.506488622 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.48689121 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.484764402 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.485458572 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.489948455 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.529230296 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.487944988 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.484799273 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.483676037 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.537701302 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.492444827 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.487805414 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.487545305 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.489846309 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.485631476 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.634460638 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.528129218 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.486564283 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.528282477 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.486494889 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.48831982 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.492371634 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.489234102 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.533069163 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.485136588 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.529843345 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.487761826 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.663835835 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.506382114 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.488837111 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.486668908 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.487068618 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.490592071 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.481792162 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.487602421 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.48986276 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.48708201 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.492562737 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.487339474 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.488730627 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.646712327 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.593668477 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.489451823 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.498034705 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.490509837 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.487168736 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.537042253 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.486202405 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.489640236 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.536326336 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.598652501 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.537631518 seconds)
  done (took 152.273257194 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.498233589 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.494648267 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.4871427 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.513593971 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.485643558 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.484710461 seconds)
  done (took 10.318789292 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.484030786 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.491620702 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.489244311 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.491669386 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.491567831 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.49155682 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.498725691 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.490701421 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.493687748 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.496211954 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.491393051 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.499605772 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.496701355 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.490363467 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.49683343 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.493993544 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.498522333 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.488681494 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.491907958 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.489004912 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.480242643 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.493909987 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.491466624 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.490147816 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.494951787 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.496964502 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.509238107 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.493526802 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.49213672 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.494716453 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.493693142 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.493629201 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.489252536 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.49507919 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.501446635 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.490144365 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.495014482 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.500438477 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.493511173 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.493610632 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.498628929 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.495403613 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.497284861 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.49902447 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.487429312 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.493255009 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.50443836 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.511939211 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.498492527 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.497728139 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.501557425 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.493364966 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.494053101 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.501386365 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.490557086 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.495166198 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.505409398 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.498773707 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.494990439 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.492018433 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.496964635 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.492147274 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.492889627 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.501650625 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.495004378 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.50203823 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.492753679 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.495584889 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.494572118 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.493064159 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.500147137 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.494228336 seconds)
  done (took 109.996239008 seconds)
done (took 404.00283475 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.816149336 seconds)
  done (took 4.169087763 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.597655233 seconds)
  done (took 3.954729217 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.58948456 seconds)
  done (took 24.955952103 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.510596989 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.55481595 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.505154326 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.487364533 seconds)
  done (took 11.412548043 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.860444934 seconds)
  done (took 4.214305415 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.489344221 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.490529082 seconds)
  done (took 6.337405 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.777927836 seconds)
  done (took 4.134887189 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.909923541 seconds)
  done (took 4.275290998 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.502428074 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.500715084 seconds)
  done (took 6.369169133 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.4786468 seconds)
  done (took 3.836384871 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.30125834 seconds)
  done (took 21.656479854 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.502310175 seconds)
  done (took 3.862538933 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.536839029 seconds)
  done (took 3.895548608 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.303218861 seconds)
  done (took 6.65803134 seconds)
done (took 111.087417336 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.484005115 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.489806589 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.48869546 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.490699148 seconds)
  done (took 11.308140214 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.550010743 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.549297307 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.554636427 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.551101859 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.551040792 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.551808145 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.521700419 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.524089229 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.552174178 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.553447922 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.558620053 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.54897356 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.549461033 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.524414455 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.548721487 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.557264696 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.551450882 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.557880461 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.526859366 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.551478994 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.501790853 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.551488741 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.549574536 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.501187764 seconds)
  done (took 38.393268633 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.008051055 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.565029291 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.649353278 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.544851158 seconds)
  done (took 8.126583158 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.582169947 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.581722478 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.605348657 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.636614285 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.670051865 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.596064382 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.522060873 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.520020805 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.506563577 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.581189252 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.632954478 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.568948814 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.665437936 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.500855623 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.788346413 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.499562032 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.501846009 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.584504027 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.633868057 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.657503461 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.503188754 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.580584783 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.585910726 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.570038217 seconds)
  done (took 39.432699493 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.50879906 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.517401357 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.501196608 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.514775075 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.501390216 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.500521567 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.500667259 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.506675511 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.498053837 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.499533594 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.501060761 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.512907854 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.500516024 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.501073871 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.508146519 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.503286217 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.50308383 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.509768631 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.510400034 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.501507033 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.49706318 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.508165262 seconds)
  done (took 34.465172479 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.490665313 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.490382632 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.839047521 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.74340151 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.490393533 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.495582322 seconds)
  done (took 14.909000016 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.573160545 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.718210215 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.495717086 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.876612396 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.963256428 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.49913462 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.501819016 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.756066247 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.089198933 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.086393795 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.561693481 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.570427985 seconds)
  done (took 22.056567184 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.489514102 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.494924609 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.511802714 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.509525018 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.556602066 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.501616709 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.506128715 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.492837649 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.561200896 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.561746099 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.500716827 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.559948795 seconds)
  done (took 23.609910982 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586704404 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495768059 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.517660633 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54968549 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495433071 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340060246 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.539456713 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.231787867 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.50251374 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768332753 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50357463 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594204794 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.750375774 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496363962 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.507088668 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.47535561 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724410764 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037988984 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497449385 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499497783 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557384792 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.507526068 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503837494 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.751494888 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3445653 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496511576 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.764727121 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.496284524 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818282079 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796174201 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793923879 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508960751 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775414194 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171062733 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59618215 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732158159 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511828602 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.499499893 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.498328224 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.534847769 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510550092 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.507141277 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794119677 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507996442 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.502531994 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506959516 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247738156 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.507481451 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.501638413 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.502324922 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.796151869 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601386712 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.50549708 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499789591 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.584897593 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503974236 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.51082992 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62923886 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061854062 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500597478 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512854957 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.50554906 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.50681412 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502624072 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209912916 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.510199499 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.507991725 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506814525 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503839309 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.502346059 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532363653 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502535692 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.524654156 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503762029 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332621251 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.509151849 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511435029 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102638246 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507138631 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.509563526 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736505578 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504624058 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503586442 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.499066095 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.506683824 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.301994481 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510063961 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.482725294 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549205701 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.237517999 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.734262888 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527267042 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535082711 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.725808335 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.481428039 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508911447 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.506966799 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511298492 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530338948 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.245681858 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506313919 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.508323859 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.764120204 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.714548872 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519477555 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.488362263 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0202648 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509031723 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.536360122 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.510828507 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.741261951 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.20398312 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808842746 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524462431 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545587968 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504226251 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366727511 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510867122 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.516192478 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.51592376 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.805207208 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.420591129 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507546514 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574522501 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513334064 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511254433 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50781034 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516453866 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.511623615 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.736981647 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524633593 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.804171328 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.516220899 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508432281 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.509639246 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511625712 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.535319734 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.732904243 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508283521 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789057362 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507097424 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507934751 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508048228 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.732820748 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.503627931 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.541807123 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.769467367 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522195799 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.515990661 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809078405 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542332052 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61674429 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543235473 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.511728375 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.767957249 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.512770888 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.512300388 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507671341 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.515690906 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511488775 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.515036045 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510355409 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201505405 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493738989 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.514074448 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.513014949 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.527106695 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576309246 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517951505 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.743331732 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.513354297 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536804696 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.516484204 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.512542124 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.740891538 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806452857 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.533193488 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593383062 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.020072437 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204158786 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531086562 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.512431269 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.509239877 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.510430501 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514317639 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513586112 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.509974258 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.742275958 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811426066 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.511977369 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208032694 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5169408 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511014934 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.523710428 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805959659 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.523064777 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511525453 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.509490496 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54996608 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531153432 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.806122406 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652736968 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.527878295 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.512611342 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.029788796 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517369505 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.512735968 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.514126616 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543817861 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.512164015 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391120446 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.771710034 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.53408548 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807032775 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.519787774 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.534679773 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.511094409 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529499125 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521893781 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.540603034 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528524266 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.74529788 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.517573429 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523414205 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074536979 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359203243 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147550884 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528321085 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.516405158 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.520730776 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.256603063 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5171201 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513033422 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767542117 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260305515 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514134764 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025657146 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.513680241 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.334448187 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813729133 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754695628 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.530752085 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.520159096 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821111473 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.734484195 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549247491 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.522305168 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521259476 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.493483088 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103550089 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529020098 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598981673 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262809361 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516957356 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.524201635 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.560424426 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.518318213 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936906998 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.51364836 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519044932 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.522020282 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.534496078 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395984814 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.519014541 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519850834 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230979156 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.529884458 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.034822779 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517750062 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.7512673 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.816404502 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.815945104 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.521798433 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.520398001 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.790480319 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811362617 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522677595 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.522826606 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15812394 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.387121928 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.524470298 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517692486 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371804842 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525841934 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845858951 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.531149338 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.520512425 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524009859 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520403818 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518425931 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.517614762 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.522398491 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497049206 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066178133 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.534319402 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544004615 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527715741 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525012047 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.773251751 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.534874061 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.214601347 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.753109363 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517306342 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550840313 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.524634266 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52008795 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.504930412 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.520868985 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.521827121 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593488519 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.74198147 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.519150319 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.498387377 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.602082199 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.73207629 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519926701 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.521081299 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78989828 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.522892096 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.522110193 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369893419 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550628681 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.53346267 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526193792 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.539807553 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563592294 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587717867 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754248608 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.823917071 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.822850057 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950395671 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53411521 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529331099 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.535286192 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616214079 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532379114 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.52622799 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.298850936 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221169633 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369194734 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224052134 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827157455 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.530432676 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533045476 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524153556 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658761292 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522547721 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797378058 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523263796 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.521051838 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546159868 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523311392 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533318886 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.740943503 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.800409756 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.525792396 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532815817 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530602959 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.526141185 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825990022 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.740805588 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082851471 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13853478 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525955199 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.538094374 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.273261209 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.796530177 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524290481 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.526477978 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527584983 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.52900621 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.529197419 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.531964867 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525116282 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665809065 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821630531 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217637185 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.819894686 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.566115647 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.045526352 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53488891 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.783174214 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293324887 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.75589279 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230991698 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35333339 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796264243 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594956703 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759439888 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.523317874 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661134729 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.532134908 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.53262371 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.526685414 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527643198 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.52665201 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.822222341 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236186916 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793485624 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.532569278 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.538314235 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561139108 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.76009131 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.751757858 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.334303442 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.749846803 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827571952 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.539602595 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.526841828 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230169396 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834369597 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534038976 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.533836278 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776043032 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.531337318 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553503914 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.049555105 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.525795889 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130544895 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.4169101 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548860299 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531873402 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357512188 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237237324 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.539081431 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082315817 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.530276656 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526506702 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.828802231 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.533379701 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.54061827 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.818393968 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.5354083 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.540542313 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769810364 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.233808417 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.359399807 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.536905796 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535837445 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.53510009 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530359949 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595652679 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528141525 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.537944457 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.97880485 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.527613261 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532414159 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542542179 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.541981583 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544069272 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.531552295 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530491087 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.537324656 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.514992798 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.513101966 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.567613794 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661117563 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118110169 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52740173 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.20664242 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.875494614 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.787379779 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.531070369 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.511529087 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.535777951 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529414801 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532933532 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529100925 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.549874229 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131270218 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.532885071 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.838004527 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539791749 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.744155189 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741968015 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.530500705 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773360879 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545953655 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55740746 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.509534011 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530683271 seconds)
  done (took 1053.939535262 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.531929289 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.537332034 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.540187824 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.552551545 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.555860642 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.575431715 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.574884432 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.639623863 seconds)
  done (took 21.898160204 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.532771339 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.54245595 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.530452346 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.543024564 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.530206619 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.047102728 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.530191958 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.541310214 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.546383764 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.542290135 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.536187314 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.274444658 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.559858083 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.533514049 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.513273153 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.54068126 seconds)
  done (took 35.244532726 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.832244935 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.793514266 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.951361482 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.578736859 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.579416935 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.529932667 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.877683482 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.556641028 seconds)
  done (took 29.092978123 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.54442512 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.542584339 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.545300463 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.548381416 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.543307553 seconds)
  done (took 9.117201447 seconds)
done (took 1342.954784681 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.539596278 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.539852676 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.536302838 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.540226159 seconds)
  done (took 7.550110018 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.512284401 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.513495718 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.51814893 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.530129527 seconds)
  done (took 10.470317312 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.303637834 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.197314834 seconds)
  done (took 5.894828552 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.05636141 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.05770692 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.050746082 seconds)
  done (took 7.558991662 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.827529175 seconds)
  done (took 3.220235608 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.491562449 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.530375392 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.226904121 seconds)
  done (took 8.645973293 seconds)
done (took 44.735721516 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.54492385 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.779548972 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.684573892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.529053906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.691899567 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.684192925 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.268529514 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.530023052 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.531953363 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.531073743 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.543676135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.693395864 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.246432291 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.775456894 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.248982542 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.871193486 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.695200229 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.538552956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.537898788 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.531625553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.272435607 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.542286861 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.540459113 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.534698037 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.696803204 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.678475815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.545654646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.878349847 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.545647623 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.539886757 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.679615665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.534386536 seconds)
  done (took 87.84145575 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.528900881 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.545672675 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.537892717 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.554401283 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.534326344 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.536456394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.556978647 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.538645335 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.535428228 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.538212809 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.536906287 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.554254794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.53709337 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.535986901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.535688872 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.535568815 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.548114022 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.538456719 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.536527023 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.553658598 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.549885673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.532325821 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.531330498 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.535285161 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.550678505 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.534652479 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.550609768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.533918664 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.535142686 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.561483238 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.536493592 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.557197502 seconds)
  done (took 82.72803712 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.542766369 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.536996316 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.548874755 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.547871598 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.54024044 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.543799569 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.537236023 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.551527441 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.536007401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.5442864 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.549580505 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.547276266 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.538738593 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.551483859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.536198649 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.536946226 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.542524577 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.554483012 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.556038325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.535958119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.550140522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.533218791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.53867708 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.549215829 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.54227468 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.543422342 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.548362498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.538080477 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.543623391 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.544615723 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.542515703 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.542171198 seconds)
  done (took 82.792599217 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.773285484 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.549729247 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.555344975 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.544478664 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.555316762 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.551456635 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.547790201 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.799044119 seconds)
  done (took 16.278824446 seconds)
done (took 271.037120887 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.553983923 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.080916353 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.569635662 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.536260879 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.559973232 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.562086718 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.773547477 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.563389406 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.776910321 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.572313104 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.559237518 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.540533812 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.413766705 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.704125959 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.425339663 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.520444512 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.508313961 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.546380822 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.167014545 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.841547245 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.564681628 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.540052349 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.427928905 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.515492654 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.527594715 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.633078649 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.65462244 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.775524084 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.710528933 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.632029947 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.103267082 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.557290867 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.549486274 seconds)
  done (took 70.36885669 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.543689437 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.549310235 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.55365646 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.553906409 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.551895686 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.552158968 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.544299416 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.55556783 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.555084614 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.557262289 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.552597883 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.551716402 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.552498361 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.550567617 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.549411946 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.532039091 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.547525176 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.549390582 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.54540007 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.531310897 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.549672812 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.553420882 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.555788401 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.553454438 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.553035222 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.55221921 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.550616059 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.555603399 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.554686943 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.551945416 seconds)
  done (took 47.917055186 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.557597849 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.163396188 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.327920094 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.561812112 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.550174756 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.554355928 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.863837981 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.561246338 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.552624013 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.549085509 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.063349148 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.56277709 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.583860065 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.333445846 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.555768918 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.555574217 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.5569689 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.547954218 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.181197596 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.561014654 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.864383295 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.561478823 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.867051936 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.563658542 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.549324604 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.549047347 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.553155965 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.401091252 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.575414485 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.062595193 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.404306257 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.86006982 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.346585 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.381375728 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.41584622 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.562070386 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.554895173 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.065620621 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.558129874 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.550849312 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.864843576 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.555461395 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.340617796 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.247820592 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.572099723 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.558167118 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.430233718 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.06775045 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.829085561 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.559942478 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.379452618 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.56241076 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.560525855 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.555643178 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.820663101 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.556273444 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.552517591 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.453504437 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.558007002 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.864495725 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.562202666 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.554417695 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.180187798 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.560347206 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.188302439 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.561570705 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.562762164 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.555234195 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.345465688 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.560844351 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.268098042 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.573758088 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.560479116 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.071960931 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.194343791 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.476615061 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.55700514 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.193102448 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.362683407 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.887789811 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.567083776 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.404878061 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.892175488 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.562075069 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.566885549 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.564369753 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.564483782 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.631825188 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.869875107 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.212948071 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.262810165 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.463110695 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.876211639 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.569503701 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.556378963 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.460169612 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.563946805 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.564695632 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.347697703 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.27107666 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.573809592 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.562706733 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.25741569 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.578516311 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.873379965 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.566186165 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.391469954 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.565094048 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.633127786 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.566205167 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.565687492 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.560011078 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.875880421 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.568137429 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.565232955 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.252383149 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.103785219 seconds)
  done (took 215.901967539 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.569495786 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.55253629 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.554179108 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.570997916 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.549631762 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.560236932 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.55215106 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.551860807 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.557702714 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.553268708 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.555832852 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.56071779 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.558805102 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.551109327 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.551615552 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.571269692 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.552915391 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.57788635 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.572102565 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.553597632 seconds)
  done (took 48.595382939 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.56702752 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.184312954 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.145949722 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.572915755 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.563566771 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.55987297 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.622394907 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.568999313 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.561148214 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.882853847 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.750831436 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.57443378 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.564143525 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.565577086 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.144015613 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.550082491 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.88720297 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.166507128 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.569092109 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.165882243 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.545387833 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.568197777 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.560445072 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.165788418 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.894459973 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.877586765 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.630154536 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.175064382 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.566775085 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.566604571 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.169083042 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.569502678 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.562073527 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.160580545 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.572030924 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.584693693 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.564248858 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.627093026 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.632143813 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.89418759 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.174910305 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.879883966 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.579945372 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.752177539 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.568973641 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.543766992 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.178483748 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.572644361 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.543490266 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.567435097 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.574895762 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.153671164 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.565286388 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.152732146 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.567106491 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.569713376 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.172755878 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.151125386 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.147920995 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.751046381 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.567622021 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.876305259 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.567695458 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.180390328 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.571404328 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.573087466 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.572022945 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.754561351 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.178053321 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.877903368 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.890340104 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.892077807 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.572875112 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.63277106 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.575496901 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.891455769 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.630911535 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.013165038 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.893058595 seconds)
  done (took 141.351749797 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.850609875 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.678204939 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.963163612 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.175836472 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.094041414 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.709106274 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.67690983 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.823692039 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.58122315 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.65017554 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.253487119 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.670677706 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.348447091 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.634950849 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.677536844 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.694480025 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.985905835 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.560022837 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.248416484 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.227761542 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.561117691 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.673703004 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.095213092 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.767098017 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.56417772 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.17008093 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.566415746 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.10923179 seconds)
  done (took 58.432202664 seconds)
done (took 583.969119616 seconds)
SAVING RESULT...
DONE!
