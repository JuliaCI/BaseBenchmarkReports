cset: moving following pidspec: 31885
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.285827493 seconds)
loading group "string"... done (took 0.620232574 seconds)
loading group "linalg"... done (took 7.575727202 seconds)
loading group "parallel"... done (took 0.157626128 seconds)
loading group "find"... done (took 1.115907149 seconds)
loading group "tuple"... done (took 1.802595861 seconds)
loading group "dates"... done (took 1.202650515 seconds)
loading group "micro"... done (took 0.23845815 seconds)
loading group "io"... done (took 0.908402021 seconds)
loading group "scalar"... done (took 36.758350196 seconds)
loading group "sparse"... done (took 11.472070349 seconds)
loading group "broadcast"... done (took 0.91686719 seconds)
loading group "union"... done (took 12.309660232 seconds)
loading group "simd"... done (took 4.332864058 seconds)
loading group "random"... done (took 8.459336182 seconds)
loading group "problem"... done (took 1.875186356 seconds)
loading group "array"... done (took 20.064503377 seconds)
loading group "misc"... done (took 1.787635404 seconds)
loading group "sort"... done (took 3.122244224 seconds)
loading group "collection"... done (took 17.08357367 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534180862 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129637955 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137832404 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.127108626 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15300366 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123678988 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131199015 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090637902 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.889414747 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156512991 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118878443 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414144068 seconds)
done (took 5.408126383 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176295165 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086700542 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088222572 seconds)
  done (took 1.257813828 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071652051 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13207768 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.076426147 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073084038 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072994891 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072790035 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072101121 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071761091 seconds)
  done (took 1.655832187 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078122783 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073487727 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071541096 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073389087 seconds)
  done (took 1.38132767 seconds)
done (took 5.638392685 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.775313528 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212562984 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189869149 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397595398 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132901194 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179074306 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.635414216 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.340687083 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192607448 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080873952 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11180539 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.349586298 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12562163 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.648369362 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080651445 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095079319 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.148105961 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.421819968 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072237457 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08731906 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094000182 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133855399 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090270362 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079148122 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149742751 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073025968 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138741551 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085306608 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071339489 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.218072377 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177749168 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65775533 seconds)
  done (took 10.362601391 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103720838 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102874463 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073972662 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129885593 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102770476 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075540138 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08087583 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073118662 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097661991 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133179287 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096093903 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110569094 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071211619 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074718625 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088403167 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214015539 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087412346 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086643554 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075556227 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083651165 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112808847 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082848996 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084713109 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084867702 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.134104103 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185178396 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101421989 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102906405 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071777107 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086441061 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119812454 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132469822 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071065971 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07099894 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129800956 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099190324 seconds)
  done (took 4.755992666 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.982644638 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145204343 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092953985 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13659149 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070552125 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112633471 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073763724 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085631777 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210965716 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.36138745 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.585091488 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.134594536 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114857222 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10722495 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072577147 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073474564 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073003954 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.489668114 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104598287 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111906523 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085509648 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075079879 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073285602 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070448313 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072065501 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069611702 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074192119 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.118176566 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079569352 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.305363426 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124944416 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073427671 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.939874583 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168924502 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070853997 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.243288452 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.174779285 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097855363 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144351974 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074204037 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070985138 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163109774 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07035302 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075506097 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07244321 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089008038 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107802318 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12580426 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.07057072 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0716574 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171515282 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.071116248 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084112405 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.148782074 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15821234 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073239839 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292984793 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094848932 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075371059 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071332685 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.199729884 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124539328 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096510816 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072990782 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072325164 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07406243 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073884863 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383463335 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071466666 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069861679 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072746964 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081564701 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069781343 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074021934 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073916489 seconds)
    (75/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.164452266 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078031988 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077501997 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09386835 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070788675 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080719597 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070648697 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071196085 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071547459 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087046326 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.488477799 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072278613 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073837614 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.070393231 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070825011 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096386952 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100565094 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072775828 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070746741 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104420542 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073762711 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071695494 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071649365 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087740323 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074768567 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117786548 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071362328 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.114945751 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10280406 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074790244 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103750612 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084110432 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072663975 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.442884633 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070711836 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072526999 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070324649 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072984541 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071637821 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085734043 seconds)
  done (took 22.397329873 seconds)
done (took 39.58240744 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244621626 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075531268 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074815147 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074774773 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07540094 seconds)
  done (took 1.711675313 seconds)
done (took 2.866718347 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124466861 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103306953 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069466461 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101806162 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069749741 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106818211 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104394945 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08184069 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103338861 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070156684 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100728108 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07005724 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069661612 seconds)
  done (took 2.342213966 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088705893 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089112486 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075578431 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087811461 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069453709 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087410619 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087100393 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093704593 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086329438 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07834436 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069298829 seconds)
  done (took 2.06196411 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087818813 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088613489 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075103087 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086892328 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071469816 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0865858 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086778334 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090182331 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08697525 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079222538 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068962414 seconds)
  done (took 2.054587262 seconds)
done (took 7.601267478 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081491527 seconds)
  done (took 1.218768541 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.530394047 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.632574487 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084236035 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109454836 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192314033 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11519048 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.241486489 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087770004 seconds)
  done (took 8.28383807 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.106798429 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074518343 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075409658 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074038682 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073799481 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073593539 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077591856 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075156227 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074691749 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076099519 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077202381 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074958777 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073461603 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076359945 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077233439 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076226849 seconds)
  done (took 2.449118865 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096354689 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095341789 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078178958 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079669634 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077350181 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076672794 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078632053 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078809472 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075367766 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076961043 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080084228 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077746502 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076377151 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068488576 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.079340215 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.08052081 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075409451 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078873584 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079347346 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080476418 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.080210087 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06868114 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076441225 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078502608 seconds)
  done (took 3.124611362 seconds)
done (took 16.222675577 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110297034 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073015083 seconds)
  done (took 1.323900737 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084352498 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084728592 seconds)
  done (took 1.320355873 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084479803 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069780134 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091679651 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081116734 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070267589 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070925986 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089380157 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070794039 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070095835 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070279906 seconds)
  done (took 1.919552498 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071847793 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079472393 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073725566 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08434608 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076970804 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068861414 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075290918 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072066096 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07971847 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067553939 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075091161 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087153596 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074896018 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088889382 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075402222 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073001667 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074706319 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071833082 seconds)
  done (took 2.524470648 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069716358 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070609833 seconds)
  done (took 1.297260808 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070667094 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067965369 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070700041 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070730332 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068186913 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067029196 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068318134 seconds)
  done (took 1.63581624 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.3889226 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119939389 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.305169328 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077629715 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08579046 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257672925 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071685958 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076642133 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076577256 seconds)
  done (took 2.649940572 seconds)
done (took 13.828088327 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085555757 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092501658 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099961994 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.381984851 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097281399 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072319936 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118465147 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184276183 seconds)
done (took 2.297521957 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218082539 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.659359766 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404655536 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208218913 seconds)
  done (took 2.430106329 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343597922 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092920329 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065651637 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.072990046 seconds)
  done (took 1.740651974 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071798986 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075230998 seconds)
  done (took 1.311419714 seconds)
done (took 6.863687918 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072369544 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.185895036 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.069307597 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071365645 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.069224047 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06921175 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071335564 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071480484 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090948262 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071527705 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.07126532 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06908456 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.070999115 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071259284 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06903855 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068800473 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071037127 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069116587 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069679464 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.068843084 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069177746 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071182545 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069194466 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069084106 seconds)
  done (took 3.011863106 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087279412 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071145611 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075470787 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075245905 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073613846 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07554579 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075275792 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071266998 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075399836 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073184776 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073264668 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073259144 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07356496 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07319922 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073336968 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073283308 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075468644 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071275112 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074228285 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073515322 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075579556 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071270537 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073423486 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075274388 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073237961 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073365235 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073501753 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071236455 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075661426 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073020248 seconds)
  done (took 3.395464694 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075687687 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068314881 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069282282 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076002754 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068180851 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069385847 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068303735 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069064572 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069039998 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067826324 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069090801 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068153364 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068081741 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068792338 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068871966 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072628659 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084313061 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068052947 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067924269 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068708622 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074661085 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068223418 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068124694 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068075884 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067964768 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067945087 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068618507 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067858044 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068756614 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068406185 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072007851 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072213274 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06773568 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075671418 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07231545 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067949819 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073108023 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068215571 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.069214771 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067953073 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067931968 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068082947 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068360694 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.075790846 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.069013338 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.070250348 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068235405 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069267398 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068813717 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070194033 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068551258 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067953379 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070136779 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069478867 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073105426 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067867706 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068786412 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067839777 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068518459 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067726983 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067867562 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068009582 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071136267 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068760971 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084582132 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075690343 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067775965 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069723467 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069301146 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071698299 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069910822 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083539635 seconds)
  done (took 6.228602407 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092104597 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091051679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071043242 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070325514 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066385281 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068688652 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074269165 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068931925 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071486118 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087920301 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068952282 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070870121 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071220057 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072938272 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068997714 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07078903 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077041194 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066580119 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068774469 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072787079 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0691619 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074259197 seconds)
  done (took 2.803770038 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152422179 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074969662 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109576358 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079213212 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074810327 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079454537 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075056196 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074665188 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07460938 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072586305 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072749047 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074762327 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074486231 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072300804 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072508448 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072459757 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074452235 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072505882 seconds)
  done (took 2.632140521 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08302536 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071068045 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.092421014 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070805956 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07101719 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073428744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075547772 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078718924 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073356294 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071368453 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078679247 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073431921 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07364569 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071873059 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073485559 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071142365 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073395984 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070932724 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07848422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075254251 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07519325 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078318165 seconds)
  done (took 2.834900283 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084833204 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073162337 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085718222 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072991028 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066315298 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068889762 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.075094682 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071502546 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075662541 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073032247 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070751153 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06878085 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073257725 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070844507 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073114857 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07049412 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072778504 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070753348 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072870422 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066116006 seconds)
  done (took 2.637617624 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088134859 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072466124 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072390642 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078979668 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072759942 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072195028 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078422505 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071912777 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072487704 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092608142 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072334003 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072491376 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078498778 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078839364 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072481284 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078590945 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078564758 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078804225 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072552584 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072209426 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093413259 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073089663 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078245531 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072601106 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072086491 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072487139 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072780595 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075947922 seconds)
  done (took 3.32073047 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072036305 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071166117 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068702948 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068869988 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069283486 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068574967 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069125144 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068653588 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072148672 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069186024 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071464088 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071799574 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071060894 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071155369 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071082334 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071131981 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071665754 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069206562 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068889739 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069565524 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071551533 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071530525 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071508656 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068886336 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068909039 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070910278 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068893661 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069596469 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071205845 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0692211 seconds)
  done (took 3.293563502 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07972458 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077725842 seconds)
  done (took 1.344305244 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067537766 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08507419 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067648452 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076616267 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074592579 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071827624 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077559063 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07408312 seconds)
  done (took 1.777225142 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086759536 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080283261 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071275118 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081283586 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080137167 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087083227 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127664977 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070716355 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078269456 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.069895903 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083686031 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071089606 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077860289 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072366727 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077210446 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07833924 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068312443 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075085425 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072523774 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069312045 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070996491 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079421925 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074787521 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066557184 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072509654 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094014658 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081797587 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070322015 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074362029 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078958894 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.078162017 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065261815 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070886978 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070937333 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069299463 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079556191 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084879208 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075238417 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080329939 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072140351 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078924103 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066161299 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07585965 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07856837 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082331169 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07108234 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071712007 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066599936 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070160257 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074183097 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066662651 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072833898 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065840227 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078733615 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075069254 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081796315 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069889534 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073856933 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074729273 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074364718 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078622356 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.074137244 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074580802 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070380543 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082184395 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076666092 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079000717 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066534427 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065824815 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068964775 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080728624 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094776684 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07710872 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070883168 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071043644 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068435835 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07468662 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071367516 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07588929 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078017309 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070278703 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074654826 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078567676 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072419897 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074103111 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076662842 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.0693603 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073067767 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069330994 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08655434 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.072018745 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06903382 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.070104881 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080932487 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074477925 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069917465 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06953947 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078121249 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064842062 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069967814 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070322498 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071894063 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079914029 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073161485 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073683526 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078891487 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076840871 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071419935 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072767032 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066817667 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.198501639 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072830649 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081101818 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066783561 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076017582 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074199995 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072092467 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080438148 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070677576 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.072054054 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080431921 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078818827 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070134826 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068293044 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075001342 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.07062068 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073416411 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079771925 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069807366 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066526247 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066592347 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074776222 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.071442134 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.076143402 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075653042 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074415071 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066081955 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068590461 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075023811 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.08023659 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072406148 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073030568 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077332401 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073186939 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070229145 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077842533 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074581724 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071520823 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076814331 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072781325 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066499092 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073224903 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074345751 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069657838 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075996887 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072824563 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073998765 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070952694 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069885254 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076435291 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071501606 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071414609 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072246371 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069815523 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081815768 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07368518 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066267885 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.069112947 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077639348 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069962006 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070618536 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070918309 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073976533 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071204526 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069459597 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07044192 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.074331589 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078394587 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073579521 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071331005 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076786446 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084160945 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070414074 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074058651 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070198494 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071403206 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071361707 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081390727 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076869924 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074714715 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073522636 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068028544 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075858224 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079025764 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071090557 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068473371 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070963135 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073633347 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077474797 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073783156 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070844566 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068962738 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073157379 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07296365 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07399569 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070182487 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.071078184 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075782145 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068878533 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075222473 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070649285 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081334504 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073736457 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065521782 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072479611 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06812353 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077420785 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064788355 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069203735 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070200404 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069873697 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068472098 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072442372 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064269331 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.208811733 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081628673 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.074496721 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.073216876 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.072254552 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080161859 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074894599 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075694435 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07661452 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077932795 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082535239 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071319976 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078853642 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082156635 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.07114206 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065768549 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07702609 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069929835 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.0695484 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070381132 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069154516 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075395306 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078131753 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077954956 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065251123 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074868502 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069765444 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071291936 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06637351 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076054219 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074890028 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072961115 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078270979 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071298604 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070965694 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074779896 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070059866 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071517876 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070803062 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074382149 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070617513 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073255714 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071306092 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.0743343 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070962926 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.069461403 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072923543 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070786109 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072121581 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076263958 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070616463 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072142843 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074325419 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071207211 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072510714 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072075626 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071082872 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074347343 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072937531 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072378977 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074163921 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066661956 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078997511 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070655515 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079228128 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072135427 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067775236 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075870994 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074269669 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074790243 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.07095415 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070964987 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072937163 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070162427 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073914358 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078418674 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070090636 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082125856 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078130801 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072394457 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07448491 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07249875 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072852511 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070885042 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072738618 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070901421 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071987237 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.0702752 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075420327 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074211694 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071861222 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07288145 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070938791 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071653691 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071380784 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0653921 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070818299 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070736892 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070135269 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079574449 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070335829 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070818094 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069402654 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070724569 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069199495 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067404655 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075915826 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076299063 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069862855 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07648829 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069746517 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072429584 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080573513 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064363766 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067668665 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.201613856 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.072338326 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081357098 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.073666156 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.082610737 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.073471452 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072406326 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068658194 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071773602 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070583153 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065922647 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068816708 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075124116 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071340696 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07111901 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071030323 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074213963 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0717138 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079957866 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070797347 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073315815 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070544561 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068700623 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071223672 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070955501 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074190848 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071254966 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069990609 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068387638 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070428495 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072670547 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073160516 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070631767 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073186149 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078548539 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070560671 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074855807 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073270877 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066320234 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074385303 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070300148 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069968471 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070714411 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077863105 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075078137 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071510317 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081307181 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070143463 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07246163 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070559334 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068670157 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070553162 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070252344 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070628487 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071524569 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071439703 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079329918 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068834263 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074375647 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072565171 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072471703 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077257369 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071049932 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074842418 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075765797 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07264218 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073687396 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080342317 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074217877 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074801315 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07184509 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073437239 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077486036 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071023581 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07816474 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072654859 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071257241 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073384004 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070230428 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070644052 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07068581 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070199521 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07667608 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071114316 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070847885 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070927903 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068314164 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.0728966 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07255354 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079127813 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074166822 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074450617 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065700662 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068246276 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070849216 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069653263 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073044652 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073666952 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076818311 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073380602 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071835647 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069574814 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080057478 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076872776 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074910911 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069529457 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07463773 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070566969 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073019324 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072057483 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07135227 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070795021 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074047001 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071839763 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069832792 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076616885 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073526683 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.203530198 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075408979 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074542563 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07397874 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.068403153 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.07226545 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074820399 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077665967 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074659736 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071504362 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082916591 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069921095 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072806129 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07380463 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070498119 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076999059 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066418321 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.074387334 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07233841 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072119224 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06671662 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071603654 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069865721 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073988105 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071347842 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066250594 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081471977 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081148533 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074725523 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070281521 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070011421 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066600026 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066916823 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071147722 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071840293 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073373474 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080943515 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070811645 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.07108349 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066700172 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070725559 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074670971 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074909593 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068271464 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066475793 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071559027 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074260811 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07774564 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069970568 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070314771 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074864286 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074035071 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068881933 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073434005 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068009196 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075713872 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083384041 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070860661 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072954947 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.078060387 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079160591 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070835858 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066641461 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071201141 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074321569 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072479844 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.07148096 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071515303 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085587694 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075042801 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070841222 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06984526 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076996738 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.07115672 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079591948 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071433087 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071087666 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076402905 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073415196 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078277287 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075283857 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078335372 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07474367 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074707258 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070266787 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07259778 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069131575 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.070804937 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071624069 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071109197 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074899792 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.0766508 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070515869 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082013079 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080374583 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073158111 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068646847 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070703094 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070910497 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066425408 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071142196 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068970994 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069043921 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069027628 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069764408 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072454977 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075636657 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072511932 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070731525 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069717842 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065117556 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074302966 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072652361 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071728236 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067156301 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069276197 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.203759975 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077918715 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074736236 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071224507 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074533669 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.075093624 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073836811 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067312873 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079335201 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071036746 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073989969 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071207665 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071366304 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071791999 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075131831 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074636717 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072193783 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074667852 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075687805 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072328701 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068974602 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068525177 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076698914 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069554973 seconds)
  done (took 45.501374458 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104175286 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067541517 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066581441 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06626114 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076015443 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067279969 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066459478 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067654555 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067442136 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069484617 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066508674 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066452071 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073972141 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081189965 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076235995 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071101987 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066797968 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067746563 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066961238 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067524651 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073991528 seconds)
  done (took 2.768086834 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076582631 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081505891 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078455649 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087271493 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075300617 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074587095 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078678559 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07449513 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082678992 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076788708 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082235182 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074354089 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076795404 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.0767973 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076768753 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074338305 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082491268 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075437726 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074210512 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078915643 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073989523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078795217 seconds)
  done (took 2.971226697 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071173729 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070387821 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073212334 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065659245 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069999882 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065818866 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072967052 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06839462 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072878544 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.0704495 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070978612 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070138992 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072792829 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065858942 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.079317162 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06855216 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110767556 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073064779 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070187964 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070786968 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065866194 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073075205 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065977686 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066799236 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070704663 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07320915 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071082061 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068791386 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070878427 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070784502 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070274909 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068918809 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073041691 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071692793 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070401731 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070698466 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072263051 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070149649 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066141666 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068419535 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072257237 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066157993 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071033749 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071963993 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069220879 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068678879 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073632144 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070306334 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065907913 seconds)
  done (took 4.745034453 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082446183 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112520413 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072283217 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092164065 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083433424 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076242425 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074918278 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093372952 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067811064 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068454237 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084389352 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082103781 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069822649 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07420452 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076939775 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069790642 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070690295 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068665406 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073220893 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06935479 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073107135 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076469279 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083033467 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081396645 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073516707 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068703557 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06936267 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074030144 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080971484 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073545292 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073903066 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074812835 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084178724 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074786632 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069187996 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072188025 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084821547 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070114814 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072745977 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067916629 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072011564 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073549142 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076440363 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084472242 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069913593 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074900423 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06988128 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067308077 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081083851 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072090382 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076644086 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082087637 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07369173 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070279493 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073599916 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083432957 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069818904 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06845824 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073069975 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080316436 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067806069 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073645257 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081407402 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.072209399 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075832322 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081914992 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074350059 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073243403 seconds)
  done (took 6.539611534 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079589129 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100963615 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086209954 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086314197 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080145062 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080004858 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080640404 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080224547 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079666103 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083706683 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080157723 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.127910619 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075760258 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082028179 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08014084 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079940431 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080450313 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080686838 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080221245 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079953238 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080113268 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086525567 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080205044 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086423535 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083072899 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076077704 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080339268 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080145687 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08618886 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07985214 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082947931 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080451704 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080412664 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08686592 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08301944 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080268541 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070322355 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08013211 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080555411 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08015345 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075872895 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086648879 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07980356 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.076146323 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080351964 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080462327 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086447477 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083337292 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082066749 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083986351 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080225912 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086331762 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080093839 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080390439 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086512622 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088688099 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086367575 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086409374 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080364315 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086118353 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086344081 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088876332 seconds)
  done (took 6.432104555 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085366312 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077507006 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08877746 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066782835 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068532802 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076658989 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069168195 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06926971 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077038353 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077680674 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095397086 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076032843 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078695534 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078697736 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076369617 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078505699 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076325609 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076339899 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077070163 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076271715 seconds)
  done (took 2.838303892 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080300285 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087925791 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071242875 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076317903 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073885412 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076003058 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073506208 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073843562 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071770524 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074033829 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07949606 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079700131 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071494769 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075672706 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079628687 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075802417 seconds)
  done (took 2.518154024 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087937517 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07591991 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082469003 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070559932 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071590299 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066407677 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069739217 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065750158 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066961487 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082532809 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070250015 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081203462 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070187211 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069148303 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066990197 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075649171 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066287352 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067617968 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06985345 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081058525 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073989452 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069010286 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074045729 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070405521 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072621915 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074351084 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069270751 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071238969 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067559148 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070579007 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073424849 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073932195 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067291004 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068228984 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069588721 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067367619 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069868766 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070584005 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075958243 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070007334 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06886148 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072648698 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070264216 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070835305 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067015295 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070549752 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06676376 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073107456 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067609358 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072999353 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069942485 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072507431 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070494324 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077438274 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072987409 seconds)
  done (took 5.236691037 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084574478 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073990034 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06551886 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068828287 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074248607 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072306887 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074705166 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071669714 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072437501 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068510694 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072033432 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073393261 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07241162 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074756655 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072552285 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074461821 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066378094 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071737571 seconds)
  done (took 2.614194215 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076943192 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070999181 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078304052 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071370576 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071026234 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073290592 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066410398 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069193363 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068812176 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071180564 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071173536 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073373423 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069433374 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073388086 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071394606 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071238213 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073261864 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068855629 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0709947 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066761605 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073660537 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06887342 seconds)
  done (took 2.870617437 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098049847 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088430177 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142618483 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084190016 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091507884 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076914127 seconds)
  done (took 1.883758513 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096553322 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104290214 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07100536 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073683639 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079462777 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074481047 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07462622 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074964072 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081705826 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079858291 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077710016 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081785761 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081582471 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080764681 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079070225 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079811478 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074652686 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075056852 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071545049 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086246799 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074808119 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081674598 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074947188 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074347218 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074571357 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081051764 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08215789 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079408522 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07470796 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082005219 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079575951 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074774359 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081989827 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079909916 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073986768 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081741887 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074801778 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086559985 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07987927 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081549515 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07381479 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079991355 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082022691 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078361644 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082129339 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075207764 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078760716 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075420773 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074872987 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088148473 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079784318 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081013247 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079652428 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082351959 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081768111 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088475096 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079587422 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081023404 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07963094 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07961061 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081289597 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079563725 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080904234 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07985276 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08011964 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081203332 seconds)
  done (took 6.564036356 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107644926 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071791822 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075250882 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07936475 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080855596 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074714467 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074886533 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074893432 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075227541 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072119927 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111568097 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075148995 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080901609 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081117829 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074748232 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074926539 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07462364 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081109729 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071949241 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088229665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074615266 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081122104 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081404612 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081499287 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079300505 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079861076 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074867732 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074801193 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074703384 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074920811 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078865737 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074882698 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081391066 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071881394 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081322315 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074814143 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074905772 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078783313 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075032903 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079963838 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081161288 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086868653 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074566129 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074853499 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0795727 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074749594 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074647146 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071800533 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075170348 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072051226 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079609643 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080030872 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080069272 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081143018 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0750813 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075026697 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074975645 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075207114 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075169476 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080014795 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081440409 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074973518 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08860777 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075039939 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074884406 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081569613 seconds)
  done (took 6.495566672 seconds)
done (took 134.423070092 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197952637 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174593113 seconds)
  done (took 1.667211058 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073794382 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100963974 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081174628 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133850581 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071589184 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105372408 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104482015 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081839033 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071114713 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071820686 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071282793 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073532159 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135962087 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071808653 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071592586 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073828089 seconds)
  done (took 2.705874651 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102276503 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159878257 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105740343 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070491912 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101751828 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076807684 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072794394 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079786432 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07542534 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071267056 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077279916 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075262376 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071042421 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074628128 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07592215 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076727093 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070720063 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077311806 seconds)
  done (took 2.829733343 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100885238 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094534452 seconds)
  done (took 1.50961279 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162320692 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138242199 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206865921 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.340457554 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15762381 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146352192 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146266967 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144659578 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11667544 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139657716 seconds)
  done (took 3.010643045 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104360227 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153277846 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276089215 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120285728 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077834995 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095215649 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122266397 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083654465 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083958605 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083967077 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.0833706 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080456263 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103121834 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07799755 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079685083 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080230648 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106618409 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078669767 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079985365 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079544194 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105252415 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071082809 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078006636 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07911818 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081645235 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081094145 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07141942 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071540466 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080118374 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079982667 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081127309 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093690873 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081440835 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105963316 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076597376 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107068683 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080953947 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077680556 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080023788 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077732324 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082040333 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082102919 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078546993 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080655672 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071414786 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080982762 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071529651 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071577822 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081795054 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072088078 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081490447 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080650977 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10546373 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072165904 seconds)
  done (took 6.161709382 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111805128 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111006142 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074816602 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116442953 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108601584 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074942239 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109510148 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102510967 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111801179 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075247039 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073154449 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074912675 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082959156 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085040507 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119904483 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111332915 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077296984 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073883803 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111211897 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111609712 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07374769 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105521381 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101501321 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110240491 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073268217 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074664447 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073462282 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074760756 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079839138 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08171383 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073382029 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082817414 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087153173 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081223981 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072893306 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07325903 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073245402 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08185476 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0824602 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082275336 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080595051 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072480112 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073328785 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074659935 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07388839 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072369347 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08109229 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082625721 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080946597 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07316793 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074265283 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073202443 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074377496 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081948032 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079910586 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.0828054 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08265928 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07348881 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072973515 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076121193 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083575764 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081873134 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08195515 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076318601 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082601562 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073260526 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083643851 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086753279 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073882014 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074042321 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072622719 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073286725 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074080654 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079865588 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079676552 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074211903 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07344095 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072995481 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081763891 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080162867 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07305612 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079412279 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07174613 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072806881 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074369751 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074357234 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079795003 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081921686 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074138441 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072820458 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072483929 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072245096 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071395362 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078678544 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080285895 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079932035 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079046031 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072825079 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079651157 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078985956 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073482116 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079749884 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071813298 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073323582 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072949778 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079107609 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078230046 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080280293 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071763281 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07167906 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078597697 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081697127 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07272813 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078995993 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08090066 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079146048 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071133824 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081935318 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07334951 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080546034 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072730402 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081017203 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072085981 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079295559 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072208893 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071005745 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071846441 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079377689 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072754775 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071700446 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072505325 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072125887 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078713116 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082387396 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07331354 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079156714 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079113585 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072681947 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079667703 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071691536 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079974395 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07159377 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072624763 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070613162 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082097365 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071983874 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071481205 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07133471 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080111348 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071684012 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080405176 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077730135 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070908407 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081864203 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080192004 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075897434 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079333658 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071327697 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070353232 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070579821 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07076937 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076152883 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077640156 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071862008 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071688516 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076480651 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078731505 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069602688 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077161109 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076412219 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076417696 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070497746 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070635972 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079673299 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079869336 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076724001 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07767374 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076866508 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07060501 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076640226 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077204865 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070380075 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082290243 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070657804 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081086225 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077508112 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075480957 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077337831 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079095929 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078637654 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07904811 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081130921 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069955489 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07122613 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077069803 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070323397 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071107672 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076276836 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07164274 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072023878 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081072475 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070885607 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.320220705 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074797671 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083593533 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075165483 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077620582 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089384201 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07739736 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080490212 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085143444 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076755011 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084360026 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086869253 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084477411 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076808374 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078294963 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084749685 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.084694605 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076398447 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075884059 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077239697 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.083015224 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082781847 seconds)
  done (took 19.231168454 seconds)
done (took 38.444667176 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.202626788 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15430214 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.16607316 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119681163 seconds)
  done (took 2.070082668 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11599088 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104448036 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095405254 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.073230845 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101362613 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.072865584 seconds)
  done (took 1.936593818 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.281526199 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196463253 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180501368 seconds)
  done (took 2.02819379 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205586354 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190340918 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.441556655 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.269843652 seconds)
  done (took 2.577795848 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142685051 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090254856 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.073329141 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089475373 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131140773 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158070844 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100800088 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125399669 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084724407 seconds)
  done (took 2.417228098 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148185697 seconds)
done (took 12.558189489 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.227975704 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.129496581 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.191666093 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.216031748 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107864666 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097514149 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.102351631 seconds)
    (8/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104472505 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.088857902 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073987301 seconds)
    (11/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.182671119 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.162653738 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.206016554 seconds)
    (14/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.085833734 seconds)
    (15/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.084244679 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081468713 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.080040534 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.206879004 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.117289602 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08248527 seconds)
    (21/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.343604314 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080435317 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094723974 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.212669652 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079716998 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133503581 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.18008243 seconds)
    (28/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.247185331 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096683725 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.08011973 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088490616 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.13124576 seconds)
    (33/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.116968015 seconds)
    (34/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.19469327 seconds)
    (35/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082739076 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.252944889 seconds)
    (37/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.171534432 seconds)
    (38/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.081798318 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187042339 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.115111212 seconds)
    (41/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.070108425 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.080261867 seconds)
    (43/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08985456 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.0703025 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094752583 seconds)
    (46/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.079658595 seconds)
    (47/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.122629987 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.15985563 seconds)
    (49/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.083214972 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 0.07308635 seconds)
    (51/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.177397873 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.088547931 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.082419327 seconds)
    (54/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.172158805 seconds)
    (55/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.17320935 seconds)
    (56/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070999723 seconds)
    (57/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079746508 seconds)
    (58/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.162205106 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.15407385 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.070177979 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.203630873 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092407633 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.082783576 seconds)
    (64/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.199141218 seconds)
    (65/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.109739144 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.167442577 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094811179 seconds)
    (68/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081421691 seconds)
    (69/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072200224 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084992281 seconds)
    (71/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.165243224 seconds)
    (72/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.082156601 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115927443 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081553979 seconds)
    (75/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.058319553 seconds)
    (76/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074194864 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086151215 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141944064 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095016839 seconds)
    (80/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.310486669 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.190323011 seconds)
    (82/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079818123 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.059172512 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.072873988 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.079665561 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094340939 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074959284 seconds)
    (88/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080755313 seconds)
    (89/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.117709917 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123401325 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.082848113 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.098854776 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159796914 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09786468 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.058738898 seconds)
    (96/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127193467 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071997549 seconds)
    (98/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.057771231 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.072181553 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.059474519 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09350183 seconds)
    (102/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079232687 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.0591372 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.198395962 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122058027 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.175634602 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077664428 seconds)
    (108/309) benchmarking ("sort", Float32, false)...
    done (took 0.139239667 seconds)
    (109/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.057172435 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095375032 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.071268823 seconds)
    (112/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161811514 seconds)
    (113/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.057769948 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.086391542 seconds)
    (115/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.168586489 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132965487 seconds)
    (117/309) benchmarking ("sort", BigInt, false)...
    done (took 0.196642053 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.084605788 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.116989918 seconds)
    (120/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.069789815 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.071306248 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.071700901 seconds)
    (123/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.058081702 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095327706 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184143779 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07855126 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.181733824 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079842855 seconds)
    (129/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.079255392 seconds)
    (130/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.057270505 seconds)
    (131/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072115025 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058840157 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.079558337 seconds)
    (134/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.106802439 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.156384639 seconds)
    (136/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.060152683 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.092232342 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.197159272 seconds)
    (139/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.069550072 seconds)
    (140/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079391007 seconds)
    (141/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079797413 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.057126074 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131952522 seconds)
    (144/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.076048077 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172100181 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077764135 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194847639 seconds)
    (148/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.075606865 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077232593 seconds)
    (150/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07653498 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.205401526 seconds)
    (152/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.164063377 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070809318 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090063981 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078353483 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076570759 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.170976415 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142048746 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05719096 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069324176 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070402726 seconds)
    (162/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08510698 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17670102 seconds)
    (164/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094017602 seconds)
    (165/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067979352 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09162618 seconds)
    (167/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070623021 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116310819 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071390069 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148926993 seconds)
    (171/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.057934014 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.174848203 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057611513 seconds)
    (174/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.151216561 seconds)
    (175/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.057566168 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070185398 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.143671239 seconds)
    (178/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083676263 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094365334 seconds)
    (180/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.058020278 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078529437 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.241078857 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.083491408 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.082786269 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.082107818 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079523014 seconds)
    (187/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.059590271 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136708848 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.095681586 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09316579 seconds)
    (191/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.061824742 seconds)
    (192/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.059219741 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093731315 seconds)
    (194/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.121584608 seconds)
    (195/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.081863136 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.074282179 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.072030471 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099973529 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.079236542 seconds)
    (200/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.099333282 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074478689 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.072350994 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.057566074 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05771456 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096711491 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.069032012 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078606667 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.071712592 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.075405901 seconds)
    (210/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160161434 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.198377583 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.058905598 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.071692931 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078887127 seconds)
    (215/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.058271223 seconds)
    (216/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058991653 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071410694 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084334718 seconds)
    (219/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071823251 seconds)
    (220/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.082781098 seconds)
    (221/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057447632 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080499138 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078312488 seconds)
    (224/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.057274569 seconds)
    (225/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108499208 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146041658 seconds)
    (227/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078244086 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.058692326 seconds)
    (229/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.073964065 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078638098 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.057906591 seconds)
    (232/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073038438 seconds)
    (233/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.057412167 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.057399057 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071374046 seconds)
    (236/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07375433 seconds)
    (237/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.060277919 seconds)
    (238/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.07030976 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070987376 seconds)
    (240/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181852239 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.057461346 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18415194 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121914121 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.057394649 seconds)
    (245/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072672095 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071584643 seconds)
    (247/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.058348296 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057421474 seconds)
    (249/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075705317 seconds)
    (250/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077597914 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.071109416 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057628728 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080017823 seconds)
    (254/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079321866 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083346176 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152971298 seconds)
    (257/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.057314725 seconds)
    (258/309) benchmarking ("sort", Float64, false)...
    done (took 0.136997846 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070009553 seconds)
    (260/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093462416 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059540817 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079992798 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.059609787 seconds)
    (264/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072075117 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07012318 seconds)
    (266/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074680253 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091592133 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.057388703 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.060154613 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095489931 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096263897 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071020682 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078718587 seconds)
    (274/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05836231 seconds)
    (275/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074548221 seconds)
    (276/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079739859 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076931399 seconds)
    (278/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081299761 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057794115 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078293977 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072344295 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.07078881 seconds)
    (283/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.058696796 seconds)
    (284/309) benchmarking ("sort", Int8, false)...
    done (took 0.149350444 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070684008 seconds)
    (286/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.057751897 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073704884 seconds)
    (288/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.057684674 seconds)
    (289/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.058472146 seconds)
    (290/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072033932 seconds)
    (291/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.058684347 seconds)
    (292/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07171722 seconds)
    (293/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.107561698 seconds)
    (294/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.069571133 seconds)
    (295/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.058862766 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.072788684 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077561506 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056629312 seconds)
    (299/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.057327299 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.12900285 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.119816908 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077020343 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172613513 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076559534 seconds)
    (305/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078242166 seconds)
    (306/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.070046853 seconds)
    (307/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.253295203 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072407906 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.072735214 seconds)
  done (took 32.853108683 seconds)
done (took 34.238533416 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089170706 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099326316 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.082146086 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098858399 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.087893934 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083324594 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079673401 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.084823953 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087327249 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088413669 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085521033 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061988117 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080928809 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080976823 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080830967 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096385031 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085606141 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.080147921 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079833276 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.07064841 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.080139963 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071688903 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073309924 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061822992 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.085268905 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078328637 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080657581 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080449073 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071449782 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071866747 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075255873 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079951011 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071180676 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085416731 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079790511 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079275981 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080956406 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083303853 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073336368 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071787883 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080931949 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071244219 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.079454409 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079479796 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07821878 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077631961 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079658378 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083226868 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095845353 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073402376 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081429796 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081823219 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082745982 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.078847444 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075913761 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079560175 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077198175 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096765987 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079971243 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073381467 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.081114142 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080193734 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077480019 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079421645 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079325097 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081756186 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082860428 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077519862 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081098501 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077781133 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070831659 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079257962 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075653812 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.07461566 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082183954 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083792712 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.070189557 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077768757 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078603874 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079331654 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070665987 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073792583 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072968728 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078079484 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073550016 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061493611 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075591041 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078520587 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070202152 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079911109 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078521095 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078659057 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073212081 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083464744 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070508036 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076901459 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071422947 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071319398 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072992642 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.076070477 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070562019 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073475514 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081793712 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071992657 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077335444 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083921874 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071388894 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078444572 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070273027 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070582865 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083947804 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.081456043 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.071555518 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073198403 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069909762 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078240316 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070045437 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070738348 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070307317 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.07093645 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07726793 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070953129 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072820374 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077711138 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.225298381 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072742495 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077395341 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074466864 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.073160584 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078149885 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.072806391 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072427503 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073743539 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069022358 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073823141 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071482451 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07911691 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07502481 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.080023054 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.073288484 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.081070593 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076872662 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07785386 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077905561 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070887126 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.0665534 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074485579 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073266746 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073264997 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071825711 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072775553 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070849437 seconds)
done (took 13.368589976 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072624467 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.136069347 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096874351 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099130637 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08946014 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072332988 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080775146 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099707525 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072979932 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102157986 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092430153 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091140817 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11341726 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070008774 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07127724 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075716376 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072844916 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084441798 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100167636 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091981813 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115357364 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070716382 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095067754 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09215047 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09048275 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096763471 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072668451 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075457696 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075386627 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103937157 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093694336 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075337843 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07215877 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102423533 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095799154 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086160556 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072305659 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086516214 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071863467 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071483952 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073522867 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099900634 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083718219 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084341563 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075918943 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.082276725 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072809014 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086073784 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091990603 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082544439 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088460318 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101911056 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073693685 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088201903 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070214979 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088692896 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080165889 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074387988 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072485968 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079173479 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071947937 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075759243 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084380245 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08348783 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075506307 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087495341 seconds)
  done (took 7.070049301 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089050791 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101972606 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087850216 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088110729 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071254845 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071836264 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071773869 seconds)
  done (took 2.060474687 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072484344 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091899067 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092603226 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092727612 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086353402 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095314357 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08132095 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07220072 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095819838 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073124497 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092134098 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102250824 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074697115 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.084665406 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094086475 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072175284 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094167705 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072110322 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074748166 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093971721 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077113961 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.099901447 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079261266 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072071894 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084932043 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072464537 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117187062 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075614368 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073828502 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075288643 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073141277 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110803525 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084672842 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079497175 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072606453 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086766113 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086111622 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075174118 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083026551 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081593444 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085042812 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07252334 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073138006 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073793617 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076193773 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082568927 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073369512 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076287434 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074951079 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091054586 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070815486 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084601659 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074482627 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077527897 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073831125 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07850328 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082291651 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073088801 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091435621 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07434373 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087685811 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086504719 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085399674 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087278257 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074395387 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084856961 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08508238 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074796883 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07406668 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076002557 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086496293 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070833953 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074019863 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08201532 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074341763 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093857453 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09409196 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073567894 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085201225 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072538489 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072694314 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072323898 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093723601 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077301468 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072655576 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076402811 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076310874 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075201764 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071018628 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076093578 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070058579 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078320645 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075092024 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075262251 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074409101 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086784353 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075113939 seconds)
  done (took 9.314943487 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075135838 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073919074 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074551326 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073593027 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073699511 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073458322 seconds)
  done (took 1.949134217 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094059492 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073655875 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08533987 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076522417 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10808112 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090777235 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090882878 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081728619 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087995027 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083466105 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090314922 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091792395 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095125093 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077052886 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090603033 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076081435 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091068536 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079409548 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083552034 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077532536 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090081725 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077434324 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078261439 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085227478 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080469835 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076405887 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083479966 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083601283 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082561643 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081441035 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076863442 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080128427 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075274941 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081108137 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090922726 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075322053 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079391218 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081929958 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076721493 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080133775 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091607309 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077388165 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078690286 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081852948 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081545989 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075522168 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081631549 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083700448 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090722158 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.08201113 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081604432 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076278623 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080447895 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.082143032 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075414614 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081459209 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081611743 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091088323 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076874166 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075146051 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073731901 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080923162 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081188684 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080847271 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081816528 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.08138698 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076071385 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077535285 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077276332 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076018884 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081636534 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073707481 seconds)
  done (took 7.385111203 seconds)
done (took 29.244362689 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540131199 seconds)
  done (took 2.0000545 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610212879 seconds)
  done (took 2.099587593 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.475432964 seconds)
  done (took 7.959632938 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.373513479 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.482544733 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.716602732 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138034131 seconds)
  done (took 3.233706308 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.727459356 seconds)
  done (took 2.226103426 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238651179 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22951988 seconds)
  done (took 1.97568502 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37943627 seconds)
  done (took 1.868514394 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.132335809 seconds)
  done (took 2.624835616 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.241322353 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180640198 seconds)
  done (took 1.915181298 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.443604243 seconds)
  done (took 1.934588229 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.837058136 seconds)
  done (took 6.332423215 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222424553 seconds)
  done (took 1.755156187 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240027777 seconds)
  done (took 1.731558805 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.740095633 seconds)
  done (took 3.232009754 seconds)
done (took 42.388403921 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087617318 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090368293 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090153132 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086090294 seconds)
  done (took 1.827311074 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081317975 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077287113 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080823417 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077238368 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080831492 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077452815 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079212026 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080863371 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078270461 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078223135 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077977521 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077780609 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079945905 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079255238 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076206804 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079960818 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080614946 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078364242 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080535106 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077872188 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076499481 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079903577 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080203051 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077101559 seconds)
  done (took 3.386422122 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082879172 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078664894 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.081012455 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077369812 seconds)
  done (took 1.820307717 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083495398 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094054779 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092835736 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084052482 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095409314 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090622011 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074910209 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074603672 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075866748 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083149748 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073361723 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09931422 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092355401 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082960562 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085470363 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070539556 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072922971 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091422483 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084128729 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08419343 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075716065 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083821132 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073622487 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093108809 seconds)
  done (took 3.50847672 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084957552 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105021973 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084727866 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094948573 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096509587 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070959048 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084495846 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097287701 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130769082 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070658643 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076967824 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071048344 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079602328 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073192304 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085087925 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112844048 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116467377 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074781196 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10263176 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070820701 seconds)
  done (took 3.290334891 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077266597 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074414028 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075809351 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070603446 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082460801 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078120161 seconds)
  done (took 1.966793251 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07294701 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072640721 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073006266 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071556557 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076769606 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072608892 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071358736 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072686824 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.073170342 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072821734 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.073266424 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071522338 seconds)
  done (took 2.378078676 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185471115 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073603152 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073386472 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070799978 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075941299 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.07244887 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086038967 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072798411 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096547262 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072347478 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071890304 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073718177 seconds)
  done (took 2.530129792 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195797936 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080592573 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227979042 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152948897 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110467478 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114737375 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114182696 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114125151 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138294782 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101279097 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161586561 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16279834 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108575506 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137905868 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093521324 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106084512 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151612235 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164440783 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108307884 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163068222 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142765413 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128657916 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146973499 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103967873 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107281599 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119986423 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076374619 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083662487 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165508887 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131330352 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141408458 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113197195 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09814932 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171036 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163715878 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138312527 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14878934 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087323708 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105515237 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13347126 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19957346 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091799395 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300026828 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114576604 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085482576 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134133801 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120468613 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.1221434 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108104677 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094102262 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143835245 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177138435 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.133564166 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089611839 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125175661 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113622865 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112783564 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114359953 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171198424 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157200381 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12992837 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076873079 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109766173 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148890165 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135440739 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109050347 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123877748 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09446449 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132190361 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152467928 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122890386 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140487277 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116073744 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091830506 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121758995 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136885004 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127474808 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157714618 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124959411 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07726598 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121917391 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1010369 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084424734 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146776811 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079126376 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170187149 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102329599 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108309725 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123635752 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109949857 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109710192 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152930861 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285168756 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107753706 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.072815848 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109451247 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121218171 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143530163 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092139508 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110839143 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116734751 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08210672 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134151629 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.081193099 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124459128 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.083689798 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124746701 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131466123 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082202845 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123593328 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106142842 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104799304 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130347342 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156702515 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091759763 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085361468 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162390535 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123022469 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104457346 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141701959 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154633981 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105160028 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101162254 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145272527 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166198388 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093241867 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160167332 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106511785 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087244336 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091364098 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124096495 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113353006 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124475804 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085056787 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117858523 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160677903 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079138217 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098559113 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134355438 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082874099 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084159843 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106663986 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10606153 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099877312 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101243505 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103879021 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134747495 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276024371 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109932862 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125088298 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101789728 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165173742 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092346051 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106420585 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106620928 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07557879 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.130795875 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152214581 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083351878 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157427698 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122452572 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117219039 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121453894 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087662677 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135623008 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083636419 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075155181 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139980411 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113570433 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110985121 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14749619 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116597532 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123828325 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119415398 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130781934 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129437286 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129685815 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1087209 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092205741 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114399744 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127735601 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078141723 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093273115 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084389447 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107526508 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098056463 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087216632 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140375595 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122249745 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109717713 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113311399 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098973726 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144831113 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.08021496 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125493987 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120000376 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098353281 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148438534 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148483901 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132198038 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101446226 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283253456 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076645132 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079675737 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090947007 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123822963 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087915423 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08749211 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11624406 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144514291 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12779081 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134300524 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123841044 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119732965 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15286437 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07479396 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122067292 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14192477 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121883168 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107496738 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094696819 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102825907 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140579181 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106703706 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172822194 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115856398 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12590134 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155564525 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105940642 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08404769 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105282932 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131593999 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104669677 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142495599 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101773146 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09129775 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110099178 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080525092 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100321119 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126533599 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118596214 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136264962 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115170793 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13165104 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08201482 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114487052 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122625383 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120816655 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069593694 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11900281 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161891016 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098023111 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117745266 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297650191 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084251087 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138154069 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168825432 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14328851 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089520387 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1082801 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121515803 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125816548 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120760843 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13581713 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106529986 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136483515 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112610097 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089052093 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090355982 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099398506 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106260451 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097799509 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104431016 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114154976 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099261526 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131415435 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105608685 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112513564 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119903453 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103249016 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096803196 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100072182 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171196805 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119648193 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165280883 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103251292 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.139835471 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157643916 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079681015 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083743211 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082686798 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136399044 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089011909 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130861625 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112623225 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11726776 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12344118 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136800947 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09783253 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073671714 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109904599 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131587876 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123444391 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100544827 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103806902 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157139836 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101723483 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08270359 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261275214 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119441997 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107140199 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16525674 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069527969 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109431137 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082375135 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085088574 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126235692 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148170983 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084396351 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103354641 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121337317 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113415364 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12691818 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100704938 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109458975 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124854236 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144180515 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128038242 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092976231 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112238709 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129590366 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151918402 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10444647 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101184955 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166801659 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149342083 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155724268 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089275872 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115770604 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115596417 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111330664 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136791914 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087966726 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157602805 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086098151 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135037927 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103573842 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090582117 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126945576 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112405407 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091428299 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142179799 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117397733 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086859389 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081672033 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115945905 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119404163 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10514629 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079197007 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284880387 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080165268 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134111313 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15733973 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085719992 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107202092 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098782758 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085056058 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106848544 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104557638 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09036325 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102944124 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165675074 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089334147 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144563239 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133203308 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113259209 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133683064 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105233051 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643465394 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082157486 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14808671 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115505138 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166617956 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102468686 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119158594 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112340014 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120998252 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140724836 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104041301 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180157461 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131029575 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117187154 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083203254 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104738603 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106074485 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09030163 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109618787 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11518409 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116093579 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09592042 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116557849 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122389594 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086482642 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098321997 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151122284 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115467098 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140668509 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134994397 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087947611 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11838096 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134985511 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231581523 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119495376 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148252096 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107596996 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101332987 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085040996 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10111732 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156724057 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078474315 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170261265 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124386033 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11245279 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115513995 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110218015 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130439866 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106471266 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12216994 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094321699 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109776752 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114898458 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085563246 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081063888 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107229147 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11155754 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101884571 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099140029 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103176606 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148317255 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077487859 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101445194 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117042395 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142102725 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16642689 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092361087 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087226251 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120725359 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116902011 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114336715 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122058541 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08321879 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085895154 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083501003 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086516379 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109646205 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115137264 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114308934 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110366566 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155655663 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087273797 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227836826 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097841794 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106703691 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074515497 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081839793 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097901211 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098340039 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253999007 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110913082 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15745629 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099496057 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094055232 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09433961 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081010329 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087446722 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126269437 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113416965 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119181827 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103305247 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069244193 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108338813 seconds)
  done (took 59.384293066 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111585587 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087940941 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101740399 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147107803 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126187792 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203920224 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155064011 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193132384 seconds)
  done (took 2.73615672 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073600015 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09899616 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107490098 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087485689 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071796548 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073630881 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227485993 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086021567 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072137823 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097198711 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082507511 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074465633 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.409958269 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071379786 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072802672 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067212498 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072643687 seconds)
  done (took 3.446068773 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.39751215 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619697086 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345268935 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082706182 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.947698322 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.097397547 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.149797882 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139477365 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083559516 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533265068 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.411663448 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136152852 seconds)
  done (took 18.554007331 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086617061 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080442911 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093020463 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093126759 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082724811 seconds)
  done (took 2.041530287 seconds)
done (took 108.389460263 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087688793 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.417727101 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059877921 seconds)
  done (took 2.107905861 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091394128 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089687771 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089671178 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087663773 seconds)
  done (took 1.971775547 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079853468 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081315722 seconds)
  done (took 1.766831071 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228796526 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17266547 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100395332 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087078661 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084901864 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084924741 seconds)
  done (took 1.872180875 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076629737 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079668337 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076895326 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08035987 seconds)
  done (took 1.924295312 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080327703 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057895224 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05986104 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062580972 seconds)
  done (took 1.872665645 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09082311 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088645588 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083670549 seconds)
  done (took 1.872563021 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103911492 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092403227 seconds)
  done (took 1.805104565 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08581651 seconds)
  done (took 1.695982093 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092465487 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10311025 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135528342 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117414321 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14114488 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117676742 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089571254 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089922971 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084017009 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090785824 seconds)
  done (took 2.671938242 seconds)
done (took 21.754730243 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083074349 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36875882 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364673512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093792187 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.677196514 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361891128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984589305 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097420457 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14413739 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073110682 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090075487 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654440557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977331359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328468554 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96483767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328234171 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655717125 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074260108 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073460134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073518932 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973163668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073409708 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073336136 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074593764 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654512239 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377763228 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074067616 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326937049 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073962943 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075449095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360761431 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.091148798 seconds)
  done (took 16.283605032 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075217504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123043086 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077823696 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089543703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075800939 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075415045 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076778042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075058496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126403093 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073725827 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090530407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073829644 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077856198 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074738487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093202504 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076767868 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075597154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074324282 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074099699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074566005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092535156 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073476558 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073991809 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074618741 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073763478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085853099 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074157054 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074423706 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07422783 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076250094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077589903 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0747889 seconds)
  done (took 4.19900455 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120656154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128405285 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078734722 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109725283 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117283202 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076003344 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149236469 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099012682 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132735531 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073730097 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091208721 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07415089 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106589567 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075042127 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093803781 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074471801 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075123684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074356847 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073847985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074289472 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09305804 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074107306 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07372118 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074831191 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073983101 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087849386 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073724618 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07456073 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073860441 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075822798 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077746671 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074821437 seconds)
  done (took 4.449690743 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078053578 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080480329 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08706773 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08786298 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074308885 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077467574 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079242304 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.075563358 seconds)
  done (took 2.266539171 seconds)
done (took 28.809007328 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084109466 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075128879 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078135487 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.093238056 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079032205 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083500737 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072456396 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.081822941 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079236797 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079035746 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.08063621 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072877293 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077607333 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072159015 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079657181 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073720221 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083888553 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077468898 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083486114 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083996586 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076030888 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078925755 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081154072 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083522117 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083598629 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083480069 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081897421 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078516113 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073615719 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075987006 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08176803 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08841351 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073044508 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083645023 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072749676 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072905792 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077006454 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073346014 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083270217 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081817948 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07487359 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081846215 seconds)
  done (took 4.931701151 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092561208 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096957345 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089396863 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067502862 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.07295977 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071560111 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094482493 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065987544 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066062525 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093523286 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.062557491 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065664659 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069006075 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060820839 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066418332 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.063951166 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.067764753 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061557308 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066549304 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065711159 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094472523 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060503702 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08345416 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06881708 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062658246 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.067981746 seconds)
  done (took 3.532572668 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080417727 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088702181 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094897879 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14683259 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114712285 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082725467 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084858923 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097299335 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09930947 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072194456 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07598697 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098900961 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093104097 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079039141 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072988765 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089423585 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090473253 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074588685 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078191313 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10012451 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09116752 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090702873 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097366962 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08635851 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071801278 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075417506 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076219763 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085114818 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074919509 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082127774 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075419458 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075882441 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074830185 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083603816 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075578924 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074994852 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098770391 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083312915 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083526351 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073400623 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080807034 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074219916 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096333499 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12913747 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072059664 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078363698 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076479454 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082405821 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072455946 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098671366 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084272116 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072929507 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075310925 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071990539 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072304813 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075318734 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074513058 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074766499 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081451671 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078180429 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096798238 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077971127 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088305287 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072043467 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081300466 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072060612 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074293072 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071919737 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097402813 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074642583 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112597038 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073730875 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073638164 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081750631 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081024739 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079368752 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072817869 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088642025 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082592699 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077617855 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081610549 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076035964 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07537979 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101394863 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075280979 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075193902 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073918319 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078469905 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075749344 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073606082 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085533928 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072770269 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07584571 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089112412 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072702088 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074064345 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077821314 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076708431 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072508867 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083522664 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07652907 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073798147 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082284357 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072826627 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074956966 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084247052 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078638562 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071215323 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07599636 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077593277 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073062671 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074106969 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07520951 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07448009 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081052767 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080038334 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076535713 seconds)
  done (took 11.201703141 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166476042 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15572838 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07602778 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149717775 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082290328 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083870203 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150142079 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097778374 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073074085 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074542348 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073901691 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112252057 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107598021 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117821623 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083208245 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073133958 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095287644 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116676018 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151650792 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148143182 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.096066423 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081357729 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075249658 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074442314 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074796375 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082539088 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089710079 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081694455 seconds)
  done (took 4.518588005 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084820635 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106953309 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079951171 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096031242 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094591862 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073422287 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075312561 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075714632 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090177379 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082859774 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073771138 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077679189 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079794099 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076106091 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073994729 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079804848 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079378031 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074746871 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076865055 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.080893934 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08300622 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096206184 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076067285 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072293915 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077847971 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072304084 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067796168 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087602112 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073508328 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097208549 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070696668 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077618702 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087054891 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073927281 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07275385 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073049344 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072632201 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07360373 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075089471 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.07147373 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071487563 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06323626 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072687287 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.0827944 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085776404 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061662937 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077599965 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077678318 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078483486 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070790892 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076131619 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075846045 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075795993 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080514601 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077567644 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078498222 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074464517 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.080977489 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081326049 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072869951 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070013776 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071831208 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077923083 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069706535 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087986072 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078459727 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07172591 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072943243 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074927594 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086262201 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072859299 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078264638 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070965374 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075216269 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078013922 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075025784 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074311503 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071783788 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072814112 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073305866 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060982832 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072852944 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059152393 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075419299 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071411721 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071770263 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073219279 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077289701 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083384987 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07457651 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078794126 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074284271 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072226199 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075666063 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065502649 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076003022 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083571091 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086335493 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07298579 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071017314 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085519027 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077522994 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071850501 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062328356 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077384843 seconds)
  done (took 9.709572933 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096153232 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074836223 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086939307 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095123359 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091566234 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079899648 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083413847 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075495718 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088625981 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079820062 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082397495 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073161646 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.084168317 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083078866 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075490388 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082814508 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076914808 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088580376 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088036818 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073362504 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082088831 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085542091 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094277096 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085700762 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084035006 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086429796 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094615256 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082429491 seconds)
  done (took 4.027524871 seconds)
done (took 39.54232962 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.738234928 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.965318261 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.711623966 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.0415564 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.79068152 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.923900052 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.794060986 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.704580451 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.862906485 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.747648205 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.002772296 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.815365748 seconds)
done (took 64.858552907 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.731344574 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.841791431 seconds)
    (2/2) benchmarking "String"...
    done (took 1.934606602 seconds)
  done (took 5.410425631 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.901577933 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.383787793 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.940918704 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.703533388 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.709981757 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.961279639 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.509529198 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.242424938 seconds)
  done (took 30.087605631 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.888464882 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.932953363 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.418099001 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.451746561 seconds)
  done (took 15.379772486 seconds)
done (took 62.233760169 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.713822151 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.762152135 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.710697041 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.69008146 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.762837715 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.712714163 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.845507577 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.928327321 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.703327951 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.692837342 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.706003058 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.139121421 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.707468127 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.891953761 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.705557554 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.71641853 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.776867748 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.257375112 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.86165118 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.717387687 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.711761917 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.739992577 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.709364256 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.71350584 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.73539344 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.705409795 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.1005109 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.707395725 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.539102664 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.705443911 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.750695709 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.152583534 seconds)
  done (took 202.909212825 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.70621447 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.728302985 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.79901115 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.707854235 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.217483118 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.8896956 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.807182601 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.256954949 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.711879696 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.717682826 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.902440521 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.703021674 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.926447623 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.661763656 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.752299936 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.810419254 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.920719469 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.930148385 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.759077803 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.871511827 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.712092617 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.910936554 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.86051695 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.874516569 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.722893957 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.810361362 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.731688569 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.70981369 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.899671754 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.880178137 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.744311652 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.722534373 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.910078538 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.577337137 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.718399723 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.704510206 seconds)
  done (took 167.909004957 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.905126386 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.703797094 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.70204973 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.7020641 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.708970032 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.701609259 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.830236114 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.830970647 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.339912262 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.015072029 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.757744341 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.703264004 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.516577465 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.703888589 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.770932259 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.716749421 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.705783601 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.719007184 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.730347513 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.704807039 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.703785971 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.832732832 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.716050864 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.704693367 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.711483927 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.704312061 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.709376348 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.075590372 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.70349653 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.795993992 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.704400269 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.709238313 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.945307779 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.704163342 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.703458501 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.559082606 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.779525592 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.787935201 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.705907811 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.708732917 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.703433529 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.921675109 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.704090487 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.703320309 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.704866085 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.707506438 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.848011639 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.70579522 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.828731716 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.707802009 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.184398261 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.706311284 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.704794749 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.320833092 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.292800574 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.706319928 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.707238041 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.70477508 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.704722817 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.710294106 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.351355534 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.778011492 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.706232835 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.70640675 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.708930633 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.711011923 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.705497325 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.75809615 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.706873822 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.705864025 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.762701773 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.826004406 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.704994908 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.82888686 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.706984242 seconds)
    (75/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.157775993 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.773295688 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.79901581 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.706072003 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.705420343 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.705641091 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.705755589 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.786000924 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.706541102 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.833701839 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.714212809 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.708141437 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.757379248 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.706269937 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.774384876 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.706156227 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545467655 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.70795279 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.706301748 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995661983 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.773082763 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.706726965 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.706126149 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.832875034 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.832916768 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.414703962 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.708862195 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.337458195 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.844501737 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.706849057 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.845952286 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.70916553 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788788529 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.711992307 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.708873469 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.739142711 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.707328106 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.762874869 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.709413824 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.078338059 seconds)
  done (took 393.954923962 seconds)
done (took 768.372742353 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.30497473 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.279198042 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.370717312 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.291649013 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.270478742 seconds)
  done (took 13.155622535 seconds)
done (took 14.793250531 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.791629407 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.800696485 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.730609259 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.797699522 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.728634216 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.796072515 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.780047128 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.732394681 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.764714795 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.73271287 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.767924194 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.7344096 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.719555561 seconds)
  done (took 24.515683963 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.943509993 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.130271413 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.7827869 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.940154598 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.758218805 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.946169768 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.87703736 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.859089439 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.860900558 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.726973022 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.722175389 seconds)
  done (took 22.189202166 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.946201872 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.961752563 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.790402774 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.946099905 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.761851273 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.951434265 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.878869536 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.864930422 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.862775123 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.728304892 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.723757857 seconds)
  done (took 22.056294427 seconds)
done (took 70.398672863 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.718455461 seconds)
  done (took 3.359272823 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.744537793 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.926478717 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.724552949 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.721013575 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.718279693 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.719058591 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.721940446 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.718651935 seconds)
  done (took 15.635823372 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.718680359 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.717488783 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.719608636 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.716485942 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.716269151 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.71597116 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.718603715 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.717403969 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.716561819 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.719690538 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.71901317 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.716578232 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.716624921 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.719510817 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.720401321 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.719757885 seconds)
  done (took 29.130649133 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.719140608 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.717036385 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.717731098 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.718822817 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.717405106 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.718095912 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.719051711 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.717966331 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.717406762 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.717435535 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.71839542 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.717497217 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.71756892 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.716855295 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.718224948 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.719103208 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.717873231 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.718382716 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.723276627 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.718196537 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.718819812 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.717153689 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.718687644 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.718857562 seconds)
  done (took 42.883628961 seconds)
done (took 92.649829744 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.508386257 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.480936727 seconds)
  done (took 9.631907185 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.720333026 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.721082603 seconds)
  done (took 5.088229238 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.720902145 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.720809225 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.721133826 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.721156552 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.721037886 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.721420397 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.720705185 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.720596496 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.721090924 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.720851736 seconds)
  done (took 18.85298365 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.721454397 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.722126801 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.718418479 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.720701687 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.721692923 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.718747984 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.721590619 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.722464 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.721051565 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.719302282 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.722765143 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.719439152 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.72180519 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.719079137 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.722559371 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.719813098 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.719431396 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.718863205 seconds)
  done (took 32.61503521 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.722894815 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.72302081 seconds)
  done (took 5.090011729 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.720102421 seconds)
    (2/7) benchmarking "second"...
    done (took 1.720803639 seconds)
    (3/7) benchmarking "month"...
    done (took 1.720642171 seconds)
    (4/7) benchmarking "year"...
    done (took 1.721047638 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.71976708 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.719771497 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.719386454 seconds)
  done (took 13.68704305 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.72336249 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.870777875 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.928803187 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.343078966 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.724231572 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.726155153 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.627387657 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.727741657 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.727701103 seconds)
  done (took 19.044591095 seconds)
done (took 105.651742563 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.59537486 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.720526356 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.95212885 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.777020181 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.78041253 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.016514262 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.739964113 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.999579855 seconds)
done (took 42.226285704 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.718249664 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.374435812 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.414991641 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.749202906 seconds)
  done (took 15.18458134 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.701471153 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.021587455 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.72162536 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.561415928 seconds)
  done (took 21.656993892 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.089725273 seconds)
    (2/2) benchmarking "read"...
    done (took 2.068580245 seconds)
  done (took 5.809184638 seconds)
done (took 51.014736399 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.724588894 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.724695567 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.720652331 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.724033067 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.721741854 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.72169897 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.724068077 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.723973585 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.724756534 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.724603137 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.725037482 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.722295984 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.725326438 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724017986 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722519313 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721940362 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.724260682 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.721642777 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721362289 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.722095973 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721868619 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.725163378 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.721856022 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.722417417 seconds)
  done (took 43.003163532 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.724945919 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.723181442 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.725495179 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.72553682 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.72346337 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.725913484 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.7246313 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.72395791 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.726060767 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.725314906 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.723514244 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.723142343 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.725967044 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.723508573 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726102006 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.723482871 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.726488666 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723539213 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726289458 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.724034968 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.725469133 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723637877 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.724661882 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.72653036 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.724004275 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.72349583 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.729536581 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.724823924 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.726407606 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.723990008 seconds)
  done (took 53.395457792 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.731188703 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.73488842 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.726549312 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.726261816 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.726676403 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.726411902 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.726213442 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.726406187 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.726135174 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.726413761 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.72694411 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.726929035 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.727030242 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.727174584 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.726884233 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.727168917 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.727024943 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.727748702 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.72706633 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.727332662 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.727469342 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.726531939 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.727441659 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.72808058 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.727506024 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.726426123 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.727495931 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.728525691 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.727982298 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.727688301 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.728488104 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.728026082 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.727779662 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.728153903 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.728618013 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.727956109 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.734057558 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.736061269 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.727345296 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.728105625 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.727103725 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.727769114 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.728009986 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.728027854 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.728472747 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.728831303 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.729577907 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.728443792 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.728606021 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.728860266 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.728023485 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.728748062 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.728660334 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.729332332 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.729414248 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.72845066 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.72947156 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.729763743 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.729394673 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.730124608 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.730272119 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.729275247 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.728897563 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.729127058 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.729535618 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.729104172 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.728763156 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.727845268 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.728588776 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.729244579 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.728957364 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.729963423 seconds)
  done (took 126.093377291 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.72934526 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.727716132 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.726710496 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.727466523 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728056464 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.730431855 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.728362666 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730469428 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726530433 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.729805387 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729506335 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.726800211 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727303425 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.72996404 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.729613131 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.728442171 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.730721223 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.728039622 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.730140558 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.730264488 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730529774 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.728126892 seconds)
  done (took 39.686564823 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.731100113 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.730901199 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.727778939 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.730485571 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.728060415 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.73026285 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.73104445 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.730499521 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73132305 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.728162229 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727869974 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731398955 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.728802527 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72878273 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729910331 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.728763488 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.732240043 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.728956788 seconds)
  done (took 32.790475482 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.728803738 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.729470929 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.731274825 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.728863123 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.72982106 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.7327759 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729022175 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.731926546 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.731710624 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.729371638 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.732266444 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731961139 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.731448237 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728304665 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731035541 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.728498653 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.732111153 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.729000476 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.732470016 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729451777 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.729603448 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.731926003 seconds)
  done (took 39.72465157 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.732125497 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.732489502 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.730538772 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.73090312 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.730155244 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.732303672 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.733281304 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.730878509 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.732913954 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.733139567 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.730201282 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.732878047 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.730942337 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.7315674 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.731670105 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.730172248 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.733606279 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.730903242 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.733982738 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.731966949 seconds)
  done (took 36.291296116 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.733992381 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.734325168 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.735053794 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.733991537 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.734807604 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.734278045 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.735889712 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.735202674 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.7348763 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.734869661 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.734365868 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.73370327 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.734958408 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.734597377 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734918665 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.733673615 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734321207 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.734127182 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.734365547 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.734750498 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.734530382 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.734832326 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.734559592 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.735016627 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.734614341 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.734567866 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.735880905 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.734476068 seconds)
  done (took 50.226496932 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734770799 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.7341591 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.732274891 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.732690818 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.732296564 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.732383152 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.73233586 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.732360077 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.73565662 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.732948655 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.735326949 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.735586193 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.735791791 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.735865237 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.735254211 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.735789857 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735253758 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.732548027 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7326173 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732152443 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.735836151 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735315662 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.735715692 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.732949179 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733074061 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.73581114 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.732855464 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.732862934 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.734993254 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.732443827 seconds)
  done (took 53.676963891 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.754650925 seconds)
    (2/2) benchmarking "in"...
    done (took 1.755800208 seconds)
  done (took 5.167351687 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.734085676 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736512624 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.736694296 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.733854019 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.734576579 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.737348289 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.737049289 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.734352799 seconds)
  done (took 15.542689894 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.733235748 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.736539354 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.737321754 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.73628033 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.7364771 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.734553932 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741214064 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.738107179 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.735844566 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.735651215 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.741982664 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.743510537 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.736771381 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.734867231 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.735745791 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.735459094 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.737154489 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.735979065 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.736826966 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.738022238 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.737927816 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.737484242 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.736886403 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.735259389 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.736918289 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.745855372 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.738900282 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.738090325 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.73692354 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.739214095 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.735709711 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.735116432 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.738353163 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.737353415 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.738037622 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.73878623 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.744003495 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.737113749 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.74191377 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.739446356 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.738539262 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.735687733 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.738585497 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.738179921 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.737856799 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.739182093 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.740355521 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.73633383 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.736503552 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.741885498 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.74514072 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.736645753 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.737612328 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.740963724 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.738043155 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.744715095 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.739907072 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.741338551 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.747706017 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.747160609 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.750888512 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.74532228 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.738667258 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.740030703 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747819652 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.763619589 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744744966 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.737846769 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.737265788 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.73978503 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.744737065 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.750200903 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.746575623 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.740038424 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.739986565 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.739827155 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.738895136 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.740312984 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.744723299 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.741417186 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.740743679 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.740635041 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.748758404 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.762234136 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.739095474 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.741409122 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.741097518 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.741454641 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.74039834 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.748801754 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.741475693 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.740727553 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.739021379 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.738767791 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.741854401 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.741890712 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.739046167 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.741070277 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.739037952 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.742003447 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.74224722 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.742578841 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.748831112 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.74209711 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.742102023 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.745830913 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.741977739 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.739416795 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.745997967 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.741195706 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.742210849 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.741406834 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.747086582 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.739781592 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.744350867 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.749204158 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.7427751 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.741327 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.743067613 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.742748476 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.751522495 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.76693647 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.743482059 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.74368842 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.745636672 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.757078375 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.742142784 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.743559105 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.743077446 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.740233337 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.740635543 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.742006617 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.743456029 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.742070706 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.742760495 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.741727753 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.740415337 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.743315727 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.744308102 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.743186965 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.742077188 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.740945856 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.742296761 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.742853538 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.743388636 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.744392004 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.747549156 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.742834638 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.742053818 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.742720645 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.741908593 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.743611619 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.742858478 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.744325715 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.741977912 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.74474422 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.742059176 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.743650279 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745301591 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.744673437 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.744588492 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.744230282 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747907525 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.745315322 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.745959231 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.742022237 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.742153977 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.745731941 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.745174517 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.743414744 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.74556891 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.743124994 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.747130761 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.753768455 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.746356504 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.745784963 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.745762832 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.745649162 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.745407702 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.744440376 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.746084069 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.752826925 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.74511994 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.749529809 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.745536866 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.745783997 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.74618241 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.744329792 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.743606244 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.74603219 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.746568109 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.754100862 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.756759652 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753918878 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.744755436 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.749658316 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.744502443 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.749633068 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.747336205 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.745840786 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.74661925 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746244707 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.743533199 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746632629 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.746426164 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.747155492 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.743963712 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.746784397 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.745839459 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.74635646 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.746768014 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.744592312 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.745056623 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.744398396 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74761449 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746953927 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.744565332 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.74588492 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.743796733 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.745063744 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.748320985 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.747799851 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.752189017 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.744719779 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.745764619 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.745647654 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.745322331 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.744356855 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.747946356 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.74720848 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.746151898 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.753047629 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.746310186 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.746448144 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.752677275 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.746321505 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.74588461 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.748231443 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.748251224 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.745222186 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.749562508 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.756672709 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.74861823 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.748319208 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.748362949 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.746396105 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.748322805 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.752509575 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.746670653 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.745528606 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.748991113 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.74798651 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.745525557 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.74819076 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.748038165 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.747420053 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748694336 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.74942589 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.748599154 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.747745423 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.749601483 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.749353909 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.748513524 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.750415847 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.757450298 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.751219936 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.748177226 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.75004607 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.747984881 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.752917743 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.748130095 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.750366413 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.748059558 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.760120977 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.75831353 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.753284624 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.74966861 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.751209338 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.754130192 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.749940537 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.752504556 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.749336932 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.749179153 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.74810806 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.74936863 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.747992932 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74945639 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.751665886 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.750091956 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.750482046 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.754825284 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.751947772 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.748075539 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.750240983 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.751426109 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.751245929 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.749260586 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.751075437 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.750637627 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.750801288 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.748662384 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.749155291 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.755224379 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.750808 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.750093819 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.748782693 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.749259719 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.748887636 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.750492507 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.75154695 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.753551832 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.760290303 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.753071115 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.758724122 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.751745327 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758981252 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.751284105 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.753303698 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.760862284 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.750230184 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.74934482 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.751195943 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.752100624 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.757613166 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.752298837 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.7511904 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.757436065 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.752372054 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.752212789 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.75370824 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.75314918 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.75304836 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.753140562 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.759090471 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.752066812 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.756216782 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.753434339 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.750371732 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.753239234 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.753340313 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.750047524 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.755369642 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.752994083 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.752143806 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.751243329 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.752099131 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.753490791 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.753476927 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.753731182 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.75096099 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.753607717 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.757644583 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.753239307 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.758291734 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.753049241 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.75901217 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.753224882 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.759145529 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.753827402 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.752180643 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.753424096 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.754184216 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.753219047 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.752107178 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.753504104 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.754463464 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.754021742 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.757989635 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.754674684 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.754098096 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.752966974 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.755576538 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.752829625 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.761546112 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.779163067 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.755228381 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.759148374 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.753052209 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.754102738 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.758875844 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.755201514 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.752581167 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.756337976 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.764186659 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.762523756 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.751958467 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.755160609 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.752810646 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.754340758 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.756068709 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.755809254 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.755565475 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.755795674 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.755423673 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.755872691 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.756252992 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.756044499 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.753871546 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.754475053 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.755331502 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.763351302 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.755962211 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.75657955 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.755997358 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.757291106 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.75473253 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.755124032 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.756250047 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.755598907 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.75643058 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.75514892 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762459958 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.7613791 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.756480088 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.753072217 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.757074797 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.754350531 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.754924626 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.756572299 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.755972451 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.756208999 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.756009289 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.757151252 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.755468309 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.753512108 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.756285166 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.755259646 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.756901569 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.757642048 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.761817639 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.756527369 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.754399418 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.757455247 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.757697843 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.754193091 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.756774658 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.762524161 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.758051876 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.767181595 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.764451213 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.762344747 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.755429941 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.758946132 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.764098696 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.754085781 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.755985509 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.757886238 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.757888792 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.757240555 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.761196617 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.758515215 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.763499639 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.756577367 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.756337229 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.765626314 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.757419102 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.757204216 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.758313856 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.761122187 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.756640026 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.755539262 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.75958042 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.75691232 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.763536273 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.759686184 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.759266573 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.75858682 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.755672979 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.75970685 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.763560247 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.758786027 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.757771282 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.75696261 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.757088417 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.759810676 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.762284267 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.756332044 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.757665234 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.755999129 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.760330924 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.764539103 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.755807893 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.758967983 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.757833613 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.757852894 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.761501368 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75983754 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.757492093 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.757494779 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.757099692 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.759568332 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.75759375 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.759463331 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.757220559 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.759731568 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.761235243 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.76058938 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76223184 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.769460391 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.768981451 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.757753426 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.758049939 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.759712957 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.761305767 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.760713788 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.761177689 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.760081585 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.760592256 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.760026348 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.763225567 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.761182079 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.762900358 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.774974548 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.761572935 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.759853212 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.760002426 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.762717891 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.761129657 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.75912792 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.760850509 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.760624185 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.762575194 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.76894399 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.761473728 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.764820622 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.75950666 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.76033969 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.765729091 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.762902545 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.768180178 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.76228817 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.762056381 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.761741808 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.765096756 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.776547011 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.762365225 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.77037281 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791221283 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.761492722 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.761089908 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.763183534 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.759414108 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.762406008 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.761788574 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.762289996 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.762989662 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.763018986 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.761795842 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.762303696 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.767247857 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.76212256 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.762327432 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.763571837 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.760740644 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.762780203 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.760442066 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.762939845 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.762884603 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.762797098 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.763291181 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.763989937 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.761914181 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.774363935 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.772609824 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.763511934 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.763666214 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.761285424 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.765117814 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.766064956 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.774089949 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.772984938 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.764547075 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.763618594 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.763069816 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.764420225 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.761776901 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.762759221 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.76340879 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.761539829 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.761273694 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.775236356 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77317529 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.766867317 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.762845384 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.765270925 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.765852096 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.763764702 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.764842495 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.764999978 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.76385246 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.76378076 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.768689639 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.765808364 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.765216656 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.767425225 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.773249596 seconds)
  done (took 1045.737308079 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.762895889 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.762850871 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.762287135 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.763965054 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.763178391 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763552615 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763859209 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.762128129 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.763637848 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.763259145 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.763577195 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.762480252 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.762554188 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.762803768 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.762803384 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.762562859 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.762592898 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.763178299 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.76368085 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763514365 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.763601947 seconds)
  done (took 38.711970725 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.766950075 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.763858919 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.764229584 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.765840083 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76376628 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.766194606 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.763683096 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765792431 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.766460272 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764013198 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.766935687 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766962695 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.76538227 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.764696595 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764978012 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766990382 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.768196342 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765005341 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.767395179 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.764468755 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767232931 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.764876712 seconds)
  done (took 40.531516814 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.767756149 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.767114279 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.764978696 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.76455532 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.768831617 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.765033472 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.767675719 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.766975134 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.768241489 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.766279746 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.764826938 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.767269624 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.773091167 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.773153761 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.767449398 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.767680244 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.911993189 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.768789825 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.7688287 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.767770586 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.766039979 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.771583765 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.765827078 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.765929236 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.765347778 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.768575927 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.769321541 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.768231703 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.768904949 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.768480359 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.77493928 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.768572175 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.767341915 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.768829486 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.766074752 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.768611271 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.773327792 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.769608204 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.766906589 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.769226807 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.777172983 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.792603486 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.768775033 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.772821484 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.768151595 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.768320323 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.770187982 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.778024963 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.765202595 seconds)
  done (took 88.520186083 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.766979703 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.767461478 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.764510506 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.768011453 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.766571016 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.767434873 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.767795326 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.767667438 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.766156059 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.766170791 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.767373082 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.764841306 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.764666823 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.76838938 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.768693549 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.765031843 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.76471186 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.765569944 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.765371887 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.766680757 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.764558693 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.766909089 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.76820685 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.76469103 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.766397217 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.764774337 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.764232204 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.766782921 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.764673538 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.764407895 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.766669711 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.768165485 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.766905735 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.764273126 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.765825444 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.766887608 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.768659125 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.763953678 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.768216508 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.765154675 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.767459733 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.76776466 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.768807667 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.768816834 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.765387942 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.765264556 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.765519501 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.765519982 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.763519882 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.762470101 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.762900715 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.76110062 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.763114444 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.761134394 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.761811996 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.76113074 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.759051669 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.759141461 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.76078035 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.76130306 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.75723955 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.760730123 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.757969609 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.760475998 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.76058274 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.758451108 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.757508557 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.760077987 seconds)
  done (took 121.68606819 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.759758942 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.760368389 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761200969 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761433369 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.761299358 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.761563274 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.761260437 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.760947869 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.760651127 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.761664373 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761151315 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.761684155 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.761345219 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.761828183 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.760282613 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.760249933 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.760942403 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.76200646 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.763103156 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761807432 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.761531859 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.761642994 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.762065523 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.761710189 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.761974953 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.762066875 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.763679789 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.761757527 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761579569 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.762956111 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.762696153 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.760925795 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.761859709 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.762048261 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.76221987 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.762295456 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.761816253 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.762019857 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.762096402 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.761611294 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.762093558 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.764160144 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.762295234 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.761503065 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.761579934 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.761214687 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.762519744 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.762082252 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.761532203 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.761232745 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.761787318 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.761540313 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760867889 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.763096575 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.761755087 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.762041372 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761071888 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.760950195 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763759203 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.762022712 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.76316119 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.761851896 seconds)
  done (took 110.912470572 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761991863 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.76169304 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.758821278 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.759371865 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.761163534 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.759397777 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.761808764 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.762853973 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.764000803 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.76118528 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762065621 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759614187 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760937354 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761732708 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759368655 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759876671 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759047416 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.759413988 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764173827 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758002146 seconds)
  done (took 36.898901241 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.758870485 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.761506607 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.758053654 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.757576653 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.754437267 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.751924938 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.755122134 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756034219 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752596463 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752077182 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.750203831 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.751478853 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748546267 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.748175341 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.750118666 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.747046164 seconds)
  done (took 29.734910818 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.746193986 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.749182973 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.749814413 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.749945511 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.747541568 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.746764993 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.751117739 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.74757757 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.74690917 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.751003799 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.750909124 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.750287291 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.750384908 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.749251311 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.747984015 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.750146588 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.747699562 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.74715096 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.750442234 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.750761238 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.749331807 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.747909923 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.750347819 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.75031849 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.748409147 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.748635997 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.748764186 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.747054525 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.747246813 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.750340538 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.748708481 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.748219713 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.748104169 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.747143362 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.750709946 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.747321204 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.750070271 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.750765943 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.751244494 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.751580807 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.751467174 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.748936965 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.752728258 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.752356518 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.748580693 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.751500632 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.748648778 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.749068497 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.747902459 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.748254647 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.750929666 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.751911575 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.751225306 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.752568879 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.752085454 seconds)
  done (took 97.893425971 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750901981 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.750381401 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.748587872 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.74999467 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.751454078 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.747228128 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.750694591 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.747649312 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.74673891 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.749911498 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.750176885 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.748873473 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.747400608 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.749850278 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.747921433 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748934064 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.746768519 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.746899684 seconds)
  done (took 33.151240773 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.746700771 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.747009394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.750017959 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.746419847 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.745087386 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.748526646 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745610906 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.74806756 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74890873 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.744537079 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745339556 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.747336112 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746794937 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.748078586 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.746432466 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744470357 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.746663422 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.746214911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.745386566 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.743936805 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.747796708 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.746164674 seconds)
  done (took 40.094448437 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.743131262 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.742605539 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.75994225 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.76360177 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.76491237 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.778405028 seconds)
  done (took 12.217745617 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.743798044 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.746985369 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.743408821 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.746590334 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745654042 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.744317534 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742618714 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744562974 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.746316099 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74281643 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74332499 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745911736 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747309599 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.745092526 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744775033 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744981264 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743096604 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74331369 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74327304 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745433659 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742771986 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744211604 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742045451 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.743072249 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742171134 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741657947 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74528538 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742564385 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741693697 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744977102 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745919091 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741115726 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744452643 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742176561 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745194175 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745421032 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741841662 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744095383 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744325302 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741621888 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.743717024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744194858 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743976847 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741021406 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744769489 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741867872 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742532943 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74296446 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741212447 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744661693 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745055395 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742257845 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744838172 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746023707 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74496431 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745230791 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742431069 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742341082 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.745502667 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743416066 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741547497 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745435765 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742301276 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741995133 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745037572 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74241749 seconds)
  done (took 116.759045332 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741779101 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.741463462 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742263775 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742468714 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741314497 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741923586 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741767934 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741484065 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74114949 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741859314 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742996275 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742223302 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741192985 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741509837 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741541081 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740441394 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740308163 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740881197 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741702011 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743760019 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742902827 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741022477 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741140366 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741171138 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741928401 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74288447 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.743135021 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740312196 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740796637 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740998384 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741127381 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74098504 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74142237 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.740685888 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740383295 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741395537 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740985519 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742178467 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7415416 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744127255 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741287182 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744030749 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742053728 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742089382 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741876021 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740655749 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740959532 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740768968 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741702269 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741952704 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740031997 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740769377 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74044742 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740852481 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741424875 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741053708 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740330597 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740119504 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740562904 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742745338 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742626081 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74027636 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743264841 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739988944 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741330305 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740990055 seconds)
  done (took 116.605690141 seconds)
done (took 2426.702788053 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.790220856 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.726263962 seconds)
  done (took 15.178769313 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.90206363 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.855663661 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.738699676 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.763928331 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.740727886 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.761214327 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.757264302 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.738817045 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.738513208 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.738649268 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.738914103 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.923071057 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.739067937 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.737017236 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.736808237 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.829638916 seconds)
  done (took 50.106498833 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.740722054 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.743695038 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.75082796 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.742386882 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.740243169 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.752109076 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.774116014 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.743837794 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.773786752 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.75377724 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.807975796 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.751407458 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.739973463 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.787734382 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.754353346 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.752400117 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.831661544 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.815197796 seconds)
  done (took 33.417493247 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.815656514 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.739560229 seconds)
  done (took 10.223943053 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.735703071 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.756044355 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.759481739 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.735614812 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.740207114 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.75240257 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.755089048 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.769940769 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.76993152 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.76154159 seconds)
  done (took 69.199891022 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.743429519 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.740094851 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.740146956 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.738100551 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.731599549 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.735277484 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.738056298 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.733395295 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.405463948 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.773776425 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.745526735 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.744358906 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.739103826 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.7404147 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.739094834 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.761595134 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.841433779 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.738084036 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.738536869 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.745313079 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.739157547 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.794882214 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.752291378 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.742765043 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.769122554 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.406406937 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.748568566 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.746465226 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.86258371 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.739347665 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.739788354 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.739979323 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.741512608 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.132005072 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.003537575 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.741867559 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.755040631 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.749648591 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.741283638 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.854744759 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.741598508 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.748615153 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.461990687 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.985111904 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.837665979 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.782031746 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.061602929 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.757280769 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.741876563 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.76816341 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.743346619 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.741857129 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.755840931 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.228145893 seconds)
  done (took 125.136238485 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.73636152 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.086997753 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.905916797 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.736549857 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.022680487 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945980492 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.737775779 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.785924461 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.738476644 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.971647596 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.992692324 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.842593301 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.739031644 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.734914124 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.735446583 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.736624258 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.89289181 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.810698527 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.741751532 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.736074675 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.767431013 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981035441 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.861597373 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.738145446 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.76598871 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.949680166 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.862377585 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.844164132 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.529425999 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.735386213 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.801986769 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.738306965 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.737139473 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.737370034 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.895367693 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.833764247 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.82351093 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.739028013 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.738281287 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.735757237 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.486346995 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.938946018 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.835375247 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.870593018 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.990732025 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.94445372 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.520889702 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.735107455 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.477318239 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.902701285 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.967530261 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.973055054 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.859298792 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.739471123 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.0068822 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.735727371 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.736109583 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.990716669 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962123003 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.83659729 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.740876297 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.737293437 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.73711223 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.030273212 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.73972888 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.835304665 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.74064532 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.737613697 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.838786794 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838637618 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.970879872 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.954755198 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.772469315 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.085410358 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.253132468 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.986449215 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.806945052 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992778891 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.740304235 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.738031494 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.817524112 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.580864083 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.992934049 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.023011895 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.986714724 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.775996141 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.466110037 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.73819384 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.966700004 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.961261289 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.000024759 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.990510173 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.974674567 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.056077196 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.737825926 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.738056872 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.050471401 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.866323233 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.741422612 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.093027049 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971057033 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.270290587 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.769601608 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.044360168 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.871100354 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.74039038 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.372264706 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.740214315 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.970328079 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.782332956 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.740638138 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.741059214 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.961425781 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.73302214 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.740182323 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.643458284 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.802931689 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.743920827 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974373328 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.742268128 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010698959 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.74114863 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976637439 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.168570227 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.773050949 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.916498806 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.990520105 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.742535654 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.98295984 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.985774387 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.857322901 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.014199756 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.645087901 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.740026585 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027686756 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.74186188 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.741183141 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.91229206 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.742441722 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.884658473 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.74379524 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.03643849 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.765588315 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.972654026 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.744077145 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.001436985 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.777129652 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793597223 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.74364593 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.864890576 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.741711115 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.569766296 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.900216802 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.743512584 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.742710528 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.291130284 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.740625836 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.306392078 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.970096966 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.766532191 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816464967 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.415205637 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.741625503 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.828544296 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.767921593 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.137060066 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.741853255 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.995157862 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.743512135 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.741639224 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.741078399 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.031430039 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.981487249 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.744170043 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.742755972 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.650459264 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.741934263 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.741198658 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.926383286 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.104354399 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.741654522 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945823888 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.743779253 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.871498334 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.745672966 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.815930761 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.080424889 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.742001514 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.743085988 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.742233353 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.742954362 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.743171855 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.955350924 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.771774144 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.252835205 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.880672237 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.017236405 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.05619615 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.986006654 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.788436893 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.745278305 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.00302331 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.745335685 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.807645295 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.74506951 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.766507793 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972039097 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.745892624 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010814399 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.016093909 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.749066109 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793438225 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.745434307 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.744681661 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.743162945 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.891085235 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.830805405 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.745725232 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.744114733 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.860704638 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.866899487 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.953486573 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.744376089 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.777696865 seconds)
  done (took 875.081378559 seconds)
done (took 1180.00958073 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.744481136 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.745537196 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.730553008 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.745865087 seconds)
  done (took 28.638777563 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.754496993 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.748569947 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.752377578 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.748203133 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.752393812 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.748906281 seconds)
  done (took 12.175695914 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.746884507 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.744864161 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.745622991 seconds)
  done (took 20.908929472 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.816516418 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.133646306 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.85079509 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.172262326 seconds)
  done (took 9.644774858 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.752572992 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.75294683 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.753219908 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.751748028 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.755994078 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.757189186 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.751764666 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.75255537 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.756077242 seconds)
  done (took 17.457488292 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.880830692 seconds)
done (took 94.37741693 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.749890475 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.877722321 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.740697499 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.825616347 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.221379672 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.827874434 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.873146791 seconds)
    (8/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.611386282 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.099123339 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.897811894 seconds)
    (11/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.739647817 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.004290429 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.139697627 seconds)
    (14/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.762600442 seconds)
    (15/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.856192383 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.857024274 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.7540743 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 3.454888381 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.560879486 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.760886002 seconds)
    (21/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.892200066 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.921996281 seconds)
    (23/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.764678811 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.125344592 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.789389272 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.858872703 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.75547623 seconds)
    (28/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.24174349 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.686361686 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.86594648 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.848476187 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.899528304 seconds)
    (33/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.698480301 seconds)
    (34/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.942117332 seconds)
    (35/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.917270869 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.657028197 seconds)
    (37/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.94973237 seconds)
    (38/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.850341481 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.756455434 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.937474297 seconds)
    (41/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.271226473 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.934313405 seconds)
    (43/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.598715787 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.871862625 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.879898837 seconds)
    (46/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.152860258 seconds)
    (47/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.931243658 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 1.984128585 seconds)
    (49/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.779005842 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 5.418353465 seconds)
    (51/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.888706482 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.021656391 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.851370513 seconds)
    (54/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.876670639 seconds)
    (55/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.189805903 seconds)
    (56/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.925632357 seconds)
    (57/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.781208594 seconds)
    (58/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.909478659 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.762327906 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.853771755 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.742429621 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.390393024 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.024068052 seconds)
    (64/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.96165332 seconds)
    (65/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.853996885 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.855497275 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.664095492 seconds)
    (68/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.785610968 seconds)
    (69/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.861542241 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.318504868 seconds)
    (71/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.047018318 seconds)
    (72/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.762088262 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.081690179 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.868995446 seconds)
    (75/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.260813456 seconds)
    (76/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.82983776 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.600629772 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.764723364 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.380889833 seconds)
    (80/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.859753702 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.7620125 seconds)
    (82/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.856066241 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.920857678 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.149146553 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.086601773 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.103787264 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.761961933 seconds)
    (88/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.358569008 seconds)
    (89/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.222380901 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.765554861 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.891681387 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.378108746 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.867939475 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.76188119 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.828835604 seconds)
    (96/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.837789446 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.00966188 seconds)
    (98/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.997432412 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.162942011 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.079156843 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.743061143 seconds)
    (102/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.799957549 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.163677545 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.747093882 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.880424296 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.173244944 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.788536559 seconds)
    (108/309) benchmarking ("sort", Float32, false)...
    done (took 5.47453243 seconds)
    (109/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.94460289 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.765219466 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.409613595 seconds)
    (112/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.832572166 seconds)
    (113/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.859302772 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.899919487 seconds)
    (115/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.999730155 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.904452413 seconds)
    (117/309) benchmarking ("sort", BigInt, false)...
    done (took 6.760331512 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.774457321 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.20891802 seconds)
    (120/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.832156412 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.069517082 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.167871545 seconds)
    (123/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.843767043 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.394982096 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.130394295 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.977398499 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.927472003 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.79071904 seconds)
    (129/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.760629973 seconds)
    (130/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.422712785 seconds)
    (131/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.76358187 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.349610188 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.847354516 seconds)
    (134/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.826625778 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.99791391 seconds)
    (136/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.805235207 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.200878424 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.055597393 seconds)
    (139/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.999330797 seconds)
    (140/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.779008762 seconds)
    (141/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.794384558 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.945256397 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.812182326 seconds)
    (144/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.899400609 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.759514958 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.022940241 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.267363469 seconds)
    (148/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.753156549 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.487490992 seconds)
    (150/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.161726822 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.753804601 seconds)
    (152/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.577665701 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.44695096 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.73756042 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.803124099 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.918820174 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.275238287 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.909379061 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.000723572 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.783665274 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.85322044 seconds)
    (162/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.65247768 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.767490414 seconds)
    (164/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.765963479 seconds)
    (165/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.065950861 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.791880801 seconds)
    (167/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.166024328 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.750909951 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.660755842 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.840681896 seconds)
    (171/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.045278676 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.636629238 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.752469282 seconds)
    (174/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.857306804 seconds)
    (175/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.866443386 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.90900854 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.76343278 seconds)
    (178/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.259349777 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.451205867 seconds)
    (180/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.994960789 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.953301378 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.900407494 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.980250538 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.794912816 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.787761242 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.786651949 seconds)
    (187/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.339923501 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.794654221 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.782519955 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.697304711 seconds)
    (191/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.755343548 seconds)
    (192/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.695992231 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.905118871 seconds)
    (194/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.003872248 seconds)
    (195/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.905865857 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.901109296 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.764077027 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.834368641 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.914107904 seconds)
    (200/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.8149061 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.829174131 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.76463736 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.072168329 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.623279209 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.1103408 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.899094689 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.84294759 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.453263666 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.753631513 seconds)
    (210/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.091507704 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.174174042 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.648321139 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.032216889 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.010544528 seconds)
    (215/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.840021791 seconds)
    (216/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.246057457 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.772410311 seconds)
    (218/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.53908554 seconds)
    (219/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.770336742 seconds)
    (220/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.854023514 seconds)
    (221/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.281883658 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.520935248 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.97276919 seconds)
    (224/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.870568821 seconds)
    (225/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.867635843 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.770470339 seconds)
    (227/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.876926027 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.755550911 seconds)
    (229/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.948771448 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.793553719 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.159965616 seconds)
    (232/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.782620389 seconds)
    (233/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.863744196 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.953236778 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.049283357 seconds)
    (236/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.855864242 seconds)
    (237/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.901328349 seconds)
    (238/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.0185475 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.964360231 seconds)
    (240/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.77068425 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.112604485 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.769947363 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.768541486 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.30538746 seconds)
    (245/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.934036167 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.769396316 seconds)
    (247/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.94803863 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.082329916 seconds)
    (249/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.862458896 seconds)
    (250/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.783946043 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.08262676 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.766971045 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.79258329 seconds)
    (254/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.794566311 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.261938958 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.77560099 seconds)
    (257/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.007243921 seconds)
    (258/309) benchmarking ("sort", Float64, false)...
    done (took 5.563639101 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.879716718 seconds)
    (260/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.785723078 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.899854308 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.851641906 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.916464043 seconds)
    (264/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.980999319 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.024130907 seconds)
    (266/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.866284315 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.68773913 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.142772325 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.760442547 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.662986636 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.887852927 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.009913606 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.104811785 seconds)
    (274/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.19206862 seconds)
    (275/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.804991348 seconds)
    (276/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.778588659 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.789241044 seconds)
    (278/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.854568848 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.058380522 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.802378016 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.855636581 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.162077499 seconds)
    (283/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.066030633 seconds)
    (284/309) benchmarking ("sort", Int8, false)...
    done (took 4.681671406 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.067728793 seconds)
    (286/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.074021689 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.841189056 seconds)
    (288/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.881839755 seconds)
    (289/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.098452139 seconds)
    (290/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.910063797 seconds)
    (291/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.155305045 seconds)
    (292/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.774534501 seconds)
    (293/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.084111959 seconds)
    (294/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.928668321 seconds)
    (295/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.283286808 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.904558153 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.641278436 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.070742712 seconds)
    (299/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.917239478 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.890434448 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.880970741 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.804041895 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.908519199 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.861072848 seconds)
    (305/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.797058514 seconds)
    (306/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.677854895 seconds)
    (307/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.861333539 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.982824228 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.122373584 seconds)
  done (took 974.238499525 seconds)
done (took 976.200916364 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.809381095 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.797094574 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.78224507 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.802853602 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.894668083 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.80898549 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.791700555 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.783665841 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.828684886 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.832149325 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.780684606 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.808089352 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.783530108 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.782352179 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.782291279 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.796067429 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.09565817 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.8145848 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.799196442 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.792228117 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.798623792 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.780108392 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.833600884 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.808500397 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.787252482 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.786385347 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.785084685 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.801996857 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.893939878 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.784598698 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.787184576 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.794991565 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.094429533 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.813532413 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.778644957 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.802421948 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.793527938 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.794549456 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.788099104 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.815023438 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.180167014 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.822938041 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.785412077 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.78557355 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.784778457 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.78835439 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.785855966 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.790869717 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.796550839 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.79705646 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.172640772 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.840442215 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.786066655 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.785288794 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.798451401 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.784277425 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.788173532 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.79922478 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.804159341 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.800505416 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.077413943 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.821522763 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.787451982 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.801370927 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.791142479 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.207485149 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.821236149 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.789912087 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.180138202 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.830759212 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.208856488 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.834560214 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.787836353 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.799453522 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.81670785 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.10174021 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.813082831 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.786601408 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.791977919 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.781618907 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.795628945 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.798207321 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.790327848 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.78653451 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.79892537 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.813641974 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.797353914 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.785643253 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.795505469 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.804251886 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.79294932 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.79670886 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.790325874 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.782182075 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.795550535 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.79038858 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.787378593 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.788109173 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.791074183 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.797687174 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.180339333 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842042139 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.785896397 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.784672666 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.786477231 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.800070654 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.179723569 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.825665639 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.809960495 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.83464315 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.78951078 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.07945983 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.817869764 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.803000405 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.796085924 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.791414419 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.78355062 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.082296649 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.206956702 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.841181893 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.790355958 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.782853621 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.802702187 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.789691611 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.785903883 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.100213548 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.822049683 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.800363517 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.909286074 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.801297025 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.819943172 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.784776893 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.793018805 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.819778626 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.803927751 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.820742411 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.793052224 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.802938637 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.803728967 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.786154647 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.800427738 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.799092139 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.789897017 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.795311662 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.783783856 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.820312924 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.801830383 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.801016507 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.810560851 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.909558571 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.787404768 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.084234554 seconds)
done (took 280.997142908 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.855917446 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.776443248 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.879012028 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.78542265 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.865006012 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.869356754 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.783783756 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.783472408 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.783607193 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.157030274 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.783548238 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.794048961 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.777246491 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.783800711 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.866109709 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.786542695 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.783967976 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.12030548 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.787291807 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.856107315 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.778227201 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.784612773 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.787557786 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.158728633 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.787429636 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.778317075 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.856475733 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.786793158 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.122388774 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.781003524 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.782045954 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.12360359 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.875939623 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.805054815 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.798610387 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.794272304 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.866498192 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.792522795 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.867303517 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.866087902 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.880874829 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.827411109 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.785931576 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.786885077 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.791396759 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.787896917 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.784986365 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.816369394 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.784942269 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.785924039 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.122224808 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.800451426 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.786771114 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.786797098 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.787214253 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.817903291 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.785774011 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.788915309 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.876066008 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.788624695 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.847691805 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.160486114 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.160560191 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.788983015 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.787145001 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.786313737 seconds)
  done (took 178.680990867 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.852047502 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.86523649 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.851918754 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.790938384 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.837425637 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.85350194 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.790725385 seconds)
  done (took 14.546453624 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.792706069 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.790006538 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.837593672 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.838275092 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.789355424 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.941304628 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.789450501 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.798449819 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.7877159 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.839191601 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.788343152 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.7904007 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.79685559 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.781070999 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.836880316 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.798309883 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.90466957 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.788870336 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.790126319 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.938506011 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.788713474 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.798052439 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.820823471 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.79941572 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.789955201 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.793376559 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.37381126 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.789827932 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.788658777 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.79080292 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.788888182 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.829423104 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.792491047 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.790960476 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.790234549 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.907048855 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.790771014 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.788338458 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.791102043 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.789717009 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.791122852 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.791498374 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.791421585 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.788890088 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.791420139 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.811547511 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.791661941 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.790579047 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.792883627 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.791270779 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.823145729 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.792532342 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.788874728 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.790206889 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.844774578 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.79805602 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.791583528 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.789180117 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.792304255 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.790888453 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.940579149 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.83896907 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.791706725 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.84035123 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.793276442 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.792757401 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.792136427 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.793080429 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.885176873 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.791738944 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.840496076 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.789716961 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.953231004 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.812024571 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.793964473 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.794025676 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.79351158 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.792449371 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.786976652 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.795979199 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.790051775 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.791591475 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.796677971 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.790780717 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.790960534 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.902975849 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.901345243 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.791172396 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.803163558 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.798050756 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.790469021 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.825360481 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.793603244 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.790831622 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.847488398 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.908343086 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.844749761 seconds)
  done (took 198.023649542 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.795681957 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.798472554 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.791630464 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.807986838 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.791401292 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.791297936 seconds)
  done (took 12.487213803 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.79409195 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.795123457 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.79344153 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.793982826 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.793488198 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.793108566 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.794976695 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.792811618 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.797938624 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.794320876 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.792345424 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.793881352 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.794421125 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.794225284 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.79499451 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.794900322 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.795459519 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.791275077 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.795627211 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.794288543 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.944997726 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.794277851 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.795147323 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.793339592 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.797490833 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.794174975 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.800543583 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.794603137 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.795924004 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.801156459 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.799042808 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.793826488 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.79627036 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.798654011 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.800074272 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.794355315 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.799967365 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.795652781 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.792205766 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.794489026 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.794861774 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.794721966 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.795000407 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.795284552 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.795882841 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.797808696 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.799288866 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.800952038 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.798020236 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.795335954 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.795550458 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.79611895 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.79576967 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.795938388 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.796179877 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.799185334 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.799955452 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.795837972 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.795218792 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.795141982 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.797360219 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.795154396 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.796285434 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.801770852 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.794724029 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.795797887 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.795272067 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.801151374 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.795630842 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.796192772 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.795997981 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.794076075 seconds)
  done (took 132.165367951 seconds)
done (took 537.625348249 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.958233031 seconds)
  done (took 8.672006546 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.79159371 seconds)
  done (took 8.546269064 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.214761018 seconds)
  done (took 9.933287676 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.814961975 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.820322806 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.806156909 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.796432449 seconds)
  done (took 28.975990787 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.873885647 seconds)
  done (took 8.588895108 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.817771409 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.792189172 seconds)
  done (took 15.359758123 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.820088092 seconds)
  done (took 8.535785257 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.872659121 seconds)
  done (took 8.614003416 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.808137635 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.83068161 seconds)
  done (took 15.369553983 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.777535126 seconds)
  done (took 8.493826379 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.383100084 seconds)
  done (took 11.19317825 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.815376978 seconds)
  done (took 8.634412751 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.858047799 seconds)
  done (took 8.574440619 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.793330661 seconds)
  done (took 8.509405649 seconds)
done (took 159.713851557 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.795354644 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.794135222 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.794176025 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.792892615 seconds)
  done (took 28.893576689 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.832762376 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.832976325 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.834850842 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.844318399 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.835643573 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.832871543 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.825744079 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.825526502 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.843956637 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.83593501 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.835531533 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.836614556 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.833260543 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.826290668 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.836582013 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.835174479 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.845160008 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.835340874 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.826368363 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.836791418 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.802486798 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.845131512 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.837714552 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.801809681 seconds)
  done (took 45.697498242 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.994127438 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.867222406 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.953328488 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.85191381 seconds)
  done (took 9.384193001 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.852202327 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.853796815 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.865531659 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.904445782 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.93113787 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.863747556 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.827908246 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.823055147 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.809354168 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.85507252 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.928649723 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.849412695 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.939056061 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.801598057 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.980435042 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.800442193 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.799876559 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.853060018 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.904362697 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.91784499 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.801958889 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.853361155 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.856378769 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.849543746 seconds)
  done (took 46.439645374 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.800482601 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.808605377 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.806580878 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.80075699 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.802230264 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.800599094 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.80606665 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.802299543 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.823047758 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.803677789 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.80070534 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.801186634 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.800807864 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.802484092 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.801423161 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.814984702 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.815430741 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.801053163 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.804557778 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.808081415 seconds)
  done (took 37.825558998 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.793711853 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.647303788 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.145477946 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.049821062 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.793472158 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.795588646 seconds)
  done (took 30.944137363 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.813661645 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.806599059 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.800447858 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.857772728 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.940815644 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.808099488 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.800629144 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.812777709 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.848068769 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.866407051 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.821943866 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.829674786 seconds)
  done (took 23.727053878 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.796422298 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.802303975 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.795977596 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.81717973 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.811627373 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.808598722 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.808925808 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.795086563 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.815012119 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.819475654 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.8089022 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.812833399 seconds)
  done (took 43.415792353 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887584252 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.687886476 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.443805502 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.514430273 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.334199249 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.008814903 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.32588931 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.976204984 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.802276601 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073213039 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.399841407 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042495462 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.05106976 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799486691 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87235919 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.283080547 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096678203 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032935126 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829306865 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.479861501 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918312806 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.319914583 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.580844571 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.926921162 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.009474124 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.931491786 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.060702789 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.756608513 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934819348 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837580631 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809719102 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.80150832 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073908299 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019945712 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889420002 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809572154 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.45132572 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.518119531 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.785385517 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.489116608 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.514900245 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.935870051 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80816078 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801408915 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.733824717 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314640892 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985092004 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.805052807 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.503575042 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.8027308 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811954613 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888905209 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.804703886 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.615629031 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750599357 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.079298117 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.799925435 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805955715 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353950697 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887290965 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414595327 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.741522777 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.891562252 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.558549978 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283515659 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.956432971 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.804226112 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.804300206 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737611478 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.540391875 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926158293 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947482173 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.822496739 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451082535 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109805051 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.480869693 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.885840499 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097391981 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.600708794 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.744071127 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031417987 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.753230912 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737587872 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.661425598 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.736816064 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079331151 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845277567 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.481291434 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844603567 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.979173604 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.817121988 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823355809 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810455037 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.02518794 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.683204819 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804340014 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.362757884 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.090507612 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824419486 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.982384959 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739088245 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.806812254 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057065358 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.014198919 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.035617938 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.295457673 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971381054 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807134163 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.891559551 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.709970832 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.819488365 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.089094859 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870674253 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.905952696 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937454251 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.762765427 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11059315 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835920237 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.97958113 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.43998573 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071601412 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.155867489 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.05928801 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889745864 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.806685878 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.806295122 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.575386494 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.432199905 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.030500585 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.803421627 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281780442 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.818825022 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.807484332 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739860543 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.460498587 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.443132894 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.925368274 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.029291079 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.733747165 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085457305 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740094258 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951079194 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.79517306 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.028705921 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.457854337 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.890710663 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064638189 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267853031 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.034939865 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820820925 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825242367 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889069909 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828674094 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.20234246 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.063808735 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.812031285 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.810055143 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.575176877 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.884193425 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811220191 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.812527211 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.601971165 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098040214 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.839190753 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.808981404 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.695992404 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.820688054 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891687186 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812153374 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.816884979 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.33280417 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.555307844 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.818807855 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.464385663 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03406195 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819296668 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.560596053 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004092833 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.897092858 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.094469565 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876957053 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.741506837 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.51092011 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.511141656 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809781299 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.742775416 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.808977613 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816862151 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818541419 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.998479898 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.100482164 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862176106 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.560153527 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.926994117 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819938443 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.813657484 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812219013 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.307033483 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.922898617 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41493463 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.820807835 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946225458 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.822911677 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.741981002 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.812675145 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815414026 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.810633398 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.764484084 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862173391 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.559277385 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147825437 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068619831 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.451479157 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826512982 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.535041881 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.942023722 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.832557144 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.38652575 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768588862 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.943778567 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882712493 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.821066684 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.568330826 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.593926243 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364096027 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119733647 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146186278 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268244724 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.163429051 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.148065731 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.989912089 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045321432 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.339795808 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870456629 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990674443 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757356581 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8993115 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.462556641 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172902591 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827837973 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038680943 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208853163 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.464181912 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975857141 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021534976 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846724849 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.600154467 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838550068 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.332042899 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965813818 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.439512808 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038182139 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989332045 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.395803856 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.9238973 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.809194768 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.304768185 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898967145 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.521496335 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.171724616 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331645955 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.457269269 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192661395 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.82298323 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.255819431 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176515542 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.119329784 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.909100011 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.746377378 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.822060164 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.823108713 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.810759446 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.788143279 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.701924199 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.086218454 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823453054 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046093623 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.062976593 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093540903 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.722369955 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.81706832 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813399153 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121644419 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46956618 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048385267 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.136707392 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.382227119 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824448501 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.746865608 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747773239 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.517143896 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.815198262 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.788157872 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064663446 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.921692474 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.767742585 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.238849932 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123651615 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.067468577 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.827897625 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.100262891 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099856124 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.546727997 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842358941 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.915022517 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.401486833 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.52782051 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.036361942 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.048290296 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.639202162 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.044379815 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47789813 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.794360995 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.812189057 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.028446455 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.036527581 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.458117131 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071362642 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.541464876 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.830793677 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184805574 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882083465 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.482138423 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.036668341 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.904256375 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822826253 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895486876 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824676447 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.826657668 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.826572115 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860961751 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.47844414 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.956754542 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.829839784 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906182351 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.926559838 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.400644402 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.825010263 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106267465 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201821089 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160778386 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885150157 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.816589001 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820171078 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750137319 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955700323 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.261721994 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089522931 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.945374519 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.954736323 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841137601 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.409719948 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.081010145 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126320868 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092819408 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.711970057 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818361151 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.904939589 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.041203642 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827246496 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.027591658 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065636811 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148026569 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290270527 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.92950878 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.094937157 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091586266 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.185914072 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.819306334 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408321746 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.831610376 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.362930237 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.865728774 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.482687986 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1113216 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828103352 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041461688 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.84119575 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.020545982 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.271542409 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.610550997 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.186103284 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.819424961 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.884137883 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108387235 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.243008964 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140974626 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900189651 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829705814 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.517497677 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958749846 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.767193619 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.081018142 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.821453915 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02970281 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.530859891 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.827678784 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114996944 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137422963 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.819035021 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.794326491 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881872713 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.829155763 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.04272839 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098472071 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072504663 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829261594 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.823758383 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.635419635 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11364258 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888726703 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754492921 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.823934095 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918722203 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.068096786 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840731408 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.339295658 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.522060965 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128071876 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.741241477 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843432426 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.203646519 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.277003256 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176714323 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.347267454 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061403923 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.381315942 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.652141536 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192350817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.826804068 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.20697315 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196075465 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.825894938 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.32570515 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928608795 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.106790205 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151676266 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.832114876 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.595056922 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.869431144 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043314276 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414207085 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762814843 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.82357821 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.881814121 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.822654446 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.822657689 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83397153 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.828705488 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.673242567 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.657770832 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313781519 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.828284092 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.843885923 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.391546096 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362438565 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923425953 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980783987 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828953921 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.530733311 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.113159475 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.075016214 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.312599723 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.889698898 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.825799242 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824549908 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.74949852 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.018487104 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.014059803 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137209034 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.150818121 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.929021783 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.826575586 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.037635371 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034211115 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.456157613 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9854644 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.196340687 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931775567 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.749945201 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.537086687 seconds)
  done (took 1650.121113518 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.848308137 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.869008573 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.830144843 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.882854759 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.864321894 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.854064217 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.862217423 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.8590962 seconds)
  done (took 56.616229885 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.822343933 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.011778642 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.831250092 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.823771842 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.860365785 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.824404016 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.011734673 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.83449316 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.89077882 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.831366625 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.82416516 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.855408082 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.142828704 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.84690203 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.823890311 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.828477828 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.285332468 seconds)
  done (took 74.122943143 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.827249319 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.837698503 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.84875393 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.848427087 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.821814995 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.841373383 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.889496573 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.886080014 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.828950225 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.004969843 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.166437412 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.841614586 seconds)
  done (took 89.392919885 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.841694913 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.832895931 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.832467592 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.832018053 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.832335194 seconds)
  done (took 10.92882125 seconds)
done (took 2149.243890463 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.06526346 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.012083793 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.054225044 seconds)
  done (took 5.816021196 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.974496669 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.025139874 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.142524417 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.147756747 seconds)
  done (took 10.044477615 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.133594358 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.199670755 seconds)
  done (took 6.085098844 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.156976853 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.859554072 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.246610549 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.827018368 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.828759283 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.832042319 seconds)
  done (took 22.244232318 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.834022015 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.838276447 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.834422428 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.837192349 seconds)
  done (took 9.096692097 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.812977565 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.50032079 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.81494476 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.828680172 seconds)
  done (took 20.708609238 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.984916658 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.951744142 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.977677752 seconds)
  done (took 7.669122744 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.317058646 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.067784776 seconds)
  done (took 9.13965331 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.990120263 seconds)
  done (took 3.745738734 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.862973574 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.102274706 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.331095686 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.353229518 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.416654757 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.663196616 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.166802213 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.064859927 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.284492204 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.292180805 seconds)
  done (took 24.292221093 seconds)
done (took 133.919427693 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.181515989 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.857250216 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.03236115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.19394496 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.074143855 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.030697224 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.055869977 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.183502323 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.871226718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.856798848 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.193894543 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.066040473 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.995220846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.847623588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.999266061 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.851124339 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.062125906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.20181688 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.878512683 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.092840683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.057162423 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.836027888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.030537516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.849712688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.064947102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.979437644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.380563872 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.853330051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.013619417 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.392727929 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.984492803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.234943835 seconds)
  done (took 166.95511796 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.8298023 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.82930682 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.831443744 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.830696191 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.372015991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.830781049 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.831203972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.831132523 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.280684129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.276723208 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.831295296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.363039284 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.831206575 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.830656609 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.82972854 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.83051742 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.44502522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.830976185 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.831180399 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.830352369 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.832589597 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.22726092 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.833793738 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.24151088 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.454372381 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.83217619 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.831576708 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.832077858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.831207431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.830869354 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.834613201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.832272124 seconds)
  done (took 208.369400084 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.776450926 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.834024604 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.831796602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.832967711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.834477031 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.83537705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.832023738 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.831578179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.44451724 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.437563937 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.833546072 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.833425239 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.835272656 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.831753085 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.833007852 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.832741476 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.83304906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.809681058 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.833904333 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.83378439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.836604503 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.413986122 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.840445276 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.439926813 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.84209394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.841812175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.83226347 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.846626575 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.845381546 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.846372969 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.849225637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.834809764 seconds)
  done (took 218.831070407 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.095169787 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.840635116 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.841857901 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.749977438 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.84438371 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.843282166 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.847798652 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.09022141 seconds)
  done (took 18.929494174 seconds)
done (took 614.845466653 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.305130412 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.153319815 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.022137708 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.868736681 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.128246302 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.895301371 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.860579132 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.928342356 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.493652273 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.931491891 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.530370788 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.881662752 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.613836259 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.891056468 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.985258066 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.922973766 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.431732285 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.522004171 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.035381449 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.93718084 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.03189352 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.795029236 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.945383601 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.538838905 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.632094203 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.846281708 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.932852989 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.441449632 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.873157591 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.02419125 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.616008554 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.176074435 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.874444887 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.857395164 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.917567346 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.895721434 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.140230091 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.873160777 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.983436045 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.591341288 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.954255353 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.396781087 seconds)
  done (took 101.437751073 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.830117998 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.828385101 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.827385231 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.828833684 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.828378963 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.828121538 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.827168273 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.827115805 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.828564251 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.827949765 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.827559471 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.830155583 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.830323946 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.831202837 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.830121426 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.83097257 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.830843505 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.832022544 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.830471651 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.828197752 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.828606942 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.830785976 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.847093763 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.830551783 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.832082303 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.831189326 seconds)
  done (took 49.351203357 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.846540577 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.005101845 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.078747118 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.863929663 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.84172242 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.845206752 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.85937385 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.849355056 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.8442855 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.845370023 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.948333469 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.850622986 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.860930552 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.079277377 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.863322108 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.847649511 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.847965214 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.84621707 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.015268365 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.861423402 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.862436491 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.851161232 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.862672822 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.85624225 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.844757249 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.843472821 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.846190427 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.275091219 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.852327622 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.94838709 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.888697131 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.865918419 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.207701932 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.087822338 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.901530054 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.855408478 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.846457406 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.952944849 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.849172894 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.843831807 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.860924392 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.84891758 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.076373968 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.337070148 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.859327485 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.846764287 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.281847777 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.964467135 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.885858426 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.854995915 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.078645169 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.862682032 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.846501952 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.843042573 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.880433599 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.849697354 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.844479691 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.143933482 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.856815365 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.862969229 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.852444519 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.845510115 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.022072394 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.853670285 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.006135026 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.854540794 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.850767828 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.844843618 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.079548404 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.862556149 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.340856299 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.861252923 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.847695064 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.951193598 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.012596956 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.311801805 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.859964134 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.024460473 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.228993223 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.87187876 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.853282852 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.262055699 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.874614737 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.852484095 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.850829613 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.851336312 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.849052608 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.890276527 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.862377665 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.273565464 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.347839252 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.161931742 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.873666435 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.860869892 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.846002929 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.142551879 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.858799645 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.849222515 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.073459761 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.354815774 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.86195159 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.852828629 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.32690949 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.863777504 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.865086119 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.854976556 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.083173228 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.863798556 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.889616261 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.849045834 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.852953251 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.849178054 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.864585914 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.853710523 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.849803553 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.321334231 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.974294897 seconds)
  done (took 228.944374669 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.845225792 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.846948309 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.842238309 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.859807809 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.841639806 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.846259851 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.841050746 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.842048298 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.845830554 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.841003413 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.841248476 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.841475945 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.84510074 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.84971053 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.852193622 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.848469198 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.446791344 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.842572294 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.843080371 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.843445989 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.501016814 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.850453973 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.842057938 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.841915497 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.841643267 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.844409904 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.846554669 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.84641215 seconds)
  done (took 166.688352588 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.852491895 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.964061855 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.87081334 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.876520298 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.86047726 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.848328571 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.871816506 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.864872558 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.854563628 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.849469836 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.848667132 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.909738524 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.862840373 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.951837832 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.882849001 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.883153715 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.9536212 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.860222743 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.84967455 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.849911126 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.878520551 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.845645215 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.910025739 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.977056482 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.873252069 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.966832396 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.855001344 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.85303545 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.8490752 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.968507172 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.869236593 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.913460396 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.879617091 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.868231157 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.971953811 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.967917206 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.959260619 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.882987887 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.854264955 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.850402549 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.850988221 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.837267205 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.966451867 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.871659974 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.850882468 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.955078073 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.87232455 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.853951839 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.861710269 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.851625347 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.863475775 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.870075474 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.917700772 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.984524721 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.887229215 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.877761545 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.876121036 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.134960434 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.860530403 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.950951065 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.844572657 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.969779858 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.873930195 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.83783921 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.854425184 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.858019105 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.881968952 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.887197235 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.95608893 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.859592526 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.949872015 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.88896918 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.861417965 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.853547887 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.856194055 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.969645724 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.971418456 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.889443391 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.889625677 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.883748528 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.846926093 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.851025536 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.839809238 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.868937231 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.857939106 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.971312503 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.970380235 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.863435368 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.856831786 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.856730794 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.856795677 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.877176803 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.976986283 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.887062299 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.947054403 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.921322861 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.928592654 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.870471725 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.86769222 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.858879131 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.916089891 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.871169379 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.866219328 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.184521502 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.921960198 seconds)
  done (took 200.697198992 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.3376411 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.911255856 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.908741999 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.167337911 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.213866446 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.882597716 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.898706707 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.904618948 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.924507893 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.096366391 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.978176641 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.923971728 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.888593105 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.874776291 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.902495366 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.924009632 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.914626004 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.236523285 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.004101168 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.058718557 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.887832228 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.180464189 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.184678927 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.290165983 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.938169762 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.238753727 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.57237315 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.048537625 seconds)
  done (took 61.069491204 seconds)
done (took 809.94720924 seconds)
SAVING RESULT...
DONE!
