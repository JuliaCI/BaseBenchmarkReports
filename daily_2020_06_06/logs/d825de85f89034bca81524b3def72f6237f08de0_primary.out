cset: moving following pidspec: 24080
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.311059425 seconds)
loading group "string"... done (took 0.648314877 seconds)
loading group "linalg"... done (took 8.26041879 seconds)
loading group "parallel"... done (took 0.172980933 seconds)
loading group "find"... done (took 1.25050618 seconds)
loading group "tuple"... done (took 2.008270408 seconds)
loading group "dates"... done (took 1.33236256 seconds)
loading group "micro"... done (took 0.204327576 seconds)
loading group "io"... done (took 0.959561194 seconds)
loading group "scalar"... done (took 40.80610963 seconds)
loading group "sparse"... done (took 12.807348717 seconds)
loading group "broadcast"... done (took 1.050920405 seconds)
loading group "union"... done (took 14.693571729 seconds)
loading group "simd"... done (took 5.053666218 seconds)
loading group "random"... done (took 10.07715744 seconds)
loading group "problem"... done (took 1.63935537 seconds)
loading group "array"... done (took 23.413743039 seconds)
loading group "misc"... done (took 1.760769805 seconds)
loading group "sort"... done (took 3.72388029 seconds)
loading group "collection"... done (took 20.07753805 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.553510998 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129855045 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140272742 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123945871 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153816935 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 62.851891106 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124409759 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08495532 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.843296355 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147754664 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116516414 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.443097973 seconds)
done (took 68.106328065 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176768574 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088842836 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082648185 seconds)
  done (took 1.219411104 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067721992 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128418167 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069025121 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069580535 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069078456 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068387658 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068757146 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068572131 seconds)
  done (took 1.59102735 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073160571 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070500609 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06884763 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069728941 seconds)
  done (took 1.334475304 seconds)
done (took 5.458298004 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.813301649 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213669825 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192830138 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.424715582 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.139848476 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184673376 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668400411 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34319652 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209056616 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098629683 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116431197 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.367501802 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127107749 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650242664 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081100182 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099814245 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145167884 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.445525694 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072666117 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087392352 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095822762 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134459445 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092056322 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079670396 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153367175 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070879077 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148468851 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.090324896 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069678348 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226277461 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177701957 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663023321 seconds)
  done (took 10.572597909 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101859697 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102800176 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071041086 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128112082 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101552721 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072720341 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077940993 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069870697 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093296986 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133275953 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095026636 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111163843 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068512754 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071934177 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085889516 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201077605 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082597361 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085022737 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07064967 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0855963 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111092283 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08129823 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083126032 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082650385 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132579382 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173053018 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100241787 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10121084 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070613754 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.0842572 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120389578 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130887501 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069408742 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068299351 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128243486 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097366445 seconds)
  done (took 4.632740192 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.119962709 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093372159 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.155751505 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092935143 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143991654 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067765854 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115767506 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068126011 seconds)
    (8/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067733749 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242153483 seconds)
    (10/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085455314 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.471274433 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.0980064 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.635849809 seconds)
    (14/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12643043 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12019147 seconds)
    (16/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109243123 seconds)
    (17/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074059008 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071841531 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069838382 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.263975264 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101220726 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115480475 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085480988 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072287338 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072026007 seconds)
    (26/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.069970303 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07361744 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065555642 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071478951 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090507408 seconds)
    (31/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077815823 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.334400899 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129442272 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071202226 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.851439287 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.172589442 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070434702 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108840792 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.17077087 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094724974 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145104942 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069852965 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06601147 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.299330594 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070914691 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074517309 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068973373 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087994744 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111697052 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123898131 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068037043 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06911642 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171595788 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06738726 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084312208 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.239979669 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153886613 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068899406 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303575525 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097132447 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074999439 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068192428 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.212752976 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117895398 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071064541 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070613083 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071324852 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071289115 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382053821 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071480578 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.122723722 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071428978 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080638453 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073309668 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074308711 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082183675 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082169646 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095669313 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069745375 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076632936 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069677605 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068028749 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069438047 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096055811 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067552586 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.398660386 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06974097 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074603565 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067222972 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096739839 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10130494 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070132903 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068407691 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104770142 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072737014 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068382308 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070060902 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122799475 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072736592 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115144512 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.17296666 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.089415819 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097653566 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075304412 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103583264 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080626351 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073528851 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.469862751 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067919569 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074497794 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068471222 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070704602 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069777711 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080663349 seconds)
  done (took 22.359220952 seconds)
done (took 39.735843979 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247573816 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085486483 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085753023 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086565257 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086655091 seconds)
  done (took 1.730887777 seconds)
done (took 2.851862141 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128925394 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101711878 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066556528 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103191405 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066194078 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103744064 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103440896 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085963613 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103017844 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066643404 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100968544 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067154202 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06664836 seconds)
  done (took 2.302464987 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083070758 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084746598 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071239592 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084072559 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06476539 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083961275 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08511521 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090563729 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08288631 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074004361 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064983507 seconds)
  done (took 1.98388194 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08255712 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085647761 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070469087 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083507915 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064474651 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083612962 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083375086 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087157358 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083650657 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075703145 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06462686 seconds)
  done (took 1.973893707 seconds)
done (took 7.370630841 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076695216 seconds)
  done (took 1.176552895 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.53929798 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.614941395 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080851502 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.103122467 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197926496 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111697997 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.236323091 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085284351 seconds)
  done (took 8.246691172 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10949647 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070802388 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070607374 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070963212 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071314003 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072387003 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073068401 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072077163 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071911174 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071471104 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071193399 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072227944 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070935067 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072058749 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071868978 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072041793 seconds)
  done (took 2.371298006 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098247578 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097963081 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075835817 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077268011 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074695101 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074387653 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077347728 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076254791 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073429854 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075676499 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078480368 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075783827 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075437729 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06612925 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07653578 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07908959 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073444401 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076533439 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077411845 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078218648 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078029223 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066497047 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076004992 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076549148 seconds)
  done (took 3.068937814 seconds)
done (took 15.972956695 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116345272 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080991213 seconds)
  done (took 1.304281835 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079250296 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082333228 seconds)
  done (took 1.277277503 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077274722 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064236127 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086570451 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075969916 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065875137 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065018573 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084758597 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065602226 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065083277 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066028946 seconds)
  done (took 1.832439397 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065381853 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.074888011 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071513803 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081009184 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072645065 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06631366 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07208311 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067656435 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076329128 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065471198 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070991956 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086078945 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070791035 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087404702 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071216297 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070169819 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072270252 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069439882 seconds)
  done (took 2.430711037 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06371113 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065604597 seconds)
  done (took 1.252644016 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067149208 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065740297 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067744637 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067857282 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065175752 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06440985 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065698022 seconds)
  done (took 1.583163549 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410348015 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124751455 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337995466 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072777035 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08289757 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263741321 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066323779 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071605318 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072184598 seconds)
  done (took 2.665807491 seconds)
done (took 13.469939721 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081030885 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086831361 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101185866 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.419569275 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095518661 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070003582 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115528463 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184191707 seconds)
done (took 2.28724654 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220392164 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.085009802 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.500790403 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215213672 seconds)
  done (took 2.931829666 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.464622636 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083634591 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079346562 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069359686 seconds)
  done (took 1.837412841 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06732057 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072163511 seconds)
  done (took 1.271240154 seconds)
done (took 7.396290185 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065707131 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092041648 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066561587 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066337596 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066153692 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066275494 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066481462 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066396717 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066186493 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066209205 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066596156 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066123179 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066948006 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066799251 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066796776 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066563384 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066418145 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066899636 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066915942 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066221809 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066908878 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066458288 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066280207 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066605235 seconds)
  done (took 2.787850649 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082041001 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068530283 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070885671 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070444279 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071231551 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070709054 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070459204 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069562735 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071073926 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068595617 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071597806 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071275628 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068877081 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071178357 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06857508 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071083779 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07059851 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068810406 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068609024 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071664356 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071445306 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069241223 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071179142 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070691248 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071707701 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071279762 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068930169 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068874381 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070490948 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071223455 seconds)
  done (took 3.262425428 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065941407 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062524641 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062966271 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072851051 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063035168 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063480408 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062712216 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062953714 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063581695 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063103881 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064197804 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062937349 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06341869 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063933029 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063611713 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067271077 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080978862 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063359663 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062806289 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06337107 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067356017 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062600397 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062691754 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063005237 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065408406 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062647198 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063545452 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062720803 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063835551 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063029056 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066862836 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067142479 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062697288 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07150711 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067261889 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063747013 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067191299 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06268523 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063676912 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062760696 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062521745 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062577147 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062647761 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07203982 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062955265 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064307537 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063140475 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064304643 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063486482 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065401777 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062939335 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06316411 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064979675 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06406112 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068549859 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063157721 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064194852 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063011926 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063469264 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062628519 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062874464 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062363636 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065795815 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063512943 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080723855 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07173307 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06290897 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064413956 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063352066 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066468777 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064346894 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078413133 seconds)
  done (took 5.829734992 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084899546 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089164713 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06831209 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068425571 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06388593 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063330526 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072023041 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06462691 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068609994 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083748577 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063816923 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068166968 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068569136 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068145102 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063999843 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069648691 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072431933 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064463866 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063422571 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068043336 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064442442 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072372897 seconds)
  done (took 2.691741319 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14866793 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068497091 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108584496 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074300442 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072298093 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074363073 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069539732 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069752269 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069822541 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070492159 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070392595 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070171057 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072559498 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069929519 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070186083 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070024929 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070383578 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070509863 seconds)
  done (took 2.54069552 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078331408 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069471263 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088939601 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068592429 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068939836 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068748088 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073138708 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073842462 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068827226 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069110122 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074015162 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068747866 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068988296 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06907846 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068422657 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069576571 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06861887 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06890696 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074248079 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073160709 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083415922 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073910288 seconds)
  done (took 2.739793177 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078981694 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06819359 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084059655 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070595227 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0640377 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063493272 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06987186 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068295224 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069883166 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068274615 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068338809 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063601507 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07158488 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068875364 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071281856 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068709096 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067711409 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068405883 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067921422 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063761539 seconds)
  done (took 2.53981349 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082902632 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066570131 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066782983 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072793444 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066583925 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066373843 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072988821 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067078047 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067021405 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088156648 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067428156 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067309634 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073535279 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07113018 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06677754 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073109882 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076162665 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073213079 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06719861 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066864081 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087835951 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066755833 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07320545 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066814658 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067140464 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066717575 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06717283 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070833886 seconds)
  done (took 3.138563069 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065412277 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066464858 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066981146 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066382872 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066496766 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066322214 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066278411 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067035532 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066139309 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066864619 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066725719 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066582464 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066217968 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066203718 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066338559 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06665498 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066459078 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067015887 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066871139 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066468797 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066337074 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066572242 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066190651 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066364567 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066276292 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066097021 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066343459 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066402078 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066317971 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066366293 seconds)
  done (took 3.152110192 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075620086 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07569912 seconds)
  done (took 1.308618557 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063973876 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079500433 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062818291 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074839053 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072674626 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066472555 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07308604 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072945735 seconds)
  done (took 1.719657681 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08504922 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077263791 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065916826 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078090799 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077143436 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086461337 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128928784 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066091447 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076383168 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066603941 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08442304 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068232098 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076561685 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070860197 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075908093 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080089 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063865521 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070877399 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067372767 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063784327 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066245337 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079365275 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075466912 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063810869 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071132817 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093423652 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082982861 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065275205 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072732664 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078230667 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075833083 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062394233 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065169156 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066223977 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063610532 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076607411 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08441184 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072580572 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078416289 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066021792 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07375221 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063161104 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074527293 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076344829 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081544815 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066042942 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066536522 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062997226 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066484529 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072080665 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063730386 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070339037 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062811957 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078148973 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073277155 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08101996 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064392895 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071039644 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072512868 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072470224 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077192521 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071426847 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075396821 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064644509 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081102739 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075542687 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077609443 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063289593 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062439593 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064159769 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079940724 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094973822 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076421971 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066119641 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066072798 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063472628 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072806229 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06625496 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07488961 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077052456 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065143904 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07013105 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077984033 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070162136 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071710435 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071872905 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063876973 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068910453 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066133774 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085962392 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064037499 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063114621 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066133253 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080875212 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074665942 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064470884 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066201197 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076960885 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062263236 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065515672 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065632991 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071028341 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079696964 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069060797 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069441642 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079069673 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074415714 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070305214 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07177379 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062069764 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065566592 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066963757 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077103297 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061612078 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071188729 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068184314 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064243959 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076041529 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062710604 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06385056 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076897134 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075881849 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062601567 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061146008 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071101913 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063897652 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066022398 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077671567 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062682097 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062157176 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061976864 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071806147 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063613549 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072112803 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067842002 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071732778 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.187653808 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064146842 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071924023 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079075154 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069953094 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072007359 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076436962 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07289123 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064827596 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078392961 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072661663 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067601628 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075360593 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069472412 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063954694 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068253375 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072534731 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064306733 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072624422 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067455515 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072379483 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065993061 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064557994 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071304711 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066187556 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068622491 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070890727 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064456422 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081288504 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071880522 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06331696 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062979433 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072864879 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066596039 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064557724 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067373499 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071575887 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065944181 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063743064 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065047509 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071975044 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074073774 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068651431 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066020298 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075013849 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084043812 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064677266 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072253142 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065195895 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066770814 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066562649 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080528071 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076238943 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070308342 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072822866 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062991422 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075276873 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078217405 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068064915 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064006159 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067893835 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069260641 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07803775 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069056496 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066137454 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063972517 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071504907 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068394844 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072495656 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065015587 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068295169 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07140073 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064174723 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072182046 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066824174 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080343229 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072824527 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063578194 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06787685 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064040454 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077576989 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063601616 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066663761 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06805115 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066238837 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064405267 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072670735 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062951386 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078245199 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078864962 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071175376 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068268797 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065359995 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078108741 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071197657 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07395028 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072931048 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075429164 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080809729 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068028998 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072713725 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081334815 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065319812 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062566524 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074782632 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067246344 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064185204 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064755665 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064576233 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073145953 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072674097 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075858584 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063169962 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072632618 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064040672 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06780581 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06364672 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073887762 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072480462 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069357639 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077543401 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065316051 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065001514 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072181544 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064043597 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065021355 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065180863 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07154414 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064892471 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070530976 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067339398 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070694426 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066987775 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062376773 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070767888 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06446235 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069964018 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0733887 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06444448 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070415726 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071545592 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064560883 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.201814808 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071476979 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069917953 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075165293 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073720594 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072071947 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073792699 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064116218 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078508812 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065632246 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079611455 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070720492 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063686988 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071599056 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072913374 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070797282 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066321036 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066260999 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071918872 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064782718 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073401754 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078256392 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067012296 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082105662 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07713183 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071888482 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072598801 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070977132 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07147144 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067878197 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069962129 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06606284 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071250645 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065439992 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074081703 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072565948 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07054652 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071941251 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066076086 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070805222 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066094489 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062837956 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068423699 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068154293 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065614999 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078975676 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065783086 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068750469 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064904942 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066638375 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065170353 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063298133 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073253668 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073773412 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066572595 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076831232 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.0684503 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072111927 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082125165 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063535061 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064684793 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06462346 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066853306 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078636572 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066540776 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079808245 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071312362 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068318559 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063090892 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066202681 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064655041 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063601898 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064171628 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074641871 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067873227 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064949735 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06555056 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07306599 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066387827 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079031207 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064907512 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070188749 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065846799 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063557871 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068171028 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067957818 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072789392 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066265148 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066994744 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.0636727 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065287424 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070438769 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072312716 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065085294 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071679903 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078214358 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065750784 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073232533 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068233711 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063817592 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072905046 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065301481 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065460591 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068132518 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073559268 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073299141 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066487723 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080503699 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065580818 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074042688 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065806639 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063928175 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065307386 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065592818 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065242396 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068025092 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066538446 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07872664 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063443837 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071979323 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071026975 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069450975 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076058887 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065837893 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07084959 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069644852 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066215461 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070955374 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078253923 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067935099 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072193256 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064989219 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070037577 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074405536 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067009679 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076664933 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069772747 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064546183 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070032776 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065878346 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064586 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06414785 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064063076 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074369402 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.19917764 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069319348 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070000417 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064601188 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070912001 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069071623 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079484398 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073356038 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073237244 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064326411 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063120241 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066787315 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067269136 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071507719 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072675602 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07602546 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072799291 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069609621 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064827538 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080397757 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075938171 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074036109 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067225019 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073530006 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066344675 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.074311144 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070151515 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070791998 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066199451 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074036151 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072104267 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068906188 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076747451 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074117503 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066688786 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071899493 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072006405 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071143151 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063793198 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066226866 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072463117 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074657849 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073200793 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066128765 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081528696 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066910471 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070869423 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068078143 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06530287 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075193044 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064072853 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072974692 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066925501 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066492784 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06445136 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068729471 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067456844 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072997202 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068583789 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064266638 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082424168 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081159325 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072822026 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065509266 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064920378 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064321551 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064147989 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068716363 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067448633 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071875479 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081393962 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068556245 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068593382 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063833597 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066129103 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073274438 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073927353 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063785436 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064165544 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068552215 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072037509 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077718141 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064910343 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06590925 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073142601 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072407658 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064095438 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068649114 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063167904 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074102514 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083592449 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066511516 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072262792 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07602344 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079137707 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066557596 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063814914 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065884306 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072136146 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071359378 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066862827 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066972779 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085626094 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073714797 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068284908 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064938121 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073058491 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068995084 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079572847 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066458625 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06624852 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074836015 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075262496 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07378134 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076135263 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07768464 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071931821 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072187418 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065259959 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070809588 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06458765 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068196049 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066932261 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066073301 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071435888 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071493656 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067584416 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080300284 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079018713 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067957894 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062893392 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067757167 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067874085 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062940149 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065183563 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06307306 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063113893 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063124344 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063217203 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070595071 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073876969 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068824343 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064676159 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064483513 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.195716569 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.077197322 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073872666 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073208996 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064331125 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066778557 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06740551 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075360118 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069208352 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067643827 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072358344 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071811165 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072131227 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064821412 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077872513 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06490952 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072636494 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068030486 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065811081 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066680576 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073834821 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070263142 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06704914 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07323189 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073241868 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067968644 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063769429 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063663969 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075370021 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064336618 seconds)
  done (took 43.49939068 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100004921 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065034968 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064278394 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063985661 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073998487 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06528855 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064359526 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065508834 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065543919 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06743582 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064346682 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06490093 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072451647 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080337656 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075073831 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069125012 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06468057 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065954835 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064726328 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06577927 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072397603 seconds)
  done (took 2.700905644 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070335452 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077994269 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077259421 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082132158 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073325974 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069791095 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077507336 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069686624 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07764214 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074983064 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078606166 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069690373 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075128651 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074867704 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074592046 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069744804 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078167865 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073973208 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069760136 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077840547 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070362656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077798708 seconds)
  done (took 2.877151856 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064765824 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064951042 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072317532 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062909429 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064985516 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.0636494 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068478878 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063618392 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.0682074 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068119753 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068020805 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068267606 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072474361 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063837636 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069098239 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063609513 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.11249096 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067744391 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065478004 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066483336 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063947338 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073481013 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064224538 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06440694 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067380072 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06826237 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065729798 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064398622 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065101328 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067770352 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065164089 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063594136 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072669849 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071754099 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067537089 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067514288 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064919924 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066318441 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06456486 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063867346 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071985693 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064083374 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068282873 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072872036 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063871562 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063823107 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072089384 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065429669 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063895355 seconds)
  done (took 4.557384395 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074758451 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113044237 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070708876 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093509778 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07917685 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071652798 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070858412 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095606403 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065862812 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066962552 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080161155 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080726136 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068559736 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069186682 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070895675 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067730079 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069071155 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067370471 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071331857 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066845023 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070821047 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07189276 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079066093 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079824747 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068639208 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067493883 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067257003 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069253952 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079801517 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071447995 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069577587 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069782227 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079871902 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070795459 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067527497 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067209481 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080544442 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068281265 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067701396 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066125188 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06689699 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069065029 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072349675 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081126983 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067770648 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072845696 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067579356 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065182245 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079441021 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067576257 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072560464 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080921868 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068895735 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068132799 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069561776 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079867294 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.0676248 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066292278 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068432584 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079643127 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066075918 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068318844 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080203573 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067132531 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071417889 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080607486 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073052659 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06872823 seconds)
  done (took 6.333089606 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072737137 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097793712 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08216139 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081994801 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075484985 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076350287 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07621205 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076084331 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075848236 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079964937 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075734216 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118653437 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072313082 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077720549 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076446435 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076614978 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093457749 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0764287 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075470211 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07509227 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075484055 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081960974 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0754241 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081700685 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078767039 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070759153 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075111332 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075217772 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081983728 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075801631 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078372744 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076052376 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075527589 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081863483 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078698216 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075103974 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065316629 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075707701 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075313517 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07521095 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071272981 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08257578 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075348823 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071241022 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075369983 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075270174 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081622258 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078790955 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077444202 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078943285 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075362367 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081535382 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075103442 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074979544 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081739796 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084978158 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0818451 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08184518 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075745152 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082200871 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081368565 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084423082 seconds)
  done (took 6.136594189 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077714996 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071973576 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083633263 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063549901 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063537302 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074928296 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063494591 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064059869 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072268885 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075046379 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074478603 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074354638 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077254808 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075006894 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074561153 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077376924 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074097393 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074591364 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072380838 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074305004 seconds)
  done (took 2.740534569 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076780302 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083837926 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070258637 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074302781 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069167649 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07441798 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068715321 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069436215 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070146452 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069664913 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07561325 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075800454 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070142689 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074595526 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075734085 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074124444 seconds)
  done (took 2.439803649 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084001456 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073221047 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079561682 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065113967 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068814971 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064544721 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064852707 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063378361 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064663912 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078514851 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065167418 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076785589 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064945261 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064117317 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064608067 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070854642 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064579377 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065134076 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06530185 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078886857 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072572367 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066358638 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068979947 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065206031 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071222097 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072967241 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066830609 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068889644 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065457669 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065842153 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071670054 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072210153 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064598226 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065836477 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064391801 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064949985 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065006792 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084198613 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07121782 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065170331 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063553739 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070245684 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065105521 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066154358 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064573267 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06550285 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064341411 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071344872 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065409997 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070761911 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065898924 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06725148 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065812516 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072881025 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06802194 seconds)
  done (took 5.036097673 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078535802 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069606404 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063750819 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063418841 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069030046 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06967796 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069097933 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069916984 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069897036 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06327565 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070104677 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068928872 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06991077 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069580632 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070279298 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069577507 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063370613 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069448351 seconds)
  done (took 2.5197852 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072709382 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068685849 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073024231 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068286108 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068415199 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068756942 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064058789 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063883606 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064640581 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06837026 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068574361 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068475993 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064043436 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068429063 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068982096 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068600443 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068171547 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063914671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068690645 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063944478 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068225621 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064114849 seconds)
  done (took 2.755433735 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096729764 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086515215 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143900481 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.0813024 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089248361 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074149126 seconds)
  done (took 1.844386353 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092134635 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100058497 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068549099 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069148123 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074797126 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071970166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072335535 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072879782 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07661935 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077729229 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072269316 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077333269 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07720557 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079673324 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074810622 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074930764 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07499323 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072502037 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068940104 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082210542 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073042906 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077494791 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072939098 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072448962 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072508309 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079609919 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077129433 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077690071 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072788866 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077676015 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074965863 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07302039 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077408927 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077626234 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069816099 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0770313 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073128576 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082342667 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075207237 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079017517 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069328335 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075145099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077398713 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076545708 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077416707 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073270312 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076417086 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072652451 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072673396 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087059754 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074930091 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078867381 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075623281 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077118283 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07704574 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083440142 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077189065 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078537651 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074626642 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077538269 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079035746 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074604814 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07892251 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077408616 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074584696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079361264 seconds)
  done (took 6.319226827 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103880567 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069999893 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072459449 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077714425 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078746511 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072828969 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072617278 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072690794 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072943832 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070080732 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107841232 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072784805 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079364107 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080287723 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073130958 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07277405 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072845923 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079962296 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070178262 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084258968 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072873928 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07910494 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079376995 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07995234 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078248181 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075440642 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072658933 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073111278 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072663737 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072913982 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076391147 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072649151 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079244902 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069478931 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079038348 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072810365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073183396 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077051927 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072928289 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074971522 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079331606 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082328718 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072532512 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073004072 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077927676 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072533751 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072433283 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069652682 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072464817 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069355198 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077317316 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077517459 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077171853 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079124219 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072639488 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072343228 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072682859 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0722007 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074183288 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075019173 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07864313 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072300063 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084004733 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073096296 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07323787 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079027483 seconds)
  done (took 6.311427912 seconds)
done (took 128.915266311 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212091461 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186578265 seconds)
  done (took 1.662948213 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074010915 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.107226647 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08507142 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135913603 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071290462 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108733903 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104898379 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083538162 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073754159 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073618153 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073512704 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07610845 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139352954 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071425396 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073376718 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076467882 seconds)
  done (took 2.710140985 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104691887 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.17263 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111104818 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070852487 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10743749 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079446395 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071900143 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084480977 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078203035 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073381205 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080269491 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077961562 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073232003 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080951939 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078190325 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079782376 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072613273 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079405791 seconds)
  done (took 2.862707963 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103344163 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097861375 seconds)
  done (took 1.489367111 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173987762 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133643546 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202278962 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.340535573 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15636284 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.433570928 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142269812 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141156603 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116446651 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134789625 seconds)
  done (took 3.257514827 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103828794 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.204285983 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302096198 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124452053 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078490113 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114654443 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125179624 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084232279 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082426147 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082453029 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08165557 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080710006 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103537574 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079114287 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077767097 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080689076 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106868429 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077332802 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078301002 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079475387 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106699644 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07195418 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078989882 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077166993 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080544206 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080529038 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073597303 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.07180015 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078352561 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07762004 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082009255 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111363617 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080124232 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107077977 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076565003 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10801887 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081278824 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076583795 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077963162 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07650438 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079901765 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079485144 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080385844 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080582223 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073370446 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080684123 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073092842 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071234113 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082681868 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073392909 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082724279 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082028135 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1068326 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072842252 seconds)
  done (took 6.252647893 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107830255 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106579175 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073167382 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115877587 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106979235 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073052921 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109138175 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102045342 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111132519 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073808132 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071341489 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073024224 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082930548 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084860332 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119666268 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108783061 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075484505 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07276349 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110835924 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110554677 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071823704 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104630523 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100421706 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111303027 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07137246 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073668709 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071424599 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073064342 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078737658 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080313228 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071916281 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081943154 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090201207 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080147429 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070769085 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071333378 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071278126 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080943719 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080983876 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080976283 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079395314 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070992515 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071491205 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072441746 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071940912 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070123621 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079609671 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08130368 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079503389 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071621792 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072793752 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071485095 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072590341 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080580098 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07841716 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082197352 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081180176 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071449608 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07150125 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074193398 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081743373 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081327239 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080796667 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071939871 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081070465 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071325 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083098397 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086151008 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074056118 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072315955 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071116438 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07156058 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071958619 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078263964 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078785656 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072626387 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071287483 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071033308 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081150265 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079089028 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071545523 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07845123 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070566546 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07102313 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072361259 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072753214 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07870864 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08119089 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07322034 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071312753 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071490158 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071176911 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069965516 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079013326 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080212614 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080621314 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079292823 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072618391 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080140217 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079150536 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072539397 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080499702 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071022588 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072610552 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07144111 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078787667 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077289827 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079986215 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071122277 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07045302 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077527779 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079916166 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070369768 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077355765 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080050748 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077658619 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069824946 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080576895 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070942428 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080084482 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070490899 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215457542 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074078413 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081485738 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072977869 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071782127 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072227385 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080944494 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073956094 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071880961 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072941165 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071964535 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080295097 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084103262 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073556417 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080217231 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079550362 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072869913 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080223196 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071488487 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080311753 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071916925 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072170363 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070471622 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083045361 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072281666 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071502447 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071821328 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081301798 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072159915 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081296233 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079318101 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071006887 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086262853 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081870963 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078959378 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081729245 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073381093 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071226237 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071218847 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071422959 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078566631 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080494146 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073130346 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071333132 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078756342 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082491399 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071156039 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079894364 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07976722 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079947342 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071890733 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071861407 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082730533 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083045172 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.0800646 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079890848 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080427157 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072400288 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079285662 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080025797 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072050696 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086626924 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071862683 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084124501 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080691987 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078742509 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080594182 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082217587 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08210867 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082155086 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086083691 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071383124 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071313088 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080013229 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071422591 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071554655 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079488635 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073177672 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072638643 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085597023 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070017912 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.08206794 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071517689 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081018885 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071392096 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072897978 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085177845 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072173459 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072504342 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079620695 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072032241 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079379559 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083056441 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07893081 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074110097 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072893689 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081351654 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081040615 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071706042 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071307459 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073074621 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079117248 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078448032 seconds)
  done (took 18.996676897 seconds)
done (took 38.529983301 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.220390847 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.161683318 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199174942 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121965368 seconds)
  done (took 2.095605098 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108006644 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102729147 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091456615 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068094681 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097690424 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068492316 seconds)
  done (took 1.860889311 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.350734343 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.225465768 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.202596649 seconds)
  done (took 2.09896389 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.228595008 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211696541 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47645019 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29446665 seconds)
  done (took 2.631650451 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147410464 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085807576 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06745291 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081135775 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127542403 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.178053337 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096306235 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.13065631 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074648388 seconds)
  done (took 2.364876939 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153192384 seconds)
done (took 12.555990877 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.254885333 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.101102115 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071651671 seconds)
    (4/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.15823664 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.208922271 seconds)
    (6/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.103715289 seconds)
    (7/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07871434 seconds)
    (8/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077714122 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073318782 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.121009449 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.104684889 seconds)
    (12/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.155725711 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079326492 seconds)
    (14/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.174506136 seconds)
    (15/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.180077354 seconds)
    (16/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.427461355 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.158146985 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139700833 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.249864586 seconds)
    (20/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.214830631 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108213483 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10437423 seconds)
    (23/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.120602647 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.078607968 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088293238 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077889269 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.208373358 seconds)
    (28/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.240584194 seconds)
    (29/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.212597758 seconds)
    (30/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077101507 seconds)
    (31/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.179924202 seconds)
    (32/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.132037888 seconds)
    (33/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.175768663 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087751556 seconds)
    (35/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.081626738 seconds)
    (36/309) benchmarking ("sort", Float32, false)...
    done (took 0.136504803 seconds)
    (37/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096370795 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.183775335 seconds)
    (39/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074126243 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.140132418 seconds)
    (41/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.175860952 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.121970429 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.081355772 seconds)
    (44/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080742105 seconds)
    (45/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079487994 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103589017 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076817454 seconds)
    (48/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.081718583 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067400483 seconds)
    (50/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078676981 seconds)
    (51/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069371725 seconds)
    (52/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171062903 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.148580937 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.068656124 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176367788 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.176997107 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068528678 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 0.069185316 seconds)
    (59/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.243948101 seconds)
    (60/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.200671806 seconds)
    (61/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156100661 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076050583 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069332168 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067522756 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077078055 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142373272 seconds)
    (67/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078496684 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067279881 seconds)
    (69/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077913877 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169977746 seconds)
    (71/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076966355 seconds)
    (72/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.131960307 seconds)
    (73/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.0771105 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078868354 seconds)
    (75/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.090006284 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074729292 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.205260782 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129568954 seconds)
    (79/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.180906167 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068395876 seconds)
    (81/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080239719 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104779363 seconds)
    (83/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.181571565 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074567134 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.171972408 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.137357375 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088978818 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068682406 seconds)
    (89/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.220272584 seconds)
    (90/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.284051013 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.211319846 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126201314 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06974211 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073029141 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092460033 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072507384 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.072915779 seconds)
    (98/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08118684 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069110727 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07530348 seconds)
    (101/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075517857 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.221813945 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084580979 seconds)
    (104/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07151168 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088096262 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069798531 seconds)
    (107/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.082243221 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.188505809 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.185644369 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092180574 seconds)
    (111/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.145063707 seconds)
    (112/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079919012 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.075680405 seconds)
    (114/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.098468572 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17579735 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077001222 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097546136 seconds)
    (118/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070940128 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077222445 seconds)
    (120/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.080817488 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.208619752 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.095897455 seconds)
    (123/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.082300661 seconds)
    (124/309) benchmarking ("sort", Float64, false)...
    done (took 0.134880497 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.069128809 seconds)
    (126/309) benchmarking ("sort", BigInt, false)...
    done (took 0.198176928 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081402122 seconds)
    (128/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.069089028 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06833662 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07854286 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076268612 seconds)
    (132/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069151255 seconds)
    (133/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.177299127 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077540388 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069000568 seconds)
    (136/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069925841 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077158271 seconds)
    (138/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.081934318 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.224840931 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.203896791 seconds)
    (141/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070447125 seconds)
    (142/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084014904 seconds)
    (143/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09283768 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076863093 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12922059 seconds)
    (146/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06884091 seconds)
    (147/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068480876 seconds)
    (148/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077384271 seconds)
    (149/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095633183 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094936679 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07770407 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06743673 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068463976 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088961786 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09077893 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126237493 seconds)
    (157/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073125455 seconds)
    (158/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095637419 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068694052 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091046705 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177244335 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067665369 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183417542 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.0765118 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072789501 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068133207 seconds)
    (167/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067873746 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093527251 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146344312 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068319529 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076506088 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094199434 seconds)
    (173/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076948876 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094599211 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137559761 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072794911 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080977706 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076713269 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.142076788 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09716076 seconds)
    (181/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180592117 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069669033 seconds)
    (183/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.223674312 seconds)
    (184/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.131285246 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068551841 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080743852 seconds)
    (187/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067930834 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071658932 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068599841 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068433838 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067280881 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091762342 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.21456393 seconds)
    (194/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066876459 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067336646 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.070396299 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075023224 seconds)
    (198/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068795602 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.218140817 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06817234 seconds)
    (201/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068480699 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071557662 seconds)
    (203/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122317815 seconds)
    (204/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074329279 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074440962 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088840059 seconds)
    (207/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.129518944 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092394415 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089369738 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.237772396 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.080433975 seconds)
    (212/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.071884461 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081532761 seconds)
    (214/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072049146 seconds)
    (215/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.071184797 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142145355 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078439587 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075544835 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077730151 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092658158 seconds)
    (221/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077652438 seconds)
    (222/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077603188 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.069674551 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.176006288 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122791286 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071243898 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149315974 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.071364393 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138313901 seconds)
    (230/309) benchmarking ("sort", Int8, false)...
    done (took 0.150275409 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078454883 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117422546 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072413915 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09144917 seconds)
    (235/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071247521 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075516365 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132411071 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175011482 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.186581143 seconds)
    (240/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071259072 seconds)
    (241/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.089996252 seconds)
    (242/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068709132 seconds)
    (243/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070801604 seconds)
    (244/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.082091348 seconds)
    (245/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070921043 seconds)
    (246/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069640768 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068583675 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081153981 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113053474 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.071417286 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068741024 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070699806 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068811874 seconds)
    (254/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069365975 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07229911 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080547627 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068172796 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.070620673 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139962974 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07007772 seconds)
    (261/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069059828 seconds)
    (262/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072595679 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.126577019 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078422988 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075875808 seconds)
    (266/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068985598 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068589583 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.069188305 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075332653 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068572687 seconds)
    (271/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06972314 seconds)
    (272/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095809034 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068520723 seconds)
    (274/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075320256 seconds)
    (275/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.069413866 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148115164 seconds)
    (277/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068573279 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068768869 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068717475 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.07038564 seconds)
    (281/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.068518206 seconds)
    (282/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076577857 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069130113 seconds)
    (284/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069295625 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072025639 seconds)
    (286/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069141331 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.081933051 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091162324 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067844715 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077293639 seconds)
    (291/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.069199927 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139947514 seconds)
    (293/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.069528069 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068849042 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127652929 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070178632 seconds)
    (297/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068420151 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075120912 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.069000914 seconds)
    (300/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067418772 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069296574 seconds)
    (302/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.08020265 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069112223 seconds)
    (304/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095368687 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068776907 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068024152 seconds)
    (307/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069452255 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182295719 seconds)
    (309/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067942786 seconds)
  done (took 33.961904521 seconds)
done (took 35.296094498 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088238538 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104688631 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077434846 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098079544 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085149339 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101525492 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07776014 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083187557 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085857591 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083808794 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082488805 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075743096 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078217 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07815613 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075987674 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101180229 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083192969 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077087128 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077023104 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068695415 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076971935 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068896402 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068139828 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075869897 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080754681 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076340338 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078640845 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078200689 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068845964 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069383294 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073700187 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077770252 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06877947 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081467374 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078023761 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077578225 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078474296 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081565091 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068447213 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069152392 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079024008 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068813721 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07715997 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075424133 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073689146 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075176586 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076967132 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081471101 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101411634 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074210843 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07873454 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.08001527 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080612337 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07483344 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073944179 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076797748 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074732363 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100854015 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077125264 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074457427 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078575426 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078012845 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075095696 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076577802 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076902338 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079052419 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081228771 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074739813 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078986539 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075384127 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068441808 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077109737 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073342185 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068659903 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079720405 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081611013 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067767084 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073064058 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076807643 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077162025 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071155995 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073941537 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067687099 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073213294 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073331823 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.075157853 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073365164 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07543482 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067893288 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077037259 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075626035 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076330763 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067854302 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.08185067 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068307152 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074728659 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068570834 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068243467 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067836495 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073384268 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068050292 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073154706 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07733409 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067393855 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074008122 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08168699 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067938212 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075444692 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067748315 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068455256 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08023938 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079362654 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068747418 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073722521 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068146702 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073899189 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068441441 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067992507 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067969396 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068249285 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072582664 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068268129 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072965142 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073641093 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08078347 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067408296 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072575307 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073236164 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067895971 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074780572 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06778908 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067870787 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067445846 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081991715 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07289326 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067912406 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073058496 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072770452 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075933052 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067363451 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076013061 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072880686 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071821606 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073588983 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066513981 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078534871 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072362707 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071957175 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066536888 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066705264 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066334554 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066924662 seconds)
done (took 12.911630183 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07032622 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.121615536 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095988002 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096748418 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085851365 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069656154 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076968044 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095190207 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071319571 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099822179 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091883946 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091581637 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112832993 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068546764 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068888556 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070383002 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070479286 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081915484 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.09783054 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092190996 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.110129585 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068927875 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.089331149 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090281663 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087030595 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093988679 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070453488 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070660012 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072884684 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09170013 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09530214 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07224024 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070440251 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.094125171 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088468529 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083566717 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069685901 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078186303 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069984992 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069125335 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07056266 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090557917 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077860831 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080397392 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07040208 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077355309 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07055321 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085590592 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088201179 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078302839 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085431785 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.094643363 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073765405 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086567491 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06929813 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085446563 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079547002 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069983034 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.0697555 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074379713 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069564056 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071392982 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08156435 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078757765 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074609841 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085327369 seconds)
  done (took 6.793477692 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084799048 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096739068 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086215799 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086554615 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068819823 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069389233 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069074493 seconds)
  done (took 1.990007788 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070325969 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090607013 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093152635 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093189582 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086215727 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094018111 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077519544 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070200651 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099652404 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068659013 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089697748 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10096812 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073339682 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081702331 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095060054 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069308497 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094426318 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069614734 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070257615 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094366283 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074608906 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097269667 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080990851 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070032395 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082466564 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.07058395 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103461822 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07762875 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071194014 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071165156 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071049922 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097475342 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082198392 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084723997 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070537116 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084831116 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08367779 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07269346 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080417603 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080034129 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083082155 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070696298 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068375108 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070884996 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073151831 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081047854 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068167973 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070715775 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070658577 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089193432 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068471102 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082759595 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073324151 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076223452 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075667346 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074888466 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077961119 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071427685 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089641045 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070583208 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087468765 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086791028 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083111684 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087081644 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070317307 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082364222 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083173718 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070908412 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07166388 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071474543 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087612069 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07314373 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071290227 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081882349 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069754452 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094694001 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093946512 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06924538 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083857388 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07026519 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071083904 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081614813 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094248987 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075464397 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07066752 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074727028 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07171248 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073198982 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068648498 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073830557 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071061401 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075406967 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07138893 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073721258 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072869436 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086613284 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069139861 seconds)
  done (took 9.075872891 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069756132 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070393745 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071880467 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070403734 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070397262 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070789693 seconds)
  done (took 1.882450584 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099612946 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070210861 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083564453 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071030844 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107156376 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086761251 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087083652 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08933158 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08445968 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082316821 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086744017 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089945251 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091364305 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073136478 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086278007 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071817876 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087277309 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075777308 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082123206 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073457133 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084539711 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073347466 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073401998 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090919046 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.0746094 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071712123 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08075023 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082435123 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08198712 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.096272077 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073023149 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074549152 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078950321 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.088813559 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08715643 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078895921 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070527073 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076930681 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073612512 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074834304 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089065199 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072790298 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073174097 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076958853 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.091948281 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078882901 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077040598 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079507985 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086644519 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077186791 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077238748 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071352771 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074463163 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07719341 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07889009 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088840915 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077138433 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.0860368 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0728436 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.079188729 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07063385 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074291764 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090690746 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074176814 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078849279 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077267804 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.079036165 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07290026 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073701643 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07053473 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077360797 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071863125 seconds)
  done (took 7.191571577 seconds)
done (took 28.38325313 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533538897 seconds)
  done (took 1.944444775 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.626356619 seconds)
  done (took 2.068017848 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.553799811 seconds)
  done (took 7.988462419 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.430338432 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.665976143 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.767946294 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138645263 seconds)
  done (took 3.47172251 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.711243989 seconds)
  done (took 2.160791979 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237777118 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23233968 seconds)
  done (took 1.92789365 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347887559 seconds)
  done (took 1.784041423 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.073415929 seconds)
  done (took 2.512332919 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.254308239 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173672626 seconds)
  done (took 1.871604123 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.45096091 seconds)
  done (took 1.891284579 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.223418047 seconds)
  done (took 5.667280725 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223644461 seconds)
  done (took 1.702116981 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235645322 seconds)
  done (took 1.679312001 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.727091434 seconds)
  done (took 3.171827143 seconds)
done (took 41.292262707 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083456014 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088733155 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08888355 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084451309 seconds)
  done (took 1.771132989 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075079422 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073866209 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077564449 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073114141 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077048623 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073240787 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074570643 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075832754 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072942537 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073953154 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073192012 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073609209 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076332105 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075121746 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071751264 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076049441 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077112241 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073539087 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076248497 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073191916 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071374953 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076276509 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075969259 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072126619 seconds)
  done (took 3.237176656 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078715868 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075184717 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078043139 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074366841 seconds)
  done (took 1.760160582 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077580793 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091451786 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089918107 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079981819 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091800065 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087028023 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069779614 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069340115 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070846112 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079644935 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069121786 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096451752 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089110219 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079619704 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082044614 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066204282 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068170146 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088430682 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080592296 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080656341 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07074743 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079730373 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069356792 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08999124 seconds)
  done (took 3.367622528 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087385575 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06868511 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.089413623 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095008153 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096571741 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068649236 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08822631 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096865125 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.145198914 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068838514 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07454647 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068897524 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108140705 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068761075 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089077745 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112199134 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115806165 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072770181 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102142738 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071861319 seconds)
  done (took 3.24736774 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084202916 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071923406 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072716056 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067940689 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078734407 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07611854 seconds)
  done (took 1.91246563 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068968766 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070494465 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070546933 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069313828 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074770031 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.07023474 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068922126 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070209654 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070678067 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070464885 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069629741 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068854365 seconds)
  done (took 2.300148661 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.194765614 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073057979 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074171286 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069682941 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075513483 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069554939 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08578995 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072073795 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098080212 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069586913 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069917707 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072482305 seconds)
  done (took 2.48166031 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190946698 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076766599 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226486488 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148173862 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106315886 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112698678 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114616712 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111108002 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136331118 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09995806 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156869691 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162128514 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106452889 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132252035 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090386953 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.123496594 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147648745 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15839926 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102617183 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158088393 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138052796 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125222754 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144936129 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099406264 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103972159 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120025859 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073724448 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079831378 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161471025 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125692076 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138246062 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107659561 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092929503 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175122022 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159602695 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134351519 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145013593 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08440386 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.121074382 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132354112 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19758895 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089536884 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151322554 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104719997 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079261577 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125662245 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111764878 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117075235 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102568015 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088817219 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275548195 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176196718 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131061588 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086833769 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119519547 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108622962 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112784944 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117393511 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219384465 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153691195 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123636125 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072087284 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109954834 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145879181 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12884948 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107126393 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120509869 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092882523 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127267258 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155851929 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150034269 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13581516 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.14272855 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087527627 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117807277 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133386481 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125154557 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165074897 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121329645 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073769414 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118460001 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098458023 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080654958 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144734375 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07583302 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169088291 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098836432 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.124289861 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128701715 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107482581 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107460618 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152688227 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136997031 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104205843 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086859054 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102100078 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.1181123 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143180284 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086853765 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106079298 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110973666 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079233309 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127539761 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074599986 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115825289 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094447224 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114629972 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121580429 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078798058 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118418433 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099410782 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099566595 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123150839 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147926144 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086601032 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079828484 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151130532 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114106262 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099567956 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130258877 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144038021 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11604754 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09209082 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129464362 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153543066 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086431364 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144925313 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097129246 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082282499 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.101466647 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114242544 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103613094 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.114595239 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079480081 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.110977968 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147654097 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073829693 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093183307 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121906001 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080084263 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079127803 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099715072 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098355022 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093426386 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.096885555 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099385058 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123479299 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113809577 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100972484 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113403572 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094686307 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146308139 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084943291 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099995083 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100606819 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071548994 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.121076878 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139739718 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078036914 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143074696 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.111682234 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110161248 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110672382 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081910815 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126802678 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076995521 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072595255 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127230978 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.364458212 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111616164 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151002641 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116387134 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125044483 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120854377 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130807897 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127242332 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12893808 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116528864 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.09172342 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116546632 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16407353 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075989394 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093783369 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084159615 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104546231 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096136986 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086332583 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136738807 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12409031 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111837961 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115280207 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097769398 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147520055 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080043661 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122616666 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.121142734 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095966744 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150743541 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147974798 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129478861 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101505109 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133735268 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074132364 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075957122 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089600158 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121937634 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084932858 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084842491 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112690049 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14670053 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127587277 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132699285 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122424329 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118227385 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15335729 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074244319 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119482935 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139812314 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119225755 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105160968 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093031453 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098944987 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139789061 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103221734 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199594538 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111699778 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119882169 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.306787282 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102428656 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080628943 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104970644 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127568447 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100892769 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138821073 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09911282 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087323834 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106926521 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078818485 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098440823 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131587114 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115158989 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132907817 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11092443 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126965194 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078789553 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112307917 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121934879 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122486332 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084744598 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118807441 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161656624 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104093807 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115239966 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145943724 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079945192 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138587695 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166019888 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139061051 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085362337 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104284754 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120802221 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123693659 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120808043 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1342963 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103121469 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134161566 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110225462 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085034767 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086400059 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095290776 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102860125 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.112294991 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103782183 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112895685 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095541681 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132629195 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102053052 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109981877 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116081017 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100223522 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095860321 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095989915 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167529233 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114822299 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159991255 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098519879 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135962291 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.303422446 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076543643 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079593899 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080854812 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133448354 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084916147 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12693394 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111189312 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114632229 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119795386 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13304456 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096691856 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07159787 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108394568 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128787007 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120578478 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097327606 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104051874 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157588412 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118663661 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080343653 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112033423 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115416299 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104515987 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168761409 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083358936 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109386541 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077392708 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080863345 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123774609 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145727484 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086541531 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103843429 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118506284 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11040201 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123414721 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097526627 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110485912 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128685501 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141526497 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123290272 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090274213 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109625732 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124936744 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147925356 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102886504 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100090537 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167027952 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146682244 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156289779 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088220592 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112495288 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112317882 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108463584 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131312342 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084785821 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152650839 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08153008 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128485206 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099498874 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238796368 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127354369 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.11235973 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089079923 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143928103 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114636034 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083286747 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081112599 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110011384 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116643899 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102477382 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075856336 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139432696 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074355497 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130871794 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163741998 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081028478 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10532625 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09619714 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082789834 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103241403 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101826644 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086601409 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100561919 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164828881 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088147768 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147161816 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130094973 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112412465 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132600147 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10314369 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645459704 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080573774 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146272107 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113905187 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172700446 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098733147 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116398701 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109478415 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118261903 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137177648 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101211946 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177760776 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126308574 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115953276 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079722668 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10110511 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102599816 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08967397 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105939886 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112282347 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111629236 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094568536 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116373183 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119033602 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083105139 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096105402 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147852979 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113014149 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292071551 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134570079 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085117155 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116182069 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129904531 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080653529 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115963849 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144564743 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10455238 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12273071 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082727655 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10011394 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166204905 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073568925 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150997334 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118474228 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109789587 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115304622 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109347987 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127336564 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103135029 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119372467 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093495625 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14684151 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113153862 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084658844 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080035905 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104558782 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109392788 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098240746 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097692497 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099320744 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14617976 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072637154 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097318428 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113272662 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143713763 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163985103 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.105599406 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084318879 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118994867 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15521919 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112667518 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118337754 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08179867 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081943995 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082711643 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.101050008 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.124426972 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112448625 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117516283 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111283185 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154279609 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084879571 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224609488 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096442066 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104396712 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090233634 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080830397 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095944546 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095942591 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102881853 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.258368844 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166526533 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09554031 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090593076 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092911126 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075405445 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083682561 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122269831 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108716495 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115636294 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120091422 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083889086 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103842774 seconds)
  done (took 58.225419676 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11986179 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.098640536 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.107616571 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.157609624 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125825743 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200340523 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151503643 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189669688 seconds)
  done (took 2.771867889 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069802708 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095430162 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107761539 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086285326 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070380349 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071010874 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232501067 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084896194 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070319709 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094291736 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081432966 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07285323 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.476330743 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069963085 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071156531 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081484065 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070933087 seconds)
  done (took 3.484110668 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389186551 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.588422046 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.361895914 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.0799819 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.907323565 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093810409 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.151810392 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.14233757 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084652386 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.526750593 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369506687 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135153674 seconds)
  done (took 18.424562548 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082412339 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.0790296 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094706806 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094266166 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081398547 seconds)
  done (took 2.019381983 seconds)
done (took 106.45566093 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082126223 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.451753311 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073238276 seconds)
  done (took 2.142057697 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091834503 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092832133 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.093227688 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090097879 seconds)
  done (took 1.970611218 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076281961 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078852563 seconds)
  done (took 1.74891895 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.216367383 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.1802637 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101972417 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084255245 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084046124 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084344454 seconds)
  done (took 1.849901233 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074223106 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075673322 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076418916 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079441618 seconds)
  done (took 1.897347832 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069171971 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069550826 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071928743 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07461332 seconds)
  done (took 1.877324923 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08518334 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087865599 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082616609 seconds)
  done (took 1.848715754 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101359461 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.098404 seconds)
  done (took 1.793476701 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081628582 seconds)
  done (took 1.675446894 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090498026 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104389678 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135395013 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119463705 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140551391 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123308736 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.095848564 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092769646 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082942085 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.099957237 seconds)
  done (took 2.679578383 seconds)
done (took 21.649765013 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079155151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372577842 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363899206 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095866236 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672123846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361165541 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.996171335 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097780488 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148465291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073605245 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091390623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653377451 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.987157228 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332348103 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.974697971 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.334232173 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.657283227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072943106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071860026 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072342978 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979171125 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072204027 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072574296 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072891863 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653388208 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378844888 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074760433 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334908241 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072926552 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077797595 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362943751 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074926958 seconds)
  done (took 16.314141835 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071054931 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126209469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076594365 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090062981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074755992 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073851958 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075602982 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07371357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127413601 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073305316 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091757562 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071818881 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076872878 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07405973 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094385077 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072318859 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07540815 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073596553 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07384353 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074800998 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094697308 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073890325 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074349988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077066585 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074446425 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087219881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075487942 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073879926 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073857066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078639328 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079505645 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0756113 seconds)
  done (took 4.193395024 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118572662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131836917 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077680403 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112081184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116856188 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075447974 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153887383 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09845389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134453416 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073753145 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091874233 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072543656 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108926964 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074819255 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096145005 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073953427 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076846689 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074135331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073411912 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074633495 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094080444 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072884358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074408696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073903422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074730488 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089575461 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075750968 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073905704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073780602 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078423844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079771723 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075344041 seconds)
  done (took 4.461635955 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071438538 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074813936 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084413719 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085424423 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071512585 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073312991 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074870087 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071338291 seconds)
  done (took 2.224118217 seconds)
done (took 28.79812472 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07894508 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069578221 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074521422 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090620829 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076955293 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082828551 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068150234 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078418048 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075766462 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075595184 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077392919 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070841244 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074288659 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069067517 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075792007 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069646612 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084916339 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074370856 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08370065 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084853722 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073125258 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076925398 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078543754 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084722265 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085158031 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.085060685 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080383422 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07624191 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071493255 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074145781 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074598818 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084010469 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084827889 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084824524 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070564561 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071251044 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075957388 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072667968 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085572141 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080088361 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072786502 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080246248 seconds)
  done (took 4.844844443 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084958903 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093058753 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086921581 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.084138126 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094918881 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.086321841 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091263824 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081557805 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.081740245 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090518807 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07786849 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.085518522 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082164138 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.07670615 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080917741 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.078280006 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083545134 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.0776183 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.081537008 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.082105925 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.091905386 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076713291 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.091040811 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.083542745 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.079073781 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084835712 seconds)
  done (took 3.813694323 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073858713 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088468201 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096182992 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148761011 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115648983 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083667226 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085266452 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095822938 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100894676 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071686419 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076117873 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096722325 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096828723 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078026922 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071583666 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088095037 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087564481 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073311203 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078346696 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101160101 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093337372 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089660392 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098041566 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089080811 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071399822 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074618703 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077338975 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.091464279 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074101722 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083554305 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074576307 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075580842 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072641813 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082437775 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073872369 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070615864 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096893203 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082956052 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084389584 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071758166 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081103597 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072635337 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097502047 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132256649 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071120096 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075625095 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07544111 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083311611 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070860573 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098849413 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083541365 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070930854 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071809764 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070060423 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070288747 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074014564 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07286926 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074051558 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081349811 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078143133 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093791021 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076259511 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089068128 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070815979 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081382072 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070194248 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072516804 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069826015 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100237385 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072726014 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116266208 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071708854 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069646683 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082795195 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081129827 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077215196 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070834065 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089423141 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083312277 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075280398 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079853063 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074491334 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075357094 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101841332 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071650289 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070559976 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069916929 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074919626 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074762696 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071928009 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083567349 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070499363 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07475117 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089836785 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070979473 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072076046 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075211601 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074270485 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070372474 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082756127 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075345774 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072388057 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081805271 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071784627 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075033484 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084791483 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078195604 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06982332 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073663068 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075800062 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072442823 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07253785 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074990741 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073157735 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078106844 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078127537 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07695523 seconds)
  done (took 11.097060679 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166458756 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.162041091 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074754736 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153995088 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08069702 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083785108 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.1570983 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099600099 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071678854 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074076937 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071951512 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114545756 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.1099988 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122173562 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085058502 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072483655 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095242236 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119661439 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159762591 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152706584 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094841062 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080586204 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074667561 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073723196 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073654648 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081847126 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091562754 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081584822 seconds)
  done (took 4.541826448 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078456521 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107224742 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075659982 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094788616 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091543818 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072135766 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073775254 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073482305 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088163343 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081012364 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072485893 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077811967 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075807134 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074761099 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072663379 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07871622 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079462921 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071101391 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075969811 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077837155 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082167985 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096858664 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075761066 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071571097 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074630986 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071502959 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080290939 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084812732 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07449663 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.108629781 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069639596 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077220594 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086895251 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072313491 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071107278 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072209195 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071600703 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071811863 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073373676 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070876522 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070338385 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075351746 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070868723 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07978176 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085119325 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074079023 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073801115 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074813869 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074607186 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069228126 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07443043 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074293156 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074777903 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079706741 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076541784 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074906839 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072803898 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100437542 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077918424 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071499073 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070613263 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070634954 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074106311 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.081709245 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08734373 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074255124 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070828253 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072039395 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.08483751 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084821233 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071343282 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07650175 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069512831 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073589448 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074487816 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074345152 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072613495 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070558685 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071582387 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071711205 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.073119642 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.075129361 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.070805245 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075008931 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070209366 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070594841 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071979026 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073794667 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080483629 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071368421 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075770124 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072989191 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070931061 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074942534 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077207882 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075298458 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083343923 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083722045 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072430256 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070355836 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085995629 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07461658 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071437173 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078290598 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076651172 seconds)
  done (took 9.701518849 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092180748 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072149036 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088799998 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095689905 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.082662748 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078331895 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081952693 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072226456 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089427098 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076882664 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080392248 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071032136 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083008481 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082151882 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072370946 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082691533 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075539075 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090287547 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086569715 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070297293 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.08126123 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084343791 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.084351033 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087145266 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086466277 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08764731 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.083718753 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082029682 seconds)
  done (took 3.976211844 seconds)
done (took 39.583467549 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.715600176 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.867308148 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.685637667 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.883187169 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.879024295 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 81.684810297 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.778059712 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.680756726 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.881043583 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.731101163 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.023752415 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.182476149 seconds)
done (took 139.758084899 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.716624067 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.832899594 seconds)
    (2/2) benchmarking "String"...
    done (took 1.934187237 seconds)
  done (took 5.388558589 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.863304549 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.391919078 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.913496678 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.680051938 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.687215169 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.933746966 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.458181998 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.131183201 seconds)
  done (took 29.818437801 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.915185301 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.905596003 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.402258037 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.444071866 seconds)
  done (took 15.336228655 seconds)
done (took 61.839576126 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.726953531 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.718498448 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.707955295 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.686172356 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.77359865 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.700766115 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.858825016 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.697603451 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.682882836 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.692991854 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.684521054 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.100934406 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.696107535 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.904775547 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.686399316 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.683768284 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.750125601 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.192146864 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.837417358 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.69706129 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.686861923 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.743864534 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.689732567 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.822123869 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.726995375 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.684778439 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.117244664 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.685816886 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.293961835 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.687188888 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.721326291 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.042670439 seconds)
  done (took 201.004582716 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.683094161 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.725396903 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.792098902 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.699635299 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.957967094 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.877180743 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.789247945 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.180255186 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.690528835 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.708832921 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.866508489 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.688475622 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.923514868 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.63095986 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.723126508 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.686816083 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.813882598 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.946021344 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.728279714 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.847343982 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.690553825 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.802472082 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.759725805 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.854202155 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.720973133 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.71683535 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.696139122 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.714084905 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.87669828 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.757895489 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.738290723 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.72515883 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.88471183 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.555213004 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.704798202 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.692780723 seconds)
  done (took 166.475509959 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.872695097 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.686647294 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.686762521 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.686427493 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.684803388 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.693515807 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.685496586 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.810536696 seconds)
    (8/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.689775671 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.346965736 seconds)
    (10/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.809272515 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.220302418 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.690268633 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.741766827 seconds)
    (14/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.688540316 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.449657194 seconds)
    (16/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.686606024 seconds)
    (17/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752879262 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.699158595 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.687058584 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.701342967 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.710939518 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.69045139 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.689719285 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815400437 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.698659116 seconds)
    (26/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.687312186 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.697982584 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.688414387 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.693864302 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.072809703 seconds)
    (31/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.689219671 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.726722579 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.69368321 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.695070482 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.927082019 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.687328678 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.688609432 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.515652766 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.786164633 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.773297772 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.691038611 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.694779244 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.688629534 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.90757161 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.688521239 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.691192334 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.688792927 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.69173556 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.796969832 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.692417484 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.81266849 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.690683493 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.168204337 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.692038007 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.6933648 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.935654858 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.540124626 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.691524953 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.693024403 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.689368797 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.691576668 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.70423669 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.969068896 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.767418325 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.689987945 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.691630762 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.695952985 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.692595487 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.904393553 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.693575727 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.251581765 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.705130494 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.914690532 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.812102064 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.696194902 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.757121599 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.78342477 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.692735013 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.694349873 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.692931694 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.692398691 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.771791023 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.694030407 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.808217724 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.687905629 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.700680445 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.691280218 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.747129871 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.758548807 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.691438562 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.520299046 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.69676814 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.691607341 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.943598391 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758192044 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.695299985 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.694011077 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.783374208 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814241009 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.410849064 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.693624123 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.955173764 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.782632587 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.690242454 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.810536611 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.695888194 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.772566995 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.699547366 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.694482866 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.727787659 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.690761851 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.70600992 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.690430092 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.06673384 seconds)
  done (took 391.639269367 seconds)
done (took 762.674537645 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.302012852 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.268879466 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.374298083 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.283525966 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.263527863 seconds)
  done (took 13.122897151 seconds)
done (took 14.753392142 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.775996318 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.77313198 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.708813065 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.770445674 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.706582997 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.770970693 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.755330753 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.713596276 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.739863652 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.713782096 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.741904089 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.713210995 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.699318399 seconds)
  done (took 24.214426075 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.920023273 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.920552143 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.757672571 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.919049096 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.733428686 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.920025671 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.847069137 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.835160645 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.833887622 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.705925446 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.703481646 seconds)
  done (took 21.728870316 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.929592294 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.929372901 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.76442575 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.925903446 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.736545367 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.923112123 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.850827173 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.840041954 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.833846262 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.703935774 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.702742851 seconds)
  done (took 21.773930739 seconds)
done (took 69.347833077 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.697523323 seconds)
  done (took 3.330976812 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.713350792 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.871149561 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.69616077 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.698241285 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.699812802 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.70364843 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.69931175 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.699000793 seconds)
  done (took 15.413741159 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.69753291 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.698271069 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.698397469 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.698003189 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.697906864 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.698666106 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.699338901 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.699116999 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.698779388 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.699075227 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.69901409 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.697542279 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.69985056 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.698883608 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.698634803 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.699893077 seconds)
  done (took 28.813867009 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.702062389 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.697601172 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.699252679 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.698463448 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.698122106 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.69987293 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.699617827 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.69801877 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.700894025 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.701485237 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.69895545 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.698093278 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.700487475 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.699207209 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.700108317 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.701750084 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.700420937 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.701862491 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.70555365 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.702215038 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.700992775 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.699994021 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.700201796 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.701152435 seconds)
  done (took 42.444675991 seconds)
done (took 91.634782433 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.774045838 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.484850546 seconds)
  done (took 9.894726227 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.703613868 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.702770433 seconds)
  done (took 5.112322821 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.700514232 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.70283742 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.701276447 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.700323879 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.700980147 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.701260596 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.699595156 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.701625243 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.702017212 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.702522592 seconds)
  done (took 18.648337756 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.701851794 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.701913366 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.702565764 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.701549124 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.702631404 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.70239733 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.70133404 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.700866325 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.702838864 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.700334166 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.701916397 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.702776582 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.703408774 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.703295842 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.702261785 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.702131913 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.701434386 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.703590351 seconds)
  done (took 32.276186132 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.702445183 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.703260524 seconds)
  done (took 5.042383893 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.702069764 seconds)
    (2/7) benchmarking "second"...
    done (took 1.701896122 seconds)
    (3/7) benchmarking "month"...
    done (took 1.703084747 seconds)
    (4/7) benchmarking "year"...
    done (took 1.702117844 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.701821694 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.703149951 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.702163531 seconds)
  done (took 13.553973766 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.703975993 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.859123293 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.923598933 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.315600284 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.703926999 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.704899967 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.607720888 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.706394446 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.705517292 seconds)
  done (took 18.867969971 seconds)
done (took 105.031235189 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.560849592 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.701085305 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.981071728 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.76140862 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.763153062 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.700642566 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.716216722 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.961539726 seconds)
done (took 41.783894369 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.759408957 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.426185169 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.46313224 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.736239521 seconds)
  done (took 15.265065566 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.708576563 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.987490429 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.726557022 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.508901117 seconds)
  done (took 21.574148912 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.065845379 seconds)
    (2/2) benchmarking "read"...
    done (took 2.047630516 seconds)
  done (took 5.757340651 seconds)
done (took 50.99536554 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.703190862 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.704981772 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.705226493 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.706325032 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.704029448 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.704973678 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.704952492 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.704651234 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.704554026 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.703376029 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.703823824 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.705481664 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.702459401 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.702702486 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.704265317 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.703756567 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.702441245 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.701811661 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.702473157 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.705407541 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.702881558 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.704324796 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.701803535 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.703451428 seconds)
  done (took 42.532585242 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.705835849 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.705333345 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.702861275 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.70629997 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.704951362 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.704818939 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.702787158 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.7055314 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.702834312 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.703472967 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.705539421 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.70525593 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.70352993 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.706029516 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70230166 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.702825526 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.705666661 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.703762082 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.706078135 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.705154141 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.707023787 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.705705769 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.705615864 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.706642725 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.706381543 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.705577396 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.707000753 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.706417279 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.707645395 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.707724216 seconds)
  done (took 52.79746334 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.704923802 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.705440845 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.705245135 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.707161643 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.706922148 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.703573244 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.704716492 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.706578484 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.706512526 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.706921902 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.708876144 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.706969482 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.706843856 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.706676829 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.707676514 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.707074708 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.708376705 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.706905323 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.708032442 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.7086199 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.71096632 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.70772661 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.704079085 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.706385603 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.705349431 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.705686514 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.708883374 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.708792551 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.709166619 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.707393968 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.705385599 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.706180679 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.707926554 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.708140331 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.707860201 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.706920056 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.70727095 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.708951743 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.70872696 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.708242009 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.710089882 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.708401919 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.70977663 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.708091162 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.709137936 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.705369588 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.708713721 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.708907106 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.710012237 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.710068926 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.706322446 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.708079602 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.710025919 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.70901048 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.70977487 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.710415483 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.708090285 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.709749189 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.710349528 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.710831621 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.709239147 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.708033237 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.709990842 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.710624882 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.710275178 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.706959475 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.708952141 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.710250643 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.710295953 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.709362373 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.708983849 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.709543422 seconds)
  done (took 124.622122802 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.709757869 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.709330115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.710550034 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.708036329 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.710204956 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.71153626 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.710735612 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710775735 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710811946 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.709048606 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712504431 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.711719401 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711866301 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.712954325 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.713716688 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.710883916 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.714147969 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.714208244 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.712488274 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.713083945 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.710631877 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.7106204 seconds)
  done (took 39.295299374 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.709568691 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.711795889 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.712139589 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.71238403 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.712491136 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.712167372 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.709883352 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.710731703 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712401234 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.712310985 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712188388 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71077626 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.710210178 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712469935 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.712306477 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.712218921 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711550335 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.712294233 seconds)
  done (took 32.45536396 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.71075493 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.712065881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.711544386 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.70918763 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.713367819 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.712656994 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.712166873 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.712243052 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.711988963 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.711855292 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.711769569 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711812336 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.712185045 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712661719 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7139576 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.7120783 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.709504968 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708791809 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.709727461 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.712349301 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.709789901 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.711526017 seconds)
  done (took 39.300416668 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.713173559 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.711919662 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.712672316 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.710462568 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.710335549 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.710328426 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.710445341 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.710904608 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.710180659 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.710150696 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.711836069 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.710001379 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.711201875 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.709817542 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.711706451 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.711528749 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.713914697 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.711410043 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71176959 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.710985632 seconds)
  done (took 35.872665871 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.712824017 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712207292 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.711994578 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.71456526 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.71529588 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.715678981 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.714857373 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.712938772 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.71390146 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.715278484 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.715667789 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.714712937 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.714225801 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.713306375 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.716598576 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.713203241 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.715094521 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.713011651 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.716304134 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.714603434 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.714563615 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.714046167 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.715137856 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.713554654 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.713234047 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.715586401 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713707264 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.713822107 seconds)
  done (took 49.64884326 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.716218383 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.715675068 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.714812359 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.712005051 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.716201081 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.712718285 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.712725659 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.712948639 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.712116294 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.712625356 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.713157384 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.712392848 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.712802717 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.715603047 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.715415347 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.714280732 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716222322 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.715193202 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.715773774 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714576154 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.71325963 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716442517 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.715195334 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.714246361 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716077032 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.716649077 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.71334717 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.716697327 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.714309274 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.71509408 seconds)
  done (took 53.085447233 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.73629227 seconds)
    (2/2) benchmarking "in"...
    done (took 1.737845077 seconds)
  done (took 5.125217046 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.717149191 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.71597814 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.716227418 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.717175009 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.716866837 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.713723907 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.716845952 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.71532512 seconds)
  done (took 15.380332839 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.71768553 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.715745256 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.717689278 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.718226936 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.718172057 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.715970711 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.72637728 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.716658896 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.721188751 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.717154447 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.727547771 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.72799241 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.723625956 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.71693512 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.71926537 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.717628944 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.716622453 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.71960644 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.718194173 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.715733576 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.718168439 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.722341694 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.719961708 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.714649024 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.718709836 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.730599738 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.720440857 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.715752543 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.718839483 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.724318443 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.718028901 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.71669493 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.715391718 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.719639639 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.719149105 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.719631455 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.727447548 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.719391681 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.723331003 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.716890607 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.721057021 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.718184774 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.723964718 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.723769958 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.720737628 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.717365085 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.72008855 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.719343188 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.721478965 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.72363651 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.724133309 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.720600055 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.721474979 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.72628483 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.721658216 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.727957493 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.72164138 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.724628602 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.73232296 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.734894237 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.73349933 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.73016863 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.723358696 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.72104363 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.735408873 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.749148217 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.725697487 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.717601921 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.720385369 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.717958191 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.727584844 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.731505555 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.732252194 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.721229738 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.722167716 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.722803686 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.722828771 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.718734545 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727495943 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.725463973 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.719566987 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.720742023 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.73207871 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.750599462 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.722607045 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.723792744 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.721979105 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.721725274 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.72238893 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.734875995 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.719477972 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.718556033 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.72284032 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.72414476 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.723954662 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.721431721 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.72206627 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.725463891 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.719573644 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.720726755 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.723650892 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.725331759 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.731732637 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.720914411 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.720334932 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.728483729 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.72047453 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.721482753 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.728818292 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.724161705 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.726516949 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.72450555 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.730058935 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.720731218 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.728925259 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.730822644 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.723094921 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.726401902 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.723082049 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.723588535 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.731225759 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.757105683 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.721564287 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.72371267 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.729428574 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.738187731 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.724123643 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.73000218 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.721398246 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.726360239 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.724691133 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.724573173 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.721037701 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.726822628 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.724158039 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.726718546 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.721803747 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.723449725 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.724834045 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.727154202 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.726559943 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.726531522 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.726349662 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.726052646 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.723927618 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.727994296 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.732658677 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.722646981 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.728380345 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.726384559 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.722682091 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.724523003 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.727462984 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.722873112 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.724861563 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.724963376 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.726297632 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.722425789 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.72293107 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.722621602 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.725193716 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.727010071 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.731395188 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.724847882 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.730453669 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.724687211 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.725446214 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.726102959 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.723646671 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.72381431 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.723186117 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.725674384 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.72886633 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.735724597 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.725965561 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.725144856 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.730449413 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.724838627 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.724465951 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.724150791 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.731687066 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.738306641 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.72773923 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.73384354 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.726459758 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.72787094 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.727306374 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.730394508 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.728203873 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.728486587 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.730907774 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.735363672 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.739273759 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.736654728 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.729048545 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.73180987 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.729066641 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.731354518 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.733283899 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.725027843 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.7277223 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.727293937 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.726437807 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.72784381 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.730827993 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.725171988 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.727040932 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.729680617 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.726924059 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.728690725 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.728409309 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.731662352 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.730931396 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.730169075 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.729957574 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.72950221 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.729340819 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.728006836 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.727316462 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.728741335 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.726710218 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.728900086 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.735695827 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.726861837 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.73297811 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.7304912 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.727088983 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.729194604 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.730438197 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.732582863 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.729610733 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.739087891 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.727862979 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.731050399 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.736341673 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.727868994 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.728836436 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.735991897 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.72761846 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.728845307 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.733283535 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.736140989 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.727886733 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.729328664 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.730933862 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.731006335 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727484415 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.736455441 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.728624172 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.732103435 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.727832844 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.733394017 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.72891478 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.733759162 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.732296532 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.729161905 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.732406068 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.728209638 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.728087825 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.732208666 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.729104558 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.731545626 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.730554304 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736078886 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.738190124 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.737122809 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.729363693 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.732563313 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.730355244 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.735582444 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.732743044 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.730792872 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.731940987 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.742088246 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.73818422 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.739331083 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.73365655 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.73191741 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.736461882 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.733131555 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.736737575 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.734157693 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.731557578 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.733665533 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.733873713 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.733005988 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.734589978 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.729582292 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.733806658 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.731644809 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.735696132 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.732688724 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.733353104 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.732500757 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.731836542 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.729533936 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.733864409 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.729609597 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.735121346 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.735115061 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.729499867 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.733758086 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.738973646 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.732337036 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.732753973 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.731336701 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.732122339 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.730599616 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.733294279 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.730664292 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.736619241 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.740845104 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.737363763 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.744622875 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.732752705 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.743872348 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.731156473 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.737665126 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.742247955 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.732161447 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.732927698 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.734947462 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.73423355 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.741792188 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.731045707 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.733565043 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.737234838 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.733657565 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.733888185 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.73128661 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.732576844 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.732627277 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.731665653 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.740516654 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.733575538 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.737796595 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.735291966 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.731409727 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.73198192 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.733400966 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.733069917 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.739328431 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.733378351 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.738046837 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.734591535 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.732417568 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.733113114 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.734095093 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.734211658 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.736799613 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.734880373 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743559515 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.735633067 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.740941725 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.738658268 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.744269731 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.733054896 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.742840287 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.733795365 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.736937166 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.733465058 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.73464834 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.737739898 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.735192855 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.737040491 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.735870461 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.736918907 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.73745386 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.734510663 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.735865931 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.735073499 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.734654404 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.738190571 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.74497374 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.766154237 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.739462996 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.739433577 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.73578125 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.739169798 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.742304563 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.738769072 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.737794992 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.740871626 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.749628276 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.746815529 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.737677587 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.735978074 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.73963663 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.736771039 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.735459355 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.73292588 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.737984066 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.736645439 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.739894681 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.73922813 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.743064638 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.734500499 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.739115655 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.738914756 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.737299785 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.750438748 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.73546885 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.739219397 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.737671513 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.73764224 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.74150315 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.739215966 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.736498715 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.738378629 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.738684544 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.740964002 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.747144237 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.749077736 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.739604354 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.737282447 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.734717699 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.736597921 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.736183847 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.737390235 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.73958995 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.736989778 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.741520423 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.736795995 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.739862802 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.736124847 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.735896455 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.738745175 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.738254702 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.742044393 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.747380781 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.740778059 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.735889634 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.735483734 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.737744903 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.738662733 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.738556482 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.745021294 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.741102225 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.74857656 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.747946192 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.739825734 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.739402436 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.741424329 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.747755828 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.739412496 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.742525119 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.736879969 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.740289676 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.73925913 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.743541254 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.739164844 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.745772208 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.740380109 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.739885209 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.748156928 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.741128645 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.738642423 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.740559304 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.745984797 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.739290057 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.737990737 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.73932392 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.738943955 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.744960941 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.742359648 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.739359381 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.742034374 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.737903397 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.740736235 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.743411593 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.738497952 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.743129204 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.738584993 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.742334018 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.738924053 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.740404955 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.741723155 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.741139698 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.740202189 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.745160167 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.751359088 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.741870395 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.7482113 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.741021476 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.742780179 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741420536 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.74249894 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.742154071 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.741563025 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.742319459 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.742366633 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.74368996 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.747490186 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.741108315 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.742777022 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.749152644 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.741896446 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.745279144 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.756377516 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.75282772 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.741462998 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.74460263 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.744235954 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.747096022 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.74155407 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.742906341 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743626495 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.743561321 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.741926647 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.743134218 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.743290554 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.746249088 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.761430413 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.743531816 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.747984096 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.746028797 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.747947379 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.741000476 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.747732055 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.744334314 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.746495383 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.745539791 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.754108683 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.746154266 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.752341795 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744381725 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.7430953 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.747921797 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.745978489 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.751874422 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.747020225 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.74216697 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.741461695 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.74820095 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.766440835 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741510332 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.754556291 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778720448 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.742902991 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.744319112 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.742041842 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.744356776 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.742208347 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.746375123 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.742888053 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.742833339 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.743674185 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.74317735 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.748386439 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75288434 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.747063185 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.74176989 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.741690098 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.745117437 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.746926657 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.745655961 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.746041345 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.746111335 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.746126637 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.745992084 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.744656404 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.748445834 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.757560176 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.759311613 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.743979028 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.746920669 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.746611541 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.753904534 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.748567213 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763395886 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.758875305 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.747616217 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.748307268 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.748540201 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.748480471 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.747857114 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.751602951 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.749926098 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.749956476 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.747108608 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.758146655 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.755829503 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.753390059 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.74474229 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746137454 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.7467 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.748992209 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746274407 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749339905 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.749635221 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.748243078 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.752854874 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.748006902 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.746326253 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.752959714 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.760654706 seconds)
  done (took 1035.431467758 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.743073264 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743370108 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.743752337 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.744204198 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745879665 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743830612 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742583398 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.743361411 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.743142504 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.743505466 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.7441032 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742355998 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.743366124 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.742959416 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743244233 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.743972181 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742955991 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.743816928 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.74302359 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743281425 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.743368758 seconds)
  done (took 38.294255244 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.739722165 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.740313035 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.738310669 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.739533691 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.738985465 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.738689095 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.739699824 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739087414 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.746404683 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738621391 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.740095232 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738853526 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.739270681 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.739704287 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738084754 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739538214 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.741092946 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.739461035 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.739609743 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.739327823 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.740485895 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.739172088 seconds)
  done (took 39.948357606 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.734119804 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.733957581 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.73649321 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.73496998 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.7343489 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.735723661 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.734728551 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.733575686 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.733637736 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.735523961 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.736858315 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.734730255 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.740855108 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.741417946 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.73560566 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.732065147 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.878824806 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.732476329 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.733018365 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.732754598 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.732057471 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.738774412 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.732493044 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.732624135 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.732706082 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.732377804 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.73230937 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.732785471 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.733473955 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.734148698 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.739071755 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.732376944 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.734640974 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.737581987 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.731808066 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.733087985 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.737138038 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.733227501 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.732501052 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.732575382 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.743962718 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.76198882 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.7357055 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.743372263 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.737760632 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.734928525 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.739948688 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.745837887 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.733388806 seconds)
  done (took 86.870479691 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.733685237 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.73421679 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.73207881 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.733014553 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.73446413 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.733428994 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.73695582 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.729591896 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.733755072 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.732158711 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.732882271 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.733465993 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.737635364 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.733271984 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.733365045 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.73223438 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.732664066 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.733231315 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.738836504 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.732582054 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.733349971 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.733825455 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.732960011 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.733113571 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.737076666 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.732896758 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.734520954 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.732869313 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.733948208 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.73732991 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.729299259 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.733664916 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.734232873 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.733097192 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.73345956 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.735814805 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.733497991 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.733071977 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.733644689 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.73350301 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.733117924 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.735768094 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.734139293 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.733802866 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.734581383 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.735205224 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.733381843 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.735387049 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.734160585 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.733561095 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.733967786 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.733175954 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.733223363 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.736425402 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.735260424 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.734184172 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.733993986 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.734405597 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.735519427 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.733956096 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.733798376 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.733741712 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.734437046 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.735665284 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.735430257 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.731345578 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.729031328 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.732985512 seconds)
  done (took 119.567227856 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.730258392 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.730552193 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73194627 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.729846254 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.730571913 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.731009363 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.730916877 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.733402325 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.729122613 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.728269875 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.729581558 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.729062103 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.730545442 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.728402725 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.728261745 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.729039023 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.729184489 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.729022729 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.730492646 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.730238745 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.728820787 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.729645779 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.728806359 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.728074366 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.730323333 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.72985009 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.729489757 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.729636456 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.729960488 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.729449702 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.730880501 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.729425751 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.729031219 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.73006001 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.728427448 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.729711732 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.730185941 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.729653911 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.729600256 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.729903723 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.729462604 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.729997932 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.72986142 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.729140237 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.729533086 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.730460966 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.729978734 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.730522337 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.729072035 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.730160167 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.730863313 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.730144481 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730216162 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.731633003 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.730416482 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.729357743 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730611138 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.729566213 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.729604743 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.733407941 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.730559616 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.729261421 seconds)
  done (took 108.916320494 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730406636 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.729550219 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.729601249 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.727912895 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.728238078 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.729950069 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.727818586 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.728237156 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.725717345 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.724690967 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725347468 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.727890457 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727764492 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726644923 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.726007068 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725458358 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.724944598 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.724272766 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.724941299 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.727054157 seconds)
  done (took 36.202224754 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.725368019 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.723639362 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.724971524 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.723721217 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.724849769 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.72326749 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.722369867 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723095214 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723742061 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723583129 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.725079057 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.721805207 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723063003 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.722901061 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.72402166 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.725242278 seconds)
  done (took 29.234617528 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.723044229 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.722160609 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.72121808 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.720725093 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.725447094 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.721710307 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.720889851 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.720757272 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.721032731 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.721783128 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.723605462 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.720685125 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.720726728 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.720700631 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.721409786 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.721491772 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.72169845 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.72130706 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.71959528 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.72082428 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.720827966 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.71989721 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.722625506 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.719519845 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.720873432 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.720662776 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.719721212 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.722699892 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.718079983 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.719746788 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.719910784 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.721047208 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.719452423 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.724546388 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.721133716 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.719648465 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.720375535 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.720278729 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.719360339 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.719992538 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.720100467 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.719819967 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.720082329 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.719980554 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.718883406 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.721732946 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.71927642 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.720472669 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.719383519 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.718245573 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.720734186 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.724652035 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.719251024 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.720743602 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.719663992 seconds)
  done (took 96.297278257 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719150964 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.719919737 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.71985866 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.718799011 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.718631915 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.71776193 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.721742836 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.719019386 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.719330376 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.719157696 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.718885344 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.719498128 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.723416626 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.719329416 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.718513781 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.718187759 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.719129114 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.718292329 seconds)
  done (took 32.598340108 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.718270964 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.718952244 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.719188976 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.719522415 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.722047151 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.719939841 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718205818 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.717864812 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718674198 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.719158906 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719011375 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.725638904 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718877305 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.717827801 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.719316517 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71700356 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.721079661 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.716079416 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.718798195 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.717918497 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.718096601 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.716798745 seconds)
  done (took 39.480195025 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.717008141 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.716758818 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.73106114 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.741095309 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.738682293 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.755374004 seconds)
  done (took 12.04814241 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716351495 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71687893 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.716965232 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717214645 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.72055359 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715474077 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716974575 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718166146 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716586107 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715826455 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716941248 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716699631 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717686647 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716634114 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71666726 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716220861 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718724366 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715222802 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715560147 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716494416 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716523082 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719187027 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715738964 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715753179 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715358714 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716135376 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715383925 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716690543 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713641597 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714449417 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713549578 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71376307 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712854216 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715662253 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714347611 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714363618 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714716277 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715000389 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7133349 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717597644 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.713527819 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713443783 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713374339 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714285597 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715292924 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718519001 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713610186 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713343088 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712610834 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713480367 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713041757 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715449994 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713943587 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713573634 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713717026 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714562659 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717261986 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711099535 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713665274 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713857128 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713162803 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712434428 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715461886 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7131901 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712653845 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712726681 seconds)
  done (took 114.852483042 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712176547 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.718146052 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713766913 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712909225 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711548047 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713661932 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713199172 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.717845565 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714496344 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712174917 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71488103 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714350795 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713457828 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714132088 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713579837 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712815523 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712799364 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712717957 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711847653 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716772367 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71209206 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710806788 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712356331 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71343868 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712135457 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711773463 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712310608 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713352102 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711771131 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711567445 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714387629 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712394273 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711006692 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.712391152 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712180336 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711888641 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716628565 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713687857 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713393496 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712338016 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712016963 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710989801 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714190602 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711798844 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713354423 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713010673 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712385048 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709469177 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713338546 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710548569 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711900078 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711275995 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710851543 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711695488 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715393076 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711694484 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711287781 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709265829 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710937712 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711211621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718584018 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712738441 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712545723 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711427888 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711045524 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714674363 seconds)
  done (took 114.692687735 seconds)
done (took 2396.192392845 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.736188103 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.774044341 seconds)
  done (took 15.152366817 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.879381353 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.831929271 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.714657808 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.741041971 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.714449556 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.741613899 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.737669072 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.714139027 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.716752594 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.717655199 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.71577236 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.90045601 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.716307756 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.712589513 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.714755139 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.810195988 seconds)
  done (took 49.730872138 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.721132844 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.721974382 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.730916986 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.72344909 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.722141337 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.732353923 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.752843053 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.725824948 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.754358283 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.730682602 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.78476662 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.726622862 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.720055553 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.767965766 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.731267438 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.732694239 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.813378446 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.794862847 seconds)
  done (took 33.033939725 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.796403221 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.7291173 seconds)
  done (took 10.182896786 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.749381964 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.770041959 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.723430954 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.730007258 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.720497051 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.716006811 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.751554659 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.74289816 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.74419946 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.753676283 seconds)
  done (took 69.0555576 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.726221798 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.724619644 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.722354274 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.720172648 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.718901699 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.721223215 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.72232164 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.72050585 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.371152569 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.754581906 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.729438097 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.727240958 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.723034197 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.723953734 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.719204775 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.743988704 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.836263358 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.718604771 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.719187126 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.730205129 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.722539288 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.77593396 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.732632232 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.721017825 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.751918651 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.377837689 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.727362015 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.727508269 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.826344324 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.719989677 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.723551035 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.906054664 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.725453446 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.186507042 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.995353585 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.73034939 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.731614329 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.728915577 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.724124942 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.834345808 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.723909634 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.728163777 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.630735981 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.974528918 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.826523323 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.765710188 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.021138286 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.734675815 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.723812363 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.752394621 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.725363414 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.723455818 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.739752568 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.233254257 seconds)
  done (took 124.598529393 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.720824281 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.065087009 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.885957543 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.718968964 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999891443 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.926199809 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.722862812 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.765525305 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.722649003 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.949557462 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.968221518 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.822727304 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.723409492 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.720795364 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.714237382 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.720775933 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.87383081 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.787590682 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.721734644 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.720818865 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747124113 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958285957 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.838729798 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.720496605 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.748591238 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.928942217 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.843466346 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.82100462 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.498330773 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.720461176 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784172356 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.718029012 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.72097548 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.720962017 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.875799321 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.812507203 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.803529065 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.721046025 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.720787598 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.71931377 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.47096963 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.919711377 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.815969507 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.850091153 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.974981676 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.925669172 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.500890211 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.71984274 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.459164897 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.883887083 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.945602902 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.953767549 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.839668659 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.724290778 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.268641258 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.721623603 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.723055065 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.968671001 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940692162 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.817518377 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.725905347 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.723146252 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.719751258 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010109014 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.721438843 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.813937259 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.725000432 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.719690085 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.823087937 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.820455685 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.950189396 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.930406364 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.752147331 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.06024799 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.232059703 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.967895297 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.785469042 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972861401 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.725956933 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.725249574 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.799155092 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.564023238 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.976339211 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.001440352 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.964524224 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.752955749 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.438075348 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.723667546 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.949203809 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.94458297 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.978256219 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.96516673 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.956434489 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.040138675 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.723283388 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.723513257 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.965762557 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.848632382 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.722488334 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.064677935 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951210771 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.248171627 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.74758686 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.022344852 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.850771687 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.724531871 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.365134127 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.723961442 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.950216164 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.76653899 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.723364732 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.729194981 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.940446068 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.708004097 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.730255175 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.370883098 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.785974157 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.724797537 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.952286554 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.723273625 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.990989582 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.724041606 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958102693 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.147353807 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.748251871 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.947884024 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.971895136 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.722021252 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.959501099 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.969690086 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.837589042 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.9428152 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.354606442 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.726114885 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006664984 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.727506657 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.723946394 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.891818705 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.723446844 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.866076042 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.724465423 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.01652773 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747666818 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.956457786 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.726868456 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.977979911 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.753596063 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.772668888 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.731222187 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.856623752 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.727284518 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.55698474 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.881963322 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.735018751 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.722131081 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.960118857 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.724780307 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.869644335 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.947423855 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741270037 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.796264891 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.386979007 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.725329657 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.805861753 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.743610417 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.103886428 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.726535116 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.976610077 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.722753955 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.727298246 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.730564529 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.011834557 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.908623872 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.733163427 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.727817698 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.632764061 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.729429222 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.72878046 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.910781711 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.078744333 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.729405417 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.930325251 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.732253434 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.852414793 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.731551572 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.803976156 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.069804111 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.729784411 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.730371938 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.726577777 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.726065632 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.725574359 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.986754737 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.749123378 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.214993784 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.862654679 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995659715 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.031719264 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.967161995 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.765956069 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.728959299 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.974853047 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.725216686 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.786102625 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.723353702 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.743733471 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.950629193 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.728969469 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.93429272 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.99048559 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.665016484 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.772534646 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.724136279 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.72742848 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.725935789 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.867338394 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.801237626 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.723531741 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.726258996 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.836749461 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.846208311 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.927589385 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.726355141 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.802768994 seconds)
  done (took 870.709101742 seconds)
done (took 1174.10637684 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.72571612 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.726864376 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.737591759 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.728152288 seconds)
  done (took 28.575142521 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.734866355 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.727652247 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.732898026 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.729508552 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.730777942 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.730269269 seconds)
  done (took 12.045037855 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.731033444 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.728801062 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.731168698 seconds)
  done (took 20.850503117 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.806531912 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.115451918 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.861702131 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.143717503 seconds)
  done (took 9.587841043 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.734213718 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.731751799 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.735846146 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.731410119 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.739819513 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.738014934 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.733478835 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.732599051 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.740859509 seconds)
  done (took 17.282563975 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.872086561 seconds)
done (took 93.872878753 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.988876542 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.807810038 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.878275142 seconds)
    (4/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.854314085 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.092940032 seconds)
    (6/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.766428036 seconds)
    (7/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.765988477 seconds)
    (8/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.822521412 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.870499054 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.719721418 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.671815642 seconds)
    (12/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.83476359 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.760196109 seconds)
    (14/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.857655346 seconds)
    (15/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.220333367 seconds)
    (16/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.087288233 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.748092444 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.964626048 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.753849041 seconds)
    (20/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.838166188 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.070008069 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.087167403 seconds)
    (23/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.235687977 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.913526308 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.948884138 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.766274535 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.939818095 seconds)
    (28/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.1317234 seconds)
    (29/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.904261722 seconds)
    (30/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.901548842 seconds)
    (31/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.864397168 seconds)
    (32/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.840993411 seconds)
    (33/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.847886692 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.831125757 seconds)
    (35/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.819253935 seconds)
    (36/309) benchmarking ("sort", Float32, false)...
    done (took 5.793975439 seconds)
    (37/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.772141177 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.963374178 seconds)
    (39/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.765067468 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.21549717 seconds)
    (41/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.891832476 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.886390272 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.919519749 seconds)
    (44/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.75144637 seconds)
    (45/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.85455286 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.16060092 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.918071655 seconds)
    (48/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.755403009 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.897906473 seconds)
    (50/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.755614861 seconds)
    (51/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.091724883 seconds)
    (52/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.863952251 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 1.966239335 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.836194606 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.895155848 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.949451262 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.065896216 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 5.452275836 seconds)
    (59/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.756639473 seconds)
    (60/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.507542257 seconds)
    (61/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.657945021 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.002747246 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.973957303 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.908320055 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.768496787 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.87958072 seconds)
    (67/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.747222417 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.891591798 seconds)
    (69/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.915999206 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.869044765 seconds)
    (71/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.771301341 seconds)
    (72/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.874415708 seconds)
    (73/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.774909061 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.764773866 seconds)
    (75/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.74993487 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.844096494 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.552779836 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.878353754 seconds)
    (79/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.612024491 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.749906826 seconds)
    (81/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.377878028 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.371353196 seconds)
    (83/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.754118839 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.547987806 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.996488381 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.788379823 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.986004587 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.058159558 seconds)
    (89/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.817861522 seconds)
    (90/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.832120592 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.130492589 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.804700503 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.692978615 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.815361688 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.869377817 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.961301196 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.847935122 seconds)
    (98/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.429018829 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.529078024 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.765956431 seconds)
    (101/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.82788626 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.136342926 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.618452206 seconds)
    (104/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.129029016 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.018502806 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.057719678 seconds)
    (107/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.955185491 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.758443488 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.755696624 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.787006954 seconds)
    (111/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.766160127 seconds)
    (112/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 3.157638386 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.924746664 seconds)
    (114/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.596061131 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.752943771 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.965783837 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.750238185 seconds)
    (118/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.839171377 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.456353653 seconds)
    (120/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.890546798 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.133968898 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.234886243 seconds)
    (123/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.012447494 seconds)
    (124/309) benchmarking ("sort", Float64, false)...
    done (took 5.540602904 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.871582549 seconds)
    (126/309) benchmarking ("sort", BigInt, false)...
    done (took 6.754231459 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.924683022 seconds)
    (128/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.138543052 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.43155543 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.779845724 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.88608731 seconds)
    (132/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.753242373 seconds)
    (133/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.960321023 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.004338957 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.150718365 seconds)
    (136/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.138726631 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.006048118 seconds)
    (138/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.963952115 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.224239499 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.934364166 seconds)
    (141/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.553528452 seconds)
    (142/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.309472166 seconds)
    (143/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.781503219 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.77583463 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.85522492 seconds)
    (146/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.88290302 seconds)
    (147/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.925701414 seconds)
    (148/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.766457474 seconds)
    (149/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.645028245 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.42817033 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.785516501 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.770338486 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.108620063 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.724577997 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.882524356 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.883521896 seconds)
    (157/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.841029684 seconds)
    (158/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.754630732 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.194068573 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.168567109 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.750659522 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.932696361 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.923199401 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.851579456 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.833995827 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.148222888 seconds)
    (167/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.131424798 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.363883424 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.758449805 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.108997164 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.896471294 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.753707076 seconds)
    (173/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.876349668 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.540513987 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.752880302 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.814341587 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.752460174 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.849118512 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.020387597 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.742458461 seconds)
    (181/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.243032086 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.95253944 seconds)
    (183/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.222352637 seconds)
    (184/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.87213761 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.015157815 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.440659884 seconds)
    (187/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.917532516 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.96635532 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.085138466 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.949991421 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.831162138 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.09903285 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.013308865 seconds)
    (194/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.831664231 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.068051169 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.068053954 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.927298866 seconds)
    (198/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.052381401 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.761145225 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.493298904 seconds)
    (201/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.754247177 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.16946376 seconds)
    (203/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.762580425 seconds)
    (204/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.769950747 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.984942006 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.704933306 seconds)
    (207/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.879205767 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.375093751 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.772591879 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.569063848 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.973508211 seconds)
    (212/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.839373154 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.752967374 seconds)
    (214/309) benchmarking ("perf_sum", Float32, true)...
    done (took 3.311621358 seconds)
    (215/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.006850983 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.759473407 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.786481822 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.762999408 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.838968689 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.672299495 seconds)
    (221/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.787768258 seconds)
    (222/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.782729892 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.149997009 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.887022997 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.768000743 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.851128859 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.844593602 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.766585396 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.870796342 seconds)
    (230/309) benchmarking ("sort", Int8, false)...
    done (took 4.625322181 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.780138423 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.90516069 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.103163524 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.771115705 seconds)
    (235/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.880438401 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.773626725 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.863707107 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.957730061 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.763941221 seconds)
    (240/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.764117795 seconds)
    (241/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.362137909 seconds)
    (242/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.764395271 seconds)
    (243/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.295984807 seconds)
    (244/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.055675244 seconds)
    (245/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.977185177 seconds)
    (246/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.659235914 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.071778184 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.462518904 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.885190843 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.76710882 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.122786856 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.008517375 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.141939691 seconds)
    (254/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.766327469 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.992310598 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.759129624 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.994115362 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.765714573 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.829223129 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.798798922 seconds)
    (261/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.730996328 seconds)
    (262/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.10357457 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.78850386 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.375726959 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.124575688 seconds)
    (266/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.872706698 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.114421287 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.916135471 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.787964173 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.027035508 seconds)
    (271/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.115515646 seconds)
    (272/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.797289431 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.841361262 seconds)
    (274/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.766515321 seconds)
    (275/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.675612596 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.76844014 seconds)
    (277/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.857477372 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.071074571 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.007271324 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.997139784 seconds)
    (281/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.047207201 seconds)
    (282/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.783710067 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.76275207 seconds)
    (284/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.83646391 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.884290183 seconds)
    (286/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.095266167 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.042226946 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.706182554 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.116087307 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.594564797 seconds)
    (291/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.880315814 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.767473914 seconds)
    (293/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.125966831 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.972825791 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.893974463 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.066175599 seconds)
    (297/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.18714262 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.798064395 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.531851413 seconds)
    (300/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.920847472 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.764237154 seconds)
    (302/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.99831905 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.906576753 seconds)
    (304/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.800068814 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.158110123 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.983005521 seconds)
    (307/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.002458625 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.768808958 seconds)
    (309/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.76969049 seconds)
  done (took 970.723574237 seconds)
done (took 972.688445634 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.790397805 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.784422831 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.766720271 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.789353057 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.88299576 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.813621374 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.780973423 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.77107229 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.816340474 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.820205784 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.766286674 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.812183845 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.767933031 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.767312923 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.767338724 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.783511867 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.079970145 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.797634043 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.785637966 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.778767326 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.788484078 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.764446865 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.815994899 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.811848913 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.771958212 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.772153037 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.773608734 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.787573773 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.881168836 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.76998258 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.77255643 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.780025411 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.081485045 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.796369823 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.766683226 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.788890719 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.78090687 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.781638912 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.773386819 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.802670668 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.168097514 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.806575072 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.771585301 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.769233869 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.769021769 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.776609938 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.770331105 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.779694621 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.785639281 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.786300326 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.163342724 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.824526682 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.773451882 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.772681218 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.784195082 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.770067349 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.774011159 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.78696345 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.788990038 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.787203523 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.064640468 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.806818096 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.772957711 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.788699108 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.779404913 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.196959319 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.807217603 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.779522495 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.168448507 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.81481937 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.201113193 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.818274298 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.772004756 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.7846998 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.803586306 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.083139853 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.796461641 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.770895703 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.779548391 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.766702781 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.783778457 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.784800992 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.775911521 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.770450789 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.786059326 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.815924368 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.783388869 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.771159652 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.781824105 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.790841585 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.781514848 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.785064844 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.77715801 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.769991639 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.784315415 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.776453459 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.774474101 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.77469345 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.774997207 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.783811635 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.16634436 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826936036 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.768723385 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.770985393 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.769359215 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.787244737 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.16623321 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.813863691 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.796565897 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.823289804 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.773892475 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.070766942 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.806581344 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.792753942 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.783536349 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.774915561 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.769002045 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.066351771 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.192108002 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.827692332 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.769946177 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.769414364 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.787403362 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.774799805 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.769683937 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.084093419 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.802801175 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.787706599 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.896739773 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.786345966 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.807476226 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.770603763 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.776242678 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.823434048 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.790445031 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.810108779 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.776033091 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.789929569 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.791921653 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.771002337 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.786873945 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.788689595 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.774912877 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.783719839 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.771331884 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.824666044 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.791712595 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.790020378 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.795482077 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.897799003 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.772087422 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.072301304 seconds)
done (took 279.007758632 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.857144538 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.773779684 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.866712765 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.774076393 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.864649468 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.846109593 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.775768295 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.773425682 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.773677981 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.262483395 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.773141258 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.779251609 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.771973242 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.772467944 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.846310006 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.77370155 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.774616459 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.209068228 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.774270761 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.853368301 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.77447159 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.773398977 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.774715754 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.261328773 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.771299351 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.774080934 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.854664927 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.773258676 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.212401412 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.77169533 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.77456078 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.210572491 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.855097415 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.802945824 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.783581017 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.780092237 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.866424143 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.783891861 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.844618067 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.845295099 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.870391395 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.808829612 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.772879976 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.773792036 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.775227516 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.775900714 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.775137553 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.806770677 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.771853884 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.781406829 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.211220452 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.782047367 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.781079847 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.775144234 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.774393082 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.803469969 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.775171951 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.776273203 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.856589433 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.776586844 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.8432572 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.264122544 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.261847369 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.775264135 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.773136526 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.777937906 seconds)
  done (took 178.806221108 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.841132192 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.85169056 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.841312927 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.776807559 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.826016541 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.843414421 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.777727276 seconds)
  done (took 14.461713473 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.782282914 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.776921284 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.82861152 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.825724832 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.777770596 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.930522557 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.776511559 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.791563747 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.78135569 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.803066718 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.777570623 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.776097441 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.783034077 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.777288102 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.823698692 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.78712966 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.891152509 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.778787792 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.776889164 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.924580848 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.782280432 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.786431044 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.801958272 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.788843678 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.778199081 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.784426683 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.350064615 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.777298884 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.777019114 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.777862792 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.776922791 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.818057822 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.780303883 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.776314935 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.777794293 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.894012096 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.776022577 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.777823798 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.776125497 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.775596449 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.778436575 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.777659983 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.777854416 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.779994756 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.77834392 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.800660683 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.777191161 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.779698119 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.778665542 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.7804035 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.802847904 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.778789909 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.778861823 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.783898113 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.822964077 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.788135084 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.780483885 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.781075089 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.781478204 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.779697077 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.931218013 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.828187745 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.778161834 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.826963199 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.776876131 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.781291391 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.779143028 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.779567482 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.865871441 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.777914502 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.826420086 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.78095797 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.937240941 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.802015061 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.781068714 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.783297911 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.789469656 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.779664162 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.778615957 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.791541543 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.779058716 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.781214696 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.785178105 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.784438174 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.779658659 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894297868 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.919868933 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.780195566 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.781367294 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.787770704 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.783405609 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.82211319 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.779683893 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.78083099 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.836774827 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.895723502 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.809929252 seconds)
  done (took 196.855964081 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.787537586 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.78774756 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.781470154 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.799827248 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.781258383 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.780253321 seconds)
  done (took 12.426578187 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.782759215 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.786448106 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.782107134 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.781431889 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.780931242 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.781990142 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.781364861 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.781701422 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.785971287 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.780651016 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.781927948 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.782931182 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.782086725 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.780769053 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.78191373 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.781169089 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.78153251 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.780351344 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.780276976 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.782227091 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.032694811 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.781222055 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.781232104 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.788191323 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.786150028 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.78065675 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.795023809 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.780815919 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.781986678 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.788670514 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.785670955 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.781782281 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.787776849 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.790665604 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.786762084 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.78786625 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.786632308 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.785587094 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.783315261 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.782130041 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.786332149 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.784621405 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.782259388 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.785557612 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.784668524 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.791850201 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.790328889 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.795770859 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.783807107 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.787191426 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.785897455 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.782549291 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.78360318 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.785732901 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.789584348 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.789404942 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.791398494 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.783553991 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.783265166 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.789065071 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.787389268 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.784474256 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.786953145 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.789819263 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.792454214 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.787846823 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.790241181 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.788814043 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.784782551 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.785106965 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.787212046 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.784532086 seconds)
  done (took 131.493231043 seconds)
done (took 535.76739721 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.008336724 seconds)
  done (took 8.719610894 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.867427662 seconds)
  done (took 8.635412963 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.345919522 seconds)
  done (took 10.062146698 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.80203094 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.822444594 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.795617145 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.786223276 seconds)
  done (took 28.94265447 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.114995166 seconds)
  done (took 8.826437787 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.806022747 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.778055388 seconds)
  done (took 15.363551242 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.906863912 seconds)
  done (took 8.618884262 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.138780982 seconds)
  done (took 8.863334409 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.803170057 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.794701364 seconds)
  done (took 15.333276631 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.786602747 seconds)
  done (took 8.500516971 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.993942934 seconds)
  done (took 9.806704801 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.813336509 seconds)
  done (took 8.597061432 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.81420872 seconds)
  done (took 8.528465291 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.885392174 seconds)
  done (took 8.598427471 seconds)
done (took 159.108831034 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.787868778 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.784882354 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.787026371 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.784486709 seconds)
  done (took 28.856545756 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.820844832 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.821561425 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.821444417 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.83090834 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.82127536 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.8161346 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.812869312 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.812304019 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.830042406 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.822421975 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.823015398 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.822816458 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.820637098 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.811396741 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.821681248 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.824003096 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.832861337 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.821189578 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.813759512 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.822289732 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.786206206 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.832722278 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.823114769 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.791104135 seconds)
  done (took 45.370567335 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.97834734 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.85834466 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.941554374 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.841155991 seconds)
  done (took 9.333174779 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.838594618 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.840522114 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.852944584 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.88987294 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.917154314 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.850282002 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.81217019 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.808860213 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.794521357 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.841872181 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.917390369 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.836203912 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.929401296 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.788094686 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.97339447 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.79203595 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.789726316 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.8391572 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.890722019 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.90451178 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.796075682 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.840153613 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.844059054 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.836873394 seconds)
  done (took 46.143479375 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.788746408 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.80228568 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.797665196 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.789668294 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.791614145 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.789129795 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.798501887 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.791676986 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.811657499 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.792826717 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.789362668 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.790512555 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.798835134 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.791788805 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.790348839 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.803647829 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.80522017 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.79201604 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.794153614 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.796244033 seconds)
  done (took 37.622841529 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.78658568 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.635273155 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.134056142 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.041191473 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.786925874 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.787138498 seconds)
  done (took 30.887272257 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.802348525 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.792353969 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.794407277 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.850190355 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.929011688 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.794905171 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.790521666 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.805431979 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.836404452 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.853112865 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.80588522 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.817697381 seconds)
  done (took 23.591243365 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.795057172 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.793224871 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.789941656 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.803307018 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.801174853 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.795588964 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.797641182 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.788676616 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.801192249 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.806864432 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.795336164 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.801779416 seconds)
  done (took 43.292571537 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865593008 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.663892402 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248039352 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253001883 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.313854704 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990112559 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.79013546 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.876910185 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.795993971 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06179349 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.150169303 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995512608 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.036276412 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.622191736 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.789794622 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.267058747 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081671507 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012267457 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817631052 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4286001 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893726921 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338584558 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.472142277 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901740812 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990067314 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.908753744 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.044774933 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.742495942 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840761837 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792673988 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794385509 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.788567563 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.061527766 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910056361 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860585619 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791883014 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.205717244 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.493567713 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.800395964 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.42146004 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.307584011 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.912235288 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791740965 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79009868 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.715306554 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302220268 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877096312 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.791421808 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.489396967 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.789183905 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.794635488 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863531593 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.789134056 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.59691163 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474086845 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.059825201 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.790463583 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794681295 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35393043 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818149844 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409520366 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.721629045 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.884753313 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.488106905 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253440798 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.948723319 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.792133977 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.796853865 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72114398 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.483077543 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907542379 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928417679 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.808810381 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432861756 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097320413 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.225599376 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850102492 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075713604 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.576974879 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.724379999 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010722593 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.741419373 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722371046 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.620220666 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.7213792 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017956596 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827223725 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.403130406 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827313239 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.876719148 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.800563224 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807827294 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796197444 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.007324982 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.688815878 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795331239 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.107406402 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.053520778 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809863417 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.880296032 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726798813 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.794721151 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039973496 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.998254513 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.030320992 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.266907851 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885595571 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.605393924 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.908161287 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.696464071 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.798575829 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.068108394 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857344545 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.827457919 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916737178 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.749787494 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040789739 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.642557274 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.995475466 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.183449101 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035143096 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.128611677 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039296325 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857824704 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.799606757 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.794869261 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.50061494 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40825375 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.010700182 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.808531713 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.266242095 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.79632717 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.797326648 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727029333 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.411504455 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.195728327 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.883732284 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.007321416 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.743582899 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062704351 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718488768 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93160344 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.785890379 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.008235129 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.443297572 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.883221855 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047896876 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.893089805 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.007019532 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91491378 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807941783 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88605261 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808897276 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.097426925 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.13840754 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.793383646 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.797668306 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.500512098 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.853464378 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796582768 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.796489748 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.322532447 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068930346 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.817859172 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.799601094 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.672515305 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.807968097 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86149631 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797909573 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.798477388 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.312134647 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296138652 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.802676826 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.440359188 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007477514 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799742723 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.502702536 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983746177 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.80518973 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068309513 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862924111 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.721257318 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.499491067 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.49650653 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793768641 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.722178277 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.797587966 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799665732 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798112362 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.985016335 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078577125 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85049304 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.453258 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.906972041 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797379679 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.797060436 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795983627 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.312032205 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845280572 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276426039 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.90154617 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924202106 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.808920364 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.721027831 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.7985288 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797017401 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.795746641 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.7422421 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844408147 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.447613845 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007800565 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042573816 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.207828332 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80379326 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.491329464 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.916905497 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.806388614 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.120229017 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303524833 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.896591735 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860509345 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.802557334 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.493453038 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.531744259 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359094878 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098565494 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118004794 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158128601 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.158692135 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.111264345 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.882814493 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023060121 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.317310016 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853611485 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.883984135 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734826839 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809077438 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.447207934 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15488272 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802757537 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014010849 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094808525 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.189796324 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932026302 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999276168 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828435239 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.576696242 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.817257842 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.330084758 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817326256 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.241485996 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004873549 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878053283 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.121421144 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.88225297 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.801176551 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153581455 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840548235 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.502689173 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.151120029 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.179393136 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.294980289 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032634929 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.802938011 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.236863313 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161127801 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.969321645 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.917444194 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731737638 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.806813787 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.807180361 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.814907969 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.774417835 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.649803753 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.041889588 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806817476 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029295089 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.898417771 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169804416 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.710255317 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.80332111 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802260311 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048265682 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457846817 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952607757 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.091440758 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.367703989 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811216928 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.729211923 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730208218 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.503624483 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.807278879 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.768918514 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00980307 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.909263023 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.483945488 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.161754467 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108535717 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047440435 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.813809824 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.077866087 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083415955 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.292732174 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823803402 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.900864324 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.14302304 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.494480307 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.017883189 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.032055415 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339146122 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.018387387 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263833968 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.773233074 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.806105496 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007984618 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.020303172 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.221035717 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979755149 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.512993408 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.818156587 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160031879 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866183867 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.199024417 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.996200894 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.888755421 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80880534 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87935432 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806749841 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.810149072 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.810712233 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814260862 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.206631751 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926383872 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.817208384 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881155489 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856830307 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.377557774 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.812250361 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078977606 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158123946 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140281748 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871290685 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.808370739 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814718622 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732251731 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931810845 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.24803651 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076626638 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.927324193 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.938825605 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824797053 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.192807569 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.034988156 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107004248 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078766788 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.693488787 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422859261 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.919149481 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.022371802 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812137589 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.011180719 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023963762 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114764885 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371368024 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.904872832 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.993776219 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078706455 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.175105462 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.807243563 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385316441 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.82076563 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214006583 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.839322029 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.217714474 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066988406 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811221244 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930917327 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.810756447 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.006226076 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.256987975 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.471588441 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15789354 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661119976 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.813367675 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086280087 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.143099076 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115823476 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882701278 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815501246 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.498607924 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941456096 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.69543546 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.048555153 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.809432419 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012073275 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.519222315 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.811680793 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088556337 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115855118 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.80913558 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.728403745 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847781434 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.811947059 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.021622784 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022835864 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053678615 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810730769 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.810779233 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.615459058 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090250531 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878525604 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734837307 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.8088346 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854102976 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.036146312 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.828283766 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.323368848 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.51011771 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093071421 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.715537054 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823701713 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.189231637 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.192050363 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152959278 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.335730859 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028450282 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366108825 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.634766949 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18148811 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.814527136 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.189345305 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191345991 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.814956705 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.284374192 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915452267 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.085975428 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141969203 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.831877707 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.533073389 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.84753225 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023929528 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.17165413 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74298971 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.816546461 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.861255734 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.814917724 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.816250135 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.819697818 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.772964453 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.244067526 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.645987852 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373809155 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.8181765 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.901118957 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.198983068 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.322688401 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913877178 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83308655 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820092856 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.51599123 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.100972284 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.058510993 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.297474541 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.901493933 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.819022642 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815772764 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.735455493 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000912043 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.002229737 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097780713 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.146404392 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.917886102 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.821095996 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.02291744 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019387838 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.220180073 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95184132 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.916882766 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921307736 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.758220785 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.5218086 seconds)
  done (took 1628.120445038 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.812938124 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.824481185 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.813990246 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.815714605 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.839075997 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.827952935 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.864774641 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.817455982 seconds)
  done (took 56.361417148 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.810674048 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.965220923 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.814330241 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.810655762 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.813045139 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.814299492 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.98987285 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.834627906 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.812767522 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.817792964 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.812365974 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.808492232 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.102492441 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.830818701 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.812523551 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.252394711 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.820114167 seconds)
  done (took 73.669578548 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.814885751 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.208341671 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.844695489 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.814956392 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.613301059 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.824101081 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.845428389 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.854255447 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.817446794 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.863325504 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.10416227 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.818050295 seconds)
  done (took 89.164621368 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.828465861 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.816799493 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.817193591 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.815936334 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.817094638 seconds)
  done (took 10.845984549 seconds)
done (took 2124.993080219 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.043177889 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.012434566 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.070545625 seconds)
  done (took 5.823626732 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.957832367 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.009030345 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.123331694 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.130264993 seconds)
  done (took 9.970558251 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.139131055 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.203921748 seconds)
  done (took 6.088777411 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.134057606 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.842328505 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.228573468 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.820047697 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.818799287 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.818098186 seconds)
  done (took 22.206501242 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.820265107 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.819241882 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.819159213 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.819002718 seconds)
  done (took 9.021122415 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.825758331 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.513728347 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.826568839 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.83550954 seconds)
  done (took 20.743433251 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.966944257 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.935136203 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.962672357 seconds)
  done (took 7.609025753 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.961569059 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.675135558 seconds)
  done (took 6.378777513 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.961115191 seconds)
  done (took 3.703368522 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.847061831 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.088963919 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.304971343 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.333135885 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.396303501 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.63588621 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.141587133 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.037057946 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.254249924 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.269898983 seconds)
  done (took 24.053877437 seconds)
done (took 130.587441036 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.16800675 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.829173001 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.019806876 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.176382695 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.057754298 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.021024209 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.038693526 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.166538331 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.856737322 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.843293123 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.1803586 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.134429954 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.978067612 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.822400777 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.992640767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.836666038 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.052266801 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.18607824 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.858753838 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.10149861 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.048671874 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.820879515 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.013740495 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.834328093 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.081866285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.970934236 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.365922561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.839317406 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.997345832 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.375837909 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.973534298 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.251190369 seconds)
  done (took 166.638678541 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.821986334 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.817185628 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.817280289 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.816869613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.280696323 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.818600223 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.819829852 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.816745279 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.257401586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.249607846 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.817484487 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.264822418 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.819040731 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.81655213 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.81882588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.817320123 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.430782729 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.818407567 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.818363975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.817194419 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.81818619 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.102931376 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.818030178 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.110995131 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.42410327 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.821364256 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.817938935 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.818148247 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.818201728 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.81642589 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.818559862 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.818811357 seconds)
  done (took 207.508902027 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.772064816 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.822034693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.820242893 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.819939243 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.819723444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.821276736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.821036766 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.81796307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.570688674 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.557303111 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.820026427 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.819653961 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.82084159 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.817360042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.819336624 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.819025621 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.818923952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.809946944 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.819370847 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.819318447 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.821959794 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.404304528 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.818271456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.40815903 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.819447286 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.821927751 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.818511338 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.819648756 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.819745899 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.821181956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.821204265 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.818590731 seconds)
  done (took 218.588563021 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.0645663 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.823434481 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.823724314 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.736343713 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.823881221 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.824356334 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.811583299 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.070127068 seconds)
  done (took 18.729127292 seconds)
done (took 613.21812103 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.20696285 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.042477146 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.999725451 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.844808445 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.108686672 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.886800309 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.843804892 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.910681706 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.661547828 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.916213568 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.50588922 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.863910236 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.60294992 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.869728082 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.966460206 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.901335609 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.438412258 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.545878536 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.013214688 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.924337504 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.019674388 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.763146121 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.922803541 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.697388626 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.628179103 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.81389598 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.871231205 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.440736102 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.853028781 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.999325342 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.499084755 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.118657574 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.855548731 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.839336494 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.896252373 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.87539815 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.052358688 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.852519794 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.963898184 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.561447945 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.920371094 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.568678454 seconds)
  done (took 100.815556232 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.836034087 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.830926043 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.830666277 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.830130577 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.840273453 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.831335314 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.830887125 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.830840693 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.831828125 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.831433039 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.831900147 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.840059682 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.832520506 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.840956101 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.832555168 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.831119248 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.83109234 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.841983752 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.832819862 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.831028131 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.832801005 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.831673557 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.828565818 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.833166284 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.831572677 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.832814675 seconds)
  done (took 49.425364741 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.828388227 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.980465161 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.068096332 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.845757426 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.82847309 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.831007126 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.846321301 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.831933582 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.83156971 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.830669405 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.916846244 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.831106936 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.846263364 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.072448497 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.843426906 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.828572951 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.828836366 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.829093159 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.986726717 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.840333929 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.848471983 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.83043576 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.847810507 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.843026412 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.830731322 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.829449489 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.832198421 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.309220734 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.834697836 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.916969924 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.873336578 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.853937991 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.250952988 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.081010498 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.881279249 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.838839442 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.829503686 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.919435554 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.833251992 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.829780981 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.847626877 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.833225998 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.074669 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.35808881 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.840737316 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.829377119 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.321609015 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.927639578 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.869528335 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.835759298 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.076964266 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.844904027 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.830765999 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.832006387 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.865888091 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.833257368 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.830265436 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.191507184 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.839822137 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.848949369 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.834969663 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.832205325 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.996644574 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.838552721 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.983554385 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.839820329 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.836752354 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.83163358 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.075002023 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.845383478 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.368016343 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.844107221 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.830579486 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.918910706 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.987776161 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.34348569 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.84167426 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.997459972 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.267024889 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.853361916 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.836615159 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.300117026 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.856478544 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.83690363 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.831861682 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.832551958 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.83145642 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.875182045 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.84750223 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.282152248 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.367800667 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.212305319 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.857559633 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.84552912 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.832966574 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.193650034 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.839023213 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.832494866 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.06944645 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.375902119 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.846033038 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.839347823 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.350808206 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.846172348 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.850784938 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.840497415 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.080208066 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.845473085 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.873179973 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.8329486 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.83966868 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.835219208 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.851138608 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.842051631 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.833467931 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.344347021 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.937778506 seconds)
  done (took 227.761892438 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.834694024 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.832812398 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.83184476 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.8345539 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.83218105 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.832976161 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.832412417 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.831967356 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.833509884 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.831659816 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.831980622 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.831547189 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.834190991 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.832144981 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.834873727 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.834643115 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.436663049 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.832620352 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.832675661 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.829567339 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.472381862 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.837472795 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.833602969 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.830776834 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.83399702 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.83450627 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.837132775 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.83199634 seconds)
  done (took 166.333327403 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.83505002 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.9483099 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.851547044 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.863528367 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.840631219 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.836349397 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.933036206 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.848480955 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.84137022 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.835487596 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.83684909 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.894329174 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.843473681 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.934271128 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.861374549 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.942973521 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.935025304 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.838553055 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.835806839 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.836522984 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.864150785 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.849784614 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.895292031 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.955500601 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.855606765 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.948574031 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.864321431 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.836752575 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.835253995 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.948361437 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.854579443 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.896953431 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.861878969 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.853931839 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.954248203 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.951817685 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.937675102 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.936352813 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.838296989 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.837072958 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.837381041 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.846887414 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.949548564 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.856517488 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.839011698 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.96045416 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.854703463 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.838582377 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.836856638 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.837526961 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.851285068 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.855079907 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.901424483 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.962500729 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.872547453 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.862400251 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.935530586 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.962352468 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.83794871 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.935254616 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.849684584 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.952557435 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.858073871 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.848777524 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.839753934 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.843728104 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.867645959 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.943174175 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.937887011 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.842202835 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.936379385 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.869739324 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.843113388 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.840268751 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.839032939 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.950952072 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.956614852 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.868895769 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.873104725 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.866430788 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.855072268 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.838934701 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.849677985 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.855392652 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.844702502 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.953091982 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.955690569 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.841197014 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.840389609 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.839771778 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.839313125 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.864045354 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.959915216 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.875701805 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.954388684 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.901031864 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.909209343 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.849287324 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.853069758 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.844911688 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.902305717 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.850135979 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.852295985 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.144373456 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.900728359 seconds)
  done (took 199.369089532 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.211303808 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.88114253 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.896658232 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.160133996 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.196087757 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.774456947 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.880373113 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.887108123 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.910693731 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.076855754 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.95631758 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.907750631 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.87566272 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.862063554 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.888649258 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.910367189 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.895793015 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.236703601 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.106821538 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.05925822 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.873646135 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.177701043 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.202261942 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.47506952 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.931670592 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.284043025 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.45870567 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.019813745 seconds)
  done (took 60.768266911 seconds)
done (took 806.221556768 seconds)
SAVING RESULT...
DONE!
