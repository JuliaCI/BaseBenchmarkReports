cset: moving following pidspec: 27119
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.681065936 seconds)
loading group "shootout"... done (took 1.148910654 seconds)
loading group "string"... done (took 0.422461212 seconds)
loading group "linalg"... done (took 7.916237982 seconds)
loading group "parallel"... done (took 0.150927402 seconds)
loading group "find"... done (took 1.337063561 seconds)
loading group "tuple"... done (took 1.996539118 seconds)
loading group "union"... done (took 13.069072885 seconds)
loading group "dates"... done (took 1.391817315 seconds)
loading group "micro"... done (took 0.214677432 seconds)
loading group "simd"... done (took 4.513998235 seconds)
loading group "io"... done (took 0.951825126 seconds)
loading group "random"... done (took 9.014486821 seconds)
loading group "problem"... done (took 1.665705673 seconds)
loading group "array"... done (took 20.976557352 seconds)
loading group "misc"... done (took 1.639523722 seconds)
loading group "scalar"... done (took 46.48081437 seconds)
loading group "sort"... done (took 3.646016921 seconds)
loading group "sparse"... done (took 13.921105543 seconds)
loading group "collection"... done (took 20.251355117 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.559766681 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131858921 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140581801 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124496634 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154826484 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119432039 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.13004853 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086218781 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.936275209 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15154266 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115822075 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.49109169 seconds)
done (took 5.593906111 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173770391 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089663326 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080324794 seconds)
  done (took 1.296242091 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067517825 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128760779 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069086791 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069545628 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068954445 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06893927 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068470937 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068387189 seconds)
  done (took 1.667462163 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074641998 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070682517 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067750868 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.07004074 seconds)
  done (took 1.409901897 seconds)
done (took 5.75574702 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.257494202 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.111007579 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.305259832 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.326703618 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.44762469 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.093259319 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.076313114 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.074999256 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.131297092 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322011453 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.119125957 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.196321003 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.100482483 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.184351331 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.0189518 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.134583244 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087634237 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.127547072 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095147755 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133749635 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.378464722 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.079110436 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.084701914 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.073071631 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.069845402 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.648242411 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665167126 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146662497 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085867363 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.083065098 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.118541942 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.64960226 seconds)
  done (took 10.59316941 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10280441 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099999494 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070919449 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126904558 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099027688 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071219595 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077594188 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07015376 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090870688 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132137698 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091809951 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108783725 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068032204 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071208975 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099789948 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.199100301 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081536096 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083284079 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070844257 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080788117 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108598507 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080191865 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081019018 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081144351 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131070896 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17064682 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098766792 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099879155 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068452799 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082283327 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117783914 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127975799 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068737124 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06783449 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126256849 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096988039 seconds)
  done (took 4.6791423 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.192457846 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.095073032 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.108215583 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.628784424 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068714153 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.173441981 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238426924 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.076819458 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.489336259 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095403725 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.156670307 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.126182533 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066396006 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.143018856 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.123442314 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.074813245 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.386077303 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.123629131 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.359925949 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.070682181 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.071027117 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066751357 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076972013 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06906416 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065981011 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.078163806 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092477268 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.093596735 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.341227921 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.878788612 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.304760831 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.071650644 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164262859 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.093268538 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.369277474 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.071533631 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.094835101 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.395033397 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.130096957 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067424721 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17684539 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.131471353 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066605338 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.120846691 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082453145 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.073290741 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.072920805 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070268145 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080791476 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.083670553 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.106081333 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071422501 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067893234 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169805727 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067708919 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.068476355 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.069807271 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152810619 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067277681 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.159232858 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066455892 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.071361898 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096474915 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072790157 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.089581988 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118639535 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.353902149 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.052325786 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.072240077 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.065228475 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082030089 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.069103551 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.084595581 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068765508 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.073144385 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097371302 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068832882 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.079664222 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.072337227 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070216868 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.113727462 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068089871 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.071528909 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067282145 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.073458583 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102214284 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067467124 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.46163226 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101770665 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.068806428 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.079237127 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.216808444 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.0694535 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.07515772 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.072181168 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.074523478 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068434481 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.070919573 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073559603 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095984676 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.071935262 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114652388 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.042455681 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072849559 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066196007 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.069104117 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.073155219 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073684685 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.073830666 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068687163 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073109139 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070695431 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066905291 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.120365352 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067584871 seconds)
  done (took 22.563231897 seconds)
done (took 40.155153888 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.260572239 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084381237 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084591295 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084644713 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084728559 seconds)
  done (took 1.827860222 seconds)
done (took 3.041095903 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.136977109 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106852692 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066493755 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103485071 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066380849 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107965762 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107274478 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084929929 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108656402 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066675221 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104302504 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066208532 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066111946 seconds)
  done (took 2.417564672 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082708474 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084518768 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070491026 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082740545 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064226703 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082775273 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082015651 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08953599 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081959743 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073779502 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066881785 seconds)
  done (took 2.063452132 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083002627 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084982157 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070350724 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083440288 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063973634 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083024127 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083579531 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089262797 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0838948 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075139329 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065197939 seconds)
  done (took 2.06318026 seconds)
done (took 7.745451506 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076890593 seconds)
  done (took 1.261045519 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.551252982 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.595559925 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079148158 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.101011178 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.206317883 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109546158 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.247069407 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083065713 seconds)
  done (took 8.342115999 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099971391 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084660197 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070908869 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071547346 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070722452 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071613526 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070574944 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071834455 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071204786 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071943285 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071739536 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072517062 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071616044 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071643526 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071370105 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071077418 seconds)
  done (took 2.458345737 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10091012 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099674 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075172695 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07699 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074608625 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074610344 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076865338 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075672304 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07282018 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075110795 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077423808 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077291614 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074787306 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065776516 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07638116 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077656198 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072943391 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076451095 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076788578 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077152672 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076752393 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065799091 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074968945 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075729709 seconds)
  done (took 3.157035619 seconds)
done (took 16.412877881 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116813334 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078301977 seconds)
  done (took 1.384801251 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08263641 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083529423 seconds)
  done (took 1.365823215 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077874404 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063598843 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085001317 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074897726 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064645781 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064121509 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082776648 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064264244 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064161342 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064250868 seconds)
  done (took 1.906999252 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066406167 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076520526 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070646542 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083359324 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070768986 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065668872 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06849134 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066097469 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.072757738 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064408011 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069189293 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083953345 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06877 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085921199 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069002951 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069453 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071365242 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068550452 seconds)
  done (took 2.493073986 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06394743 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065069343 seconds)
  done (took 1.337567324 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067697947 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064896109 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068146253 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067433849 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064696305 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064870281 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064758192 seconds)
  done (took 1.663689505 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.422287584 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135086481 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.345872007 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072080275 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081387558 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25634349 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066160664 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071197173 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070861224 seconds)
  done (took 2.768149393 seconds)
done (took 14.131284827 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081715597 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087664227 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.104151784 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.432057139 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093816383 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069266598 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114971018 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.183828595 seconds)
done (took 2.38996587 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210974139 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.82056654 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.485988959 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.222375262 seconds)
  done (took 2.744139893 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.468428153 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082190448 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078028486 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068522076 seconds)
  done (took 1.91738024 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068372225 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071802697 seconds)
  done (took 1.355957135 seconds)
done (took 7.455187174 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066494349 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065858906 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06688695 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06619042 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066613795 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066968597 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065938064 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065873811 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.066291822 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.066563508 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066242551 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094032275 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066918154 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06661077 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066361045 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066400434 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066495989 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066467494 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066408804 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065960651 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066495529 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066178423 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066227745 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071672088 seconds)
  done (took 2.878087986 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08379693 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068675442 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070303059 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070540619 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070369245 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070034124 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069872555 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06877126 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069955561 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068101226 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070613776 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070281878 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068231106 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070434118 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068007779 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070563686 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070236543 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068368135 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068565931 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070194749 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069952634 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068906488 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070463667 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0702301 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070437683 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070169546 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068354405 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068540518 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069999625 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070702594 seconds)
  done (took 3.333140839 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06737194 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062337513 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063476954 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071756089 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063303725 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064330166 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062697884 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063037519 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063869622 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062747111 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064306457 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062729948 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062777177 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06400692 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063630949 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067295477 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080870491 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063741202 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062772959 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063434997 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066693956 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063281691 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062922075 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063077502 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06259942 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062357048 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065744864 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062760441 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063444836 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062743023 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067005299 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067550736 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063263134 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067639492 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067074825 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062781742 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067171667 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062813796 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063363851 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063110902 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062532559 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062928684 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062965936 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071894837 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063149346 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06406655 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063099063 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063815039 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063871824 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064978657 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062617526 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062831027 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064768315 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064177729 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068544116 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062943959 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063604304 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062480866 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063744236 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063059725 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062386164 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06249944 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066136037 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063509389 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080268777 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07148206 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062817577 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064704124 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063672807 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065921987 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064449574 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07852435 seconds)
  done (took 5.904461972 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090726683 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091833085 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067789014 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067591921 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063882688 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063743442 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072204445 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063481999 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067854143 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082190789 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063920606 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067795997 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068254467 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067526439 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064216475 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068157203 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072105602 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064005454 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063316134 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067725917 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064003479 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071115811 seconds)
  done (took 2.777342381 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153455683 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069191182 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10745612 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074874291 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072164663 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073800681 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069412281 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069372513 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069551898 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069792026 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070242844 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069501144 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071549384 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069861431 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069854222 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070009542 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06967087 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07031285 seconds)
  done (took 2.62507187 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079765232 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069112065 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088438709 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068991917 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068817632 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068428914 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072759922 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073498095 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068282661 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069167056 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073628846 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068143246 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068549417 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069039233 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068242329 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08441025 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068482838 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068654393 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073238056 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072414919 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072448219 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073022322 seconds)
  done (took 2.823793034 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088514593 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06724063 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082520906 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071074411 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063035736 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063751806 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069189118 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067660536 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069189834 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067320501 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067602113 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063327658 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069786963 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06794992 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070145901 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067788311 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067297476 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067809225 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067359417 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063065467 seconds)
  done (took 2.633544642 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084077124 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066210786 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065951481 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072371607 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066327116 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066088813 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072242447 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066588654 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065912184 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086725833 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066165199 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066366193 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072379785 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069804759 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06593548 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072172359 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072191947 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072047618 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069012755 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066566093 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086773882 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065988287 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072807226 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066153769 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06628369 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06628428 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066456102 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070439954 seconds)
  done (took 3.220133676 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066014703 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065854289 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065917844 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066251352 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066293333 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066712077 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06781826 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067677763 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06728396 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067459548 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067748034 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067871282 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067264726 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067322007 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067305407 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067372174 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068210435 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068116506 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067532829 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066587373 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065580612 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065863005 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066017415 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066283284 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066111512 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065593131 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066073616 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066323729 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065735219 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066193326 seconds)
  done (took 3.257796447 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076421561 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07459099 seconds)
  done (took 1.405557112 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065074246 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080378586 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062602152 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074250677 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071727766 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066721362 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073022134 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072395792 seconds)
  done (took 1.818634811 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.090795503 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079433196 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065693215 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083168704 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079344291 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089344019 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132562064 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065122958 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07547848 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065969828 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087322711 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067144524 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075291705 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06986375 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075212156 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078416846 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063194934 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069935063 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065845953 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063168712 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065495414 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081181551 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074233632 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063647748 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070548173 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09342715 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083402414 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064523093 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071897294 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077039277 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074921583 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062280984 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064699142 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065117539 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063331451 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079067304 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087465017 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071950012 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078302677 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065889628 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076167523 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063072151 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074231487 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076553593 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080745171 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065293096 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065329193 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063075279 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066193012 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071583148 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063155501 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069775177 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062468129 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07702375 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072538147 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080180173 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063658754 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070913167 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0716824 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072127017 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076634424 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070935863 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074188839 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064654138 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080154773 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074248633 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079268547 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062899119 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062152865 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063254415 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078586012 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098262474 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074584616 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064744076 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06512727 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062861066 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071948286 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065145072 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076461215 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075904112 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064303283 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072200133 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077326235 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069204514 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071272964 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071552887 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063476807 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068667115 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066296848 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084688597 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063448357 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063056976 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065944996 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079804614 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071683403 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067088188 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065880699 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076549018 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062007412 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064943384 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065636661 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070592135 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077600402 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06814397 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071383316 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07695309 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076236424 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06924468 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070333012 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061188284 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064326779 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066259644 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07506448 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061134121 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070761356 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067894524 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063941204 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074773661 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062326645 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063611787 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076392935 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.0751448 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062296002 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06153239 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070546281 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063194654 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065456837 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077355209 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.192709198 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065101466 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064629956 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073444345 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065297159 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072836009 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068963644 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072990785 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062950744 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064558338 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069311619 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076549555 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069040956 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070515266 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074734827 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071575327 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064065032 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077204284 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072425114 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067564938 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074368942 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069071991 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063312477 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066559553 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071589735 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064175982 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072499343 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067365035 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071504363 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064954828 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063720331 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071189375 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065403595 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.0671545 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069954488 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063836019 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07995474 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071601013 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063243199 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062391346 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072025392 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066382201 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064555651 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067306175 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071290487 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065532032 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063885353 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06450902 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070774886 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07611379 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067791504 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065479726 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07440634 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08217129 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064763368 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072894915 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065178466 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065692572 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065501009 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07876602 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074650879 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068725961 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071710157 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062671926 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076743577 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077158938 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067298415 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063448526 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067627616 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068419596 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076438002 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068853912 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065265331 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063468627 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070900504 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067420319 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071695707 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064212731 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067392927 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069633594 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063331276 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070086897 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065291513 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079087233 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071977265 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063024251 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066804688 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063847314 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075722356 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063064242 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066492355 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067818069 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065737246 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06410451 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071211913 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062167747 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077542391 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077701965 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06975287 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067641218 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064282585 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076482913 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070458372 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072561996 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071566148 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073844625 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079755779 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067419064 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071979823 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079136749 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064914563 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061625116 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075465377 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062903074 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063519285 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063089626 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062721582 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070943742 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069543991 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073722684 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061371364 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070220815 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062368633 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066335081 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061818153 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072331526 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070196832 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067687505 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07520326 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063696428 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063653661 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070994455 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06358933 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.197752198 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068860694 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073141098 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066113533 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072446215 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067974064 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070892214 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067441927 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063982598 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071016578 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064571491 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070422199 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073768387 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064550926 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070534018 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072120869 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065207545 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071032066 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068963392 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068269368 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072090746 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071511425 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070481558 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071538705 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063460581 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076786274 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065107086 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077702112 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069389362 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062020813 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070258857 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072027568 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.06969046 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065778097 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065879779 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070948323 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064244532 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071390823 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077309997 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066469558 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080564001 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075872504 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07047609 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071473527 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070505989 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070316049 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067874739 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069165746 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064895173 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070029666 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064270381 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073596822 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072003365 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069602235 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071120173 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065870382 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07043604 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066035909 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062703867 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067391163 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067659461 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064794143 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077628465 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06515216 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06800061 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06394484 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065541721 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064430803 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062267554 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071773434 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074187128 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06519375 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075416866 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067658278 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071100116 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08087868 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062397077 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063529337 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06363504 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067023124 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077417995 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065496273 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078141313 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070089872 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067966669 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062552238 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065557147 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063427721 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062543627 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063441916 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072852893 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067458999 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064094606 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065221512 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071954212 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0658203 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077023441 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064001346 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069761692 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064975395 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06323992 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067534336 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067781859 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071573895 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065848738 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066486792 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062822354 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064561968 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069151179 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071000667 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064759567 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070356388 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077733413 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064429882 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071850591 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067037001 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062479876 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071750624 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063829905 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064060965 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066306519 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07150295 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071087229 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064525546 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078193717 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065850376 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069409888 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063682411 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061838574 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.062976608 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06323805 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063095468 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066038579 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064617049 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076257971 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062058592 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069445266 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.207020398 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069987507 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075304419 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065953641 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071571622 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070528085 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067488764 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071719095 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07805007 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069028978 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072585854 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06564497 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070600414 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074841604 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06812204 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076978675 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070106206 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065170598 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070557043 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066976689 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064892042 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065052212 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064517349 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074871807 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064995191 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068061955 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068005126 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063386333 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069536184 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067379372 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078366155 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072416001 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072216673 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063719217 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062960839 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066177757 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066817511 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071045542 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072280702 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07518419 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073019102 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068636536 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064338589 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079772036 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075327651 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073175623 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066307808 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073073701 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065583818 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071645095 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06907419 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069595877 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066471798 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073064216 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070649248 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067932771 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075002774 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072953018 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065558687 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071002251 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071347166 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069696528 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063508238 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06523038 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071580453 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073544806 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071576764 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065026663 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079844018 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066311242 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069964618 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067242261 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064309522 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073625272 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063280795 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071801779 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065850794 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065778336 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06361347 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068084273 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06637465 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071995312 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067649097 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063435144 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080060896 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07944883 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071080763 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064085869 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063817694 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063173333 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063343202 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067600248 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065780899 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070749309 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079354094 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067199592 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067234164 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063111538 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064997763 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072234128 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072683903 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062910531 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063726088 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06791108 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070843965 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076368915 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065211622 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064931416 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072150872 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071573609 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063440209 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067352739 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06229206 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072510291 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080829311 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064978395 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070639042 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075957091 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078108231 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064625456 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062606268 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06447351 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069967629 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070010336 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064811204 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064764466 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082488399 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071319322 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066455505 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062857871 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070293229 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066226655 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076414461 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06417488 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066120823 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072103854 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070542555 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.207441602 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076465686 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076668204 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071396276 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072251455 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064992309 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070711906 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064167367 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067694705 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066258403 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065519957 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069809313 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072620785 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067453913 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080057435 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07839523 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067599205 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062371687 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067460004 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067926793 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063664556 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065422632 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063231347 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063547512 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063567902 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064361113 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071210903 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074139258 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06999489 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065221674 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065346363 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062933001 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074658073 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07181006 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070871743 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062557948 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064916743 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065187057 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07296937 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067387347 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066496641 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071235363 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070893703 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07098414 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063332105 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077457446 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064008659 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070876949 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067736531 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064961004 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066421289 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072436529 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06877087 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066614794 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071798719 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072242234 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066435192 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063583412 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063038163 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074560773 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06339571 seconds)
  done (took 43.185908162 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101410475 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064395491 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063185639 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063579994 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073072246 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064170355 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063483222 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064324759 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06426089 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066513686 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063355543 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063408391 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070802552 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078307934 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073229779 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067390781 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063510021 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06515825 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063409028 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064866928 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070762117 seconds)
  done (took 2.78224613 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070544687 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078131404 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076280046 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080229728 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072401244 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068046178 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075396289 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069395921 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076294755 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073722221 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076086031 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068246791 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073254494 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07402133 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07341837 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068152317 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076279883 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072036406 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068065081 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075698696 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068297254 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075733182 seconds)
  done (took 2.943375341 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06490122 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064230669 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070658485 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062775843 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063752745 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062572585 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06683259 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063106916 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065963795 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066567672 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066608835 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066464509 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071183187 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062588255 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069236493 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063233478 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108159218 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06612857 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064495185 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064987777 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062780032 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071295841 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062875095 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063158286 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066470663 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066719205 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065266634 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063068149 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06393918 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066652485 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064527599 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062970062 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070685766 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070407819 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066421541 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066679176 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06372379 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064327211 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065152006 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062924744 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070115059 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063232622 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06505649 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070985718 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062959734 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062945726 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071323322 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064079558 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062669334 seconds)
  done (took 4.596061215 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074907512 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113016982 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06874946 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095033574 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076779036 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070057588 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069053613 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096002592 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064845299 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065574792 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078069558 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078517601 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066299251 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068071797 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070966279 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066484031 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067389278 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065789372 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069513602 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066143486 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069527823 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070321903 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076874957 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077373997 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067854091 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065610127 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066004661 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068913085 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077027565 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070342302 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068157022 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06889333 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077745289 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071094117 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066057601 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066049509 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078363368 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06667297 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066382999 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064958055 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06626724 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067981676 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070599232 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078810907 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066756582 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071222142 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067045482 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064167579 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077563455 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066530801 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070717315 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078688622 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067823679 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06731221 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068703377 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077556458 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066688391 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065549577 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066848848 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077248669 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064669545 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067500582 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078150578 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066119637 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070049046 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078239605 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071357965 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067614992 seconds)
  done (took 6.344884391 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074268855 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095862338 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080752235 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08070916 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074335979 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074937066 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074636882 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074469769 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074302396 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078130006 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074720466 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114295145 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069941758 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07609931 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074300637 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074330138 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074641698 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074554157 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074280589 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074728445 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074653509 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080050723 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074374927 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080283384 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077233157 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070012942 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074105514 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07476544 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080434889 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074249709 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077714703 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074277584 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074351692 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080432309 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077339106 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074674466 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064781389 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074123824 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074495167 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074906865 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070336027 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080534661 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074263029 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070413923 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074879288 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074205057 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081107171 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077749592 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076158409 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078077546 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074948802 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08103971 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07411993 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074620749 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080809061 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083716438 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080541493 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080761681 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074516032 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0804245 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080686282 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083398006 seconds)
  done (took 6.149155591 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081442571 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071400965 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082457833 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063714223 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065577994 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07289603 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063231778 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063499198 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0712111 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071411447 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073390549 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073138684 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075134254 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072979317 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072874032 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075489037 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073601212 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073457594 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071312315 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072874902 seconds)
  done (took 2.809432566 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077249066 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082316363 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069326234 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073139459 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069015865 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073068949 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068098061 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06852713 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06898015 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068893465 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074981637 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074488944 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069528498 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073167055 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074789379 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073077403 seconds)
  done (took 2.51454637 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084885075 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072023846 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078069577 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065527773 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068527648 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063807798 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064622861 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06285604 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063884946 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077403661 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065226925 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075784527 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064890468 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063736008 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063916295 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070234434 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063684369 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064590809 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064319904 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077259757 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07132214 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065852845 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068480581 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064708996 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07029232 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071724016 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06677249 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06810259 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06441574 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065030325 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070246709 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071105732 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064040397 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065924324 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063995141 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064782068 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06449908 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065189198 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070299825 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.080813263 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063101094 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069522861 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064614314 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065564338 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063875681 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065052677 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063778079 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070369206 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064707359 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069879587 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064424435 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067048824 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065144301 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071932642 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067642245 seconds)
  done (took 5.084852782 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080143036 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069168243 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063050135 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063288436 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068229373 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069086158 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068953364 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068881519 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069402728 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063149847 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069319887 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068232564 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069636742 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068734011 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069247405 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068926744 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063456794 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069312202 seconds)
  done (took 2.601022436 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074376248 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068832483 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072731398 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067864856 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067914828 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067910451 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063194266 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063677927 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063459994 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068448953 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068195419 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068069421 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063315018 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068086236 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068165619 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068370256 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068004614 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063344195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068128661 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063919996 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067924693 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064331455 seconds)
  done (took 2.841108546 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096005981 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08459544 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145538014 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080707851 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090698188 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073353311 seconds)
  done (took 1.934915784 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093338196 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098897178 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06858682 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069230491 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073571371 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071582185 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071826783 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0717845 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075777265 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076382887 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071766672 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078011639 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075830219 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078057297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073593418 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073762883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071956636 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071516558 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068326584 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081687354 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072076101 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076187955 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071814419 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071815763 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071829155 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078331057 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076447876 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077288426 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071551217 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076371867 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074524499 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07197393 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07677482 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076585491 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068517589 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07605054 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072027523 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081204419 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073684385 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077669479 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068159155 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073926739 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076604895 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075366433 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076123319 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071671204 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075466429 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072199265 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071731971 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087172829 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073845289 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078081193 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073945899 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076688959 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076145851 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082855714 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077118238 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078141148 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074295748 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077089899 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078034848 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074239285 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078118882 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076614667 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07427709 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078068969 seconds)
  done (took 6.35330274 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105108519 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06880376 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072363829 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076953924 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07793414 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071710205 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071914529 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071660596 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071884507 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068717848 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106311684 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072253191 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078328739 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078360418 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072281329 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072065744 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072242604 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07814199 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068893532 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082976682 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071916342 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078038737 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077962559 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078237628 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077198087 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074002321 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071979202 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072253094 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071771058 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072324425 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075546894 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072004672 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078206611 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069490872 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078296703 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071926274 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07184252 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075705471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071841203 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074664055 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078253445 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08155225 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071747561 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071656861 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076493266 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071791585 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07201355 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068983863 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071806132 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069322973 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076779058 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07693081 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07696817 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077962446 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071887858 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072042959 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071825251 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072201173 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072164394 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074045735 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077991704 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074145318 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08334309 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072204722 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072436575 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078529728 seconds)
  done (took 6.348358161 seconds)
done (took 130.383727393 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209746901 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185568382 seconds)
  done (took 1.750731681 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075415918 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10601706 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082720709 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134559198 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072743379 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105929682 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105643241 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08354247 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071722212 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071808266 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071686256 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074844464 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137290136 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072021419 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07221001 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075364173 seconds)
  done (took 2.790868436 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10516442 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.215441112 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109717066 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070265182 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104981873 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077955643 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070132169 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08609297 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076657219 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072190071 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077985869 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076512598 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072651313 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076221541 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076806828 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077892198 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072049917 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077517989 seconds)
  done (took 2.97441914 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102828252 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095122399 seconds)
  done (took 1.577601172 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.175985578 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134696029 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202490494 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346624212 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.152538114 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.416187421 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.137217024 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.136828548 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113682141 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13404851 seconds)
  done (took 3.326745297 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104407323 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.200631117 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295970467 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124296745 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076902361 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.109084356 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125897041 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082531137 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08172263 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081634123 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081505661 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078292244 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101812669 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077961202 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077190695 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07824149 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10471425 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076154111 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.0770546 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077257089 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105121058 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071566597 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07743709 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075882956 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079635496 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079567005 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072455712 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071038491 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077469249 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077589795 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079558211 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.106742534 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079327662 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105143263 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075012609 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106009855 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078511566 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075969007 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076859269 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075747945 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079108283 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078744145 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079442768 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078233147 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072316074 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078535935 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071995902 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070622795 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080387477 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071922983 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080429355 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079746575 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105663104 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07234642 seconds)
  done (took 6.262682064 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109244136 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1084531 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07284903 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113836947 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104217566 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072037939 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105951974 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100234015 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108015706 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071207509 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070253092 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071591818 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079500174 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08293325 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114908179 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108400293 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073913069 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07180142 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108776817 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108385264 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070457978 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102207837 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098880209 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108071087 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070103581 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071803931 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070348956 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072003074 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077420781 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078325773 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071066442 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079752797 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084178967 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078061218 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06989787 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070294261 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070303729 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079967242 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079329906 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079023615 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077590585 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069457246 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070131357 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070864373 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071245398 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069484204 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078016746 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079854428 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07799045 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070521351 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071309066 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070149931 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070919948 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0788431 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077107506 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08006639 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079534571 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070127645 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06979726 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072296791 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079659539 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080234834 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078883157 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071358687 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079356659 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070597255 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082973601 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083419101 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070730991 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071473732 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070029041 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070426215 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071059243 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077136706 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077234288 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071187056 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070401699 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07054443 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080115196 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077727923 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070402365 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077420169 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069419466 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070114321 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071832895 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071502371 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077580674 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079187048 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071373157 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070072038 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070593178 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070124468 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069340607 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077225896 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079383927 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079307683 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07822213 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07101194 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078395478 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076649234 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070548957 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07670386 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069132786 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070539638 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070243701 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076749342 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075954593 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078234056 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069960325 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069406064 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07616966 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078398849 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06908293 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075617004 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21387868 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079763089 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070793907 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082958696 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071676961 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080725426 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071539777 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080192868 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070914261 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078858042 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070694594 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07007702 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07054534 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078818794 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071275237 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070681988 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07099348 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070978432 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079173747 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081883255 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072112013 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078413978 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078705525 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071691619 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078822998 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070908039 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079357703 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070595289 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071774418 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069698695 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081810781 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070485956 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070905604 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071182105 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079872331 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070182612 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080166527 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077387732 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070344399 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081496505 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079597246 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078331116 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080206976 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071830486 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070471946 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070076124 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070865104 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076979241 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078924136 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072064192 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070756022 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077772775 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079791904 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06998571 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078644164 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081502122 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078337126 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070684058 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071442958 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081020618 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080166202 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078282175 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078071504 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078885769 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071119415 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077516968 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078080162 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070714162 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083174247 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0704766 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082231683 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0784556 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077289723 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078745827 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080056981 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080282267 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079998893 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08224305 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070346929 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070008731 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078417795 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070639273 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071253111 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077872746 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071872934 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071623891 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082727268 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070745854 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080153936 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070106963 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079008262 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069966116 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071707855 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082759569 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070608565 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071375118 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078066512 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072563654 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077693362 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080287022 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078018052 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070286638 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071407859 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078448664 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078063417 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070173116 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069357376 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070603308 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076067878 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075372958 seconds)
  done (took 18.758612611 seconds)
done (took 38.83350669 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.238385822 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175459399 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.208060074 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.132280253 seconds)
  done (took 2.247363747 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116795244 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109983809 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09226423 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066640965 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098281822 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067192798 seconds)
  done (took 1.977425357 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.352578876 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.2398281 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211961462 seconds)
  done (took 2.225897475 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.224616454 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213438368 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464796702 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287325484 seconds)
  done (took 2.716447094 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147465114 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087994954 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066135292 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083394602 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.12840878 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.154419922 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098033804 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123629936 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077416625 seconds)
  done (took 2.450862676 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.160989247 seconds)
done (took 13.224499294 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.12520311 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.137886259 seconds)
    (3/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.227796688 seconds)
    (4/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.255912677 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.101719166 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070253519 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.081143171 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.173312303 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077759611 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07578842 seconds)
    (11/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.095667242 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072091308 seconds)
    (13/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076594664 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.214890726 seconds)
    (15/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078379417 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.25693568 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.34471128 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076039716 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10796275 seconds)
    (20/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187100357 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094407526 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077040742 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105901195 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.140634518 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085832195 seconds)
    (26/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07876 seconds)
    (27/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079734733 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.174050888 seconds)
    (29/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.194598051 seconds)
    (30/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067837789 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06789324 seconds)
    (32/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182750215 seconds)
    (33/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074268278 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133100396 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07694927 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076828483 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.187139744 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176558096 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076152635 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176205509 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.115082139 seconds)
    (42/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.183219063 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117863644 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066901058 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094221788 seconds)
    (46/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.244631883 seconds)
    (47/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077552006 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.160315144 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123309281 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074339756 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071737533 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.068571667 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137958714 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075255401 seconds)
    (55/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073482898 seconds)
    (56/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066767959 seconds)
    (57/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.168531049 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076195959 seconds)
    (59/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070272747 seconds)
    (60/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.141794558 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066680087 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132155383 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.235057308 seconds)
    (64/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074953949 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096513805 seconds)
    (66/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06783978 seconds)
    (67/309) benchmarking ("sort", Float64, false)...
    done (took 0.131420686 seconds)
    (68/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.202398226 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076337027 seconds)
    (70/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.172649689 seconds)
    (71/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079747231 seconds)
    (72/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070554308 seconds)
    (73/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.13901996 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066735592 seconds)
    (75/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.118168928 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07708193 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1446793 seconds)
    (78/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.189381081 seconds)
    (79/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067484823 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075931547 seconds)
    (81/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074634261 seconds)
    (82/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.221383587 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068154268 seconds)
    (84/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.067351971 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09096277 seconds)
    (86/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07346446 seconds)
    (87/309) benchmarking ("sort", Int8, false)...
    done (took 0.17946139 seconds)
    (88/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.135833302 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066809438 seconds)
    (90/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074700461 seconds)
    (91/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.066792502 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.219216256 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075486738 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.203687108 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.212937682 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.21152061 seconds)
    (97/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067443461 seconds)
    (98/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072485341 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067934387 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067751296 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074246449 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093880791 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.186552114 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069364454 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068053646 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090399616 seconds)
    (107/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.109506972 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.068721968 seconds)
    (109/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072273505 seconds)
    (110/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.120596699 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073714947 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068872079 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075760258 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076503092 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074134466 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077574084 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090533893 seconds)
    (118/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067093772 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06850879 seconds)
    (120/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.18052299 seconds)
    (121/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.141010035 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07227503 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.159564702 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.20440758 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.107837003 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.248644063 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107945816 seconds)
    (128/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077109692 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.130536367 seconds)
    (130/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067419953 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076255471 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.090188216 seconds)
    (133/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075859914 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068096288 seconds)
    (135/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068018357 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081716566 seconds)
    (137/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076017372 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075178801 seconds)
    (139/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.140982196 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131884697 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068397407 seconds)
    (142/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075104972 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080935526 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074625966 seconds)
    (145/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096027455 seconds)
    (146/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139204554 seconds)
    (147/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082019794 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090624139 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069253943 seconds)
    (150/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.131641121 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146189812 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06671891 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067294507 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066948086 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.17850077 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067354896 seconds)
    (157/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.180368944 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069283946 seconds)
    (159/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075623597 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090483521 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14440356 seconds)
    (162/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.23402099 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067157866 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073919028 seconds)
    (165/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067699431 seconds)
    (166/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079765945 seconds)
    (167/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.226326188 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089365101 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.241177872 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.06730324 seconds)
    (171/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067384506 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068540188 seconds)
    (173/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068214387 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068363348 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094360248 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069297764 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.168692687 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115280317 seconds)
    (179/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067127746 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.185198641 seconds)
    (181/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.176698481 seconds)
    (182/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067477874 seconds)
    (183/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065979671 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.22022962 seconds)
    (185/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067224418 seconds)
    (186/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06938228 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090404614 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.173900951 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.200090826 seconds)
    (190/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075616005 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067910808 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066794467 seconds)
    (193/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069898314 seconds)
    (194/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067028333 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073155937 seconds)
    (196/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066591588 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091619746 seconds)
    (198/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.241258695 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068991841 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070823883 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068233465 seconds)
    (202/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.069369055 seconds)
    (203/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.225861394 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068063158 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074633157 seconds)
    (206/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.142358725 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.176474321 seconds)
    (208/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067700551 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067626332 seconds)
    (210/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.068070343 seconds)
    (211/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.206447338 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076230294 seconds)
    (213/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06801902 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078231758 seconds)
    (215/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076128687 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140171461 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073850453 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090616448 seconds)
    (219/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067989869 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178962128 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134733222 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091694469 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07545649 seconds)
    (224/309) benchmarking ("sort", BigInt, false)...
    done (took 0.252852514 seconds)
    (225/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068105637 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068506669 seconds)
    (227/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072533869 seconds)
    (228/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095700386 seconds)
    (229/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068774 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076737501 seconds)
    (231/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081362492 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069894427 seconds)
    (233/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074148164 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06858056 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137270574 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067228615 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067875846 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093127033 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067685941 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186540726 seconds)
    (241/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.138751091 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067309345 seconds)
    (243/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080519551 seconds)
    (244/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.141966951 seconds)
    (245/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068086297 seconds)
    (246/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074415231 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091127116 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066710152 seconds)
    (249/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094058289 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124639668 seconds)
    (251/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082199976 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074072847 seconds)
    (253/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.080450442 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067422411 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070587123 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068881608 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067881078 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067868261 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068463661 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067850268 seconds)
    (261/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068533629 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188360693 seconds)
    (263/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068218078 seconds)
    (264/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.068381367 seconds)
    (265/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.140863599 seconds)
    (266/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087616081 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077514924 seconds)
    (268/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069664502 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07415182 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075087796 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067961192 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067779877 seconds)
    (273/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.182564456 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066804039 seconds)
    (275/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.073968701 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119153028 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067179839 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118445163 seconds)
    (279/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06739116 seconds)
    (280/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093998368 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075464089 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139603786 seconds)
    (283/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067725088 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068387207 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066927305 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068552839 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076377564 seconds)
    (288/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067218948 seconds)
    (289/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067467458 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066889182 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067812851 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07429324 seconds)
    (293/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06730108 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067172656 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113936204 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067561084 seconds)
    (297/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075346733 seconds)
    (298/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067267514 seconds)
    (299/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06789615 seconds)
    (300/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067819879 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088998336 seconds)
    (302/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.068210881 seconds)
    (303/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.070590492 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067286323 seconds)
    (305/309) benchmarking ("sort", Float32, false)...
    done (took 0.132368107 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066537755 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075464173 seconds)
    (308/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074841497 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066797956 seconds)
  done (took 33.915803309 seconds)
done (took 35.3563587 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087388244 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101117902 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07574518 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097880729 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084086011 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098059979 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076495027 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080617644 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083338973 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08206592 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08081604 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073975908 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076573398 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076597911 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074850797 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097590528 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081075108 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075663029 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075682692 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066887891 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075716761 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067155043 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066806825 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073206807 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078855582 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074697346 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076768506 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076206069 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067722119 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067547911 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07222441 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07607893 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067439656 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079827705 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076398819 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075436165 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076945853 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079967686 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067863999 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068264669 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077718658 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067955844 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076100054 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.0742923 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072401549 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073990158 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075536327 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080074571 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098140509 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072200875 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.0773239 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078471856 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078972026 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073055675 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072760683 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075395556 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07366751 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09761491 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075714964 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072345861 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077019171 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076352189 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073713327 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075598922 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075771213 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077742516 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079224351 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073726876 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077143756 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074276679 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067516021 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075191372 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071991475 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067671962 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082826129 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079729817 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066532607 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071530784 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075580561 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076141157 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067702525 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071346031 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066772958 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072181294 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071047481 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073171613 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072667624 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074452762 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066863046 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075671377 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074807354 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07475043 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066877035 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080285304 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06758726 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073936074 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067616289 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067355897 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066909811 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072205685 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067129565 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071299215 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076030648 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067018166 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072066596 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080004448 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067116756 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074581838 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066950777 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067147749 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078540506 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077428786 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067245347 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071693698 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066942667 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072555587 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067108721 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067499921 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066873447 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067186364 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072055999 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067176623 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071213273 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072526907 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079432418 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066979486 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07165538 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070858607 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066716145 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073169333 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067257871 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06669928 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066169787 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079675225 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070132118 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066708424 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071590386 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069905582 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074304688 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065416872 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074469045 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071521412 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07035389 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072123624 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06546633 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076575943 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070298353 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.213007802 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06794535 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067945316 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067435852 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067925249 seconds)
done (took 12.95490635 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068239143 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.12167874 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.091609871 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093067842 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083554891 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068069962 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074712767 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.090034544 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069855707 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.094933359 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089717155 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088561504 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.10848736 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067500164 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067750658 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072221826 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069428251 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078346003 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093318739 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089586921 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10438837 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06786215 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085361451 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08635072 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.082880227 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090638378 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069226512 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069342447 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070777168 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087683081 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092558812 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070855868 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068936451 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.088808382 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084705299 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079902752 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068688499 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075777912 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068400998 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067906495 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069257784 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.086321398 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075001725 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075907235 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069419763 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075900486 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069389437 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082364976 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087513435 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.0754681 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081523182 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090017249 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071212907 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082642291 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067463476 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082173866 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075781922 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068351768 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068384241 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073271516 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068358148 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070428842 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077958266 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075502323 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071673255 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081560077 seconds)
  done (took 6.730164251 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085978814 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097356389 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084149819 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084517462 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067959845 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068317081 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068840831 seconds)
  done (took 2.091478849 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06853429 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093781888 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.095972675 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.096164378 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088202395 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09402811 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078591795 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068550997 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.101609722 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067588608 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.093196109 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114346012 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072391369 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079325588 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.097040813 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068196925 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093270898 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068571109 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069392201 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096593803 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072600288 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094711843 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079645323 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068551967 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084722249 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068801234 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104443749 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078700582 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069671917 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073325728 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069584324 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102461077 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084094418 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082185991 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069996363 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083247003 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085484655 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071856034 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082280322 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078624112 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08468331 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069755845 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067507163 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070283505 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071847972 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079688123 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067208971 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070189176 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06941408 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.092200348 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067609678 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084605235 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072351655 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073502682 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074622998 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073223338 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077526383 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070403124 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092409372 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069542128 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088654149 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087685828 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084881947 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087470506 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06876561 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084290847 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084802078 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.0693876 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070349777 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070506966 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087664867 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071601914 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07018418 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07939353 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068572789 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.097114175 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096948181 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067810916 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081874651 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06916792 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06985983 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079870436 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.096958549 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073137059 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06946451 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073687516 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070528854 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071909026 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067335981 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072401434 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069845494 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073485042 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069847032 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072145482 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071021474 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087355221 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06754508 seconds)
  done (took 9.172767334 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071046899 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069635981 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07063458 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069357007 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069469129 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069898622 seconds)
  done (took 1.991155148 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091802762 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069326741 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082023309 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069966414 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.117084257 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083981558 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08373932 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078012825 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081471936 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080696771 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083507027 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086556385 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087467245 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071331146 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083470135 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072997178 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083426097 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073360314 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080721925 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07141365 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081275945 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071657144 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071511904 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088099272 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.0724499 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070692733 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077613413 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080414556 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080212513 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078126085 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071200734 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072339729 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076842028 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077661083 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083816986 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076687132 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071472818 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07525129 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071569012 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072099274 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086208126 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071513992 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071783371 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075850382 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077685558 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076629453 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07492866 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07705407 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083421452 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075260696 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075074444 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070134354 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07240052 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074845278 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076834887 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077991962 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074761942 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083234514 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070885314 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076867425 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.0694234 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072473943 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077387046 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071876329 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075645774 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074946192 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076573291 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071039409 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071917787 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069390792 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074826924 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069556975 seconds)
  done (took 7.089750885 seconds)
done (took 28.597847051 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.52401962 seconds)
  done (took 2.046014824 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.637226091 seconds)
  done (took 2.193856407 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.056214442 seconds)
  done (took 8.607820372 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.445985281 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.508957302 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.770523148 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135008429 seconds)
  done (took 3.448021254 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.716664405 seconds)
  done (took 2.281273204 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.253676563 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237414542 seconds)
  done (took 2.068372994 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.3508305 seconds)
  done (took 1.908296226 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.076246685 seconds)
  done (took 2.632413389 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.290935594 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164403213 seconds)
  done (took 2.020012904 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.465708711 seconds)
  done (took 2.021072916 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.310824768 seconds)
  done (took 5.87045579 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.243881443 seconds)
  done (took 1.841418511 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234713665 seconds)
  done (took 1.795274357 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.75651301 seconds)
  done (took 3.316298368 seconds)
done (took 43.612680834 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083887443 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086671542 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086507799 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082769705 seconds)
  done (took 1.874222984 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076585574 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073051543 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076364007 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072492944 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07655536 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072670358 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073914378 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075394056 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072196482 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072625139 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072347339 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072031097 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074794926 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073433707 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070993519 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075052134 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07637142 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072702236 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074876726 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072570554 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070450265 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074843229 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074918645 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071426235 seconds)
  done (took 3.324861659 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082339823 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074842642 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07708727 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.0744159 seconds)
  done (took 1.87647638 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078779761 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092580343 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088657242 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078728238 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093437858 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088474458 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068481279 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068523501 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073077146 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078208577 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067487353 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09658688 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090439169 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078432804 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080742191 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065149582 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066841211 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089654134 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079282862 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079043919 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069795914 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078504958 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068392341 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089531261 seconds)
  done (took 3.476989739 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089230476 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06835814 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08812422 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094094528 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094124019 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067970454 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091311144 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094288392 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139261008 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067765801 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074035697 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067769676 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105549887 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068058603 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084759353 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110107383 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113288797 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071331737 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099286353 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067890347 seconds)
  done (took 3.330091237 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084122906 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071840813 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072047682 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067346358 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077722067 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074412583 seconds)
  done (took 2.021533768 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070190785 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069689082 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069182009 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068982619 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073677042 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071219989 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068076378 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069905584 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069756158 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069357238 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068703652 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068110793 seconds)
  done (took 2.404972992 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.213473458 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070803349 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071804308 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068022672 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073129893 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068220518 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084362556 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070581858 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086656624 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068839399 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068687381 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070526827 seconds)
  done (took 2.586019316 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189722307 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075922274 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22328918 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153592875 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101645196 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115323168 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113921811 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112507488 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138137846 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096824506 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152081398 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155783781 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106811088 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129881152 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088339958 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.124353713 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13990592 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154552067 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100445936 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153027922 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138962055 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119952615 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138800183 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098287217 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100164378 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115545096 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072982547 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077226476 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1576907 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123155693 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133875452 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104755584 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088783567 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165929014 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155491928 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131272436 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144594331 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081843232 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117791353 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.127408804 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189575451 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086819949 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146692251 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103095679 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077909879 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121364239 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109319942 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.261183082 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102617275 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089591605 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132882589 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170866588 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.12966718 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083907617 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120753199 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104072904 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11073083 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116392737 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173481567 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147717933 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119146056 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071356025 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109832692 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142098212 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124630253 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104240584 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117158451 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08935616 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129930758 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146062484 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126711037 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137661876 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116697985 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085362423 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113289509 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132892469 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118187969 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158885629 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115603524 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07219021 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112978107 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094374741 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078689685 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144261752 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075104892 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162613242 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09633477 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119931108 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127777726 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106074549 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105392816 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146093567 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138549587 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100479861 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084370265 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099468475 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.112456243 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130754296 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083414049 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103134349 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10536312 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076916504 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273565942 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075068122 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114798074 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.095167866 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117920964 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120097606 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079120463 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116635635 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100649783 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.09945816 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126049321 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14648952 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086312841 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07874988 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152705825 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113711438 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099030113 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133760577 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14647788 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118273456 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095083408 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135494804 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165060842 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088057168 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148928323 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097860776 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081383886 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.104034829 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114725168 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106684459 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118567274 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07953794 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.112018325 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156769664 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072691673 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092836542 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124423961 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079977017 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079212546 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100666004 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099631161 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093618281 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098010611 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.09953444 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126315365 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115440085 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100886321 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11711954 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094311976 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155507625 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086792959 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098434235 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099944863 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071322864 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127718518 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141531195 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076201545 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15157391 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.267724033 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11517161 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113389217 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082346653 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135234616 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077684809 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071870697 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132094221 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108117741 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105020222 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.140297287 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11367533 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.116807062 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112185745 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120485017 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121811182 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.121007045 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104223282 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087288474 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10929078 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121870576 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072753022 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088962162 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080882543 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099999007 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091672904 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082532186 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130847612 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115627577 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109588849 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109190175 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094138183 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138998904 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077418906 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118973324 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115840343 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092340871 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.142891923 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140543274 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122563391 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097724569 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129124073 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07286769 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073532717 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085115903 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118372486 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082070116 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081698369 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107570413 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139726033 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120808626 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125027476 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121102004 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115708162 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146260291 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071452337 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117385109 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132677063 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111443519 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.099852566 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086517032 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.093483304 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129240592 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096312861 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168912822 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105121422 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113644793 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142117378 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09675739 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076511997 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098515959 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125657951 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094221786 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129260326 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0934425 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082860615 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100177217 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075765394 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091138873 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111683877 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10220976 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120807988 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.101642889 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114762358 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074556797 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100440302 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109332419 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105210354 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.079645513 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106734744 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143218481 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090146223 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105101097 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130607898 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074721347 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131803185 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147548396 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12628828 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079115288 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093346961 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108318659 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111769357 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106411784 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127178916 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092953816 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121948736 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100359895 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082483639 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080548563 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088672843 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095160875 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104369512 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092758575 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.101468799 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.088624899 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11574736 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091974709 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.363373344 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114138743 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101881069 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.098923136 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095948954 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165256205 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113267899 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160169484 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099471908 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135806553 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158257657 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076914958 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079936858 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081137774 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137116832 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084487552 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123294573 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11385075 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116286249 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116037094 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138194852 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094656729 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072006001 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104992121 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123848311 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12144877 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095240678 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100378655 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150720048 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114905974 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077495178 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112811303 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116033559 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101270283 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163041914 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080901717 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109937706 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076208214 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078530906 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119838288 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142974974 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085082039 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101976395 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113948311 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105715413 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119534675 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093506277 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110083607 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127976962 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137705573 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120206017 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087213274 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106642883 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122024162 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143551769 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099839843 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097340155 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15879464 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294190691 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.14818851 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084052879 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109422434 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109230049 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104795848 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125759357 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082617418 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154945952 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080181026 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126055906 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09578889 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086660682 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118813819 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111088648 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085656489 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135213391 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109531506 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080783731 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079273088 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106373835 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111524869 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098563347 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073963366 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130399103 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073420069 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125693475 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158474099 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079294767 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101750259 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093264487 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081214617 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098335794 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097984512 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084000774 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09726128 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158388308 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085366799 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137795276 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125882765 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106534234 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129608277 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100264845 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640131603 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078411911 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139804157 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109677326 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168559612 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096547605 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111332851 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105968557 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112044731 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132208889 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097303495 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175944618 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276446576 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109879534 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077708163 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097776167 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098765645 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085432696 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10403273 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107737923 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105893639 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091880975 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.110430924 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113709214 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080766079 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092878656 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142462599 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110129235 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133464503 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135002767 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082340264 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110896337 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125939635 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078511156 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112307552 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14430335 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101389478 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097288906 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08181953 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096244938 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16071116 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073174416 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145217045 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112920944 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105522041 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108276661 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106188147 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12201119 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098266285 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114769595 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089338494 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105072187 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106848542 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11413895 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077884252 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100291294 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105107587 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09400101 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093248684 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097587509 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139652975 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071649098 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094171318 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113827055 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132887672 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165437284 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.103613467 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082543123 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110976282 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111596299 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106520912 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112851354 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079192687 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079525144 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079600045 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.100247032 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11782828 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105126616 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114729036 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103364332 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15197473 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081111794 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222369483 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090113946 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097794149 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.085272724 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077440147 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091524914 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09002804 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096466652 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107518213 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154610188 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090068986 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.085050009 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086534437 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07344757 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080443182 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11592694 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102888106 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106961328 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097037477 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079445325 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095996573 seconds)
  done (took 56.276790245 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108914001 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.080474974 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101381252 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150188763 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125915912 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206361429 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156466848 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191279648 seconds)
  done (took 2.921566059 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071135586 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099019737 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105037628 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085593866 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068885627 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070792766 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.244096405 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082898482 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06830753 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09654349 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081278456 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070254943 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.46887726 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068315457 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068879967 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081175413 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069074974 seconds)
  done (took 3.615123947 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390343941 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.597414293 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.387134417 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076435519 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.897437992 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093046528 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.131733334 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140351986 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081999762 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.518966016 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365995939 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130384006 seconds)
  done (took 18.542432796 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082417906 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079007355 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090120526 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089787222 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078568325 seconds)
  done (took 2.140977693 seconds)
done (took 105.985308439 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081548003 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.212185032 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068795156 seconds)
  done (took 2.033604958 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091153702 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090061542 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089259355 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08687164 seconds)
  done (took 2.092942262 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075840761 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077344619 seconds)
  done (took 1.88243747 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.243694696 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172507876 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099927671 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084618488 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081017146 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081303559 seconds)
  done (took 1.981553348 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07343286 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073837894 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073546032 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078313683 seconds)
  done (took 2.023979041 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071388602 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068084676 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069866165 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073095836 seconds)
  done (took 2.009647714 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087241799 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085328864 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08080665 seconds)
  done (took 1.977905678 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106154175 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094576987 seconds)
  done (took 1.926631659 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081575839 seconds)
  done (took 1.808414431 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09714385 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.107253681 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131952299 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114949671 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143018407 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119344788 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084357194 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088242798 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079211662 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086083757 seconds)
  done (took 2.778485087 seconds)
done (took 22.835689173 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080299736 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368220117 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364087851 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091883384 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674640575 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357948087 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970989255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093610054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111989301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070251805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087189134 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65008637 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.962941137 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32771957 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.949721341 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322557813 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652555397 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070124749 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069764129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070544119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955311581 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069465707 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070264136 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070078697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650192982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373857578 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070892464 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322507136 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069649117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073243006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359009065 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071016987 seconds)
  done (took 16.207013624 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071734518 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123300881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077431172 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085749558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071654592 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070986464 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073080604 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070717255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121997253 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070327399 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087421575 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069684804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073777136 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071241394 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090449218 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069939837 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072374698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070748024 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070036061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071367053 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089668819 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070880344 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071551589 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071260118 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071672504 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083978303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072310944 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070961939 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070881476 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074651958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075501133 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072367081 seconds)
  done (took 4.221832443 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119304107 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125862381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077849641 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107043278 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118062554 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072032864 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145635129 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094114734 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125158131 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070814786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08813424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069858997 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103994878 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071628596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091891085 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070933217 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073672163 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071109717 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070412343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071355305 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089864867 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070543975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071516362 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071081137 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071731369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085610154 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072101007 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071284763 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071409407 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075131431 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07622289 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072784737 seconds)
  done (took 4.483881227 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072265786 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074650756 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081867581 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082552854 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069128291 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071681463 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072776603 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068967671 seconds)
  done (took 2.342184011 seconds)
done (took 28.994316989 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079164448 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068984518 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073081725 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087837237 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07485037 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079326085 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066558354 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075723713 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073000064 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073323832 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07499668 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071293498 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071991872 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067692036 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074200267 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068660284 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082413029 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072747112 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08104277 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081191464 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0714735 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074741319 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076364885 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081180429 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081101389 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08118639 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077915939 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074144196 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069383459 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071901832 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070927151 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079617736 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081836173 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082152636 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068977713 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068796907 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072999154 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06994366 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08226518 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077507095 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070729901 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077584649 seconds)
  done (took 4.874526525 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084966297 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089977713 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083396102 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080264519 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090415303 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082917066 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088011398 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078272691 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078482361 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086541069 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074705739 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082017826 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07982708 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074027566 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078418146 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076552426 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080856834 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076229786 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.079134348 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079576305 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088780447 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07375886 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087671808 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.08034309 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075877478 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081445156 seconds)
  done (took 3.86835629 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074073463 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086697813 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092834232 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142560156 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111273663 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081366882 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08268838 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093161727 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096915163 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069676928 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07375995 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093260258 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093212295 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07540528 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.110937987 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085149587 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084745314 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071594411 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076592471 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09798846 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089302949 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086001675 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095881235 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085461597 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068719644 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071710677 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074247684 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084013514 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071692065 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080208734 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071977805 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073384847 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.0700459 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079456048 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072218818 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068673361 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.0925027 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08060176 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082065333 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07016467 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078127855 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070289218 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094442412 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128132485 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068774602 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07268385 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072418746 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080368792 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068788504 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096234768 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080940476 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068921558 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070341515 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068843063 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068712006 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071766689 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071365356 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071042419 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079318772 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076082673 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090019481 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073985153 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088057843 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069011331 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079266296 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068361749 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070715698 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068316234 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097597774 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070757996 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112873299 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070670907 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068050399 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080644702 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07949604 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075341934 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068979958 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088013037 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079736935 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072936647 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077032479 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072263643 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072410793 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099346807 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069521081 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06874158 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068532245 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074622525 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072455335 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070277259 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081258754 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068945913 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072679615 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088394589 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069004399 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069949618 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072292559 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071254244 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068629338 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080235939 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073439687 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070916987 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079615261 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069856507 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072298806 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081938536 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075661825 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06816032 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070916085 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071951408 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070777591 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071232977 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072256625 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071650627 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075851584 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075982105 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07575016 seconds)
  done (took 10.985804011 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168983935 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.16142802 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073047612 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153203843 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078739737 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082094973 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156443014 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099880606 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070914334 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071793121 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070424736 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11407249 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109549853 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121053668 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082773903 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071340587 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096419234 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120115973 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159094146 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152430987 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093544009 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078972558 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073274443 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072506798 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072339807 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08053787 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088342839 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079327997 seconds)
  done (took 4.726930049 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.07931357 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105492634 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074680974 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093135252 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089560703 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071045317 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072979662 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072405533 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087948318 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079561665 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070902696 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076397159 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074644921 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074440984 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071782166 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077370123 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078164073 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070172228 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075095058 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076069852 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081579867 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095808217 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076263857 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07080684 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073229608 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07074904 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078978198 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083159217 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071151318 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.107047659 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068755077 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075467204 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084813768 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071813479 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070656105 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071292787 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071221818 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071475585 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072539655 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.07000636 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069399324 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074942021 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069682196 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07923721 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083851104 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.077305282 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072862251 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073550756 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074309768 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068790317 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073841558 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073902609 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074052126 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078847962 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075023862 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074179302 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072216274 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097160691 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077186453 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070520146 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070826971 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069884505 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073511285 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.080572634 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086505015 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07336841 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069370282 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071136545 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.083135251 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083556945 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070317058 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075387254 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068991127 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073324826 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073664651 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073462074 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071943852 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069757781 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070546894 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07092445 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071604968 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073721949 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071286867 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073787724 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069006146 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069481143 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07112188 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072502738 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081490116 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070336004 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074844529 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071684158 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070000981 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.0732756 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075847041 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073774158 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081266183 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081589826 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071201568 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069344069 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086280236 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073547302 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070252544 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076003321 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074734549 seconds)
  done (took 9.74337752 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092958452 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071559942 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087459129 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093483715 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080671418 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075691929 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081437526 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070759522 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086412405 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075609859 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078054472 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069003394 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08127137 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08114016 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071147167 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081162433 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074109045 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.091027105 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085348408 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069552297 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079146341 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082581334 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08256424 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084890384 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084610443 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085914609 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082855707 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080302053 seconds)
  done (took 4.068991194 seconds)
done (took 40.009001866 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.855891108 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.014256607 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.830175582 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.027938637 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.898619383 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.052844368 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.912202595 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.842288493 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.021890444 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.865097425 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.166622269 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.305459413 seconds)
done (took 66.693162156 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.86198776 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.97330534 seconds)
    (2/2) benchmarking "String"...
    done (took 2.083385873 seconds)
  done (took 5.814118682 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.061191448 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.796842774 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.063367413 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.823107656 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.830871591 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.11819459 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.590772909 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.270316893 seconds)
  done (took 31.251216869 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.942827607 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.037337141 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.504332582 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.53132568 seconds)
  done (took 15.815488751 seconds)
done (took 64.646891182 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.861689165 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.822471261 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.822913744 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.85696065 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.831180404 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.823151573 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.826101768 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.825107775 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.881613187 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.988537641 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.823260161 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.826525278 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.823501809 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.848413055 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.674183091 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.887658661 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.837639189 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.842286457 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.828874182 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.860026871 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.833868276 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.828553183 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.247982845 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.010235047 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.435315446 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.180848154 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.319042861 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.232034147 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.839050154 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.826764159 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.865682234 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.172401677 seconds)
  done (took 206.342191471 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.828323643 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.586180261 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.685342997 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.874332291 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.072891389 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.023333109 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.929871485 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.211825604 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.833715535 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.84657088 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.949941492 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.826922396 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.990750468 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.773242243 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.862505226 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.924691763 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.960303812 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.005208109 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.870660016 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.994155776 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.842712209 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.776004409 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.726655356 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.945397742 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.869797811 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.916048087 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.844713776 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.841252642 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.014542273 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.93072995 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.838659219 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.844551884 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.985639688 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.697148444 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.837350806 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.835580021 seconds)
  done (took 170.562291151 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.011157058 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.837485717 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.830483138 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.882902824 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.952638948 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.835644187 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.477379127 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.836823124 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.581120636 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.83100254 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.830429921 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.828545085 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.828635296 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.828090667 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.828438452 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.844524344 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.906201848 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.831041971 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.843788596 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.830194905 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.854085912 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.834352207 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.827676721 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.829618166 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.830489949 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.831302725 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.829494741 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.829916739 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.217766521 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.070909035 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.833754398 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.83091868 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.329290061 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.841809977 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.173210695 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.832438193 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.92361878 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.883121806 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.939929002 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.831914795 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.047274108 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.901068974 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.832026039 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.831457638 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.898971641 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.841857782 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.831313655 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.832169513 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.837686988 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.900037635 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.079312113 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.831920215 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.950427255 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.316683578 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.832269804 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.83185477 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.832588921 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.405692637 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.832100912 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.833395586 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.836985052 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.837832569 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.833184434 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.831305804 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.218600686 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.903211043 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.880240884 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.49572855 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.834793331 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.114168862 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.066408699 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.8317707 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.833621994 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.832656868 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.833864882 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.832598956 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.833268924 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.83575926 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.953878471 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.842777333 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.945355633 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.914636129 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.95562647 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.837473217 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.841002176 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.666772275 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.901628322 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.86777092 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.652432856 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.834562745 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.20858768 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.60146865 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.83213656 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.834425006 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.846264101 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.834177426 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.833660626 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.834331331 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.913027586 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.833586549 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.954483751 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.565471486 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.468166059 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.023913533 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.833974638 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.834517766 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.842952488 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.927529293 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.000473986 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.834278442 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.901505478 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.840845216 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.83786788 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.982924604 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.836245942 seconds)
  done (took 408.283474823 seconds)
done (took 789.00908523 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.503848215 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.480170161 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.594869963 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.497790364 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.472500293 seconds)
  done (took 14.318977283 seconds)
done (took 16.086283706 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.916890735 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.918169011 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.853555437 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.915826868 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.851089587 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.91673063 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.89992289 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.859738174 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.884035055 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.860262741 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.8854739 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.85829724 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.843920084 seconds)
  done (took 26.234361506 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.056155699 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.060426365 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.899506979 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.057586171 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.87780443 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.05949798 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.988366471 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.97829052 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.974587173 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.84552638 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.841942303 seconds)
  done (took 23.41173992 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.065523044 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.07300191 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.907039291 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.074010571 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.87945512 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.06984575 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.992223317 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.982702481 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.977527441 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.846875268 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.843987344 seconds)
  done (took 23.485051567 seconds)
done (took 74.898637102 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.837887886 seconds)
  done (took 3.611080986 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.857139656 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.013315083 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.838927698 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.839377721 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.837655642 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.840720007 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.838791867 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.838520073 seconds)
  done (took 16.679407585 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.838324818 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.839360769 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.838007118 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.839214933 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.838343273 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.83637465 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.837944142 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.839414083 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.836394851 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.838278719 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.838448996 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.838639172 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.839159613 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.837272886 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.839893805 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.83789619 seconds)
  done (took 31.186842673 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.839391802 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.83732218 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.83805275 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.838274298 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.839732011 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.839779562 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.839859947 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.838462894 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.840052342 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.840995935 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.83996351 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.839072257 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.839843107 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.839622369 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.839596598 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.840043927 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.839895014 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.839637441 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.844211116 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.839397557 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.839163642 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.839726281 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.8389262 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.839060222 seconds)
  done (took 45.932466107 seconds)
done (took 99.178179767 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.620692434 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.456351685 seconds)
  done (took 9.852204672 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.842935061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.840841762 seconds)
  done (took 5.530992154 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.841503539 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.841527569 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.840095504 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.841898148 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.839549107 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.840889666 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.841457738 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.840749705 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.84212159 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.842543685 seconds)
  done (took 20.188771312 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.840306065 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.843088348 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.841805135 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.840669577 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.840763252 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.84206186 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.841962884 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.839861062 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.84079253 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.841872752 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.840183054 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.841428697 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.841835219 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.84204271 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.84067992 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.841270239 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.842380056 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.84205084 seconds)
  done (took 34.921776772 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.840384959 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.841531886 seconds)
  done (took 5.457840564 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.841890766 seconds)
    (2/7) benchmarking "second"...
    done (took 1.840768865 seconds)
    (3/7) benchmarking "month"...
    done (took 1.840857306 seconds)
    (4/7) benchmarking "year"...
    done (took 1.843506107 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.840741375 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.843490206 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.842942807 seconds)
  done (took 14.670026816 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.843100268 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.013548043 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.081449477 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.491865752 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.844236764 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.846399041 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.775122721 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.844828754 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.847948672 seconds)
  done (took 20.366638459 seconds)
done (took 112.76013435 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.742724148 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.846479329 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.130971286 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.976713095 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.863655484 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.138608416 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.846322035 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.115292688 seconds)
done (took 43.435256806 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.862813514 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 6.624959476 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 6.676489938 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.871892044 seconds)
  done (took 21.952512561 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.846086616 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.67682085 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.878856279 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.688972995 seconds)
  done (took 22.913616671 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.207483131 seconds)
    (2/2) benchmarking "read"...
    done (took 2.190407972 seconds)
  done (took 6.180096808 seconds)
done (took 59.684447831 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84452004 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.845891458 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.845058287 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.843771265 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.843270936 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.845054759 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.843579234 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.844222315 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.842355552 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.845070439 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843946013 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.844556727 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845555761 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84349399 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.844398397 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842893427 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.843873759 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844728307 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843797426 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.843290667 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.843486116 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.844729084 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.845615518 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.844018786 seconds)
  done (took 46.041571626 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.845804881 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.844401504 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.846731717 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.846611718 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.846470553 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.846165836 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.844245514 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.844627896 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.847350213 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.84727492 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.844758321 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.844906152 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.846531781 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.844944229 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847028731 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.847241679 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.846542748 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846872252 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847358001 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.850574924 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.845943648 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84719634 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.846534254 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847885073 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.846052087 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847806279 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.846572048 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.846660571 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846047703 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.846690515 seconds)
  done (took 57.175815992 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.846036686 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.845832138 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.847494516 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.847719506 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.848527905 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.846656543 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.847204673 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.84800582 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.846918583 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.84734203 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.846156271 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.847640246 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.846636019 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.849599967 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.845994181 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.847807485 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.84583211 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.846523221 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.846171405 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.848205307 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.847980688 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.849992989 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.847454766 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.847295924 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.847688715 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.848353731 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.848077874 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.848699241 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.847397822 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.848541053 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.847962314 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.850693948 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.847381931 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.848145755 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.847176183 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.848655705 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.84749092 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.848934118 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.846965239 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.848393819 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.850266463 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.850538251 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.84999248 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.847882842 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.84980258 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.850000145 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.849796911 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.848896955 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.848757609 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.850453545 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.849808467 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.849281876 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.849148987 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.848866559 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.849331136 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.850680099 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.848840762 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.849635623 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.848940484 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.849718245 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.851091572 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.850876077 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.848046752 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.848916062 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.850808578 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.851868806 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.850391751 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.849992648 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.852026519 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.85113039 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.849859233 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.851182418 seconds)
  done (took 134.887925666 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.849475508 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.85007418 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.850177169 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.851668522 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.85219175 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.8499931 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.851894614 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85002017 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851072366 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.850074367 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851240086 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.851053052 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849452523 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.85136858 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850136009 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.851635909 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.851000876 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.851005748 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.852492766 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.851125544 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.851108846 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.850608957 seconds)
  done (took 42.50372964 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852857671 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.852340176 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.852208549 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.851598076 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.851205872 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.853888221 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.853683521 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.851312374 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852126097 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.850725127 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852506813 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854635745 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.850876295 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853768373 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852080769 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850963623 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852896061 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.853248893 seconds)
  done (took 35.130515501 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.852910984 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.852613027 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.853560215 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.852874733 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.851971081 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.852545339 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.850875851 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.853097875 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.852483819 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.853448117 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.853392594 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8532606 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.852641973 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852435131 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855202888 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.854532253 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.853008441 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85299923 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853747331 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.856459224 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.855240483 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.855278065 seconds)
  done (took 42.560351448 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.853504919 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.854281014 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.859214537 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.854374195 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.854120949 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.853904061 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.853961316 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.855683851 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.855241858 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.854765032 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.856212553 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.854166224 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.855842447 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.855289167 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.855079913 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.855257072 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.85454372 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.854931904 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.858126686 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.855717846 seconds)
  done (took 38.893364294 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.857176149 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855905065 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.858311842 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.856589546 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.857448381 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.860341399 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.858618943 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.858372999 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.859891165 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.856180291 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855271432 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.857064464 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856000636 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.856523383 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.857126717 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858573248 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.857614225 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.858692173 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.858394999 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857506788 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.85705768 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.857311481 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.856987706 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.856651815 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.859941014 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.856932726 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.858840041 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.858545873 seconds)
  done (took 53.804693977 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.859318642 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.85677777 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.856493134 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.856569766 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.856941598 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.857793709 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.858524236 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.856584562 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.85697407 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.855535072 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.85603612 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.858620792 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.857613073 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.856578861 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.857367758 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.85663767 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85844943 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.857213554 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.857795298 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.858430108 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.857000901 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.859944137 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.86032779 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.859074066 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859208365 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.85876171 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.859629678 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.859255757 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85896558 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.858730505 seconds)
  done (took 57.529073571 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.878584067 seconds)
    (2/2) benchmarking "in"...
    done (took 1.879617875 seconds)
  done (took 5.551605286 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.85768552 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.858700268 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.859162219 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.858656695 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.858005929 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.85871393 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.859418407 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857900867 seconds)
  done (took 16.660010879 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.86129321 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.859604338 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.858133589 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.858850433 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.85941663 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.861437854 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.867062572 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.862677566 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.861323266 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.862076914 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.865018586 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.871056558 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.862451632 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.861445626 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.860465363 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.863987922 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.861193846 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.861383972 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.860299711 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.859184538 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.860466634 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.862897855 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.864613001 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.860217337 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.861158561 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.87219779 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.8670091 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.860209693 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.864000761 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.865548944 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.863091735 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.861911151 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.860244756 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.86279501 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.859915398 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.860207269 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.8699282 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.864013193 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.866596226 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.862135718 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.861047855 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.860820811 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.864361906 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.865853098 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.863885751 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.861917834 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.860057922 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.859372018 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.864156236 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.866850615 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.867154469 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.862528247 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.85951139 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.867316996 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.864055164 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.8702544 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.861634272 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.86486964 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.871452257 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.873863558 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.873066228 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.87054569 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.86589533 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.8626254 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.871677733 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.889001371 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.87133905 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.862978424 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.861888304 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.862123505 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.871367343 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.874933974 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.87328543 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.863759389 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.863612557 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.861020026 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.864756263 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.864381714 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.872482735 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.86956611 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.86427202 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.86552086 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.873166904 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.887902025 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.864469364 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.865698211 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.862778955 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.86326846 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.867807889 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.874914228 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.865233692 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.862082497 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.865984068 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.866121374 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.870004818 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.86516088 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.866687335 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.867921763 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.863382139 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.862815937 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.863393284 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.866008802 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.873847821 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.864270107 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.86414377 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.872304769 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.863651297 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.867060784 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.873621094 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.865253838 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.86525911 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.868970195 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.873202135 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.863608293 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.868009919 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.875989977 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.864903268 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.866735995 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.867096403 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.867234877 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.876079184 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.89391484 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.864987676 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.865937752 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.871309944 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.877089926 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.865474326 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.871988865 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.867611029 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.865748259 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.867010052 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.868254261 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.864431555 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.869769333 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.866881106 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.869677594 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.865977056 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.866106191 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.866414372 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.869341776 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.871891959 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.867945471 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.871250037 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.869947467 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.867807389 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.872199026 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.873774418 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.87090897 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.869750296 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.870302738 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.867814382 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.868543864 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.868131315 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.865852595 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.870669928 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.865848641 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.869879691 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.86736191 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.86640399 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.867300491 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.867429287 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.869969634 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.873403388 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.867569042 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.872241237 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.869407962 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.865323253 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.866210388 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.86836011 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.87095586 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.869250781 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.870274852 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.873797302 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.875038326 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.868392105 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.869579125 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.873588616 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.869751002 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.869876889 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.86916293 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.871459681 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.879115261 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.868093029 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.876127214 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.869116167 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.869567497 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.869398727 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.871227063 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.871772421 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.869396434 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.87238057 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.875963596 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.882202125 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.879455906 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.874108253 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.872062212 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.873086008 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.873860849 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.876054216 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.870395517 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.871010851 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.869824866 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.871958403 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.871842859 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.873390944 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.867737967 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.87415929 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.86941538 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.870688486 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.869256084 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.869149415 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.872636296 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.87267253 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.87025418 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.870976716 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.872339943 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.871135036 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.872037174 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.873032226 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.872394168 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.870448501 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.871892707 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.878057993 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.867888136 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.872722616 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.874521865 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.873069561 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.873162521 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.870627497 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.875548084 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.872404757 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.879595571 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.875153539 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.873538331 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.878457133 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.873889093 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.87391763 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.87573274 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.873056318 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.872763135 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.875322421 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.879504005 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.870824025 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.872399978 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.872039744 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.874384901 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.872080159 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.879888422 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.872923756 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.873234307 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.872661938 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.875886313 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.871008337 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.874084997 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.874838529 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.875499697 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.875876081 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.872742744 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.87183414 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.875583061 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.87336326 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.872731215 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.873892691 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.876708772 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.881595031 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.878532932 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.875042807 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.87760906 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.876104858 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.877967749 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.876314698 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.872602045 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.875492738 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.886135263 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.881686065 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.882986876 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.87807355 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.874508205 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.881199447 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.877648205 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.8800901 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.875196088 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.876764858 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.875355963 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.876325419 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.874246228 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.880070504 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.874598176 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.877277697 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.87805193 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.877341962 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.87432929 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.875560675 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.873434524 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.873536464 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.876197332 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.87633998 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.873718735 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.879486645 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.879859575 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.877574804 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.876319017 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.881364575 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.87898626 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.878583429 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.878625613 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.875681378 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.877996849 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.879989459 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.875805099 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.878972559 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.883102741 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.879867893 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.88707688 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.877064282 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.885897612 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.876903472 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.881447974 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.883360985 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.87673285 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.876563496 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.880370389 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.874982511 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.884509289 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.878292827 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.88092184 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.880385679 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.874837011 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.877134106 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.876175045 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.876742391 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.876165131 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.876642879 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.886971232 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.881237519 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.881252103 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.881356463 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.877444485 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.876799239 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.877342087 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.878824959 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.881848295 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.879039269 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.879996431 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.878137051 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.8794637 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.879203155 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.877882431 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.879053686 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.875959109 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.878444334 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.886206339 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.884192076 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.882059672 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.878670836 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.886780643 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.879646874 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.886271529 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.879875983 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.880846113 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.879450997 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.876985166 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.882720975 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.881333366 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.88148641 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.87972457 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.880170689 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.881690984 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.879830411 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.88361351 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.880381589 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.878902474 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.879898868 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.890627611 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.900549877 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.882395965 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.883206114 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.879824997 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.881344239 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.883332001 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.880039806 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.880851599 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.881855385 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.891319535 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.887606022 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.881492841 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.879075047 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.881967671 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.881092836 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.879511545 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.878552283 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.880142052 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.880999902 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.881925643 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.879754037 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.885262152 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.880565015 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.884726671 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.882055383 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.882117997 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.892056174 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.882322403 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.883914079 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.880249973 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.879530004 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.882755686 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.882624517 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.882204302 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.882931424 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.879317871 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.884231624 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.887824094 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.890313564 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.884659223 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.882335635 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.88119206 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.883250442 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.884561092 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.882925467 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.8816222 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.883092958 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.8840731 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.883474731 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.885849621 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.882767296 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.88206544 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.886664521 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.881774614 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.88580036 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.891831747 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.884207736 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.882699009 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.883516658 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.883128668 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.885688617 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.88439453 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.892246479 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.886044375 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.895147664 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.893484424 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.886833996 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.883354496 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.886646634 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.893053476 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.885602683 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.886146174 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.8842047 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.885542717 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.886346732 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.889096884 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.883387139 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.889871409 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.885864308 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.886918667 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.893325296 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.888753589 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.88407674 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.886161005 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.891091343 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.886884926 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.88418314 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.885494475 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.885978761 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.893356632 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.888245096 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.885896757 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.888827701 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.886102391 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.887296042 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.889188572 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.884111871 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.888650099 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.884541972 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.886285988 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.884839641 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.886277562 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.884578138 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.889351973 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.886789 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.888873432 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.895876917 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.883773623 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.88981109 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.887669358 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.891648142 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.884966025 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.88580154 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.885645275 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.884602612 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.88752314 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.884622173 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.887410536 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.89113528 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.888186312 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.888915393 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.889573808 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.887694124 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.890511842 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.89750276 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.893387871 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.885506591 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.8877188 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.889186782 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.890110861 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.886797397 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.886738282 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.888345475 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.889272925 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.886509668 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.886217222 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.886299573 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.890522499 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.903974665 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.887192933 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.887627095 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.889071727 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.892651075 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.887202291 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.888028263 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.886623519 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.891191887 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.891571696 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.895173021 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.888963246 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.895909776 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.89069454 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.891131221 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.892528374 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.892426011 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.898336167 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.892740459 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.888772994 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.887458003 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.893226892 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.905297684 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.887907442 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.898413108 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.91978877 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.892189399 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.892434013 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.88870885 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.890004217 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.888540794 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.893678197 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.889851068 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.887500289 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.886851394 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.889278459 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.892810397 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.896800219 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.89246531 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.888289816 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.889889464 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.892367748 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.890593964 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.888189911 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.889656569 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.888853498 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.889945167 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.889861079 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.888515422 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.890641584 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.899194963 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.901716583 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.890236454 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.891962036 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.890774665 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.894920269 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.89276787 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.901034687 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.898493843 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.892405094 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.890429707 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.895095207 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.891058697 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.889544732 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.892429993 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.890034878 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.88974748 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.889731816 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.900642844 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.895915987 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.895660166 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.894879696 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.890356168 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.889730707 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.893502569 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.890179793 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.890382918 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.894475013 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.893803847 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.894910353 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.890593608 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.890956666 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.894719322 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.898739902 seconds)
  done (took 1121.129928319 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.891609828 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.891714952 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.891410926 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.889868297 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.890971843 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.890059936 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.891138931 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.891374482 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.892358083 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.892295442 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.890475241 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.890244751 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.891419528 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.891143281 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.890505685 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.890706319 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.89291067 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.891817942 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.891301502 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.892168666 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.893038396 seconds)
  done (took 41.544255479 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.892182126 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.891020292 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.892889002 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.893682123 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.893486777 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.891611268 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.891807297 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.891982832 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.893255121 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.894155657 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.892997467 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893216352 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.892948416 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.892696613 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.893654577 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.893662702 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.891837541 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.893516617 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.895606068 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.89291428 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.892345752 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.894359709 seconds)
  done (took 43.473781159 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.893832584 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.893814778 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.896106594 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.893103643 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.893257387 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.893429618 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.893054664 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.892979486 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.894448667 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.896731378 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.897214366 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.896399762 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.902553587 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.901282813 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.898745493 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.893514428 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.037832286 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.894364701 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.895815575 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.894501535 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.89548021 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.902202945 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.895617505 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.896628349 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.897130325 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.89403439 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.894625786 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.896673182 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.896423689 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.899334605 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.899074154 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.896517689 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.897992668 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.900013894 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.898394374 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.90034177 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.901378588 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.897425029 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.896138289 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.895890083 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.905200023 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.917790868 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.897213751 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.904143019 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.898271326 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.897280205 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.9017015 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.905228325 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.896661551 seconds)
  done (took 94.955717095 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.897972697 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.897243125 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.898212407 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.89620384 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.89715465 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.897096617 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.897733923 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.897950911 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.898346647 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.89653343 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.896672841 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.897732801 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.898080149 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.897830679 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.896619031 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.89644544 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.897181503 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.898381155 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.898498703 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.896613979 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.897124438 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.896638762 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.898102798 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.898053114 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.896297578 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.897565253 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.898116953 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.898391877 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.898905586 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.897982396 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.897700754 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.898014955 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.898626994 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.898976831 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.899722539 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.89846424 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.899310735 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.89898755 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.898533808 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.898986348 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.898595645 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.897319785 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.899686342 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.899274643 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.898901799 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.899671658 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.897854127 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.898887281 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.899585832 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.899034374 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.898756683 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.898892609 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.898863825 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.898322655 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.89905267 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.899498917 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.8993115 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.900462405 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.900798534 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.899742535 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.90023417 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.901127903 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.899276536 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.899500237 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.90061815 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.90060451 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.901885592 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.90022897 seconds)
  done (took 130.931087372 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.898704844 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.901792237 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.902866815 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.901709521 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.90112108 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.900279242 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.900709892 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.901424842 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.901815188 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.901759963 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.902804798 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.900002801 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.900528316 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.901768874 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.902107468 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.900885257 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.901307271 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.901528289 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.900974672 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.90027042 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.899863205 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.901350605 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.902529333 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.902054593 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.902408948 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.901027658 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.902364106 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.903686374 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.902541543 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.903041697 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.904344533 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.90212459 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.901458605 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.901781602 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.902665711 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.903599946 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.901642298 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.903428061 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.90340005 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.903461556 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.902236737 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.90371133 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.903263883 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.902735585 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.903734748 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.903749265 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.903462772 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.901943599 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.901787855 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.90936731 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.904454971 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.904353857 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.904058923 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.903088872 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.904674485 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.902364758 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.90255553 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.904485711 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.904525598 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.90616212 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.904967294 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.902738083 seconds)
  done (took 119.793168092 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.902879749 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.903972726 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.902143451 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.902631867 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.903523675 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.904394854 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.904771892 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.904837526 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.905091782 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.905054728 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.905629638 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.905258107 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.904898816 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904250589 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.905068429 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.905926356 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.905715601 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.904720056 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.905893547 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.903955469 seconds)
  done (took 39.927036958 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.904586538 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.903712912 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.903144127 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.90442545 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.902274355 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.906049593 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.904883291 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.904358616 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.904136172 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904177405 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.903330306 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.904948595 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.904919689 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.90514084 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.905520329 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.905477449 seconds)
  done (took 32.309721639 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.906362683 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.905427903 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.904650034 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.905773504 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.906176952 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.904650914 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.904389329 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.905730707 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.90650307 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.906685725 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.904793844 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.905855747 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.905567617 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.905217021 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.906793114 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.906494183 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.907055151 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.907033377 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.907446118 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.908049081 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.907200808 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.907607753 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.906692686 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.906242738 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.90560153 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.906755985 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.905748625 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.905003454 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.906799615 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.905761614 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.907455833 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.907335243 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.907773043 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.907061216 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.907266636 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.905283785 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.907274023 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.90746528 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.907930707 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.908290128 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.907058227 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.90737858 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.90637148 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.907726255 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.906891828 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.908137937 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.908366667 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.907886683 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.907952718 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.907073384 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.908723162 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.907314291 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.908559587 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.908324291 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.907723525 seconds)
  done (took 106.713396013 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.907182508 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.907758384 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.90752279 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.907644705 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.908552977 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.908679336 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.907278211 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.90685666 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.907212026 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.908499315 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.908911559 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.908441913 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.908533023 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.907609463 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.908861736 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.909002279 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.909889734 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.908404619 seconds)
  done (took 36.188312569 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.908537022 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.911062031 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.910232322 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.908990711 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.909878966 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.909888589 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.909027837 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.909408113 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.909240838 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.910310397 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.910156752 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.909825347 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.909704017 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.910121039 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.910364605 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.910980215 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.910286507 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.910294342 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.910778669 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.908748817 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.912371456 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.910644481 seconds)
  done (took 43.862421522 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.912281813 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.912617484 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.926278027 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.933218269 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.93126793 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.948030771 seconds)
  done (took 13.406464168 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909421633 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908863599 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.91000928 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911714381 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911395186 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91102943 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909976372 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912682838 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910355293 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912985848 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.9122128 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910336709 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911801032 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911308647 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910328775 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911634001 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.911524282 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910323641 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.911930055 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912301607 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.912752642 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912544635 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.910243526 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912770119 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.912484101 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.912767929 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912645991 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.913510715 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.914476245 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912964327 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910676832 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911929252 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.91298951 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911605127 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912766397 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.913697443 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.9138938 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911514982 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910086255 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.911981867 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.911858713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911296347 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912496583 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912162642 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912928744 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.912179172 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.912203754 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911533152 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.913502318 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.913993745 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912089266 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.914640038 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.91352581 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91453349 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.914846908 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.914150052 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.914175461 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.91266817 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911542087 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.912717413 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910806233 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91447189 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.914997785 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.914643076 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912014397 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.913624252 seconds)
  done (took 128.055162582 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912990471 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.913349473 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912902976 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.914227025 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.913154525 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.913323364 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.914695265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.913863038 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.914736841 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91429504 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.914685351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.913850808 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912751518 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.913947256 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.914519112 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.914582032 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.915661858 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.913993401 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.914479942 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916263287 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.914248008 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.915639854 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.916905983 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.913095964 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.914371945 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.914620372 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915127133 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91337226 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91482452 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.914489629 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.914456 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916251985 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915880761 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.914777373 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.915104061 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916275429 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.91517803 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.915257938 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.915376599 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.914969143 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91589225 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.915275268 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.91688462 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.915862514 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.915536167 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.915948093 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917113015 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916911012 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.914605485 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917441651 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.916029926 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916103312 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918056333 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917634065 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91708578 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.914197535 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.915526856 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917944137 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91615356 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91818257 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918502602 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91700807 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.9174126 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917553704 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917953056 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917144652 seconds)
  done (took 128.265487663 seconds)
done (took 2613.07429408 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.958999911 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.991840224 seconds)
  done (took 15.800911193 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.079424837 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.031408943 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.916572602 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.961216668 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.916029995 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.937940729 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.938298135 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.916661811 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.917503108 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.916985377 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.918164779 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.101016518 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.915925464 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.917490132 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.917526585 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.00746415 seconds)
  done (took 53.169454507 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.921552018 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.92217045 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.93083262 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.925697609 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.920702037 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.93332384 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.953104431 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.924077336 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.95418338 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.934523786 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.991512225 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.932028072 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.920891554 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.970238134 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.933480486 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.935842163 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.01351189 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.996902957 seconds)
  done (took 36.862508931 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.998882336 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.92760773 seconds)
  done (took 10.783143014 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.931664172 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.915227333 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.922104715 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.943319477 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.946563117 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.947120615 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.939072338 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.936941449 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.938870112 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.939763493 seconds)
  done (took 71.243854516 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.924905493 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.922693108 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.923121709 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.920374702 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.919018141 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.924861892 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.919962409 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.921052351 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.577050085 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.956602936 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.929701905 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.925858452 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.921479665 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.921603375 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.919215181 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.943258314 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.034562249 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.917465276 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.917530129 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.925101483 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.921189469 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.980075193 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.936002934 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.922190818 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.951715915 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.579519685 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.928214272 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.926698919 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.028058545 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.918836744 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.920292653 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.107156194 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.924505526 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.380229985 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.185346058 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.925562231 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.933442411 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.930065722 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.920546304 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.035676351 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.925527679 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.92897743 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.82589829 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.166527087 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.026249533 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.967138978 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.22951969 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.939693072 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.920938133 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.951631845 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.925672096 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.922219459 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.934828576 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.421544666 seconds)
  done (took 135.559545426 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.920917919 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.267304373 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.088122214 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.923252494 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.20413774 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128754785 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.925932162 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967146265 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.925248471 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.149769911 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.176286925 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.026934329 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.923265974 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.923759374 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.923241162 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.922697256 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.078204369 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.994687952 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.926497729 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.922497691 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.950484714 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.162280648 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.042043258 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.923401573 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.94987961 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.132154184 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.043610681 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.027055 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.649973183 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.919397074 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.985322609 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.923208944 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.923549002 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.924574991 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.07679339 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.016470998 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.004922544 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.926854672 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.92391489 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.923138316 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.668955372 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.122051614 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.017268125 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.052658872 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.175767565 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.128012341 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.700865926 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.922765727 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.65770826 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.083876731 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.149875056 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.151746126 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.04389048 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.927018627 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.445167094 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.92200692 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.922006076 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.171241003 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.142538503 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.020559336 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.92596382 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.92293169 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.92304564 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.210923691 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.927542216 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.018993674 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.92736682 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.92405336 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.020836855 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.022186578 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.153656558 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136495106 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.952771956 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.262899692 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.43179118 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.167742511 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.989049948 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.172511679 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.925645139 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.923978603 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.001889211 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.765901348 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.177808585 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.207909016 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.169382729 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.95857315 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.638410567 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.924823349 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.148727545 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.143279366 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.183282056 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.171520114 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.165223768 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.25675439 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.926740953 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.924619611 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.168016103 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.048643696 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.930023434 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.264974946 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.153109354 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.455184501 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.950697448 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.226230955 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0557674 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.92814577 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.558615453 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.92257803 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.152109628 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.964533476 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.9272404 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.925808308 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.144428291 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.911887123 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.926111075 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.578134663 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.985803323 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.930365532 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.155688105 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.929492937 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.191464136 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.928670467 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.158134272 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.356554678 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.954893344 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.154585972 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.172186329 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.930295721 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.164967056 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.16842856 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.041606598 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.146167157 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.545652611 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.926116136 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.209860435 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.930057469 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.92519747 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.095697542 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.928405323 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.069385162 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.377653127 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.218330534 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.947810063 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.160621129 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.932146075 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.177512816 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.96078716 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.978126191 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.930927158 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.056611581 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.930617663 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.750406132 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.082970199 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.927432896 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.925885202 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.732086595 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.926828439 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.074006009 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.151051501 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.946310887 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.998562474 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.580736361 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.925735097 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.005789262 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.949082776 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.311524882 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.928377566 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.179630433 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.931126557 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.926823984 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.927004123 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.210901085 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.108616262 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.931630801 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.926790979 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.828665054 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.927519671 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.926420641 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.107074239 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.294255192 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.927952674 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128477661 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.931437352 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054528526 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.933655941 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.999429048 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.264975232 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.926621464 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.928199953 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.928730341 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.928543031 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.928785324 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.188375436 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.952705499 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.418947472 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.064946877 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.198854443 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.238020411 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.16656574 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.969599304 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.930441788 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.180874179 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.934142404 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.990791733 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.931733813 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.948289742 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.154613522 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.932386634 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.136595485 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.200104144 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.76663994 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.975015258 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.931525751 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.930637006 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.929151585 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.074411465 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.015255707 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.931894481 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.928597569 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.042689408 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.054196185 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.137119712 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.931022955 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.016987904 seconds)
  done (took 916.135675637 seconds)
done (took 1241.401453698 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.930949216 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.929148878 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.931990076 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.931980634 seconds)
  done (took 29.587154648 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.943336328 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.930331204 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.931321829 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.933127243 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.931815913 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.933162892 seconds)
  done (took 13.465592615 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.104515871 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.931147037 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.933488307 seconds)
  done (took 21.833186205 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.001876881 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.314613675 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.065519402 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.347569417 seconds)
  done (took 10.591631088 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.931339072 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.931354396 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.931033537 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.930713966 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.944110272 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.943314167 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.932584732 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.931855461 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.941463473 seconds)
  done (took 19.282630036 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.980572556 seconds)
done (took 100.596809158 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.605045928 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.222018991 seconds)
    (3/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.035059753 seconds)
    (4/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.935060013 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.601570713 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.030325528 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.932741741 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.267726403 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.948921027 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.01020739 seconds)
    (11/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.935379402 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.991251607 seconds)
    (13/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.092163965 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.931455448 seconds)
    (15/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.936323525 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.948699987 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.938630681 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.046476804 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.648044888 seconds)
    (20/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.938662521 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.331670356 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.961180009 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.263159587 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.970590075 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.021142361 seconds)
    (26/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.065877227 seconds)
    (27/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.061187033 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.433105806 seconds)
    (29/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.186240918 seconds)
    (30/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.939043618 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.265308623 seconds)
    (32/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.937063309 seconds)
    (33/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.089257876 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.039449006 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.932768369 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.596282179 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.955737299 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.123269287 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.108367983 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.165431452 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.941344993 seconds)
    (42/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.120620843 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.064142753 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.04123923 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.247193956 seconds)
    (46/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.270695215 seconds)
    (47/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.947051816 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.237236239 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.062165837 seconds)
    (50/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.07358127 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.999058246 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.578143263 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.942325789 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.18805895 seconds)
    (55/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.070011176 seconds)
    (56/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.094372301 seconds)
    (57/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.041629114 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.959009093 seconds)
    (59/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.996127085 seconds)
    (60/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.116716167 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.036864651 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.068179752 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.318843875 seconds)
    (64/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.028885642 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.713954871 seconds)
    (66/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.163974627 seconds)
    (67/309) benchmarking ("sort", Float64, false)...
    done (took 5.728502232 seconds)
    (68/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.233525961 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.947078289 seconds)
    (70/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.213165243 seconds)
    (71/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.946714404 seconds)
    (72/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.095926239 seconds)
    (73/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.391834076 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.132065689 seconds)
    (75/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.857681135 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.962186395 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.073676809 seconds)
    (78/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.101060272 seconds)
    (79/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.236743556 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.966139847 seconds)
    (81/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.01600162 seconds)
    (82/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.940242523 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.60731169 seconds)
    (84/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.391565254 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.71244465 seconds)
    (86/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.072140818 seconds)
    (87/309) benchmarking ("sort", Int8, false)...
    done (took 4.830530683 seconds)
    (88/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.015399238 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.068024079 seconds)
    (90/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.937149181 seconds)
    (91/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.091343349 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.291377766 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.960363382 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.113966758 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.251290171 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.702675596 seconds)
    (97/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.074375345 seconds)
    (98/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.016860618 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.936651106 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.375707112 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.96164453 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.556497006 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.07284706 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.024526498 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.621051763 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.93379954 seconds)
    (107/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.60691203 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.140585097 seconds)
    (109/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.024523104 seconds)
    (110/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.953995876 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.944261744 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.943345035 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.345716669 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.964846403 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.21293468 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.954972535 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.237531537 seconds)
    (118/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.043336978 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.940919202 seconds)
    (120/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.946357359 seconds)
    (121/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.153994648 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.098355515 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.942981858 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.310891927 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.949043028 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.189106391 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.021058603 seconds)
    (128/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.977366543 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.943175075 seconds)
    (130/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 8.036147902 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.040750733 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.193790199 seconds)
    (133/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.965282471 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.123454231 seconds)
    (135/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.946181735 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 5.411975748 seconds)
    (137/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.025924467 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.191184502 seconds)
    (139/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.043309547 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.072602995 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.941760531 seconds)
    (142/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.133800814 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.630151149 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.043554326 seconds)
    (145/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.976411451 seconds)
    (146/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.942447984 seconds)
    (147/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.86881686 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.868053995 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.948498266 seconds)
    (150/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.373438688 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.943415797 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.965341362 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.031024586 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.27027895 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.141001547 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.182386318 seconds)
    (157/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.025394474 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.944735393 seconds)
    (159/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.542649235 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.822716516 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.948713298 seconds)
    (162/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.21347305 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.190728073 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.333936853 seconds)
    (165/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.113419379 seconds)
    (166/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.436752902 seconds)
    (167/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.950192546 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.998595841 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.202736213 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.845153199 seconds)
    (171/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.065780403 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.328222486 seconds)
    (173/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.190708776 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.952401422 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.420715516 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.95213775 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.169687894 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.085740243 seconds)
    (179/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.047710144 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.947773926 seconds)
    (181/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.142783809 seconds)
    (182/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.346167522 seconds)
    (183/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.084870416 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.274392423 seconds)
    (185/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.109024435 seconds)
    (186/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.08199918 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.892896837 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.026313706 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.328018616 seconds)
    (190/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.962281469 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.245771099 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.258631878 seconds)
    (193/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.010029786 seconds)
    (194/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.03044356 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.022763425 seconds)
    (196/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.942514256 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 4.067477944 seconds)
    (198/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.950725862 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.860798455 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.943961431 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.105761914 seconds)
    (202/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.029879431 seconds)
    (203/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.414165575 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.333106329 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.193484941 seconds)
    (206/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.055695332 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.953644413 seconds)
    (208/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.256693473 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.353880133 seconds)
    (210/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.208729627 seconds)
    (211/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.259162312 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.277718231 seconds)
    (213/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.261534195 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.641703198 seconds)
    (215/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.964701789 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.943938302 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.162769144 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.960196211 seconds)
    (219/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.234070071 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.947838929 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.075723082 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.068569546 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.969215403 seconds)
    (224/309) benchmarking ("sort", BigInt, false)...
    done (took 6.938853752 seconds)
    (225/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.185190751 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.334612655 seconds)
    (227/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.954524841 seconds)
    (228/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.960447219 seconds)
    (229/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.32649418 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.943246038 seconds)
    (231/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.282495193 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.9371443 seconds)
    (233/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.046413641 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.953041631 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.172903236 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.278299806 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.113375675 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.908876015 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.159921168 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.957754231 seconds)
    (241/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.032413777 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.590611298 seconds)
    (243/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.442615263 seconds)
    (244/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.083889237 seconds)
    (245/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.114594744 seconds)
    (246/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.968531288 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.864874824 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.049397949 seconds)
    (249/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.948368237 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 3.372298652 seconds)
    (251/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.848591089 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.2821949 seconds)
    (253/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.270412941 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.136355848 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.2718495 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.961861731 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.412710057 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.626364402 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.945043009 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.965857894 seconds)
    (261/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.450357214 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.128873265 seconds)
    (263/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.215040421 seconds)
    (264/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.956361566 seconds)
    (265/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.071318178 seconds)
    (266/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.811590419 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.373757962 seconds)
    (268/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.980833371 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.118397026 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.968978416 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.35994758 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.130434574 seconds)
    (273/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.184380063 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.960921918 seconds)
    (275/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.113744759 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.964514866 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 3.518676905 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.966327368 seconds)
    (279/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.38776583 seconds)
    (280/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.963776566 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.074823846 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.957881131 seconds)
    (283/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.27258147 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.20957846 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.201732958 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.961243585 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.867797009 seconds)
    (288/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.071501778 seconds)
    (289/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.313584386 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.275537209 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.755590663 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.990515844 seconds)
    (293/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.150745819 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.313197547 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.094306688 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.714028248 seconds)
    (297/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.983967548 seconds)
    (298/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.104705195 seconds)
    (299/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.196925791 seconds)
    (300/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.455602199 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.102095632 seconds)
    (302/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.234034411 seconds)
    (303/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.182948973 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.075564896 seconds)
    (305/309) benchmarking ("sort", Float32, false)...
    done (took 5.651330576 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.18888743 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.989275842 seconds)
    (308/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.981544886 seconds)
    (309/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.40419605 seconds)
  done (took 1030.324112032 seconds)
done (took 1032.238534336 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.990049034 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.979917337 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.963228436 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.982947092 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.07560293 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.009326793 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.978680719 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.967337412 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.011866428 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.012987788 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.961422687 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.005717573 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.964139041 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.964199551 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.965222512 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.979831608 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.268304399 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.999784088 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.982253924 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.976566104 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.981400878 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.963217251 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.015427626 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.007217856 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.97020161 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.969619536 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.968361986 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.984758863 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.078004713 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.967421319 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.96883711 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.977640933 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.268921473 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.995092429 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.963308073 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.9833106 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.977228449 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.977896082 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.96896306 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.998340136 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.357929024 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.006174702 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.966638085 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.965660747 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.965990325 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.971889163 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.96473212 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.973271104 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.980054417 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.981348505 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.351178313 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.023105704 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.969705679 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.966720658 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.979451935 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.967269772 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.969090682 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.982471365 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.986609625 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.982106971 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.253779248 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.00737043 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.970697936 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.984865618 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.976087607 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.386366386 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.006700423 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.973545601 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.357631076 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.017320336 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.386978878 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.019087227 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.968661428 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.981889903 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.998899399 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.270628416 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.997660476 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.967045539 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.976162243 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.965299377 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.9790534 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.981397162 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.972499155 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.969483602 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.984149989 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.011496778 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.981386992 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.968429498 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.978756707 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.987264066 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.976827713 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.980965572 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.972035138 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.965869564 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.980850106 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.972661107 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.971895021 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.973370925 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.975023156 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.982799163 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.357916985 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.027737522 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.966165583 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.966950146 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.968177205 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.983322231 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.35942439 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.012728538 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.99239337 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.019681624 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.971033442 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.258464619 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.005555092 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.984094177 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.980297124 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.970177616 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.965082491 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.256248685 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.382906215 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.023138801 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.965925869 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.964063855 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.9809901 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.966784832 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.961113479 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.268818505 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.998138169 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.980166156 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.08583613 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.977114509 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.995391186 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.961749674 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.966186475 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.008451843 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.979040209 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.995145065 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.965727714 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.978217277 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.979017546 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.959078401 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.973391364 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.974888744 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.961102412 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.968438645 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.958547001 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.005948459 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.975092644 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.977053299 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.981607803 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.081661164 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.95742655 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.249894402 seconds)
done (took 308.720736329 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.038660262 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.953799215 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.045628763 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.954177788 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.043734541 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.029948721 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.953655657 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.952548882 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.952457367 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.436032346 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.952472021 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.958846837 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.951688972 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.948830008 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.022089413 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.947860077 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.949469924 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.37945902 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.950673484 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.030910886 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.950678583 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.946490858 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.94500533 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.435474549 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.95105365 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.949312169 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.026164782 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.945314734 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.381516182 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.946526726 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.9460004 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.380036039 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.023357216 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.969448008 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.951805352 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.947679461 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.034463996 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.954806072 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.009976774 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.015313943 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.040385545 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.972622666 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.941645324 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.940265145 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.943081092 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.943234383 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.938080958 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.967115754 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.94186396 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.943216695 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.36676807 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.944358111 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.941808104 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.936981954 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.935457864 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.96332146 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.935631485 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.940349311 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.015913435 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.935692699 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.005222753 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.422260565 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.422360185 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.935197754 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.93590641 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.934758247 seconds)
  done (took 190.194807763 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.002853102 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.012808223 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.001516427 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.942432967 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.985716925 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.003942922 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.941657048 seconds)
  done (took 15.757803639 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.943233074 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.934981366 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.986208642 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.986028762 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.936039308 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.092623223 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.936629334 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.949705222 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.940225387 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.963734906 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.936409052 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.937736692 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.943489877 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.937880866 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.986456399 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.949680105 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.053448877 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.939729927 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.935201546 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.08478871 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.939829636 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.943538466 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.96403435 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.949435536 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.936915859 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.944746812 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.505572742 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.937726521 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.937130329 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.935845915 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.936274572 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.980819261 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.935950655 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.938301284 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.936454447 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.052392636 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.937150555 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.937142191 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.93669189 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.935728133 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.937642182 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.936855759 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.936395135 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.936658931 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.936598515 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.96267938 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.936222142 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.937880319 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.938141548 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.938490695 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.96475726 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.939256549 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.937316263 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.946148714 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.98289296 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.946677141 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.935497115 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.935221608 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.93756536 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.936837584 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.087201993 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.989021645 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.93875017 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.991903935 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.937376468 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.938235098 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.936275281 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.937065266 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.031660297 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.935054706 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.987365793 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.936191065 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.095531001 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.965398947 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.93409363 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.937950294 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.939465338 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.933327752 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.935675868 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.941990779 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.930731776 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.937862514 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.939494709 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.935653757 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.930122352 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.044858613 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.074538354 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.926809154 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.930724415 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.938738767 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.928404332 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.975610943 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.925641378 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.925525359 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.984604766 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.043894855 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.957251588 seconds)
  done (took 212.286150121 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.931481495 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.931393908 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.925738485 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.940286042 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.927357847 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.922988843 seconds)
  done (took 13.435507516 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.926516426 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.926135018 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.921296986 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.921327135 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.921695636 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.922347405 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.923832302 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.928774929 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.92348866 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.919593933 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.918345965 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.921031923 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.923058005 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.914487903 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.914527971 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.913907476 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.91680695 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.915221979 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.911232727 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911239305 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.160620047 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.911453584 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.916657891 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.91535124 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.916206019 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.909848464 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.925426643 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.918141176 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.910758016 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.920316431 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.91330898 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.911523303 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.91523053 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.918022938 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.912804826 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.910708464 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911444192 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.909636585 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.901027725 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.900569069 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.90350317 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.905026766 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.899864748 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.90235769 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.900825009 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.908745532 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.902756678 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.910562986 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.900262162 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.897907805 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.900752254 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.898304585 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.90023832 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.899680621 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.90081115 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.90375587 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.89767488 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.893843654 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.897201701 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.906114765 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.899077009 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.894576622 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.894643901 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.898839914 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.909207004 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.901602467 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.903781188 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.903030184 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898704872 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.898493094 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.899719577 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.898916325 seconds)
  done (took 140.590703997 seconds)
done (took 574.165602322 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.076817558 seconds)
  done (took 8.904537809 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.051973493 seconds)
  done (took 9.008042966 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.423434595 seconds)
  done (took 10.315034186 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.991022942 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.999178605 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.978639561 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.972253688 seconds)
  done (took 29.859412102 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.184310105 seconds)
  done (took 9.075427791 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.986364726 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.96160898 seconds)
  done (took 15.906491585 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.002188271 seconds)
  done (took 8.902212181 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.315929755 seconds)
  done (took 9.215090974 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.989389494 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.995971638 seconds)
  done (took 15.900133055 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.97028611 seconds)
  done (took 8.862256028 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.194561402 seconds)
  done (took 10.188685191 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.993962802 seconds)
  done (took 8.959511035 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.031176807 seconds)
  done (took 8.925734742 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.058425564 seconds)
  done (took 9.953634527 seconds)
done (took 165.800479785 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.986776847 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.966085804 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.965685334 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.968182834 seconds)
  done (took 29.775911327 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.998230073 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.99776108 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.999983799 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.012878699 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.002844046 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.998404171 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.990891102 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.993580746 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.00791791 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.002712629 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.998182292 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.002908339 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.997795719 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.993125263 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.002054419 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.005282711 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.011375778 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.999435334 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.992926805 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.001958977 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.967081725 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.011832775 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.002429134 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.96686626 seconds)
  done (took 49.851912706 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.161056643 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.036966431 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.123951998 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.024078526 seconds)
  done (took 10.236785781 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.018509412 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.021877734 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.028733593 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.073003555 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.095897608 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.03128658 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.993600962 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.986886863 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.97570101 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.020578095 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.097857714 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.015451752 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.103255181 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.969145976 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.155557313 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.970694316 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.969109252 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.018906633 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.07150901 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.084827049 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.967444157 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.019034666 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.024688565 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.017476359 seconds)
  done (took 50.619831043 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.969625665 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.97703103 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.977986096 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.96864631 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.971468361 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.969660475 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.977179395 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.972074742 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.99076669 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.971017815 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.970394344 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.969138639 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.97731795 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.970094734 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.973648738 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.981987936 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.984446447 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.972219366 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.972838138 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.975974926 seconds)
  done (took 41.389601742 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.967230537 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.815476971 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.316447964 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.223239622 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.97269992 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.969905674 seconds)
  done (took 32.156042302 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.981114685 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.979047158 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.975722005 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.030222609 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.114822855 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.978897574 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.970832177 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.984361042 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.01848661 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.038071728 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.99122066 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.001273611 seconds)
  done (took 25.958331789 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.971917262 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.969313368 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.969762843 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.983778184 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.980073757 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.976784363 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.977680484 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.968869981 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.982704818 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.989579691 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.981445881 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.984082903 seconds)
  done (took 45.639977155 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044789241 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.843657812 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406004867 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426917447 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.487317165 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167262447 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.966965712 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.048436836 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.963314344 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242296023 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.294386068 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176893207 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.217471604 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860540357 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.977774166 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.455517087 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262412963 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186881152 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.993472847 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.574133221 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079182698 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.549748256 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.636615553 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.079315682 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174162212 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.091944742 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.231814896 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.925704234 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020607569 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975500939 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976913752 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.972125433 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244223492 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091965682 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043140555 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977186514 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.397316989 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.677370941 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.987333592 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.652472411 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.478441892 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.088395008 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976944952 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973053548 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.899722792 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.551387156 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067774874 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.977719429 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.675657933 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.972204056 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983384356 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044790247 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.972846767 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.776386599 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.65388716 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.239823589 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.971402736 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973241737 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.516899327 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.949295065 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.644415506 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.899925894 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.063763534 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.629970382 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412688281 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.119818989 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.965867767 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967815139 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891815885 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.63370506 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077303567 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.101818621 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.98115735 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.607837532 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258044243 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.363446283 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.013923441 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23216552 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.814318739 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.900862245 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183983353 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908948193 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893507425 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.797583894 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.893601463 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174598039 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99752307 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.573616505 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001213623 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.049168259 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.97296549 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983927291 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971141877 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.182495427 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.856722495 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962487321 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.225512037 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209609657 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974681922 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.04022196 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882781967 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.957483642 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202347301 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.156276105 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.263455947 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.423280482 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040122283 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950583524 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.965691041 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.943768473 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.965196626 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.218180967 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016885564 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936527455 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072798276 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.906822853 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200510002 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983885949 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.055396748 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.297806123 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195137834 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.289354638 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203424569 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018995983 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.961867665 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.960145171 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.634018928 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.568603688 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.174164811 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.97563831 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.512477601 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.971708146 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.961317231 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896128352 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.616461416 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.297565454 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.036643011 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.173425942 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.963900453 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232316439 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886894654 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.099013091 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.96384537 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.174591133 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.598876722 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.038513132 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209263079 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267861573 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.27393691 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972161704 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97427942 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052389051 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978879666 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.453072232 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.211911243 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.961940678 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.964112671 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.63139164 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.016246069 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963556804 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.967440788 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.516901321 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230561835 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98650114 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.967443158 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.838084999 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.975553967 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025323112 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966068663 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968204413 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.486986864 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.47371395 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.969498184 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.622889232 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180814532 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966876437 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.579285725 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140384876 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.977835984 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.228776276 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032326824 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.88971195 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.66506638 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.66679082 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967852167 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.89194914 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.964767289 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967871782 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970251049 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.157267709 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.235075499 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.017623303 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.624489623 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.071005753 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970998668 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.969227303 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967092287 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.46086432 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.95781208 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.651343005 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.974954715 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095390615 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.980896116 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.893388095 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.969012722 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967077569 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.967812561 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.915849195 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015547882 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.628363424 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171635445 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21613277 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.376199528 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977275687 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.628018098 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.083011256 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.982308272 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.257578098 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.674172622 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.977623517 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05001479 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.972747634 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.635934622 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.697969024 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.521900675 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262948884 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284388317 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317432645 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.533712515 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.186623321 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.057282373 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199504206 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.492803717 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.02940975 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063189418 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910764432 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98648359 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.614126061 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.326371248 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981111876 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188952987 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253547873 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.324214382 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108233039 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175049198 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002377441 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.84027124 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006230645 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.508856636 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991589224 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.393887884 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176319995 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054343823 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.254806257 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.053979305 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.973810521 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.309441189 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013760417 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.6798872 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.324005826 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417581676 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.435193527 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202042601 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.978409975 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.414731893 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318414088 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.213622116 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.102533103 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902304795 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.979709247 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.981013245 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.988776865 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.948815581 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.851711842 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.217305356 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9804024 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200764202 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.144054692 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338665193 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.884109307 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.977341106 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.974979257 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216573514 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.694192389 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136556515 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.331438437 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.557974488 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.979552722 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.902030456 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902001481 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.677101191 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.980121722 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.940760836 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180719231 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.078182098 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.65797343 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401576442 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293552073 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.218941042 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.98740645 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.241705743 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254342112 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.469544385 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997114704 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.074284359 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.262899041 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.667081243 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.192651721 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202793167 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.511157306 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.194445807 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425295697 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.949320961 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.978518584 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1831501 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.192708625 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.333159425 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151557924 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.686855696 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.986680709 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347168564 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04007022 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.331225515 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.161716427 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.066954039 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98667694 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057751213 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980525139 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.983204567 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.983253033 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988249636 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.327213573 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.091623087 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.990283483 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053431532 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.971184343 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.567495819 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.999945466 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259086744 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334934816 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320782676 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057685495 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.992229194 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.998378686 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920127914 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12010238 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.431851788 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265445651 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.108940901 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.127044045 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015381031 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.284817261 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288358261 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308634483 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264432848 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.874532136 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.667392072 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.117044245 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.210947929 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001706947 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.197667645 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207568178 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294226831 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557431096 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.174333915 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.193258462 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266108476 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.354261932 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.996307987 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.572491264 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.00518747 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.410159114 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.029161314 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.341073135 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255745479 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001982397 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114606655 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.996003745 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.191077148 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.449176777 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.604940297 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339926554 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.850279497 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999826635 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26430796 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32050134 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300760809 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07247969 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001903217 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.701492551 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128702694 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.901484761 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.226373119 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.997617022 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202824615 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.705018614 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.000015123 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259557731 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303541713 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.998409336 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.898439796 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013274006 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.001273741 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.21248163 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205904777 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.241113737 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999937858 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.005719683 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.80953405 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266272232 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057250247 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.923776235 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.998630303 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045737317 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224676228 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015934124 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.515820437 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.700076902 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270975287 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.903375718 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016819559 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435400057 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370491925 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32037659 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.527367794 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20789168 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.550879425 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.876822264 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.382075513 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.002376566 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.439390544 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.383423743 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.000624269 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.5345008 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115554329 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.261073968 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329112092 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.008400257 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.678718521 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.024511407 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215067541 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367418671 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92971968 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.005682711 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.047778447 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.000412317 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.99831714 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009306409 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.917982362 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439032878 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.846518631 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557765879 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.005364944 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.005683741 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.317060276 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.568859158 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114719786 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020151366 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.001752597 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.715185156 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.288394118 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246297631 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.543731867 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.102719332 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.001660939 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00202752 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.921481609 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.183787773 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.190767752 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275347519 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.393603928 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.115337353 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005844213 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.208519013 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205149677 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.334811479 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130353739 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.176469498 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122335173 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.942835422 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.708276143 seconds)
  done (took 1714.118755757 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.017820988 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.014237409 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.022386566 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.043950814 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.01368646 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.0200313 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.056601939 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.098042198 seconds)
  done (took 58.21726629 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.006089847 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.29806082 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.012270836 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.009536605 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.014429158 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.008899351 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.637755252 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.020456747 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.012479072 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.01316049 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.009869807 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.024572944 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.332734953 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.031685181 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.011925623 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.010399742 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.01156051 seconds)
  done (took 77.407966528 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.009735627 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.315526146 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.037520513 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.010520934 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.797871594 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.021131013 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.993784861 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.063735711 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.014512192 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.060026431 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.301332493 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.01600425 seconds)
  done (took 91.576391588 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.022183555 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.010084877 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.012090037 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.012121656 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.012006801 seconds)
  done (took 12.010321307 seconds)
done (took 2240.942489008 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.238721841 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.066826856 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.110607067 seconds)
  done (took 6.110424492 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.155587968 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.202865457 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.315038414 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.323595475 seconds)
  done (took 10.941163045 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.31687264 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.397864603 seconds)
  done (took 6.647093969 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.329613962 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.041451838 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.396526093 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.010718347 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.011296295 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.012817259 seconds)
  done (took 22.974547348 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.010057687 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.009175177 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.011595039 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.010624737 seconds)
  done (took 9.977524371 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.0080322 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.678718859 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.011206464 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.021191291 seconds)
  done (took 21.655350073 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.202424686 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.125407354 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.155211766 seconds)
  done (took 8.421002753 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.230856333 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.121460191 seconds)
  done (took 7.286410385 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.148072973 seconds)
  done (took 4.082672307 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.037578985 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.28009324 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.497099984 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.531678244 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.589884078 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.908537659 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.338398909 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.237272767 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.469077653 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.472472057 seconds)
  done (took 26.299394303 seconds)
done (took 140.332569985 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.352424287 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.04180653 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.210820514 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.368627895 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.25784067 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.214636742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.232071065 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.360984153 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.051560409 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.039235484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.372522844 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.272477579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.185154448 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.037479781 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.189654513 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.03869525 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.241707596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.37695247 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.05306799 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.267178548 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.240564678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.013564053 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.210108259 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.031699759 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.248061366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.159949336 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.558370882 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.044221567 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.19358047 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.568873578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.168259014 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.410416284 seconds)
  done (took 172.950138673 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.014078728 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.013823492 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.01649201 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.015035103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.537648294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.016186798 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.011422706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.01427703 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.420500974 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.406550061 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.016066953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.5274754 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.016607054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.013044795 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.016071619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.014881937 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.570854157 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.0146889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.015529936 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.013255072 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.015497946 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.379016898 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.017437816 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.390872848 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.554733202 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.017794214 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.016983595 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.018434553 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.017621686 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.012459777 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.01817762 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.01589034 seconds)
  done (took 214.102364362 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.018666665 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.016358335 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.020765555 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.016709616 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.017580745 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.016962392 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.016053369 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.017370725 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.634383193 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.631823935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.020186614 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.018927769 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.01955583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.017047971 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.016386766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.01548441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.01949373 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.015995039 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.01559073 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.017348336 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.018670468 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.728809907 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.017758171 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.7386461 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.018436328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.015965848 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.015817502 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.016750104 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.019164444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.016814229 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.019100765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.017569473 seconds)
  done (took 225.169010675 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.255519749 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.018040061 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.018835009 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.933126347 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.017116765 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.017720185 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.011384596 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.265011322 seconds)
  done (took 20.48022059 seconds)
done (took 634.640830308 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.374264872 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.216958594 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.196192118 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.040749431 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.265995812 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.088133319 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.036180477 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.100803899 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.880331616 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.111514696 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.694989027 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.061548743 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.790524392 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.065588248 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.157836351 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.097816364 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.622482859 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.72809178 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.180569483 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.100973782 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.215370217 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.983220601 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.12178929 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.915486181 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.716044824 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.037717825 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.069275553 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.627231872 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.052072058 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.192847095 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.736184427 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.331996455 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.055576411 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.038655336 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.101453098 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.074847615 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.263492244 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.053663728 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.165963364 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.77433947 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.088474643 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.778341429 seconds)
  done (took 109.150059207 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.033184482 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.026151796 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.027267106 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.027986664 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.035565504 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.026535005 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.02939627 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.027557405 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.028575741 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.028468869 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.027808823 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.034120506 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.027445075 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.037604339 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.027951573 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.027101207 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.027824919 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.036117026 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.028668517 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.027349847 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.030076522 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.028981024 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.021641673 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.027387395 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.028528798 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.028596778 seconds)
  done (took 54.719884213 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.021229415 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.179280707 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.262166579 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.043216093 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.023104415 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.026799013 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.041720361 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.025836461 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.025705889 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.027643229 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.113773543 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.027038558 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.041057799 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.264315316 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.040751654 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.023502419 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.023424577 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.025015607 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.190919074 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.040102701 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.043384984 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.027404706 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.045801819 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.038695126 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.025856139 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.024537479 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.028660618 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.463884133 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.034367432 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.115118018 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.076583095 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.048388652 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.404275588 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.276053929 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.081176413 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.03244718 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.022291476 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.120940228 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.031990743 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.027072851 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.044515346 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.030442531 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.265225603 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.545662679 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.039455026 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.021472894 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.475478291 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.12882261 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.066596596 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.034555178 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.267369249 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.041056722 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.021719777 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.029845887 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.06084857 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.033418786 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.026417026 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.339027447 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.038904665 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.044913041 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.029826073 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.02839958 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.197024401 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.036561255 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.183841436 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.037079166 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.03347529 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.027278292 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.270056269 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.042453162 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.560319899 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.042673314 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.02443292 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.116174714 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.1877643 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.502321263 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.040065766 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.196841092 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.419778676 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.049860012 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.03250003 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.451559811 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.0551727 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.032496913 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.027332561 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.027285216 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.026894563 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.067145505 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.041339604 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.471687684 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.561749741 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.358207573 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.055150949 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.043361247 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.02799951 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.337945927 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.032664302 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.026281256 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.259189298 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.569279842 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.044150706 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.034592886 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.538708826 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.043353659 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.047929179 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.036397191 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.276452006 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.046405246 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.069759997 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.027770463 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.03493572 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.032427539 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.04749325 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.035102072 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.025227496 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.532295599 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.136418313 seconds)
  done (took 250.485029376 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.030052627 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.027241241 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.026114541 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.031180304 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.026906164 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.030018579 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.027829385 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.026598071 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.028949676 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.02579898 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.028998691 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.030543941 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.029394703 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.035690616 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.036003611 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.031104393 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.627798765 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.030504059 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.030048217 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.02747131 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.680142776 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.031893795 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.029370144 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.028925704 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.029586258 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.027681969 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.032959774 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.031841447 seconds)
  done (took 172.039310616 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.028602233 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.144619828 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.046986702 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.059161344 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.037559205 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.029885856 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.129334968 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.048875047 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.039885752 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.030580251 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.028454026 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.092032539 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.040032169 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.126505498 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.063618321 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.136322175 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.13565402 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.035706572 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.029925481 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.030243694 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.061390189 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.040204827 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.09363349 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.156157621 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.048159283 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.148280858 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.050545827 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.030052484 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.031074719 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.146501825 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.04633088 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.090501505 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.061019763 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.049662051 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.151921542 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.14845001 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.133184132 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.132320615 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.036849055 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.034203727 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.03335581 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.035671992 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.14481335 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.050584581 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.036963415 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.149988574 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.049370414 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.031434929 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.033388042 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.033821932 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.04887915 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.051558922 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.097190438 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.159511265 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.064086271 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.054273894 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.13332478 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.156964429 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.033080372 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.131480702 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.039099385 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.145765317 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.052081143 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.034489042 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.032775105 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.03900022 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.062296281 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.138154313 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.136336381 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.04085134 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.131210588 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.06927589 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.039471166 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.034548694 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.033147885 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.150482231 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.151191004 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.067185746 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.077214997 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.063586736 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.04664919 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.036494217 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.035310505 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.053840451 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.037924742 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.147704338 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.14891465 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.039340679 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.036200856 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.036738565 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.033451923 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.061242244 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.157035788 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.072052483 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.139570336 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.100728314 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.10978053 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.052038466 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.049105385 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.039194622 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.100681106 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.04815023 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.048725462 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.328675309 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.096303348 seconds)
  done (took 220.087715065 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.436716058 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.080586561 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.091780848 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.356746532 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.399399962 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.912820542 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.081165423 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.084123547 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.109727415 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.266595499 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.14756978 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.100019507 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.073952673 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.059254776 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.083168265 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.107015838 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.091930065 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.423715068 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.297399381 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.261679728 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.071049315 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.390336626 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.419546166 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.672738103 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.130659113 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.479963607 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.666322715 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.211923706 seconds)
  done (took 66.477227539 seconds)
done (took 874.898909097 seconds)
SAVING RESULT...
DONE!
