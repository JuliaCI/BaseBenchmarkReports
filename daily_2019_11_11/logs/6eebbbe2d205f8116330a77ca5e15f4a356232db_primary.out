cset: moving following pidspec: 17152
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.352060012 seconds)
loading group "string"... done (took 0.552522799 seconds)
loading group "linalg"... done (took 7.339736375 seconds)
loading group "parallel"... done (took 0.152484642 seconds)
loading group "find"... done (took 1.123096727 seconds)
loading group "tuple"... done (took 1.788508214 seconds)
loading group "dates"... done (took 1.222504971 seconds)
loading group "micro"... done (took 0.234959269 seconds)
loading group "io"... done (took 0.915927099 seconds)
loading group "scalar"... done (took 37.468762376 seconds)
loading group "sparse"... done (took 12.017265237 seconds)
loading group "broadcast"... done (took 0.954839624 seconds)
loading group "union"... done (took 12.252403591 seconds)
loading group "simd"... done (took 4.603169771 seconds)
loading group "random"... done (took 9.712592447 seconds)
loading group "problem"... done (took 1.944746354 seconds)
loading group "array"... done (took 22.511286011 seconds)
loading group "misc"... done (took 1.788814754 seconds)
loading group "sort"... done (took 3.773479233 seconds)
loading group "collection"... done (took 18.251126021 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.489502409 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122479485 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112347786 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118467127 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147315044 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115796829 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124581819 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085198382 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.829964371 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148813308 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116768428 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411201946 seconds)
done (took 5.169025838 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175525276 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084553506 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082260505 seconds)
  done (took 1.350220708 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066093717 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12266771 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067803512 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06793307 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06776988 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067049524 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066779451 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066814814 seconds)
  done (took 1.708694303 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074465928 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07039899 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06988652 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069272795 seconds)
  done (took 1.465815989 seconds)
done (took 5.962357266 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.769149122 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204175598 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181245794 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.393259637 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130769102 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156385236 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63074056 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.332136233 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182833376 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083326954 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106577061 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315949167 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106059507 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635568072 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076367464 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090974831 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137514913 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437471106 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066709658 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081334948 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089056589 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127680912 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.0842253 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073576283 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142851607 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066682705 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133688203 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081020341 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065628767 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205450292 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172736298 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65980956 seconds)
  done (took 10.241710683 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098294138 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099858427 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069605822 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13827118 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098248831 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070857662 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072123845 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0680363 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088459495 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129976331 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090359537 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102789313 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066512573 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069781161 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085904429 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204793296 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078914746 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080035923 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06931929 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07407244 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117877136 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076770051 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076748931 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076522583 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128198358 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179646321 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09899297 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097349275 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06626504 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07964766 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114103907 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12473763 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066730126 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067395463 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125726006 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095666698 seconds)
  done (took 4.666924068 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.294045519 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14271394 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092162364 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132781008 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065370635 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107451056 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064786947 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080025971 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197489615 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.29771388 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.569277406 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110020202 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102720851 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066498809 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067657109 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067859915 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.314720564 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106100224 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103400791 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079893952 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068899554 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067459781 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.353280451 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066618959 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062684932 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066858487 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056864241 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122010871 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066771631 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.915167087 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124122689 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065946501 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10038294 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162048306 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086747649 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137671398 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.199946083 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063511208 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.147807093 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069085928 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065727707 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082575063 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103422167 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111300247 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064880013 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0662219 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158783736 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066356503 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080647945 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.978881047 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154344935 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095927294 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065569436 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.253151429 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087594629 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071191153 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065959024 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181509412 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136103195 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068104521 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067933206 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069201478 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070963918 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065896753 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066618953 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.352362926 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069596965 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077739552 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.706287377 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071146178 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070901433 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074113551 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073690229 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08942684 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067793012 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07664571 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066813223 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066611354 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067434317 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086417776 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.355018186 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065856102 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067922194 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090019199 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065496794 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087503439 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098031589 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067770781 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066394699 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101525815 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067509731 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06514163 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.208875986 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065778374 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084524566 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068937775 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112735335 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067182153 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.098928956 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067196339 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06537921 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09895751 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.070958668 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071764852 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099963713 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082878715 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069100597 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.400393344 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06440273 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065453916 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070380881 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066239644 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068894076 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06755882 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.0805597 seconds)
  done (took 20.864824514 seconds)
done (took 38.247913226 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.241188339 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077876211 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078331171 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078088798 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078208213 seconds)
  done (took 1.823934711 seconds)
done (took 3.07682885 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121450854 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100393283 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065789239 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097012411 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065310425 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101633449 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100801961 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082366989 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101006965 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065037608 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098022118 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065132413 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065286911 seconds)
  done (took 2.399490579 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084306809 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08430494 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070883336 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08416194 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065265051 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083094864 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081902058 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090131884 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081671939 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072943565 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064714296 seconds)
  done (took 2.10942758 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083825154 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084662211 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070935835 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082419626 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067770675 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082491659 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081805594 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086666358 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082168724 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07434765 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064773293 seconds)
  done (took 2.103058876 seconds)
done (took 7.850193147 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07848901 seconds)
  done (took 1.308988966 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593231557 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.097708778 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080744008 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111090598 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183174669 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118662576 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279395086 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089061688 seconds)
  done (took 8.971819228 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089843281 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070684433 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.083909371 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073440025 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072517305 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073489008 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070603197 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070609326 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072104087 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069395126 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069569609 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069864516 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070275922 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071832006 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072814207 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07193758 seconds)
  done (took 2.478496434 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093350736 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092164809 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074774453 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076163515 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073832712 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073490777 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075437721 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07454523 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071899374 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073305924 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075981995 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074632165 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072882259 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066249359 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075413417 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077375645 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07219698 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075532486 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076216169 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077052867 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076292671 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065484907 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072700243 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075133025 seconds)
  done (took 3.158329337 seconds)
done (took 17.15952979 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116813771 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07266802 seconds)
  done (took 1.425036633 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083337046 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085221457 seconds)
  done (took 1.414401579 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08643459 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067245101 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094730768 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080672793 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068273377 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067285714 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091220525 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067754262 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067631653 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067978517 seconds)
  done (took 2.005180247 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070415489 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08144475 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072852135 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083265108 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07575711 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065605281 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074781379 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069463245 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080062746 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064023504 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072572349 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08401613 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073103017 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085496113 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074389388 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069977183 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072538049 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068948528 seconds)
  done (took 2.590136955 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067671162 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069414867 seconds)
  done (took 1.392313939 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069026377 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064797176 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06831055 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068718192 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064936819 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064031986 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064752514 seconds)
  done (took 1.71487539 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381931295 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10986404 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.303761562 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07166691 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08360731 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252173053 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066154711 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071381185 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071235071 seconds)
  done (took 2.709039357 seconds)
done (took 14.505575209 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080411804 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086698269 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097596956 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.366012731 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090752342 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065644639 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115209887 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191828086 seconds)
done (took 2.361831843 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212259149 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613045748 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.386772096 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.202320468 seconds)
  done (took 2.456699155 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332075314 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087593557 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05960157 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068035767 seconds)
  done (took 1.812073603 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06703975 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069299237 seconds)
  done (took 1.400471908 seconds)
done (took 7.145308116 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068237963 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067169118 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064317906 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067173015 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084062391 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064367117 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064719475 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067080688 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066855965 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.06704949 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069784508 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066745157 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065094652 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06450719 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067079599 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06434957 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064020511 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0641927 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068384103 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064436996 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06655057 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066591241 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064672721 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064068009 seconds)
  done (took 2.900877735 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085372126 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068088869 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073301682 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072355968 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071374062 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072097034 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07217708 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067209516 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072379543 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069084734 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070652233 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070729405 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068977453 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071192025 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06904239 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071475388 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072186498 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067531899 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069023865 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070810839 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071557555 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067015776 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070535542 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071574415 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070389786 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072378169 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068865419 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067406576 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071834397 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070495646 seconds)
  done (took 3.400592501 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071228568 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064223002 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064870309 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071795563 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065339173 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064929748 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064642341 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064982912 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065235595 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064353834 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065961462 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06410818 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064782479 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066012689 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065678299 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067951277 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079815634 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06484457 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064467341 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065063513 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067903611 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064470225 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064615111 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064305036 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064467801 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.175965688 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063487352 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062537835 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063833285 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062899415 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065608352 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066487455 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062751323 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068972363 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065929481 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063658958 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067487825 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062058901 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063084939 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062519886 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062866874 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062159491 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062870619 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070151174 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064389665 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065854023 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064282912 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065356322 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064603104 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067684154 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064073697 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064826009 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066692989 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065397754 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068906031 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063727593 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065045018 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064010328 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065263464 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063948849 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06380342 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063691552 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066701915 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064828056 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07856722 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070970858 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064122954 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065749852 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064773117 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066830929 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066110618 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077500371 seconds)
  done (took 6.123921132 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092099249 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089054604 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066566382 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065996314 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062712347 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06393465 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066752997 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063221266 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065012779 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069251818 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063681691 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064252821 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065112006 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075558716 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063540982 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064783844 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069138669 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061287796 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063373921 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066441152 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063253194 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066361202 seconds)
  done (took 2.777625447 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156778791 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071875295 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10613702 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072116505 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066745479 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072048714 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069025218 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070042192 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069458251 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067293281 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067495105 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070102401 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069059429 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069080115 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069001738 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069431961 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070391389 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068668967 seconds)
  done (took 2.653504528 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07827204 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067527707 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08767442 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067003733 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067193177 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069178529 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07165137 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075337663 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069788066 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066916799 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075454902 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069539452 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068928543 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066603893 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068549773 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06664809 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069073211 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066737179 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075010053 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071355634 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071758578 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074848721 seconds)
  done (took 2.845393132 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081427076 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068404973 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084073955 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069553555 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062894278 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065486699 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071400511 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067831497 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070953029 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068742033 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067128024 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065500616 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070424298 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066953244 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070106347 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066725352 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068411843 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066859929 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068367244 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062811807 seconds)
  done (took 2.664361344 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088484396 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069161126 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068491359 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077055191 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068359455 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068401297 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076474678 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068320682 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068689478 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088288057 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068370874 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068937315 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0760483 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07355735 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068040035 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075872748 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075793156 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075694175 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067961487 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068131293 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088221101 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068899309 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076216658 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067959306 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068269552 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06817752 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068237381 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07295017 seconds)
  done (took 3.321213035 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068071169 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067644307 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064836861 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065065256 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064969746 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065192951 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064800504 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064599848 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066966331 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064413534 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066527295 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066913019 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066421611 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066428738 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066780559 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066640013 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067110617 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06466552 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06467824 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064286523 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06653166 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066737801 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066885291 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064634688 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06445133 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066652518 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064113755 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064744916 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066713538 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064126594 seconds)
  done (took 3.257661874 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076931533 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074221334 seconds)
  done (took 1.437903925 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065022692 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081055337 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063860915 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071104892 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071145442 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067384906 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074400041 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071055159 seconds)
  done (took 1.846061664 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083289348 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078338391 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06959907 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082178755 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.0776014 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083828815 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134284111 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068552813 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073920989 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065559522 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080723604 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066331234 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073761959 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067488399 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072705949 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073152351 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065126551 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073685276 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069319874 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065737994 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068641956 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075451602 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069258671 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062628512 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068131518 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089406553 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078364283 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066602509 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069991895 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074085052 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072482696 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061016985 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067438568 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067479933 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064998222 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07722362 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082609754 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069994775 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075606841 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068209322 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078355325 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062271381 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071843161 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073906159 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076812687 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067398877 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067658367 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062489747 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064501844 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069181341 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062573774 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067450381 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061776596 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076855 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070524688 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07752728 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065978931 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068568757 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069747801 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070515568 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073697255 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068913679 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069305954 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.0670188 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076742383 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071178107 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076024741 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062409633 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061180794 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064816945 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076600788 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090115388 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073381004 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068010084 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067998374 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0651919 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070482681 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06897844 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072987954 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073603403 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067777673 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073125284 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073752355 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067295976 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070056875 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075937603 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06571336 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070366985 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065098377 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083927021 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066317814 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065225201 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065153463 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077488973 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070547136 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066802166 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065246635 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0740547 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062126975 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068024418 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069052645 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067807222 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077707872 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072268151 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073129303 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076607135 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074556261 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066758717 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069187976 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063504866 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066819735 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065240333 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072582292 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060144327 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068676455 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066658159 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066855376 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.204076144 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064686191 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066488851 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073424902 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070907605 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064505941 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062750456 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069281024 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067986342 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070497146 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07585826 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066706174 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063011086 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06275142 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071696826 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067529018 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071998536 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072907821 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071238389 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062298454 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066101841 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074067472 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077068046 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06801958 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06906335 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074505953 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06930334 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067483288 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074395416 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070510219 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066977306 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074415784 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06889765 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062932963 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071497576 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070462901 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066262349 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071912512 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07149794 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069683417 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067456394 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064779654 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074289628 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068241721 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066982349 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067523377 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.0667482 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07881973 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069560298 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062766888 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064317774 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077367206 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065605583 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067991254 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066297956 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07008831 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068053964 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065011948 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067585605 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06973058 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078673743 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071998478 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068702083 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073502783 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079054729 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067466962 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069111722 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06696366 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069192002 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068030721 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075711507 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072410861 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072452943 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069492945 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063858684 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072712701 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074322655 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066476324 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065134277 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066080511 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070265259 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072269689 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071673609 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068001209 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065698173 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067881796 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070535643 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070035497 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067253018 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066268283 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074043647 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065787511 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074915284 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068258645 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077508158 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070804641 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0624928 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070524226 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065389001 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073140804 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062935189 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064887266 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066566903 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068508865 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06650673 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069570124 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06141589 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073699777 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074934413 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067814369 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066534591 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067493001 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073562425 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067842972 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069640875 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068860954 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.06988475 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073970138 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063677247 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068203323 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074875236 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.196043641 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060238862 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071558321 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064279077 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065484257 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06488774 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06418974 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070625354 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075805271 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072943556 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061539112 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070335244 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066254275 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06704443 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063680984 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072862495 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070813923 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068501323 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074988799 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068919373 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069045917 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072264397 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068608562 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068439409 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069981438 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071263187 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069285312 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069558666 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066669208 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071004443 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067589752 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065814242 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070394471 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068138679 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068088944 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074018376 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067482995 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0682224 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069851778 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068402782 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067524115 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066187532 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067004087 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070232095 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069051412 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068242292 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069718802 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062553075 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075561415 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067788085 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076088804 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068605997 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0647788 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074873394 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069785122 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074434033 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068309849 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068913202 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068983745 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06712168 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070333913 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074446473 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065542407 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079141078 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075876224 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068626799 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070594219 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067571215 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068826779 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066950826 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068679629 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068631089 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067721735 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068035389 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071538053 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069911721 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067573801 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068562831 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067722596 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066710894 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068681626 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061926137 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066426844 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066266351 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066730676 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076845126 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06771037 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067083642 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065988335 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068264072 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066453292 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063937847 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075339245 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076669433 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067863156 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074330106 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066591382 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06894644 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07806361 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061977125 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065338276 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065511256 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066002575 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074924777 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068148875 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076584097 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067128238 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066690906 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064606168 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068060119 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065973724 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062097333 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065103691 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0707454 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06583727 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065982745 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066861979 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06921668 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066137901 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07280711 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06432141 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067231414 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066171623 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063624374 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.200738617 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065860624 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069452479 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066814312 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063984363 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063445986 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065944731 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068367 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069087266 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067682537 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069297891 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077374908 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068084263 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070961604 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071420776 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062083911 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069668244 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067580887 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067093263 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066972559 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070668267 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070131542 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067732101 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074808772 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066432626 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067272202 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066302796 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064186548 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065729435 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066376654 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066270741 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065745837 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067516396 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073955225 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063899857 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068921359 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065792642 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065853371 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072068439 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067318478 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069730065 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072328391 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06634902 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06756816 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073834195 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070222122 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069030879 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067918054 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068620112 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074345037 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067458 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074206703 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067993141 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069393211 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070483173 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065701374 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06739802 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067798367 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067453665 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073689531 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067180291 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065309291 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067393381 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065619147 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067967372 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070365805 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07320608 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068203175 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068555011 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062031585 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064590662 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069021278 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065362484 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069920994 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070682963 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073221288 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06999087 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067558793 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066295603 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075169375 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071145325 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069562496 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065215749 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.0709281 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068228362 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069856459 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068189756 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067714555 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068994732 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07103087 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068994133 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06676274 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074273294 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070803912 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068554983 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069016139 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068124177 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067815736 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06258652 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067700262 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069402159 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072810635 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069426816 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067417645 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078001535 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065334444 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06776807 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070902638 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066863807 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071955216 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062615092 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06858641 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068472656 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068121068 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062900469 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066378527 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064975993 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069069802 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066165666 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061989249 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07621955 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074608967 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069019344 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065249913 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064633029 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.197614477 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061442845 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065814003 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068547908 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070161597 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076311752 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065459114 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066667881 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063320677 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067585097 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071473616 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071916167 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065374271 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063523324 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067595209 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071434961 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073734691 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067267349 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067688183 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071601845 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070467522 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066019783 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071363439 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064806275 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072885189 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080603506 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069374458 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06940804 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074433846 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076246558 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068728076 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063379168 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069171511 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070906784 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067493556 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066988543 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066967794 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080786326 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069134897 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065946781 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065265462 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068928907 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065638115 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074187278 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067742301 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067623313 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071944396 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070197717 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077412261 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069814934 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073354014 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069002715 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069891099 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066289204 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068212141 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065994145 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066096927 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069701371 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068396835 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073510061 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075822512 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066535309 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078736002 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077542811 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068518927 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062740553 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066205232 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066964744 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062975436 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068439021 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066135944 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065623759 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065417318 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066539428 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068740821 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073232144 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068087545 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068195285 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067497936 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062448933 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069623784 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069826501 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068158436 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064262645 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067370117 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067840341 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071572649 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070767133 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06515963 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069043739 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069023595 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068379568 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062530654 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073575873 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066385086 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069388001 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066507709 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067554042 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068428925 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070545174 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07233055 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068693276 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069511382 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070923858 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069554463 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064649533 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064651075 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072362022 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065431545 seconds)
  done (took 43.134090089 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102783023 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064398206 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063311655 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06307519 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074995474 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06424672 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062741221 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064071032 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064101269 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066940978 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063212131 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063101664 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071889315 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078965969 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075740067 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067577758 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063025467 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064151373 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062970553 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063879542 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071857325 seconds)
  done (took 2.818553783 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075525007 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072041712 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074465055 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077110249 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068602672 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071424075 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074289929 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072023985 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077606365 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068557038 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07737593 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072040628 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068250306 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068470176 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068734224 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072292969 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077122 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068497 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071579217 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073664255 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071978701 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073635421 seconds)
  done (took 2.951075257 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068458407 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066764214 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069414691 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062434872 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067184694 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062346745 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070688843 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.07426363 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070530293 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066425417 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066306406 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066126602 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068710726 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062361432 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066751085 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064916606 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109446528 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070260419 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067116692 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068456936 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062351955 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069170494 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062741555 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062859704 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066278598 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070680923 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067845381 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064773329 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066945047 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066199158 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066919233 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064738102 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068463825 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067535236 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066453958 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06588374 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066764926 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066770963 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062262265 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06514091 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067193923 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062886435 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067433784 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068084795 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065001707 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064897398 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068642138 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066850428 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061890678 seconds)
  done (took 4.661599891 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081343555 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109973037 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068811517 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090317679 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08111206 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077435184 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070863441 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090498665 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064213542 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065419684 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083024873 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080542291 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066675506 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071238888 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070853949 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066629165 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067848205 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06589756 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070751675 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067115952 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.0708744 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07302537 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.0809441 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080175932 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070874694 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065728328 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065885399 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070661669 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079072183 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071100853 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070844693 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071886509 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081900378 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072217405 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065746269 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068701025 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082024555 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066685317 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068743288 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064212248 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068573077 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070754604 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073085817 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083021844 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067104561 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071719932 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066680179 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063563128 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078854724 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068832401 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074080369 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080691323 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070079044 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066625222 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070623043 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081037871 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066222177 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064016477 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068238954 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077017282 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063170799 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070255251 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079829007 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068468351 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073393251 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080338715 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071896451 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070065838 seconds)
  done (took 6.466629571 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077414015 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073713812 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081777669 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081717729 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073683329 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073576303 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073193761 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073541594 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073029506 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077878728 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073881113 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094042278 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06852133 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075925733 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073334097 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073614872 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073370756 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073770245 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073669119 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073480519 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072711979 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079651305 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071647919 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079438413 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09629926 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066891555 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071461653 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070905636 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079544191 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071217975 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078376758 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071220085 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0713922 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078753928 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078183353 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07292763 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065892143 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07334392 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073221673 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073264003 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068494951 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080858793 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072819221 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068132019 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073134837 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073151426 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080843959 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080071582 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075835286 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078117678 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072277591 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079394719 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071160618 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071282185 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078788234 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104143757 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078701479 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07888364 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071393742 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080840361 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081159634 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087175951 seconds)
  done (took 6.096577545 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084872393 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076254234 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077035446 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060677739 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063888329 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07062449 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065383314 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065527169 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075589221 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075910762 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078698096 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070978525 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074109732 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07852793 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070996815 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073928058 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071107083 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070959777 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075583912 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071234099 seconds)
  done (took 2.834037379 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07593178 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084215883 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068551105 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072575884 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.0701382 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073178461 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069652841 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07016202 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067913363 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070091507 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077246316 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07709751 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06741217 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072177165 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076957891 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072937218 seconds)
  done (took 2.539572336 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07626969 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073365993 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081256716 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068233686 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065543132 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063470463 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066816287 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062854673 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06371169 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079259107 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066951502 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069360639 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066985302 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065625892 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064080277 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069815254 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063403199 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064367132 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066615616 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079315522 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.0775658 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065316246 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067618438 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066477916 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066884035 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071987702 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06616378 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06440473 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063798643 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067036705 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067125043 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069925625 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064429988 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064967634 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065644756 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064195034 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066426617 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067081052 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069331852 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066785242 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064793869 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066514703 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066979733 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067437627 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063232132 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066978017 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062948117 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068381617 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064665682 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06701915 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066477606 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068892387 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067225438 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072992271 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06945407 seconds)
  done (took 5.098610105 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080852826 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071042359 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06243745 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06540638 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070197375 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.0693786 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070506107 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068918091 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06906862 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0652808 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068953059 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069927727 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068957987 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071215713 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069063731 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070441807 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062832137 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068688888 seconds)
  done (took 2.629821571 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072391815 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067434048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.0739414 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067296798 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066939777 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068943553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063319749 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065626009 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065597857 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066672766 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067001881 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069384343 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065958354 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06932566 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067012539 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066887959 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069164067 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065403895 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066672338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063218337 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069102077 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06519245 seconds)
  done (took 2.85892941 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093941048 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082357607 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141087883 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080270868 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084477085 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072785663 seconds)
  done (took 1.934240305 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091087962 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080357788 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067447607 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088586947 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074700758 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068334849 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068171682 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06863261 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076709674 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077015686 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069059587 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076935996 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077160434 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076757198 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074759896 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075213329 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069067428 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068668137 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067484844 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085584665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069034034 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076755339 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068797763 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068780632 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068493084 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076553956 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076936983 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077131649 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068509235 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077009718 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074156587 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068584865 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07743156 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076753921 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070082245 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077141506 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0687416 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084997229 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073822665 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07648906 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069978784 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07437234 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076761489 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073071966 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076860559 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068600602 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073373582 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068227013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068339223 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086828982 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074375015 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076666397 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074527712 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077824057 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076035765 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086477564 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076155206 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074700013 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073944274 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079735825 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076472564 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07446676 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076433233 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077024642 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074576159 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076305225 seconds)
  done (took 6.321683272 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083773927 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087573449 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06930856 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077222007 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076637844 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068812837 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068922565 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069206554 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068868329 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068447605 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108542019 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069357226 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076882879 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077096463 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069240028 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069050764 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069295286 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077044835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068419641 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087528309 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06884278 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076531711 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076534304 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076638764 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077424553 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074708386 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06926789 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069107764 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068635343 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068575546 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073438017 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068728552 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077146701 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068348741 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076601761 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068801717 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068459426 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073503194 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068368708 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074267746 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077170059 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085022876 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068779845 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068502224 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076991687 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068581633 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068747604 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068239343 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068454959 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068142632 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077457441 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077044476 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077101033 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075957446 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068647939 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068702952 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069032935 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068989216 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068808966 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074797887 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076633902 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06880482 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087256932 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068752751 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068735269 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077104232 seconds)
  done (took 6.246559558 seconds)
done (took 131.080986865 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185431051 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16551982 seconds)
  done (took 1.722457283 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071571337 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098317337 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078264687 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13018773 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066404677 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099697453 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09846475 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077212069 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065317265 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065103265 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065330125 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067905268 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130358856 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065524898 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065173278 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067983781 seconds)
  done (took 2.699633735 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099719018 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159661608 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098313697 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063984431 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095568362 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072162166 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064163398 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074327546 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070263665 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06455887 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071901538 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069604073 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064150451 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069902734 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069870961 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071678508 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064309288 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071889311 seconds)
  done (took 2.806807808 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103460935 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093370632 seconds)
  done (took 1.590258068 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157731156 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105460912 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143160065 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345026975 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.1663218 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.22713285 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125696197 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12640327 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.1165799 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123453093 seconds)
  done (took 3.025488208 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100561355 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155942239 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256981251 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11407639 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071607446 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094343717 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114832167 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07708429 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079566858 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079450035 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.0795213 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07559807 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097229773 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072457744 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072285716 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07489992 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101123214 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071562067 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073762882 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075879929 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098107106 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064795818 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07228882 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07173376 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077022786 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076885024 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065020058 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064712348 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07581792 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07459064 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078120662 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095381168 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078687349 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107515489 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069647532 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107954723 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075406521 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072830541 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073372752 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073365727 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078425408 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077926072 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071461621 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075368562 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065024041 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.0755502 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06515371 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067318146 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080097719 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068303005 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079501506 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078784837 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107684904 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06654833 seconds)
  done (took 5.986930812 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105086106 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103386692 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070654482 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11058689 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099137532 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071508488 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100956381 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092701828 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102023972 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069859681 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06801006 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069160452 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081804948 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082739681 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111251379 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103394723 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072862382 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070887166 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102780051 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102248456 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067739393 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093666043 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088888521 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100633978 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067061624 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069571832 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067789507 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069400103 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076310818 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077909171 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069052487 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07996492 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084495974 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077789928 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066631743 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067501463 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06829738 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080025947 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078990916 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078825819 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077130066 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067350428 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067450224 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069175827 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069798591 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067268797 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080150035 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081025749 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079625659 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06880882 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069719673 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067346662 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068930881 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07961424 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076959258 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080249406 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078963297 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06790204 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067417063 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071439922 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082464245 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078483764 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078766989 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06856164 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07858403 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067351522 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079709057 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084002877 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067566243 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068985959 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067312917 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068866711 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068465094 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077417454 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077211638 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069005864 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069863782 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06949622 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082533643 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07986705 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070053627 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07811094 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06813414 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069863993 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07046757 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070396528 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079712801 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081752452 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071526807 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068867778 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070397435 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070557744 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068447297 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079206018 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081069502 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079314516 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078920312 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068859861 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077426651 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076605341 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068340617 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076932666 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066810146 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067828501 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.203050664 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081092911 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077238938 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079395186 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069164039 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068153458 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077682953 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080620422 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068190066 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077770012 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08123722 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079244724 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068366356 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081560457 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068800594 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080853504 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069230792 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079420321 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067784081 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080424655 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067996155 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067853987 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069093558 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07968196 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070071079 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068599546 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069462574 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068693819 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079626273 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082758843 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069877309 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081288093 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078693775 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070446128 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078661291 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068271817 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.0793402 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069655558 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070428048 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067825366 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082103627 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068410579 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067719424 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069344321 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080832651 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068567442 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080628268 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077524373 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068402041 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081506109 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080129891 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078531913 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080972814 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070323676 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068368603 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067960713 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069139179 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077261636 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07919111 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070843995 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067529403 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078545305 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079657844 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066807419 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078339374 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078519269 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078474454 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06771415 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069040411 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08022393 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080295476 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.0775395 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077290534 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077521478 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067460301 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076536321 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076981049 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06739318 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08394292 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067092921 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082214741 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078140292 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076150635 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078167445 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079747988 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079495533 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079292974 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08253754 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067549307 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067706437 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078988103 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067502976 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068751665 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077476005 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069005586 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069046745 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082962137 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06791501 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078751075 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066931574 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076532392 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065199426 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067981414 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081301151 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066474993 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068021095 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077374427 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067792746 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075211492 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077962642 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076056745 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066083074 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067967368 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076960201 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075806875 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065745949 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06601023 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067813112 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075319892 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074651236 seconds)
  done (took 18.459214547 seconds)
done (took 37.691844662 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212859686 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150444699 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181150697 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116838563 seconds)
  done (took 2.158465675 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12576786 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100291569 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094189774 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064316719 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101198174 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064487244 seconds)
  done (took 1.985584414 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313780451 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208329043 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181657686 seconds)
  done (took 2.131941739 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201565034 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190694809 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394935426 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251069145 seconds)
  done (took 2.582126508 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146960791 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092323525 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068504074 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085661295 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137880771 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164529604 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103394877 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12516349 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077148148 seconds)
  done (took 2.485455206 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145420117 seconds)
done (took 12.955608449 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.103499033 seconds)
    (2/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.2514065 seconds)
    (3/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.184319112 seconds)
    (4/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.203990585 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112874924 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.084394422 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.17066301 seconds)
    (8/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072839825 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078017991 seconds)
    (10/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175374036 seconds)
    (11/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.066992245 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080744597 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116255896 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076550851 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081812228 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105953165 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093191515 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072727277 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.201228973 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.186336849 seconds)
    (21/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080211211 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185511685 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064906226 seconds)
    (24/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.204814521 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102752452 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074187397 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.209611135 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.152964935 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080647237 seconds)
    (30/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078305643 seconds)
    (31/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063192889 seconds)
    (32/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07517362 seconds)
    (33/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.195866023 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.194288149 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092943779 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.184912104 seconds)
    (37/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097385314 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070859864 seconds)
    (39/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216292306 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09749117 seconds)
    (41/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182305756 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110296394 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087562809 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.147934602 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089515778 seconds)
    (46/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071676842 seconds)
    (47/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066326949 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.182457607 seconds)
    (49/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068154959 seconds)
    (50/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.187839743 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050132553 seconds)
    (52/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07293016 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089081064 seconds)
    (54/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.099996318 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071926003 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088989798 seconds)
    (57/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.202200063 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141462402 seconds)
    (59/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079605457 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071291704 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.061818371 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149098747 seconds)
    (63/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067031382 seconds)
    (64/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063536071 seconds)
    (65/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07416345 seconds)
    (66/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.15713459 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066251009 seconds)
    (68/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074492645 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.08644068 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075313034 seconds)
    (71/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.194411543 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050709649 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.07269382 seconds)
    (74/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067882814 seconds)
    (75/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.050734697 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063733138 seconds)
    (77/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099141857 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.129951534 seconds)
    (79/309) benchmarking ("sort", BigInt, false)...
    done (took 0.179657895 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106578228 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064100088 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072468121 seconds)
    (83/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.095630313 seconds)
    (84/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.306375791 seconds)
    (85/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.335948218 seconds)
    (86/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.14933162 seconds)
    (87/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113386801 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147668969 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139443253 seconds)
    (90/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072008073 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.066445572 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051681433 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146478633 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066925649 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078879639 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079723606 seconds)
    (97/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.147297169 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110757938 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072675144 seconds)
    (100/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.105620742 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088024321 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070328388 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171581225 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093598879 seconds)
    (105/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070754877 seconds)
    (106/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06586268 seconds)
    (107/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106155889 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071605745 seconds)
    (109/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054039512 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051371224 seconds)
    (111/309) benchmarking ("sort", Float64, false)...
    done (took 0.12436117 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087585095 seconds)
    (113/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076083267 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072272259 seconds)
    (115/309) benchmarking ("sort", Float32, false)...
    done (took 0.125266601 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064955559 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173475648 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089941142 seconds)
    (119/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07005007 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.134288874 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071159458 seconds)
    (122/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075929069 seconds)
    (123/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079858338 seconds)
    (124/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065151457 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064873882 seconds)
    (126/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108506949 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163877806 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.193081911 seconds)
    (129/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.094737091 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.131314136 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072994614 seconds)
    (132/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052603614 seconds)
    (133/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05096179 seconds)
    (134/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050780941 seconds)
    (135/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050518252 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071159117 seconds)
    (137/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.155955891 seconds)
    (138/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.181674267 seconds)
    (139/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051855874 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072393466 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08635685 seconds)
    (142/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.0667717 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118379857 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.09758515 seconds)
    (145/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050559922 seconds)
    (146/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.112482313 seconds)
    (147/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071691589 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070761346 seconds)
    (149/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.147541634 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077486633 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148467277 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064150026 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071223344 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072555689 seconds)
    (155/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061283226 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067543753 seconds)
    (157/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.069860893 seconds)
    (158/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066972228 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050373251 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065170304 seconds)
    (161/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17157264 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091289078 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072595575 seconds)
    (164/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.147230409 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116899219 seconds)
    (166/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050519542 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050435374 seconds)
    (168/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05032735 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050638033 seconds)
    (170/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.148178868 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.051846714 seconds)
    (172/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051483021 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072367399 seconds)
    (174/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074340172 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086042621 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06730786 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133019512 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088234413 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053064378 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050732033 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.135189387 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089631238 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089307077 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087506593 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16349914 seconds)
    (186/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050352063 seconds)
    (187/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050390776 seconds)
    (188/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063440592 seconds)
    (189/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085567375 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052483547 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070263583 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.34833703 seconds)
    (193/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051768696 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05240498 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073505853 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075674429 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068066605 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087419961 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173667781 seconds)
    (200/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070422958 seconds)
    (201/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073297364 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051653909 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085137431 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063453457 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.075220473 seconds)
    (206/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107578957 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089007428 seconds)
    (208/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051829467 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065582142 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112850316 seconds)
    (211/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05133225 seconds)
    (212/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051721474 seconds)
    (213/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079491839 seconds)
    (214/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061158436 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.086694232 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072536609 seconds)
    (217/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071558599 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163137313 seconds)
    (219/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071804623 seconds)
    (220/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051718395 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.078560234 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065308529 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064329373 seconds)
    (224/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069048779 seconds)
    (225/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078516021 seconds)
    (226/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087047397 seconds)
    (227/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051418896 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070563922 seconds)
    (229/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075054678 seconds)
    (230/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06685202 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052324666 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063903745 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065897625 seconds)
    (234/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07493126 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081529088 seconds)
    (236/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101522409 seconds)
    (237/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051651328 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.130259519 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087880089 seconds)
    (240/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067405655 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064277947 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.105449568 seconds)
    (243/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050441955 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066521118 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050418606 seconds)
    (246/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072330621 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065466507 seconds)
    (248/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071696206 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064049042 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050839387 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063976931 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065334859 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051995284 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064604305 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.123109005 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084721887 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074864066 seconds)
    (258/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051239957 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063946317 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065550327 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066547301 seconds)
    (262/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059762427 seconds)
    (263/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050256326 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064390007 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064812044 seconds)
    (266/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.070822396 seconds)
    (267/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064344325 seconds)
    (268/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050662083 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070871214 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072072713 seconds)
    (271/309) benchmarking ("sort", Int8, false)...
    done (took 0.137494754 seconds)
    (272/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071050065 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088300747 seconds)
    (274/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108254763 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.135110054 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.105013312 seconds)
    (277/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070790137 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051964518 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.093228978 seconds)
    (280/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051843505 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064799653 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05153105 seconds)
    (283/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051267617 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071676036 seconds)
    (285/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059691253 seconds)
    (286/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051612666 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063323503 seconds)
    (288/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051791734 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062951778 seconds)
    (290/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062111304 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064799747 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065491919 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071709649 seconds)
    (294/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072368806 seconds)
    (295/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052322631 seconds)
    (296/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077494082 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052087776 seconds)
    (298/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065954616 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063536651 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064653766 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070115043 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052056906 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.089851354 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06467482 seconds)
    (305/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086371093 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069923984 seconds)
    (307/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050778811 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050924374 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106097918 seconds)
  done (took 30.237725402 seconds)
done (took 31.679986077 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08603301 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095307402 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075996982 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094536599 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081180098 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075745818 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071744285 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07715312 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078145497 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079747266 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077243775 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054086035 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072590103 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072800368 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07316373 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089138322 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076992166 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072453411 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073053235 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063799207 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071572614 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064380115 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06877017 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055872681 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078914442 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072607428 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073521156 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072875662 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064749313 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064440043 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068214929 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072227388 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064619773 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076873512 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070917943 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072239845 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073317052 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075336419 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066484698 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06484659 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07297001 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064921715 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071731783 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072358843 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071240155 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071016052 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07181255 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076942788 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089671055 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067045211 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073433036 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07492886 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075155431 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071404813 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068234935 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07188707 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069441248 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089537128 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072197867 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067067713 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072825321 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072483594 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070543555 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072204889 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071617285 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07355713 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074356205 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069888937 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073047104 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069849635 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064256045 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07131388 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067681389 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064474904 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073966889 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075586551 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06327099 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070106852 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071146406 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070329804 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06401084 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066332731 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065856432 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070343161 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066536821 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053496644 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067964581 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070325193 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063381504 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071529504 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070118465 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070514133 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066214835 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073889436 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063928055 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069136382 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064498146 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064355112 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065828587 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068250151 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064006211 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066429029 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072686865 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06577772 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070230629 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077138925 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064205665 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070543662 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06370037 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064117148 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077983993 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074621848 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065227868 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066865366 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06362373 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071274307 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063494209 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064641569 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.0644284 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06393263 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069742854 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06382254 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065923237 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070871301 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075783613 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063763545 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066715434 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065874355 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062863769 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068530587 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063350428 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063050664 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.203021775 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061662441 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066946407 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064305109 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072011641 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067214831 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07174757 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066532449 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071942557 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068675721 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070247393 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069866624 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063802643 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05779062 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066753859 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06687202 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066619563 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065260097 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066584727 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064833942 seconds)
done (took 12.32925843 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068531049 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145264294 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09896157 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093609436 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084226973 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065671764 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074921258 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100552541 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066426541 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100820737 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086149612 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083595525 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110672711 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063746217 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064852234 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068292633 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065843271 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080348283 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099411849 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085310358 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.113650128 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064409035 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092836885 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088481449 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08583416 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100334207 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065830118 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068591571 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06880915 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089527989 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085058932 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06873419 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065266391 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098879662 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091173734 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08224995 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065265943 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08119696 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.0652445 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064708086 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066228855 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096856667 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078725404 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079262178 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06878001 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068244217 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066157972 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082365801 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088004097 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077793378 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08516488 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101185724 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068384005 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06455955 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063449812 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084469187 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064192794 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070050918 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065910111 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069096571 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066458299 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068577844 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079957969 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080820335 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068539165 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079246226 seconds)
  done (took 6.753670919 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084974855 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09215558 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08515132 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083449003 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065662243 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06549841 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065697033 seconds)
  done (took 2.06982532 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068681326 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089794652 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08797134 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087281766 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083087973 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085961321 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074364809 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065606334 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079454469 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066683013 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086035072 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100554117 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066243337 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07177277 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08942846 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065601645 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089097525 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065697157 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068641282 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088239409 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067383363 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.080984697 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068529902 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06555779 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07959392 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065785669 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111181924 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069613818 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067554986 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068506128 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063468117 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105392928 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079099202 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074465419 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065718143 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079191748 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082023653 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06608993 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083826746 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072995847 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081703674 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069264411 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068283696 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065964318 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072532877 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078327831 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06902341 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068672872 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070184192 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088166747 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068700835 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082261198 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071525503 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070744253 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069773588 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072034825 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076901468 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066543166 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085309969 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067869707 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081978948 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081495858 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079255945 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08199111 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068357593 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079435853 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079209831 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06812587 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0671521 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068740631 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081617456 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064092679 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067133731 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076348391 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067869751 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088092027 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088414008 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067189038 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074887753 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06662932 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065940949 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066213648 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088292224 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068182182 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066231709 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070064523 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068737122 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064042976 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064763602 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069343998 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063984929 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067415423 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06875226 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068964744 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068442177 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082889557 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067807324 seconds)
  done (took 8.75278097 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071031525 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06983681 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070297894 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06769432 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06807147 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067614954 seconds)
  done (took 1.962053838 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096187163 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070751528 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08189314 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072309814 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103353773 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086006535 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086384057 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078324905 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083709866 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078344735 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085829703 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087706455 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092047151 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072436055 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085591171 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07151792 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086590724 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075536158 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078222037 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072169823 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085512223 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072632809 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072472552 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081328471 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074904146 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071466608 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066232748 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078196883 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077251888 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077897147 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072034091 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074690361 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069989118 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077631574 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086044464 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069955161 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070948269 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076341196 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071521211 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074811728 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087167224 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072628924 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073905199 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076600369 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077797987 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07015846 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07676248 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075369426 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085067968 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076188771 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076391546 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071030557 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074370343 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075928649 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069583954 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077301143 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075893361 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085141674 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071272799 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069591883 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068240047 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074782565 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076838999 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074406162 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077897062 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076071022 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069524317 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071729494 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071995674 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071470643 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076165223 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068560691 seconds)
  done (took 7.065109472 seconds)
done (took 28.116645071 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.548989544 seconds)
  done (took 2.058582581 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600306741 seconds)
  done (took 2.138487914 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.022807762 seconds)
  done (took 8.558550088 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405158472 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.47910014 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.685025992 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129301024 seconds)
  done (took 3.283294057 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.676022794 seconds)
  done (took 2.223353982 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213186967 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194516453 seconds)
  done (took 1.963821585 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378005631 seconds)
  done (took 1.914439441 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.107448004 seconds)
  done (took 2.64503186 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265910138 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163167903 seconds)
  done (took 1.970479473 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.474051409 seconds)
  done (took 2.012097401 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.794045057 seconds)
  done (took 6.334535794 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214519699 seconds)
  done (took 1.79747984 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243021454 seconds)
  done (took 1.784411508 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.68293573 seconds)
  done (took 3.224020263 seconds)
done (took 43.451961991 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082168625 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080818201 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079509242 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076946826 seconds)
  done (took 1.84339669 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078882634 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07455249 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077997739 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072116222 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075757158 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071272802 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073221439 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075714427 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071447466 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071573332 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071324058 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07195756 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073404774 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073341389 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070256769 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073950243 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074967187 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071196132 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074427799 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071450573 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069699107 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073213066 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073766354 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070933809 seconds)
  done (took 3.300656138 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080274434 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071792316 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073876563 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07076856 seconds)
  done (took 1.848840207 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.0786817 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090244799 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087751835 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076944581 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090804535 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085342181 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068500817 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067867784 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072141864 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076186172 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067445863 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094838078 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086369644 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076050791 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077841573 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064841851 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067313214 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085584756 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076050861 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076763258 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06919039 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075774872 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067172271 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086386827 seconds)
  done (took 3.413988613 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080012425 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10295859 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077108041 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086502475 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088748379 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064076294 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07353866 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088489333 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121461616 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06461575 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069038677 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064462978 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071328254 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06424055 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075090624 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.102860911 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106325246 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067427976 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.093963092 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064434059 seconds)
  done (took 3.183789953 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075432999 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069912304 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065495071 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067151814 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075677211 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071792561 seconds)
  done (took 1.982029897 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070095349 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069052579 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067893593 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06621487 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071129707 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066372283 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064779279 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066611768 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066493986 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065627865 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065304963 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064711119 seconds)
  done (took 2.355084488 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.200099721 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06807784 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06829448 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065083032 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069746952 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065501361 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078683904 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066911501 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089050481 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065560871 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065614272 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066904537 seconds)
  done (took 2.521495522 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207699847 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077027144 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235479991 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134935484 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10969539 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113524839 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102221352 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111755077 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140915139 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100466159 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164762826 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162573818 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105410299 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134622233 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087590561 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096149147 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152807264 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159734085 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102029366 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162889742 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141735948 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123414977 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144569597 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099510216 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104046008 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119759456 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069831876 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078782913 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167531054 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129230068 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143355021 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108942852 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092179105 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173618569 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167971305 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140168043 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132609476 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083265553 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101504803 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133248689 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194519291 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086490758 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158940945 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24654 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079944132 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132098664 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118214427 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118501771 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105253876 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089035697 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144624309 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179679942 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13739388 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086152478 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110241978 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11480396 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114164061 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107190922 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180043222 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160292528 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126013322 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070072119 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097429119 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150756188 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130016645 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10767008 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124415601 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092407495 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131809593 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152148439 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116924878 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141195229 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126336026 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087140926 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117195805 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137205729 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126572236 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167352408 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122201671 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071868302 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123090614 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102214888 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079680874 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.139156786 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073934534 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172236331 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097083055 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104063414 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110716081 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106386594 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10728614 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157814491 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140452466 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246778208 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065572592 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102975645 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119530372 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147145122 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086728273 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107318485 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114851978 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076638319 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138612218 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074021983 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121472717 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074293152 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123808984 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13094974 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074582091 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120041807 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099473425 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099568814 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132177959 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158616555 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087967846 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081364144 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164616034 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121112481 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10234599 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141869915 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1540353 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097180011 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101012498 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146622556 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17755591 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087665671 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159676643 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106418144 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082568916 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085790361 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121972888 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110268305 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120341845 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081339452 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116701408 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16553473 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073713148 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094204395 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131066644 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078148298 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079547159 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10221355 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098595655 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093348115 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098151573 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101753425 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134489221 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120504024 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102791744 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271573537 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097867878 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168279376 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088071481 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099598081 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102896248 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068748041 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134910838 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155110927 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078356584 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161981634 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122448428 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103761 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117714517 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081668648 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13868656 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077037412 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069856606 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142015947 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109614639 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108087786 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148041528 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103098483 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126276912 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11768701 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133290735 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129575324 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127585168 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104023293 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086748315 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109341267 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124037713 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071882046 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089738665 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078828238 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10229761 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093912816 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081907959 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139774364 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122501772 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098837124 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109796761 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094959381 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14424758 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074982207 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127278131 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117033235 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092864046 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149608695 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14930511 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128398702 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097286386 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141353206 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068558348 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072822697 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08753984 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11970321 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079930994 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080730321 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11216797 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140522483 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122842683 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130304635 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107047602 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114653989 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147774538 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067056443 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112044346 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139857469 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114643899 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101002266 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086805326 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094866433 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136138185 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103342413 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173599654 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108879843 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118912054 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142189325 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.094379419 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075519676 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096320672 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125699631 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097638775 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133160105 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093869119 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083237851 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102442485 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.070596087 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093126962 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118515095 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11172048 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125589798 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107068442 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123364124 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073092103 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108309896 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112367283 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113607217 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.061100848 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111745174 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147951866 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088000268 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110529304 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14080805 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075640041 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.117524816 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.423973555 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144929493 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085140085 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110155884 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118825758 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12766902 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119813278 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139392606 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108284777 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136023929 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10864183 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084909049 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087893007 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096415752 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104905701 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094045305 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10743894 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114540034 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093972369 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130826808 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102939756 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10880082 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117749695 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096418856 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088781199 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097028619 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172941228 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119622347 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170584419 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098077268 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144831805 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164478906 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074239743 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078255625 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077321014 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139889202 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082390886 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130009581 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096279579 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104517801 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122588695 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139706485 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093515347 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06826247 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106354192 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132061618 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110398017 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096531055 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103219014 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161024104 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098664112 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07764157 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110877101 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102434048 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100306463 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168962341 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.208187435 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095557865 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075121973 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079541776 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125991643 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151936609 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079419838 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102653313 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117484169 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108541593 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12577255 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100152705 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097349008 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113351779 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147280826 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127093643 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088465281 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110937116 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127273365 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154375227 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10308987 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094401413 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168522863 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149595597 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157321326 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086944469 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112956521 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112095574 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106890813 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137106799 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082502447 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161544728 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080677154 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133897296 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102544138 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088904279 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127671494 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113645591 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086927541 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145544163 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116173582 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081304766 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076397705 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116098445 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119127059 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105182456 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074149081 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137756092 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071481655 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129650768 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16520119 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079251797 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102329362 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240590743 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078600906 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107371201 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10123493 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088489623 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09637727 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170915138 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087255509 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147862882 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139483831 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111939552 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135279409 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098054991 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634128158 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076903793 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150087617 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114343003 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170591074 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095575412 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115841901 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106916442 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121524981 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142349489 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10315977 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.171803502 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129561279 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117077505 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078532667 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100939378 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101577067 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087521735 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103597505 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112434901 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114460984 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092240022 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113591383 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121596254 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080351872 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093569069 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152883114 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11491511 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141915121 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137913666 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083574858 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116504221 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136884912 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078877975 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119512864 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149139944 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104395707 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095879446 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078637476 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.244772839 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167914796 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072268284 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162084492 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119108933 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107664443 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112050763 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113085876 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129017785 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106487574 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12088057 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092850617 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110042196 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110753442 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08035334 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075466701 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103310529 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110877684 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096456426 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096859321 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097412455 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148637566 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070597934 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094593496 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101804377 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143737934 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172108238 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086669635 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081154264 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116862707 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111435869 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112234294 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118348355 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077941916 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081124151 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080426181 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.075778484 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106765611 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110522669 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102707958 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109647383 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161585139 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08124268 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.218580753 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093377567 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103104287 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068997054 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077477248 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09392335 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096072877 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106781061 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098730053 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167737283 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093435601 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088785088 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090460491 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071965434 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080813891 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270525989 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110218362 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117705224 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096604965 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061736672 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109362733 seconds)
  done (took 57.837006043 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109819465 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081009223 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095258077 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147929661 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12146731 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210392077 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156677565 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198021248 seconds)
  done (took 2.80789355 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06991264 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096468965 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.09877157 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081451673 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065855011 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068398925 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221778153 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080129253 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065621369 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086938823 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078139104 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068140794 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.418802756 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067545943 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06865208 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061849999 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066195612 seconds)
  done (took 3.444825843 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.366220793 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599734858 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368924528 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071786513 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.857329733 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088208709 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.061034976 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127246828 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072405467 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537836071 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701497569 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.122685666 seconds)
  done (took 18.667849334 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076625052 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069499005 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082146931 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082148905 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071259087 seconds)
  done (took 2.066627824 seconds)
done (took 106.855736453 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081530816 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.379025568 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052993344 seconds)
  done (took 2.146288786 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083887552 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087333413 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083743345 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081398469 seconds)
  done (took 2.03177224 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075933933 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07733327 seconds)
  done (took 1.842058529 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220615501 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.154892036 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085647071 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084145151 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079073344 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077739915 seconds)
  done (took 1.933469522 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073986458 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074911724 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071487959 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074689319 seconds)
  done (took 1.982307514 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077321304 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053715555 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.0555775 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055037534 seconds)
  done (took 1.927720629 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088085513 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078911997 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077663851 seconds)
  done (took 1.932325886 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102710559 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084302203 seconds)
  done (took 1.874396635 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082884204 seconds)
  done (took 1.7704659 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100772542 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112506311 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128371463 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108240406 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136628071 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106837449 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084832263 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085198411 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075931594 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085878335 seconds)
  done (took 2.712818262 seconds)
done (took 22.381498765 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079513569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.45883442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360166486 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087484726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667426417 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355482519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98699805 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090543656 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112006958 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066567967 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082473531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649891079 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.014938408 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.4177483 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.00057308 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322163959 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650573448 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067329979 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066903928 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066706112 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.9750165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066661644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066972971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067204988 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648963096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370116455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066921989 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321886383 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066832524 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068572393 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354117135 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067027566 seconds)
  done (took 16.417156887 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072850131 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117955922 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072404114 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082511505 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069837612 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06840703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070644272 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068276001 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117791102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067518455 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083252154 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066358593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071301293 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067388984 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085381644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067007873 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067910278 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067420675 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06699156 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067565278 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085132628 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066821025 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06706165 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06752754 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066606268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078116837 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066654796 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067033853 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06701457 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068796381 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069923987 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067354871 seconds)
  done (took 4.057268383 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116374761 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124279312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072692577 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101594498 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110642575 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069006463 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142088105 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091326858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125594907 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067425964 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082983371 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067259581 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099548223 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067627483 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086584317 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067702465 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068196738 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067425622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067341295 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067670639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085987075 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067097714 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067205043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067274432 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067263579 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080105685 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06797733 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067417078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067898074 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069098814 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070268617 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067756246 seconds)
  done (took 4.311912518 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074712656 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075585188 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081937384 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082342622 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06927586 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070866434 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071481991 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068530224 seconds)
  done (took 2.299252294 seconds)
done (took 28.780306736 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080559503 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070306663 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070951047 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079977861 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072281952 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077098565 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066028017 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073141114 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071191295 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071771351 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073541767 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066248635 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069479795 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066359937 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072424695 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066960821 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.077765001 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07085099 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077546028 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077691202 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068776907 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071694471 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072791175 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077296932 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077468808 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077735476 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075785244 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071435552 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067681671 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069705681 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07559661 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082751385 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06841958 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080580378 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069258902 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069169398 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073021397 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06930071 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081194286 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077963064 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071220108 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078045449 seconds)
  done (took 4.760194399 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089406457 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093289873 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086373817 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061126874 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065519329 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063751789 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087007386 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058768048 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058283554 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086086174 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055937002 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.0583738 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061198145 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053192331 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058268829 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055776482 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060970662 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054835011 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058202463 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058568707 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086401297 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056302028 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078443411 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064473201 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060790211 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063677273 seconds)
  done (took 3.45278303 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076459858 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085477169 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087769769 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124244221 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101571703 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075877781 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078693564 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091025701 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084388781 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06594566 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070364509 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092226612 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086518952 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072479225 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067080837 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082990661 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082875324 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070180064 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075178811 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093882917 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087216082 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086343976 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093735507 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080045259 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066288848 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068681954 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070119275 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079837555 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071359964 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075148719 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070111352 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.06983543 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067910734 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07744958 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07011432 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067824463 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089000228 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075391464 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076797408 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066935051 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069788069 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067625903 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090258269 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123888522 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065699658 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07303659 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073878078 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075603486 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066725826 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084588706 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077229404 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065969801 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069347378 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065801122 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066458062 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079350979 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.0686124 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068373065 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075364305 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069293694 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.088186532 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070543824 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081453118 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066107524 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073948712 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065664638 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066765397 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065844227 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091215035 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068164075 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106095102 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069701825 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068719063 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075874518 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073618336 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072197233 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066696561 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080896096 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076243212 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069705244 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074610445 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069610318 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.06961355 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.085947565 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068382173 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068079653 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067123716 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072323041 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069034436 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067604328 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078816208 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066002315 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069312606 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082738245 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065717384 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067327893 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072125981 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07069556 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065679389 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076691412 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07152824 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06673136 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075375274 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066201032 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068695561 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077857845 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071957023 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065435398 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070896579 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07223721 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067034825 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067944807 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068784411 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068191518 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074759194 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072563044 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070688399 seconds)
  done (took 10.511186039 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.174066534 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150806624 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070120942 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141991471 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075096993 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078073686 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14511733 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09297573 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066655968 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067399941 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068041438 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108397107 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105845078 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120274302 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080151837 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068065163 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082018582 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112071079 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146895893 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140733652 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.0824619 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075344028 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069156984 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068006197 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06936746 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076955339 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084323241 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075201105 seconds)
  done (took 4.440273585 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081815513 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096556387 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072835041 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087554556 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08944677 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066672429 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068863475 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068880184 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079151909 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077631322 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066170845 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07212424 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073802056 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069880333 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06770474 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073489922 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073968681 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06861534 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069921378 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071855752 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076383663 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090332937 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070481144 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066022504 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071303379 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065978618 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063626845 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082710888 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06677139 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089775481 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064917291 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07429656 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080089598 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06731973 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066151061 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066259967 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06632867 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066347044 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068550419 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065244473 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06506994 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056495396 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066138316 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07817042 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072423992 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055584399 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071117164 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071517346 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071391634 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064063295 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069053586 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069092146 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069706672 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073386629 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07122426 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071631401 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067823313 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.072347365 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074207663 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066771611 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063167478 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065167903 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07085674 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064744784 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074029223 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071079607 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065043337 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066020756 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06786079 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072457774 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065844438 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069502615 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063952161 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06861732 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070850886 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067800731 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067069464 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065455738 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066359895 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066405035 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054589487 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066471159 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052516383 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.06928954 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065116667 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065048528 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.0660672 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071011315 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078756608 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067722629 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072336483 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067315495 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065197532 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069247931 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059023279 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069020759 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081406027 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081163625 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066299327 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064734886 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080387182 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071046448 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065805484 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055259559 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073482142 seconds)
  done (took 9.091508638 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090069381 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.0697029 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08189651 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088992044 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085018757 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074537733 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075716597 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068407261 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080667951 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072581204 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075017991 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066929634 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075901627 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075444387 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06910742 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075814825 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071108156 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081483185 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081020443 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067122609 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074713789 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078476561 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.087948679 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.078789825 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077345762 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.078923951 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.087649048 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071166526 seconds)
  done (took 3.914189008 seconds)
done (took 37.866900016 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.796962627 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.958956741 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.780661953 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.122156985 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.914786736 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.91511145 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.853527229 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.782525936 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.969213143 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.825879427 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.041047253 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.884460558 seconds)
done (took 65.562337437 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.870101069 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.926376726 seconds)
    (2/2) benchmarking "String"...
    done (took 2.047372975 seconds)
  done (took 5.697865386 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.088729188 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.366075521 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.012464192 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.777530491 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.785684006 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.012004587 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.588861033 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.311885267 seconds)
  done (took 30.573946938 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.954584441 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.01185081 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.481048606 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.51785868 seconds)
  done (took 15.737200015 seconds)
done (took 63.772547216 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.785351408 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.816710851 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.786303741 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.763460667 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.838084008 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.790897274 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.25877555 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.781760181 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.777810209 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.767478577 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.781042541 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.222364084 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.792119883 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.138193434 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.780998997 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.786999457 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.79900015 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.354575815 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.936959212 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.793329625 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.790074557 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.804913404 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.784482377 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.925173982 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.782201618 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.781749929 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.243094468 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.794485337 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.40525191 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.782803492 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.812571281 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.286147767 seconds)
  done (took 204.662765457 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.783069908 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.90378642 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.967405861 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.810770035 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.355218323 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.964106298 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.899872339 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.398409842 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.785773047 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.800099804 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.069132936 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.781531162 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.084746029 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.725519851 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.814838594 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.785563485 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.957251058 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.081288758 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.816866044 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.949478158 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.797521695 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.93143783 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.895024478 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.037179246 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.781299314 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.856694572 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.791665994 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.78926876 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.977267577 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.931059107 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.816348473 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.82641422 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.983378888 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.653937942 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.800294204 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.803217339 seconds)
  done (took 171.130239002 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.943815587 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.786443075 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.784104101 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.786116135 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.790318854 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.782756536 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.906617855 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.908464765 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.242352995 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.106832306 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.834636242 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629403733 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.780475702 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.852845489 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.795585833 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.786458281 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.800978584 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.813237656 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.786197382 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.785882459 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.911744265 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.795182213 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.772640868 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.792083015 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.787078663 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.791846488 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.155970538 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.782639057 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79179886 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.030767376 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.784265185 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.785510093 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.689857773 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.482581774 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.874405021 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.784864463 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79066631 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.785678549 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.008188468 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.784202177 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.786170052 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.789290698 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.971700057 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.783360745 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.911651631 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.784850402 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.287107731 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.786446008 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.787984441 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.976619745 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.49217303 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.784492086 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.784100901 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.787612735 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.785180128 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.785000852 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.791450185 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.788698517 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.8621238 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.788574637 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.789549744 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.792599717 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.785600301 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.786363919 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.785598268 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.965917926 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.842110292 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.898436687 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.235395401 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.910582149 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.787607503 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.856266211 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.880466026 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.785338468 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.787463239 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.7881035 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.788533 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.870078951 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.786061038 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.909071981 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.793308714 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.789247204 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.838224198 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.788715986 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.859422022 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.785872876 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.68320637 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.788832954 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.788658151 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.096935343 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.852820121 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.786627055 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.787867065 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.788361924 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.908833344 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.909700334 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.575613523 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.790079483 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.703694093 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.792282676 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.788827517 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.928933899 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.785881258 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.788119622 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.980840094 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.790762564 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.872838388 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.791973718 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.789876183 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.789673069 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.820527853 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.789340536 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.85155882 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.786148671 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.16043575 seconds)
  done (took 402.446793047 seconds)
done (took 781.962966967 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.459283996 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.399799027 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.514146545 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.424168656 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.391334839 seconds)
  done (took 13.914083842 seconds)
done (took 15.641174553 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.873312541 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.877719324 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.811998935 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.876220081 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.805975876 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.874778004 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.858061631 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.811015768 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.842066962 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.812273234 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.843328863 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.812193157 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.799358469 seconds)
  done (took 25.620261175 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.026056948 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.017480891 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.857950352 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.012173366 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.838026829 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.023097412 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.943582839 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.935472807 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.937062389 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.803854781 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.799434645 seconds)
  done (took 22.919890158 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.023245854 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.018004881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.864664577 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.027721109 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.839612301 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.019960203 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.950553011 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.939727447 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.937270014 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.802823215 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.799953989 seconds)
  done (took 22.949351703 seconds)
done (took 73.21380801 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.798125525 seconds)
  done (took 3.522693738 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.819409332 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.956478585 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.802792978 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.798911941 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.798238619 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.797543897 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.799618939 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.795126996 seconds)
  done (took 16.293737993 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.793252001 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.792712092 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.796665718 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.79606376 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.796678234 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.795262066 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.794547531 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.793281295 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.795448407 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.793618264 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.793255923 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.792900485 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.792551919 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.797076959 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.796257533 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.796416269 seconds)
  done (took 30.442169265 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.795518734 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.794193834 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.794632265 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.795681247 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.794281401 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.794435869 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.796029644 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.794493349 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.795152606 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.795114451 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.795862315 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.795583439 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.795220562 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.794232197 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.795006084 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.796322758 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.797434193 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.79505627 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.799872287 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.795189463 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.795975624 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.795037542 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.796360635 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.795150158 seconds)
  done (took 44.821463608 seconds)
done (took 96.803995669 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.687434313 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.416851781 seconds)
  done (took 8.830686325 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.800110303 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.798586207 seconds)
  done (took 5.369556642 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.798584955 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.797822428 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.7989008 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.798582193 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.797776419 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.798644532 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.799347435 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.79814864 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.800116701 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.798092969 seconds)
  done (took 19.714892102 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.799330016 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.79961674 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.796510845 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.798870351 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.798747455 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.797714711 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.80019671 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.798951254 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.799825717 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.796781949 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.800505939 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.797643785 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.80002453 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.798758778 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.800379546 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.797964219 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.797453516 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.797827505 seconds)
  done (took 34.106675207 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.799831623 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.800094362 seconds)
  done (took 5.328999017 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.796600107 seconds)
    (2/7) benchmarking "second"...
    done (took 1.796617078 seconds)
    (3/7) benchmarking "month"...
    done (took 1.798135902 seconds)
    (4/7) benchmarking "year"...
    done (took 1.798928455 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.797595545 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.798465226 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.798571561 seconds)
  done (took 14.314867541 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.801061791 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.967630119 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.042466152 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.445654651 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.801611794 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.805680691 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.772883838 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.80418178 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.806883212 seconds)
  done (took 19.978911259 seconds)
done (took 109.371487053 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.652245209 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.793917237 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.160887702 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.854829934 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.847400488 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.138850588 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.83865728 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.013737747 seconds)
done (took 43.031431765 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.819795252 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.351576812 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.377277607 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.157373429 seconds)
  done (took 12.616415124 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.781453281 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.313603176 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.836581998 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.388731216 seconds)
  done (took 20.075781327 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.172612841 seconds)
    (2/2) benchmarking "read"...
    done (took 2.159977262 seconds)
  done (took 6.070294067 seconds)
done (took 47.315721933 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800921873 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.802002421 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.799340326 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.803080638 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.800591031 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.801298134 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.799212641 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.802285294 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.802033452 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.802463002 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.801805585 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801940009 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799789166 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800315365 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802856666 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.799123857 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.800569209 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799354411 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.803901784 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800944104 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.803165309 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803808379 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.800877349 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.799888603 seconds)
  done (took 44.963696412 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.803999904 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.800932293 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.803044461 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.803423034 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.802218711 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.803581894 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.804120792 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.801955972 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.802862598 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.804878954 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802054878 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.801915027 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.804090623 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.802436081 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803591244 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.801620511 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.804438251 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801393416 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805284832 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.802816365 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.803495985 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801315726 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.802257503 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805254262 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.801754493 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801678764 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.803881858 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.804317582 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804519393 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.802037008 seconds)
  done (took 55.825466549 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.809982779 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.813226807 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.805086385 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.805774863 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.806552714 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.803222313 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.804908994 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.805198622 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.80445562 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.804150366 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.805802132 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.805802215 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.805011778 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.806528696 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.807026356 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.806452379 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.805225095 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.804891058 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.80616398 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.806374625 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.806476783 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.805967262 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.806412679 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.80674449 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.806746467 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.806115071 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.805817225 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.806745083 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.807409478 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.805764754 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.808933576 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.806680201 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.806485992 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.80839364 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.805769115 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.8076256 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.811819265 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.816033282 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.807583666 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.807145409 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.806793505 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.807167211 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.808159686 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.808437932 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.80805847 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.807104938 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.808052437 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.806879099 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.806815415 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.810199631 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.807739306 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.807503017 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.808472172 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.80691412 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.807913864 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.808223851 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.808096185 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.808877618 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.807729529 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.809272836 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.808634079 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.806978407 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.808843757 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.806991441 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.808433868 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.808620816 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.809561827 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.808976728 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.809133532 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.808015948 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.809470519 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.808887406 seconds)
  done (took 131.87021296 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.807941592 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.807740083 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.806051636 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.806774779 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805987799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.808069905 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.806198363 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811126133 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806873851 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.808773334 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808172266 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.807910284 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80588084 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809656769 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809820925 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.806622351 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.808832678 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808345961 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.810094412 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.810000647 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.80986856 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.806576874 seconds)
  done (took 41.515569428 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811184353 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.810466239 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.807683744 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.81083621 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.808767293 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.809970749 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.810326305 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.810424555 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811121781 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809732874 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807795387 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809739659 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.809541155 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81028115 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80731841 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.809072723 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811436758 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.808474624 seconds)
  done (took 34.315139437 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.807939498 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.808113027 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.811892378 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.809215501 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.808880026 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.811053191 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.809486803 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.810708756 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.811250136 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.809853362 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.811549336 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810948955 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.811301112 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808803944 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81127432 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.81052436 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.811452137 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809992772 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811890629 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809249946 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.809262563 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.8113661 seconds)
  done (took 41.566296325 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812072166 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.812819751 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.811080615 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.809801769 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.810739521 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.813393326 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.8130272 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.810294462 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.812492024 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.811608586 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810905488 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.812750763 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.810997093 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.811910718 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.810638103 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809775916 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.813599984 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.809640403 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.812451625 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.811930914 seconds)
  done (took 37.973429803 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815825376 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816310478 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.81553595 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815438518 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816014437 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.815392616 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817789047 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.815815044 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816097984 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.818759416 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.816519118 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81506882 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816893529 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81660432 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.81662931 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817610858 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.816413652 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816706042 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.816363856 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.817440725 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.817949829 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.818024195 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816195704 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.817027679 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.81770936 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816854489 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817211427 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.817609601 seconds)
  done (took 52.610688529 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.813626531 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.815475011 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.812675565 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.811115774 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.811309537 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.811487765 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.812184813 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.812801746 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.814603592 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.811219995 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.814553976 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.815154722 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.81510079 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.815476726 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.815023572 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.814848013 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815250967 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.814453389 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813789547 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812720343 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.814916911 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816315579 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.816177914 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.81306278 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814998084 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.815752138 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813553517 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.813846674 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816018834 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.814209299 seconds)
  done (took 56.166516732 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.834960786 seconds)
    (2/2) benchmarking "in"...
    done (took 1.835118745 seconds)
  done (took 5.414849035 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.814230716 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8151751 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.817391379 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.814181061 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.812610908 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.815992991 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.817298265 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814153608 seconds)
  done (took 16.267104267 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.816124523 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.816167373 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.816641215 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.817908561 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.81871939 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.816773037 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821878738 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.816830485 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.818404212 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.818195087 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.824760066 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.826965883 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.819206199 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.81872775 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.816692826 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.818569501 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.817404216 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.820360017 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.820362445 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.818096298 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.819741356 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818903966 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818578359 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.814651853 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.819323375 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.828605138 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.822092356 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.818573382 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817708654 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.82080068 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.818540275 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.814969433 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.822165626 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.821135637 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.818875576 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.82187356 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824789543 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.819536295 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.824345724 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.821012004 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.819928044 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.815874832 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.820460686 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.819623588 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.8218425 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.820834143 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.8189424 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.815722449 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.818907651 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.821324059 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.826797863 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818437035 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.816587062 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.822818412 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.820200033 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.825435433 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.820737698 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.82347832 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.830259253 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.828367824 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.831936218 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.827754938 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822248903 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.823106453 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.829344322 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.846762354 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.825314969 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.816283907 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.816900074 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.820797241 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.826261872 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.834112615 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.830866702 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.823663741 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.821698526 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.820803123 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.822310721 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.820438281 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.824931255 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.823002976 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.823033298 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.82321398 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.830918576 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.845299034 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.819884903 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.824269481 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.822463441 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.822410143 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.821760549 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.830243794 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.823371932 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.821229309 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.819953019 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.819529897 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.823492842 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.821928615 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.820374724 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.821998749 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.818760911 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.821085958 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.823517049 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824749635 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.832589072 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.823102856 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823551877 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.826290627 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.820510126 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819540105 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.826542253 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.822398116 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.824479634 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.824297822 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.82836994 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.820988697 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.824950322 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.833357289 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.824655734 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.823693324 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.825234561 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.821803351 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83227088 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.852079391 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.82375586 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.82387748 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.828834363 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.839481047 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.825393623 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.82481714 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.823621768 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.821222117 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.820559296 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.825826262 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.824957204 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.825286196 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.827539743 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.825378021 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.821295397 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.8226629 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.826895303 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.824590663 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.825809475 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.825659419 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.824976854 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.825024836 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.827607616 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.824969254 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.830769778 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.823522711 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.82533748 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.826104209 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.821323559 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.824344854 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.826075773 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.827757651 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.825377232 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.826933663 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.824901093 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.827152202 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.824640026 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.824251014 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.825253394 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.824081491 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.828249661 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.827961517 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.827108061 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.82495487 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.821844969 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.823655659 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.825019347 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.824865178 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.824876605 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.824409526 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.828187845 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.837295595 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.825214072 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.827628315 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.827465855 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828184927 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.827312449 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.827205476 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.828743187 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.835069836 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.827957798 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.832383766 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.830028294 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.828577844 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.827062899 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.825957148 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.826424967 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.829141922 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.830561201 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.835738353 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.839828281 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.836364734 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.82860867 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.833531413 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.829175001 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.83435341 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.831166662 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.830736498 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.828031809 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.83042006 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.826381954 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.83171035 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.829053642 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.829814741 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.826976142 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.828719231 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.828284488 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.830381769 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.828328042 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.827458806 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.828491612 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.826278938 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.828542273 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.830789692 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.826969357 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.825571523 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.828562435 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.828450994 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.828624333 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.831239907 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.834649234 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.826616673 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.82989848 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.828764328 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.82789152 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.827599537 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.827983013 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.829730605 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.829761326 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.835678437 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.828877127 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.828109998 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.83544259 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.829898836 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.829180759 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.830569402 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.829873486 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.826697019 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.832494352 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.839168012 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.827967964 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.832309171 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.832973343 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829257682 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.830202426 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.835250713 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.826241599 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.829302021 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.831648251 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.832355565 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.826676769 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.831840954 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.831110384 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.830888394 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.831809818 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.829375634 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.83141688 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.831779943 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.832505202 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.834037064 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.834697798 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.835544938 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.842476415 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.834331608 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.830482064 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.831922585 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.831237279 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.834962461 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.831073474 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.83369229 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.831508402 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.844265409 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.842859207 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.83636546 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.83252119 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.831557402 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.835284834 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.831625007 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.836257735 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.82932639 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.832588565 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.830392524 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.82980792 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.829393721 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.831542821 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.83198806 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83363504 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.831991896 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.836376998 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.831774458 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.831037551 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.834609928 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.833618008 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.832428824 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.833837837 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.831675934 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.835220945 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.834760097 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.831485481 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.831745479 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.839192749 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.831965523 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.834004882 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.832491051 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.833206969 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.832774402 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.833786882 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.835374348 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.835539094 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.845900688 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.837758187 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.844007335 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.834574123 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.843826243 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.835972932 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.837213604 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.845849251 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.830748764 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.832907522 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.833125638 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.836337507 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.839052484 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.835759991 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.833951386 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.8419541 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.837131669 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.836404185 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.834360337 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.837554647 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.834910397 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.835824439 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.842467206 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.834817627 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.83868064 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.836075233 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.831506279 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.837754382 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.834764126 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.833808457 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.836933209 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.837631661 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.833791638 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.834403439 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.833999675 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.833107773 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.836396931 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.83520521 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.8321582 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.83480643 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.840190452 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.835517322 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.841879377 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.833154954 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.841726431 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.838478872 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.840761764 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.83739833 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.835402523 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.836221323 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.83429084 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.837427556 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.834484895 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.836535798 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.839700246 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.836794692 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.840527073 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.840017929 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.837588589 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.837483225 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.83896421 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.837005144 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.846639629 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.866139608 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.838357463 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.841918631 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.833732412 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.839240176 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.844651795 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.838996083 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.835020384 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.839432865 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.848585399 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.845741818 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.836233635 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.839070145 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837860627 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840306921 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.83698506 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.837806451 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.83976568 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.838891346 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.837376604 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.839081365 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.839956006 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.836366478 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.838354712 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.837713032 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.838442813 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.847557484 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.839915928 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.839461957 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840014182 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.836914221 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.838203344 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.838024422 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.840786887 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.83883587 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.837375076 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.838409052 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.846390693 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.847458548 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.841293109 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.838946963 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.839863335 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.83758295 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.838749046 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842012074 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.841774204 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.842106078 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.839698974 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.84086737 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.83941657 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.839043581 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.839716811 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.838770047 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.839897357 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.843726035 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.848281604 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.839296697 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.837225016 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.838704228 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.83772628 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.83871043 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.840082452 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.846413407 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842737116 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.851561731 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.85105862 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.846112672 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.840131927 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842071378 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.84856271 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.838006161 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.841700718 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.842521272 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.842107355 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.840720393 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.844271364 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.843399765 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.847370208 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.840279652 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.840071138 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.847124708 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.842291718 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.843148759 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.842005459 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.845745458 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.841540089 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.839251071 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.840345212 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.840914846 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.848813388 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.841997596 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.845230764 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.843148832 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.839802822 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.842838429 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.849156781 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.841017694 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.841216628 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.839267086 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.841353635 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.843671753 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.840865363 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.840098575 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.840661019 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.841882808 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.844240651 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.849089479 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.840120271 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.844496011 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.843063051 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.843826575 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.844629726 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.842010683 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.839854197 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.840493778 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.843779061 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.843712898 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.842481446 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.84498665 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.842481632 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.844642661 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.845077792 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.845173317 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.846342857 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.854291707 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.852328593 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.840183217 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.842512323 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.842507936 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.846054307 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.846244547 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.844335292 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843520937 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.84602854 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.843194392 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.845955545 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.843105454 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.846389834 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.860510824 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.843140548 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.842863076 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.844509956 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.847653785 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.842417769 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.840829284 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.84484372 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.846668046 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.848454693 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.856241119 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.847235739 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.849746155 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.845105397 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.845453964 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.850923248 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.848111291 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.855693713 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.846693511 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.847924654 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.848361132 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.850492089 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.862362322 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.845582541 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.855093877 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.878811251 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.845794805 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.844961138 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.846062801 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.844122435 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.848205885 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.84680595 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.848505554 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.845857915 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.845022038 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.84897664 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.847329202 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.85288278 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.848053908 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.845744006 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.846032447 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.847245346 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.847224493 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.842613372 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.848357231 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.846183559 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.849682622 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.849394892 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.849703755 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.845793229 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.860184797 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.858735727 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.847200883 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.849844857 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.843828744 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.851369884 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.850249987 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.858838048 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.85635484 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.849138211 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.84876219 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.848230433 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.849661042 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.844359214 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.848960817 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.847624695 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.847982215 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.843650536 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.859237167 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.860931305 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.851371537 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.849335671 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.849740255 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.847736743 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.848449976 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.85116682 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.850026753 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.847775696 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.849630546 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.854596463 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.848165048 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.847363936 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.851275192 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.857167605 seconds)
  done (took 1095.286109617 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.845271732 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846398448 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844423837 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.84529246 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845485714 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845370312 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845220403 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.844939453 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.846374694 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.84536119 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.845053543 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846570497 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.846010698 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.846628181 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845661047 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846635207 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846184596 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.847391201 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.845677307 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845817445 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.845805007 seconds)
  done (took 40.537812944 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.84956605 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.845379172 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.846267943 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.848511398 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845917674 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.84945474 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.84560827 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850246024 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849740465 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847445758 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.85025229 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849564695 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.848575786 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.848014426 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848218311 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.851425826 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.850274656 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84885736 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.850180764 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.84851162 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849490345 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.848803995 seconds)
  done (took 42.447860275 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.853316203 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.853893661 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.849253583 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.848988534 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.851234563 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.848913621 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.852984155 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.84979246 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.850516924 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.851214325 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.850729788 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.852565538 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.859102441 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.857954254 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.854622095 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.852516153 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.99504753 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.854887538 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.855398114 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.854923196 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.847884406 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.857753891 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.849511401 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.848728411 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.850939149 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.854185192 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.85064143 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.850810523 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.85511565 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.853504751 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.858399044 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.853250768 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.851424794 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.855256896 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.850737591 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.853825738 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.856399592 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.854840974 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.850003376 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.852995655 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.861753555 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.876174992 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.856470918 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.858785798 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.853742337 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.853568968 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.858019888 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.867614747 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.850764791 seconds)
  done (took 92.771466843 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.854783193 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.853801295 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.851590273 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.85399687 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.854444971 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.855178179 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.855031381 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.854370812 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.853867909 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.850705441 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.853705711 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.850499584 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.851886797 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.853287812 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.854703535 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.851128538 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.850453616 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852015851 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.849884218 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.851239507 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.851845626 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.85397219 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.853810962 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.851333191 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.854116948 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.851249876 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.851851398 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.853829433 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.851423694 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.851942359 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.855220178 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.853244863 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.854336319 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.851713755 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.851137194 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.854978567 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.854448076 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.850903735 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.854502533 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.851963391 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.855215273 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.855140106 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.853640864 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.855323357 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.851601855 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.852693773 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.852066015 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.853762422 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.852889721 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.855549106 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.854489624 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.853591566 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.855435944 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.852441107 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.854856546 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.855979046 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.852374942 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.851998225 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.854267508 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.852359024 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.852887261 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.856316286 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.853303098 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.855952652 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.855969445 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.852565195 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.853205186 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.854071636 seconds)
  done (took 127.808386659 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.858116605 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.8583397 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.856760353 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.858261065 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.857789949 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.85820111 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.858073655 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.858125173 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.857444839 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.860260355 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.859274861 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.8558718 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.858566927 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.85562692 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.859058526 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.859426504 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.859314102 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.858508163 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.858422051 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.858345159 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.859129513 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.860689663 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.860309714 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.858507614 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.860360218 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.861168143 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.860273678 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.859020005 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.860019833 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.859803496 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.86138056 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.859882173 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.860639502 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.860705861 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.859981161 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.860910142 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.860167155 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.85909249 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.861175078 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.861125049 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.859867502 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.859543777 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.859950767 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.861852468 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.861284739 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.860923821 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.861464116 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.86087753 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.859265313 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.861768827 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.861465535 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.860941524 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.861394435 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.860960163 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.86150917 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.860035367 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.860852352 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.862257243 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.863034638 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.862264588 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.861937121 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.86049425 seconds)
  done (took 117.097822963 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.858691049 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.860418053 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.856258325 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.856010811 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.859984141 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.856862736 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.859278684 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.858888027 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.859418283 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.858577606 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86072574 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.857276372 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857452886 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860300749 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.85675659 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857544721 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.858473437 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.856449844 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.86126128 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.856266237 seconds)
  done (took 38.955378921 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.857390542 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.860300381 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.860117965 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.859748228 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.86134239 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.857719123 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.861620184 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860173471 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85857692 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862247241 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.862410424 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.862138628 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859131485 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858776768 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.861234572 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.858367757 seconds)
  done (took 31.549628464 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.859063372 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.861912168 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.864255739 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.864782969 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.858790507 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.85966354 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.861327655 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.858677331 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.8599223 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.861786656 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.861630808 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.861734574 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.863278734 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.865414469 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.860495316 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.862789019 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.858473005 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.858358795 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.862556209 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.865963314 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.860157713 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.861974861 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.863006713 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.862770085 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.860743824 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.860521374 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.860241522 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.859648112 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.860027986 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.862807495 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.860444076 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.860656599 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.861114637 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.861894098 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.867129905 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.860486135 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.862593068 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.863579052 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.863245862 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.86350215 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.86266262 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.861435478 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.864605002 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.864466538 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.861177987 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.864436314 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.860947486 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.861326734 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.861345199 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.860898365 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.864584262 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.866865888 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.863878774 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.864865046 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.864649546 seconds)
  done (took 104.206032354 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.863302852 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.864370652 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.861393606 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.863559461 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.864257972 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.861694244 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.863953222 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.861156758 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.861497729 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.863588129 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.865752838 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.862894529 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.861535567 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863440911 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.861924803 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.864458268 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.85992856 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.860527973 seconds)
  done (took 35.322045284 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.860779273 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.861511848 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.863649167 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.860782038 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.859693098 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.864120216 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.859738472 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.862805706 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862333495 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.861265124 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860389293 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.862293181 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863046222 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.862747062 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.859097451 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859171421 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.863768666 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.86179219 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.861240944 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.859892275 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.864256314 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.86374472 seconds)
  done (took 42.749943046 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.865987375 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.862051914 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.878767702 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.883801242 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.885224703 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.902048356 seconds)
  done (took 13.070460234 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861526217 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863101232 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.860149681 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865697819 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866133866 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859123922 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85691391 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859741731 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861160103 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861314181 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858217345 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860388413 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860818467 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857833774 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863872841 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858875894 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856740962 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856917188 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85767453 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860620445 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858667361 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857933961 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85578028 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856768842 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85656302 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859035464 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85804312 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85791272 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858299916 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86222491 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856729031 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857495814 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857174565 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855116404 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858679568 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857501912 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855622582 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859074119 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858340158 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855820358 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.860693906 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859417064 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858073048 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8568979 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858537147 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855918204 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857045384 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858589711 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856802004 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859581065 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861341964 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856556244 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860041798 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859886448 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859591042 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85981946 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856424552 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859479026 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8607481 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857593712 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857202494 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858852151 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855762109 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858570149 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859177167 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855633989 seconds)
  done (took 124.469532825 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857940156 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.858353527 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858903676 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859333535 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856855334 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858035724 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857468156 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860433445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858512595 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857692638 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860383727 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859270453 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859509718 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85917308 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857513865 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857876056 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857468706 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862528707 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859146064 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860022548 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858268872 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857837564 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858580135 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860361808 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858619181 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860769548 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860056951 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859048801 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863004117 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85774495 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858343013 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859954455 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858757817 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.857939014 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860947088 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858488683 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858141254 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859363378 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859541548 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865716668 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85927806 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861864042 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860018142 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860236059 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859452664 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857933031 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858267501 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858841171 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859116522 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859178242 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860781209 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858919952 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859008664 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859716414 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859242192 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858010141 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854891794 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853235177 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855322179 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857605108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860558822 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853338894 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855801474 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851112987 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853418789 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853871243 seconds)
  done (took 124.459260258 seconds)
done (took 2550.951643073 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.885586685 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.933131898 seconds)
  done (took 15.604399962 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.018506671 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.967700782 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.852814059 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.874269001 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.85093261 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.873976683 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.85576163 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.847791921 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.855901631 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.852039475 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.853185423 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.041279286 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.859977855 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.850810652 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.854069714 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.94758768 seconds)
  done (took 52.044032542 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.85816963 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.857531228 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.865608479 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.857264227 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.855835913 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.86746628 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.886788584 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.858600708 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.888574714 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.866848245 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.925627737 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.865966455 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.853932622 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.901165972 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.865679399 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.870252544 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.942032561 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.930348659 seconds)
  done (took 35.604872382 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.934221489 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.859003433 seconds)
  done (took 10.583450614 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.879686409 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.881063283 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.869249121 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.865451561 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.849833532 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.877300498 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.883982864 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.85133149 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.858223467 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.904410987 seconds)
  done (took 70.505391326 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.852903436 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.851195506 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.848480128 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.84501144 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.842228264 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.842194597 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.850998933 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.8384199 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.545479925 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.879435616 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.854241098 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.851952496 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.846627894 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.849264604 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.845474106 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.869346809 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.968910883 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.844997695 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.846570468 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.854172109 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.848063038 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.904065376 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.860729667 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.84773706 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.876721272 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.541693555 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.853931179 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.854394654 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.004272297 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.844332703 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.846959644 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.847287528 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.848775961 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.236725273 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.157196318 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.849938069 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.85536348 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.85526056 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.845952792 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.985672759 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.848709627 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.851935328 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.821425487 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.132979134 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.954174685 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.895851919 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.259017809 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.848042513 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.847651875 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.875444294 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.851436727 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.846749818 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.858989593 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.365979292 seconds)
  done (took 131.630115135 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.844154653 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.135048565 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000264114 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.840834005 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113503126 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050207764 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.789228942 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891393071 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.83976993 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.043445815 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.002171673 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.953303138 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.83937922 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.837301092 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.837362915 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.837647497 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.005425194 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913796729 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.841600238 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.835099067 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870923735 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.051149817 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.96865629 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.84007304 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.85824824 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.051915371 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.961687501 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.95052077 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.122411417 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.835100582 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.907333883 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.836577312 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.841913962 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.831827641 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.994263922 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.93540942 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927486739 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.838287808 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834468408 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.83339776 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.498122052 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031926041 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.932076625 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.979539845 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.085112554 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045205118 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.480864119 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.832067816 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.48074293 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.996956899 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.046786869 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.048737034 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.968729983 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.833920125 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.068543628 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.830192093 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.830603674 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071430284 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.065998117 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.938598003 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.830909286 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.830742775 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.828725775 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07902144 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.830214359 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.927970012 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.830938602 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.828278913 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.933442123 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.938292146 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.061632098 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047892126 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.863265184 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.14275246 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.309447688 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.046365729 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.90221581 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065929976 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.829167274 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833765966 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.917580196 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.585646251 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.987911283 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.077328866 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.050186626 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865274701 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.431772999 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.827052208 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.031220762 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.014440774 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.022427827 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.072426853 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.983341945 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.982324784 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.828625845 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.828817605 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.06723986 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.966201394 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.831199589 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.191139278 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062565857 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.397087963 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.862423958 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.128752978 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965013734 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.146863781 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.457926331 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.829247606 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.997031085 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.870682643 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.830641791 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.829492305 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.028922899 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.637381069 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.829927422 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.573417617 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.895199825 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.829743792 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.034700289 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.828344702 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038202216 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828323306 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.067050796 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.932662794 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.866760327 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.005111764 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.070660503 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.628122374 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.079194867 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.071657755 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.947650515 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.103870409 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.562793931 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.830453139 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108794904 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.830415919 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.829758006 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.001417317 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.831807896 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.007575726 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.835325906 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.060397688 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.858421454 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988440328 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.836385724 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.06538987 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.866845141 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884921396 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.831415818 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.954018395 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.833363989 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.713364765 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.987120986 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.834524779 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.829676719 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.276168542 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.832704384 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.97782098 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.063626129 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855676483 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.90210539 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.358311198 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.831619224 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925302385 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.857667458 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.312636591 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.832365502 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.992162621 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.805661752 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.277531245 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.830966435 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.075217496 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.061558213 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.837271913 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.829592043 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.574640356 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.544284926 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.835992415 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.999746319 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.068831889 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.474267049 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036315104 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831950167 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959878864 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.834543729 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.914180831 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.18302853 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.830474945 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.831835167 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.831664173 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.836090257 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.830924884 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045485683 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.861699506 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.346773446 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.97261244 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048551039 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.142220937 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.055091348 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.877023988 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.838393111 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09667064 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.840913426 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.898472981 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.833278331 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.857579086 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066148472 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.833421421 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.044734841 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.087281043 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.768010541 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.88366053 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.836670684 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.834614924 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.831292639 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.985520532 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930900153 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.8344445 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.835481581 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.94574815 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962914896 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.028409714 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.435202761 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.915646179 seconds)
  done (took 891.106118424 seconds)
done (took 1208.868953494 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.834242335 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.835390385 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.821144425 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.833670632 seconds)
  done (took 29.095273773 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.841770187 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.840552888 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.843423844 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.840187496 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.842271168 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.846927354 seconds)
  done (took 12.823169295 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.900526623 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.836004086 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.834685975 seconds)
  done (took 21.339442755 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.909074817 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.250791591 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.956912224 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.284431495 seconds)
  done (took 10.169798041 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.845862848 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.845622071 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.848225744 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.84390854 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.844084596 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.844625557 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.84264622 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.843996741 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.848620769 seconds)
  done (took 18.378664455 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.273838833 seconds)
done (took 97.847239019 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.984082333 seconds)
    (2/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.396034103 seconds)
    (3/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.083002645 seconds)
    (4/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.182815926 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.096362992 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.087951519 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.836661728 seconds)
    (8/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.920159786 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.231072893 seconds)
    (10/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.192222786 seconds)
    (11/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.169826068 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.085297127 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.902715859 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.875136796 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.240219165 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.801377757 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.220897937 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.860381915 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.206314845 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.726055607 seconds)
    (21/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.834632614 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.068278684 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.185287038 seconds)
    (24/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.303847097 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.128942151 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.118595843 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.572148109 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.093429572 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.962231606 seconds)
    (30/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.925072592 seconds)
    (31/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.016870942 seconds)
    (32/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.187205334 seconds)
    (33/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.040497731 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.142866858 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.440965119 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.134652914 seconds)
    (37/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.969026735 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.941848246 seconds)
    (39/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.194225516 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.849903029 seconds)
    (41/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.018964174 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.041542503 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.954641059 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.989702346 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.078524901 seconds)
    (46/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.8640555 seconds)
    (47/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.941229263 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.825717272 seconds)
    (49/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.925320518 seconds)
    (50/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.822423198 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.86405395 seconds)
    (52/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.15290428 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.199392093 seconds)
    (54/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.399906219 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.959183045 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.217700305 seconds)
    (57/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.428171813 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.937930464 seconds)
    (59/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.740313163 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.102084585 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.822842277 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.161249966 seconds)
    (63/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.652474304 seconds)
    (64/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.832686818 seconds)
    (65/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.948597693 seconds)
    (66/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.341863489 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.906772815 seconds)
    (68/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.972570759 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.890767752 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.839743005 seconds)
    (71/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.894035232 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.915430983 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.034185963 seconds)
    (74/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.31440273 seconds)
    (75/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.979583701 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.163630263 seconds)
    (77/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.983430407 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.841439631 seconds)
    (79/309) benchmarking ("sort", BigInt, false)...
    done (took 6.84861464 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.345030196 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.075331024 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.873259541 seconds)
    (83/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.994062976 seconds)
    (84/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.021825443 seconds)
    (85/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.842741222 seconds)
    (86/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.139905426 seconds)
    (87/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.823835995 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.995825642 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.962211481 seconds)
    (90/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.866688451 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.54984431 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.827125158 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.871923171 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.174664267 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.840848397 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.021579826 seconds)
    (97/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.115718358 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.914297426 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.264522353 seconds)
    (100/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.953453289 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.716197322 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.936041665 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.841155529 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.910489282 seconds)
    (105/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.981290366 seconds)
    (106/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.845316292 seconds)
    (107/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.05922176 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.06542645 seconds)
    (109/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.350011789 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.036338814 seconds)
    (111/309) benchmarking ("sort", Float64, false)...
    done (took 5.642298816 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.84118385 seconds)
    (113/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.875078312 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.041005102 seconds)
    (115/309) benchmarking ("sort", Float32, false)...
    done (took 5.596799306 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.016813808 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.843049451 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.839770749 seconds)
    (119/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.919560503 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.842695968 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.201049767 seconds)
    (122/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.84105012 seconds)
    (123/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.386548609 seconds)
    (124/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.253648722 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.178763451 seconds)
    (126/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.122439206 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.84072549 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.682579866 seconds)
    (129/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.063178846 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.29169726 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.8674583 seconds)
    (132/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.658036018 seconds)
    (133/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.276134102 seconds)
    (134/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.01391591 seconds)
    (135/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.444280636 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.101715932 seconds)
    (137/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.440428782 seconds)
    (138/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.829045803 seconds)
    (139/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 4.232042232 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.064241331 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.103742643 seconds)
    (142/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.353185371 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.562770292 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.026127927 seconds)
    (145/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.903198159 seconds)
    (146/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.384069499 seconds)
    (147/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.869691716 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.945774621 seconds)
    (149/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.149411834 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.516416449 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.87411409 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.066021941 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.871167134 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.868554052 seconds)
    (155/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.173247438 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.908856883 seconds)
    (157/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.97294995 seconds)
    (158/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.022263232 seconds)
    (159/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.945300299 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.850328196 seconds)
    (161/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.945306453 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.486754361 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.873555977 seconds)
    (164/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.464717775 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.870352896 seconds)
    (166/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.035514996 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.147583026 seconds)
    (168/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.953651349 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.146972974 seconds)
    (170/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.062791989 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.836447915 seconds)
    (172/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.708724226 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.873060874 seconds)
    (174/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.930218273 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.750755515 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.919039191 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.845728963 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.636696808 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.836718064 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.280669284 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.846910878 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.533947588 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.262004541 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.641606722 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.850058798 seconds)
    (186/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.291269235 seconds)
    (187/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.139608093 seconds)
    (188/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.948623826 seconds)
    (189/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.425559968 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.923066851 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.875804294 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.831995368 seconds)
    (193/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.239926075 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.780639491 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.979145388 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.856730491 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.912080209 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.812722821 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.855464169 seconds)
    (200/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.87489507 seconds)
    (201/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.946214313 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.223953543 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.86322946 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.905766957 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.149537059 seconds)
    (206/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.351755246 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.490443436 seconds)
    (208/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.989472533 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.14743223 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.954822489 seconds)
    (211/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.043143115 seconds)
    (212/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.733759302 seconds)
    (213/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.361773509 seconds)
    (214/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.054679721 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.481880122 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.058256554 seconds)
    (217/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.873704025 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.918739883 seconds)
    (219/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.877688022 seconds)
    (220/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.977429548 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.849563388 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 8.422019445 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.14391028 seconds)
    (224/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.97854336 seconds)
    (225/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.665183714 seconds)
    (226/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.884962758 seconds)
    (227/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.066749224 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.871733402 seconds)
    (229/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.948211055 seconds)
    (230/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.935574317 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.8435224 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.893555198 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.850969891 seconds)
    (234/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.597649164 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.664168238 seconds)
    (236/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.837637582 seconds)
    (237/309) benchmarking ("map", identity, BigInt, false)...
    done (took 4.195023895 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.791763755 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.77821017 seconds)
    (240/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.946370579 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.093878419 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.839923271 seconds)
    (243/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.980937589 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.998362555 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.951120539 seconds)
    (246/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.862100518 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.445657992 seconds)
    (248/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.063129497 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.933294918 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.220266208 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.090631833 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.515494907 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.055595585 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.235007935 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.951960474 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.75722996 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.94492884 seconds)
    (258/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.99718173 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.949080419 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.954991413 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.902500733 seconds)
    (262/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.021117699 seconds)
    (263/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.949053384 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.233019609 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.85358027 seconds)
    (266/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.938178202 seconds)
    (267/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.853848495 seconds)
    (268/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.105767122 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.880230733 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.240155671 seconds)
    (271/309) benchmarking ("sort", Int8, false)...
    done (took 4.806172393 seconds)
    (272/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.87107613 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.029334206 seconds)
    (274/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.173092122 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.851799629 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.840588413 seconds)
    (277/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.926395676 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.336893727 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.5474214 seconds)
    (280/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.540943201 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.154260591 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.842062876 seconds)
    (283/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.025222256 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.951845421 seconds)
    (285/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.031477828 seconds)
    (286/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.34124469 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.940423233 seconds)
    (288/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.250479926 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.998499811 seconds)
    (290/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.032704681 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.573184104 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.961519129 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.378377831 seconds)
    (294/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.861245861 seconds)
    (295/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.457288081 seconds)
    (296/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.538828862 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.2427398 seconds)
    (298/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.976245316 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.935084101 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.182508417 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.895001541 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.246592217 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.016936565 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.518945748 seconds)
    (305/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.9373021 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.876384363 seconds)
    (307/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.96099366 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.231061515 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.92844404 seconds)
  done (took 1007.732632223 seconds)
done (took 1009.580081555 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.886802433 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.881747717 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.864332719 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.885002243 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.977280658 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.899372357 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.875627987 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.867860776 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.912850347 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.914980254 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.865991077 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.900407723 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.868875534 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.867181514 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.864947844 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88015776 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.16636596 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.88924837 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.885212649 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.874473967 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.883376901 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.866149957 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.91630797 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.90221565 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.870485239 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.868337692 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.870247525 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.890773682 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.978138447 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.870578548 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.868588371 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.87871384 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.16872873 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.887895001 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.860881636 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.888079307 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.878640774 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.875769867 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.874433933 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.90029293 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.300400993 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.872795049 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.869778397 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.869145448 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.868319626 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.871566132 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.869579465 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.872927001 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.8841387 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.883146797 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.300336732 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.886912509 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.871731103 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.868703157 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.878461054 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.869191055 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.871377819 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.88576612 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.888747781 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.885761188 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.160658416 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.892001469 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.869407768 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.886299515 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.881313471 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.338157979 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.86637126 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.872972576 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.30219598 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.877349525 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.33612193 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.880966463 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.870628782 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.883270094 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.906172588 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.170700452 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.884573468 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.869314345 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.87872557 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.870321713 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.879989165 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.885334276 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.875729861 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.870222347 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886727545 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.905078953 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.879904839 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.873129719 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.878588223 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.889870157 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.880755014 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.882148181 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.875019941 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.864351994 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.880084265 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.874928547 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.875618705 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.875041458 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.87677588 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.880072598 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.300284004 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891092902 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.868172859 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.867870345 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.869452774 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.887154618 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.298156713 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.876222064 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.89266234 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.918093627 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.872332469 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.16573644 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.895318628 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888467203 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.879900167 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.873958751 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.867357134 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.164831862 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.32208511 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.889827191 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.873521099 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.872866239 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.889217873 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.874434453 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.868558796 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.174572208 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.893978544 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.886607097 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.99397434 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.881950417 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.903469028 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.872285221 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.87468292 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.907202613 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.889793489 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.905865899 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.876097721 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887857925 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.889608876 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.869661245 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.883723081 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.883758714 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.874261761 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.87759268 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.86682185 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.907965583 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.885799625 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88695155 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.893703261 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.99546975 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.871190165 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.16402298 seconds)
done (took 293.842654861 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.939601865 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.86134389 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.969532665 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.869691794 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.955027307 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.95682804 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.869798088 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.867331238 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.866599277 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.252284608 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.867841613 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.868972798 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.866301361 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.867148865 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.954852089 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.871632348 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.871616538 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.217342043 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.874334358 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.941710852 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.866010582 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.868669866 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.871287152 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.251870369 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.862653497 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.871084009 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.941283769 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.8725303 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.214971256 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.863693574 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.869615554 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.215508165 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.961523579 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.889541926 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.881679291 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.876270077 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.955541794 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.874202891 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.952006351 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.953101509 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.969847601 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.913540376 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.865100477 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.868881507 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.87342117 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.873650693 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.868032137 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.899091951 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.864424833 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.878324322 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.217389346 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.872704774 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.880337987 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.870502342 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.869426614 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.90606606 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.86977023 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.876171855 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.963405016 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.876635991 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.934317625 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.253802364 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.254315328 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.870429147 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.874199193 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.870037287 seconds)
  done (took 184.454159254 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.939427819 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.946726469 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.939145181 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.282647292 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.922694704 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.944587155 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.875209706 seconds)
  done (took 15.648229416 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.878762768 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.872536255 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.921470468 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.9226143 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.875429945 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.023491075 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.872938643 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.886527095 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.870331383 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.92705504 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.874332742 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.87433912 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.880953257 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.874409941 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.921452134 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.884245885 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.989321908 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.874155643 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.875315049 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.027190063 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.871925181 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.882370891 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.931229449 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.886409453 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.87495193 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.881178509 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.470236767 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.877459192 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.87176717 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.87544627 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.870691739 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.919776395 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.874747475 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.866763742 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.871616512 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.992017006 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.877285754 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.872714228 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.874411823 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.875842267 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.875604157 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.87561383 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.874682009 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.871730585 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.875413469 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.898455998 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.876093899 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.874346836 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.875284994 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.875237131 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.924331032 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.875816345 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.871646818 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.871473638 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.930379715 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881591934 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.879237946 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.871513933 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.874801617 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.871214277 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.028927011 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.925246607 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.875259462 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.922896858 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.876147772 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.876263881 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.875882461 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.875226295 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.970724445 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.876693771 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.924869363 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.873889602 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.034503217 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.901612195 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.877562579 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.879338331 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.878559931 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.881236721 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.871917171 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.883855131 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.874453992 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.877790766 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.882119644 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.875197017 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.874187358 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.990454154 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.985365962 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.874030566 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.889210984 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.883998325 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.873036921 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.928513801 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.876163428 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.875244697 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.92918957 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.994104242 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.933385492 seconds)
  done (took 206.400092422 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.88063383 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.884383427 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.878502416 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.893603175 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.876936111 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.876891654 seconds)
  done (took 13.093815435 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.880245573 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.879028541 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.877917083 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.877323973 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.881893822 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.878520146 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.881657964 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.878651177 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.883986617 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.877599919 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.879643689 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.879657011 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.879621089 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.881993169 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.881765144 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.878810496 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.883865079 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.876003368 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.878581576 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.880808635 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.021995563 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.881541538 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.881663715 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.879252337 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.881192858 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.878465511 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.886785567 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.878238933 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.878087351 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.886636189 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.884548128 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.878895321 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.879197932 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.882624486 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.887095248 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.881153133 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.881276662 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.878950607 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.877303239 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.880118361 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.880742291 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.881914673 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.880165343 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.8819639 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.880001021 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.882776471 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.885871983 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.887414593 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.883787907 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.881475069 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.880209549 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.879835379 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.881315183 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.879635897 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.882807251 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.883307527 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.884911238 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.883432047 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.883083329 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.88224299 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.881088283 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.88078575 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.881252811 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.88753036 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.8878019 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.882539902 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.882856695 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.887110358 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.884200352 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.880654547 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.883349672 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.879247651 seconds)
  done (took 138.414610582 seconds)
done (took 559.821151215 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.16170773 seconds)
  done (took 8.968855326 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.984504427 seconds)
  done (took 8.897771569 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.333140005 seconds)
  done (took 10.144796013 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.892977951 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.897592714 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.883909706 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.876035421 seconds)
  done (took 29.3695861 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.940420666 seconds)
  done (took 8.74941543 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.890892792 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.874609808 seconds)
  done (took 15.6098358 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.921926754 seconds)
  done (took 8.734338821 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.973938965 seconds)
  done (took 8.789768589 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.903299176 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.901669354 seconds)
  done (took 15.629271546 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.862084289 seconds)
  done (took 8.671094415 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.527652389 seconds)
  done (took 11.349171788 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.88258711 seconds)
  done (took 8.704277032 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.892121153 seconds)
  done (took 8.703249461 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.923981202 seconds)
  done (took 9.732964798 seconds)
done (took 163.861447808 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.878923701 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.877982902 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.875674801 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.878621621 seconds)
  done (took 29.322010078 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.918432671 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.917739711 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.92269487 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.92954981 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.921105607 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.918994096 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.911060854 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.915323195 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.93072093 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.921082024 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.920075946 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.92237512 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.926645918 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.910652283 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.92174982 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.921396066 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.929710579 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.92145874 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.911689787 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.922268011 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.88636002 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.930920749 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.922802069 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.890839461 seconds)
  done (took 47.857829322 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.085112025 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.958877792 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.041579401 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.940964235 seconds)
  done (took 9.838432865 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.938652015 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.939720279 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.95119905 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.995691383 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.016478659 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.949316572 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.914849536 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.908909385 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.899965244 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.94023164 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.015105624 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.955313026 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.02426741 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.894084332 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.064241297 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.887347716 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.886084386 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.938114091 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.99633114 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.005266437 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.887264056 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.939347702 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.942676984 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.95670129 seconds)
  done (took 48.660915063 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.883863579 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.895524413 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.892146817 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.885628739 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.889043443 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.888434762 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.893580196 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.887755186 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.907585262 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.892198928 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.886726608 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.887102407 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.886766953 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.887501634 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.892079142 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.899764013 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.902319365 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.888280164 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.89061697 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.893268248 seconds)
  done (took 39.643844576 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.881918793 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.828713142 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.234089811 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.138957009 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.887654139 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.880983216 seconds)
  done (took 32.671475229 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.900751049 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.892258236 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.88773049 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.94602488 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.018634775 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.891764624 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.8891796 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.89875807 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.938104776 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.949103859 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.908448489 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.914408786 seconds)
  done (took 24.851522462 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.888127763 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.882348329 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.880719286 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.902603987 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.898067895 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.894922536 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.894846773 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.88245195 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.900226517 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.906326392 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.894206871 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.900676508 seconds)
  done (took 44.543460138 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975531551 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.927619903 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.915162072 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565168698 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.264742703 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095329119 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.398897025 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.226402149 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.88913825 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15723518 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.966142553 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987073469 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140588789 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294774733 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.910246619 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.361864585 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180419995 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095543131 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909438801 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.588260987 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95052729 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.990407084 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.676248566 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.941696349 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098313324 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.017590965 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.149034041 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.886176219 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023745706 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922840775 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896177315 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.888735696 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160229009 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265587172 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987492393 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896539967 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.504856095 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.602750726 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.873779377 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.725312042 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.630132388 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.010758167 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897778642 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88626002 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.826424464 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.962897595 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252081527 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.893595801 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.597933922 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.885582567 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89708372 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974961001 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.890962478 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.702336315 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805568204 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.886826159 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.884276121 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893713282 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.463461828 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.028941107 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.994504482 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.852260935 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.981117301 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.62531447 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279433695 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.033014923 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.890886323 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890830296 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826750274 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.659726646 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943136441 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221886981 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.90554235 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.537594976 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185396077 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.025159419 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.829165185 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157681447 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.334657852 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.850115849 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116836132 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886337076 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827954113 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.924405407 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.822966427 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15961252 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924741108 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.653562379 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925559966 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.221692215 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.897876522 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903898082 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910616504 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11424091 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.77045301 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888371831 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.733987468 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030595509 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908300884 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.226666483 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822798876 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.888641967 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14742508 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.100056548 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.874368536 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.390951547 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047189764 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37250102 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.935406681 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.948851723 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.928364578 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.161588783 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949068038 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.021450663 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943103911 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.889392557 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204247598 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396781223 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.017440628 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.983536381 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.013033226 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.217311477 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915358558 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95486799 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901339344 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.89095611 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.699080258 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.443578907 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.890769161 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.892600934 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.877379574 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.929186295 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.89600983 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842581155 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.510073547 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.976253497 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.902002771 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113462248 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.370684406 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195584496 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824781574 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219968334 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.979564199 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.114769563 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.540574712 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.971246589 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152941532 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.857147501 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.903299412 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930218899 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909841573 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989500777 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913193707 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.94914316 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.175937607 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.895804601 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.902582654 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.685616167 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.925451529 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890790842 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.897746618 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.64487502 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166152396 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914893152 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.896250053 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.781489431 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.906213693 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958468691 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.895377287 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.901740425 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.429508671 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617353646 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.896982856 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.474473301 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114425718 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902536178 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.600824746 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006299893 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.977065093 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.168187254 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950358519 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.826128791 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.602814599 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.586022366 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89337183 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830008228 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.8943051 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902637931 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903368547 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.098279991 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171397759 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934052075 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.601181637 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.93585749 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904535461 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.905178048 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894402784 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.400252986 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.036561744 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.994151734 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.932366672 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038734375 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.908207891 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.827724386 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.900572088 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.898184739 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.893234701 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.89445931 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927052518 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.610580028 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276990088 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155878223 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.503980947 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908209861 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.630513339 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.95391601 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.952860825 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.757037166 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.96987638 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.984617752 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902954549 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.906120184 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.603954492 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.602181436 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462534999 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211218085 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198383627 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335871951 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.015058796 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.914616156 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.23121345 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829039667 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451612823 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.951955509 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236686917 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841224883 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98048792 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.545050231 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242880264 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907489196 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124312411 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284893618 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.668508134 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036484077 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10881298 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931445869 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.957286342 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853273504 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.417999121 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045768559 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.607814849 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097605363 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234745412 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.619101749 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.019862685 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.89599731 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.58705238 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979582012 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.607592557 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.070071769 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.987800894 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.884889916 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373244623 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.903468384 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.123807102 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265205471 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.952239328 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.012762265 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834476956 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.909628951 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.908424655 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.89974526 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.896713602 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.767850589 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.149311009 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910837292 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832210926 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.900720469 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184177439 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.80150526 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.903102009 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898320611 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218215114 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.325899787 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064503299 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.893320943 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.407922596 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90435488 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832926639 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83343359 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.592466988 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904241284 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875238045 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107287838 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.00046211 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819383887 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.867591655 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97469242 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156149807 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.913531704 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.174227423 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177830531 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.597986841 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925587374 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.001039072 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.62083341 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.009624293 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.901728217 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136255801 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.656415954 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.124857962 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.939307064 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.859989156 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.900257015 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115772346 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.901446079 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.867165647 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13048151 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.621229764 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.019724883 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220138369 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974012598 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.862801324 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.948882515 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.992931286 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912274906 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982137857 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911138104 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.912358632 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.912744505 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94762938 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.863052997 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.02882467 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.916021673 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99171652 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.05235026 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.420068963 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.904945682 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179189571 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256538711 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.234668248 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962061372 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.902805138 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903446363 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835744584 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047847178 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.12842607 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175473389 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.033942379 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.018567729 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926861611 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.628379658 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.002326287 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137353482 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177780207 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.798065759 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297349419 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.936886238 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.904050705 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913941898 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.113687549 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117913747 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205541812 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.04711162 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.875305906 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.25809879 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176096869 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.902816135 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902832783 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491573568 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.035032134 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.591011773 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.941920035 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.868092687 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177964698 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913401882 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28471089 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922465699 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.061283602 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.419400132 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656512169 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194508687 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.892316255 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.963457916 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1807639 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.300452286 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218930219 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971158662 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91468641 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.012101105 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052741143 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.775949617 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900890624 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904819819 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.952512301 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.614747015 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.914578625 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189216211 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216472954 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.901323134 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.790474791 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924398259 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.913671207 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.129994049 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179218766 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.155678139 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914886103 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.910778513 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.71818691 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184198487 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964441918 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838825188 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.904943505 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001964739 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151563129 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926792502 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.356688621 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.615247121 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184697574 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.900544868 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926928296 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.962948444 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273216038 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234388063 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.438892185 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116526613 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.488364435 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372024893 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199360608 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.910777524 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.954374316 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201217523 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.911482176 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.880706505 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937112535 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.179379133 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219447658 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.046204723 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.629972507 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.873486473 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.248351552 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.458671689 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845332868 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913573654 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.96766936 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.90760425 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.0373857 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918616559 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.794571842 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.957994732 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.683067662 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.195823634 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.911756193 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.899119113 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.678887273 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.089307817 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935038456 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052416764 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910381764 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.625984237 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.267993931 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163465941 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.88428708 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.908494651 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.91224331 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910768792 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.899862985 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.10327916 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.104498293 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185753566 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.908285309 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.937424293 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911597532 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.12444152 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120878231 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.872178527 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05081155 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.890444195 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942279572 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.820592061 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.416799716 seconds)
  done (took 1684.990788113 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.914235091 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.942175872 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.984443254 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.009555379 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.926839223 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.013021617 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.968055564 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.947342471 seconds)
  done (took 57.547509774 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.907566861 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.104989645 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.917327998 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.909887421 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.916627579 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.910505374 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.08444608 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.924474939 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.927235479 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.921447972 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.914717732 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.915408104 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.224691574 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.927631363 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.909621928 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.914966493 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.925434954 seconds)
  done (took 75.108302677 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.928316267 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.967237125 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.934989494 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.927069341 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.853281669 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.911496844 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.725161528 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.920035548 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.910751349 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.134542259 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.545479288 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.920256331 seconds)
  done (took 90.521582288 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.920657432 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.91656706 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.91655128 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.917546177 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.916902498 seconds)
  done (took 11.433807598 seconds)
done (took 2198.826897741 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.155727687 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.137047883 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.141418222 seconds)
  done (took 6.120561698 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.057839859 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.105598349 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.226279867 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.232984271 seconds)
  done (took 10.464424374 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.198705994 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.290595854 seconds)
  done (took 6.328634784 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.289976643 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.91391896 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.285970771 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.910138257 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.908391553 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.906735491 seconds)
  done (took 22.570329963 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.914082053 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.914843789 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.913748847 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.916605571 seconds)
  done (took 9.499192263 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.893717839 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.604733892 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.891282169 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.907333476 seconds)
  done (took 21.136721018 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.6670543 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.673257367 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.66280706 seconds)
  done (took 9.844220715 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.523261098 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.817459571 seconds)
  done (took 9.181127273 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.178459525 seconds)
  done (took 4.018278209 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.043928002 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.219651808 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.430167821 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.447247445 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.537440562 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.604033909 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.213855168 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.145397457 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.314747033 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.348715458 seconds)
  done (took 25.146479597 seconds)
done (took 139.797973348 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.28911308 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.274196975 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.113337266 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.245695082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.140650592 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.111778329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.124785108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.226436971 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.747167204 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.747511568 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.281690767 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.149171082 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.280681972 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.273983612 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.281445735 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.143708591 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.130840689 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.289964173 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.942794378 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.17369457 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.123991992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.878789619 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.125936982 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.88668714 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.149090947 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.062332098 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.455754179 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.141697208 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.094232001 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.462672935 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.061617804 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.327369922 seconds)
  done (took 172.580953042 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.671651576 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.909379745 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.908225379 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.909750924 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.229524832 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.909545263 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.910412059 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.910059424 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.975918098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.976054422 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.916781323 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.254881258 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.919181179 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.90943613 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.922194334 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.91588527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.155039925 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.786590399 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.939765222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.941542342 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.944808816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.200226186 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.941869478 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.250500168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.178096765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.94152858 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.910530346 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.93764192 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.910607186 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.909963247 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.921333955 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.911341213 seconds)
  done (took 208.775996268 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.913395793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.911176437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.909156929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.911708975 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.911440249 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.912949879 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.911185006 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.91210827 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.470426479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.465685137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.919755854 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.920817179 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.915574011 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.911754736 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.91528182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.912206934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.921329761 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.920703278 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.918233644 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.921571271 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.924915119 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.674644628 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.927044646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.673749875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.922796278 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.92127794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.912112349 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.924134707 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.40027313 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.935369258 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.934516335 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.919048687 seconds)
  done (took 222.336202123 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.115974641 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.926780677 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.928473253 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.865024407 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.927726121 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.926869953 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.923309143 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.124808669 seconds)
  done (took 19.613869674 seconds)
done (took 625.157479531 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.471314041 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.248350381 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.109748635 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.948804467 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.198915911 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.988571038 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.947752632 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.014942386 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.684556505 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.019079398 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.598558262 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.964861722 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.68616934 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.972892351 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.079396576 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.002825113 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.525966494 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.623351604 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.132404667 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.019316908 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.128272565 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.922525142 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.023530115 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.691974727 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.704615241 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.935832502 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.11873253 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.528107081 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.95779583 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.118262317 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.691536564 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.327225477 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.956685932 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.943372045 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.996468979 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.979386222 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.289833576 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.956762434 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.074597733 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.690345049 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.014788622 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.560195122 seconds)
  done (took 105.700316806 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.91967947 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.916234568 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.915141205 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.916788698 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.91766327 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.916625807 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.915528196 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.914426234 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.916871275 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.915090228 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.915450187 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.916628638 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.916143683 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.918454332 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.914497776 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.916071642 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.916738636 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.918543281 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.916348648 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.916421843 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.917957227 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.915867886 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.933983902 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.916969624 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.918831694 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.91852619 seconds)
  done (took 51.716066472 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.930717482 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.074659495 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.159830302 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.949721654 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.931309037 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.93425027 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.948769924 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.93650545 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.934389226 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.934481889 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.027576089 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.937680157 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.95127043 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.162935908 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.946078081 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.931930261 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.931996937 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.931935488 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.082939194 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.948718643 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.952388327 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.936185853 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.952699534 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.94652667 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.935352131 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.933193277 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.935058784 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.405678413 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.939066603 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.027467481 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.013769434 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.950111498 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.373392088 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.167760806 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.996699012 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.937131972 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.932783861 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.030223279 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.935480015 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.933522976 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.949871145 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.933488789 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.161346941 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.439475908 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.943755003 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.932835423 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.414225514 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.036767687 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.97317701 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.943520249 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.163874122 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.952349959 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.933967185 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.933886335 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.970840269 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.944974766 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.934011977 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.300878826 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.944571065 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.952565103 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.936366418 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.935570516 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.089153198 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.943479956 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.079237723 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.944174212 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.939436197 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.936006252 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.162460677 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.952325487 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.445133359 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.945964758 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.935578187 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.02711491 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.083680517 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.443388014 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.945632503 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.092161222 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.396846146 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.960284447 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.94047746 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.395725686 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.962587892 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.943252041 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.936311375 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.936562061 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.935522658 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.978703155 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.952543767 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.378444065 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.447282673 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.314732169 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.959360661 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.95087253 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.935763307 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.301815638 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.940989656 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.93722604 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.156415049 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.456320863 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.948394763 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.944955986 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.433167229 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.947042746 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.953582486 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.942764403 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.166810398 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.949690924 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.980804893 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.937396732 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.944529994 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.939602791 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.956493634 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.941593373 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.936899356 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.419534047 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.047004756 seconds)
  done (took 239.786016198 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.943044133 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.938332582 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.930810072 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.928633942 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.930073236 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.936683441 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.930190581 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.930873332 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.935946472 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.930767581 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.932125184 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.933342688 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.934124603 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.940028082 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.967672065 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.938700045 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.542413742 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.933953302 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.930148136 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.928924089 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.580607239 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.936286623 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.934373239 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.945438156 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.929819727 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.931578319 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.93885503 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.967740021 seconds)
  done (took 169.344834659 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.938002783 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.053673612 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.957250773 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.966283029 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.946494135 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.937748519 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.962046061 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.949890815 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.944463541 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.934720195 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.935893218 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.999849582 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.948257009 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.040972445 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.967334917 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.965201145 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.043954469 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.944212614 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.937576106 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.937251217 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.967379109 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.932832414 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.0006169 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.062008983 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.95324442 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.055151769 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.939302098 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.940321214 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.939560951 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.055236303 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.950530991 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.998869513 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.964003956 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.958459534 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.059224102 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.052214117 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.042083237 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.965543333 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.943676769 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.938103605 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.937320542 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.926347235 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.056306888 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.954059023 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.94056897 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.049333393 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.953677001 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.941614479 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.948794526 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.938718944 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.952739491 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.956433562 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.007952999 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.068999991 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.96952961 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.965405647 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.965538166 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.208198367 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.953493255 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.040243553 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.931779413 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.057113875 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.956824471 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.930124088 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.940208181 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.946598267 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.968553399 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.967669405 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.042044484 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.94529559 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.040300808 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.974126469 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.943506951 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.941476934 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.943287833 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.057739633 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.056698798 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.972286314 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.975232949 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.968284832 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.934394453 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.940637889 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.930659257 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.958465129 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.942870022 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.059236012 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.056690007 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.946477453 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.943773483 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.944758922 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.943622979 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.967574389 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.067179829 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.973947618 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.037155845 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.006610833 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.013142446 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.950867528 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.955579597 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.945652108 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.004556174 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.953358845 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.953976823 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.258326301 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.013473204 seconds)
  done (took 209.892841227 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.424079291 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.992591048 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.9975188 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.225477285 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.361391113 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.811156255 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.983894041 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.989887634 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.016081601 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.149110122 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.047169915 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.004692534 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.975094767 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.964207275 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.989918491 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.011972771 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.994143036 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.284370658 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.105883973 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.071085659 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.967424361 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.294960307 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.304269197 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.37719031 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.028919502 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.324953 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.669358429 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.232462383 seconds)
  done (took 63.474149307 seconds)
done (took 841.763720716 seconds)
SAVING RESULT...
DONE!
