cset: moving following pidspec: 10969
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.316853604 seconds)
loading group "string"... done (took 0.483011811 seconds)
loading group "linalg"... done (took 7.762895312 seconds)
loading group "parallel"... done (took 0.175210376 seconds)
loading group "find"... done (took 1.19741879 seconds)
loading group "tuple"... done (took 1.86386078 seconds)
loading group "dates"... done (took 1.258672184 seconds)
loading group "micro"... done (took 0.23440128 seconds)
loading group "io"... done (took 0.732436147 seconds)
loading group "scalar"... done (took 41.891359837 seconds)
loading group "sparse"... done (took 12.889233691 seconds)
loading group "broadcast"... done (took 1.050630308 seconds)
loading group "union"... done (took 14.165224064 seconds)
loading group "simd"... done (took 4.849771862 seconds)
loading group "random"... done (took 9.746381261 seconds)
loading group "problem"... done (took 2.007314097 seconds)
loading group "array"... done (took 22.696042984 seconds)
loading group "misc"... done (took 1.452790209 seconds)
loading group "sort"... done (took 3.659815823 seconds)
loading group "collection"... done (took 19.481475905 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.45803428 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140863584 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146513407 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133460871 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206089739 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139196104 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155882868 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.109177413 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.056097768 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178190776 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14260656 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.49076163 seconds)
done (took 5.166621019 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.230973111 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081621541 seconds)
    (2/2) benchmarking "String"...
    done (took 0.093311929 seconds)
  done (took 0.932572742 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.089102186 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.141022164 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089772352 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073820957 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073170071 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091240379 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073133877 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.089991096 seconds)
  done (took 1.390376081 seconds)
done (took 3.40703067 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.723697959 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.282578294 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201853568 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.508912745 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.175048886 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212732901 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6727645 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.352752847 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.242216808 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100156134 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.128132269 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.442231317 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111437894 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685266348 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.086898556 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123501787 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.170540617 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432528316 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.09047634 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089885524 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.113154759 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.150008422 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090796861 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.099121841 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.165053703 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.091603991 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.184450604 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.104615656 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076207719 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.263450117 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199964579 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700591857 seconds)
  done (took 10.864253195 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112481979 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136507388 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075173091 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.151404831 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133582667 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078214753 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097042716 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075466548 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121766392 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177115168 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113629185 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139561564 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090294414 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077946738 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11483866 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228876351 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12072998 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117702549 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07885203 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.101505745 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117931961 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109188875 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088963439 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105964188 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16460663 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202150396 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10852311 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124440806 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.077905922 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.1093616 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140170382 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154265068 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074214294 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074545546 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174163797 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120272145 seconds)
  done (took 5.054669137 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187764522 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09912299 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167466337 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160702817 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140874001 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.151794329 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10934351 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258176853 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.120481217 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160556377 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139684428 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112462558 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075218274 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096014039 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077273748 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.683021779 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165794936 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110060858 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113144483 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094054085 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082285978 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366688261 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081250348 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072070628 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096631829 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067092571 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156029898 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095218016 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.169936805 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095215276 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098855627 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12873374 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192888376 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110879503 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131819072 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094530656 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072738766 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175824828 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079255942 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092886442 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102570523 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131183899 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131779051 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.089638085 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078226775 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.209921487 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090807149 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089648755 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.006356881 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178982105 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.121116882 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094960576 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.342669547 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093358087 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092924344 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.073617801 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071762321 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280810135 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12792837 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09417929 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076629553 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07715542 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097619094 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384610008 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.075170267 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.745437294 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094872439 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08660354 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09575187 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076771836 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102547984 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084912837 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113288786 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101575842 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.093826466 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075330711 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.092590792 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076054727 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.092832917 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07232632 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110459334 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081180109 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.092612782 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.071809351 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143120527 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.089615842 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094721246 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121674192 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.077854733 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093602164 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125534612 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078429653 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073435613 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131939895 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074471971 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112567146 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092489987 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138265326 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075864269 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.176754899 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.075405713 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122715734 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08017495 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125246421 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.105931732 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076137253 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097601608 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07268207 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.090839113 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144802682 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.075189065 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093494307 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.075326492 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.104976178 seconds)
  done (took 22.216425356 seconds)
done (took 38.888085424 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.349777734 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10613157 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106339625 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105957784 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105085214 seconds)
  done (took 1.599705503 seconds)
done (took 2.400451738 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.309459661 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.169552468 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091462015 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165257193 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071253582 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.189549194 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.155583603 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.090195301 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199626836 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071820094 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160082427 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089009929 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072398593 seconds)
  done (took 2.661729504 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091162848 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111319448 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078253651 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089269478 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089963472 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089676782 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107070401 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095647726 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106570415 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080073318 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070794172 seconds)
  done (took 1.812258968 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090028068 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090757048 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097983754 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088137697 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089430056 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08848054 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106382161 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095468818 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106214884 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080601805 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071154483 seconds)
  done (took 1.806863793 seconds)
done (took 7.071842177 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.095982405 seconds)
  done (took 0.892343685 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.055306514 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.598299872 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120200321 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.163758939 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.324411562 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.21010748 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.598511964 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13200622 seconds)
  done (took 16.193795109 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.107799021 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096411665 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076327122 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096251571 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076888905 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094516165 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094008409 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077087916 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096753266 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078866202 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097502547 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078537592 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094668769 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079032134 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093220217 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078826387 seconds)
  done (took 2.273600325 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112749416 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112736169 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10081978 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084309667 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100154051 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081532146 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102398392 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081869433 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09753778 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080728557 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103068155 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.083703981 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101980688 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078266939 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101699081 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084900672 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098193036 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082222164 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101725706 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100737584 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085201232 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097441159 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.083904711 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104615614 seconds)
  done (took 3.167482948 seconds)
done (took 23.32855857 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162366593 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080306378 seconds)
  done (took 1.043881301 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097713784 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115060258 seconds)
  done (took 1.020880517 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103962543 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09470305 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132409369 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09299786 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096009743 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078081586 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127153802 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.095682841 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077929621 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077772226 seconds)
  done (took 1.785610179 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081872217 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080918053 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104338163 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115830631 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087755352 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098645212 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081341119 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09895577 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083680554 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094426479 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085670919 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113913902 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084326013 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117329433 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103268637 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085672852 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106742471 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081868287 seconds)
  done (took 2.516123729 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079452072 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079588758 seconds)
  done (took 0.975241343 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082613369 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076808111 seconds)
    (3/7) benchmarking "month"...
    done (took 0.100970468 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09932232 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076537224 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07539263 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093382958 seconds)
  done (took 1.424200034 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.457139521 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.141150136 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267911867 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.0806117 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119704479 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.329577898 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.093687189 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08240713 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099583847 seconds)
  done (took 2.52569341 seconds)
done (took 12.103007718 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09005343 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.098703111 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.129860721 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.468878246 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.116416805 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.076122568 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158694223 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256846059 seconds)
done (took 2.214522704 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148089439 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334343036 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121857103 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069057157 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093691645 seconds)
  done (took 1.442652454 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07609 seconds)
    (2/2) benchmarking "read"...
    done (took 0.078601638 seconds)
  done (took 0.975630792 seconds)
done (took 3.383740311 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076727104 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.127394693 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075118457 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.071990425 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095747393 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.072389219 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092230538 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072672983 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074727551 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094496278 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.074714649 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.092529468 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075192359 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072109173 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090751383 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075274053 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091022072 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07335313 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073018538 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093869913 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072992516 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09265836 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073520004 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071861842 seconds)
  done (took 2.820596659 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103354695 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095231191 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081844557 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099728698 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078999083 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099817617 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081350663 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094001444 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081065564 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09607473 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079374307 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.098152439 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076965959 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098702308 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078183836 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098106809 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08076853 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094806636 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077520541 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09774535 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081089768 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094688851 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07958393 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099451523 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079573434 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097102702 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078025144 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094838754 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081164153 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098159797 seconds)
  done (took 3.498580501 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081046495 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072414546 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092536264 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.079684101 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091075753 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078188613 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.072659531 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092746324 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077632262 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091686179 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07890598 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072032661 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.092199606 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077638675 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095943955 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077626806 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.214262623 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073860671 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.072831426 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096407006 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.075972592 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091610782 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076993347 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071872858 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092065211 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072178662 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092408939 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073627394 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073193149 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0917346 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.076198902 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095082995 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072988267 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078941084 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095304678 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.072369573 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094414615 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07318417 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07662594 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091266487 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.072512934 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090764297 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073829938 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.079761629 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095411279 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074480265 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09151331 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078249089 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077243031 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099395669 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072664124 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091880901 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078892246 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096667999 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077915744 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072615212 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092449881 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072974804 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095940563 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073824431 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071809529 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09226162 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.075153502 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0925159 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.091047619 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.079685688 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09270477 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078283877 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096051861 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.076047936 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096817159 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08911472 seconds)
  done (took 6.936802422 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078779438 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10228069 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07724544 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074776329 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090947192 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074347155 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099324031 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07355665 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093147255 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092743114 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091744379 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07528361 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07459631 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097030958 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074026103 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094204584 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083526695 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090054352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074555901 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095902346 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075253835 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097475705 seconds)
  done (took 2.708885152 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.219063351 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103094759 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139134504 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091671277 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113446941 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110173294 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080521843 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101116533 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080460133 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102584351 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084205073 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099582979 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112237154 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084306013 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101695042 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084746223 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100031866 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085128142 seconds)
  done (took 2.717536975 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089536849 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.0944725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100640853 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094703275 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076770887 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097355008 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082704319 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110650533 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078801225 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094289617 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086504137 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096979565 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079895405 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095328691 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079528369 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075724246 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098357633 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07551918 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105031 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100769985 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083027009 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106362537 seconds)
  done (took 2.832621776 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093500106 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096213161 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097641552 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098682466 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075078918 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096599472 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084508408 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094498322 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086990323 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096719571 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077358218 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094854391 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08555359 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094450356 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.083265263 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094561231 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079625715 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076151787 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09751702 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07537499 seconds)
  done (took 2.612153677 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117346023 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1104055 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091256246 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122071909 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090788842 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110716841 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121418932 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091600601 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110239013 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104159389 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109485645 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091755782 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121705685 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116747897 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090584579 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121475083 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120327994 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103543548 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110021912 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090247868 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122563109 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090487011 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121310782 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109304651 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092195396 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10949489 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09143086 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116573408 seconds)
  done (took 3.834473406 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077036947 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076022936 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092883222 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073777992 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.072502329 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093010422 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.073196211 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092663349 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075942938 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072907493 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.094943477 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.075742595 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097083633 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076242555 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074993798 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095724913 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075890343 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092457275 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074163126 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07282627 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095550361 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075241324 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094571136 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074329301 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073017439 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094629451 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073258569 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091996058 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076684246 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073631374 seconds)
  done (took 3.2893889 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085071582 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099735288 seconds)
  done (took 1.026239122 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074806554 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111414782 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073995633 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078929283 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10149669 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076645832 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106267519 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081507521 seconds)
  done (took 1.542528036 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09448293 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114487773 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08438316 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106478683 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094951121 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111703254 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137185198 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102716989 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.082041007 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09522672 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.092999657 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095360159 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.082895473 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095644235 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.083596377 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082137949 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09804302 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087308527 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104082056 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079123929 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102097338 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088676462 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098767209 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084656875 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.096645037 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088126337 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.105575636 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.089187102 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099087274 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.090092676 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.101194217 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.072086145 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080654385 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101808184 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07776737 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112742796 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090365171 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099688113 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.086012453 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102578207 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08696723 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094575503 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.083895526 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.101972913 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08818678 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100686343 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083851315 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074528343 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094025832 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079097667 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09522524 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077649332 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.0895759 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085304252 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.080594947 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111024648 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079112234 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098037825 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.079108048 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.098886431 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.082966162 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.098882445 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08000457 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099326593 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085138015 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.099082794 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085687896 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075026988 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091132346 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078553842 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105213344 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101173123 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105439451 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082466652 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102934984 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077543988 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099666208 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08355459 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104205695 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.085860362 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.10176255 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084780184 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105008806 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077728874 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098143765 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085108069 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078611431 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100007983 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.073782445 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113024555 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.07877703 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097335753 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.075142582 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.104900108 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080547198 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.079823525 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094830273 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083549126 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090976083 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082202658 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103052995 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07786696 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.106134434 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083028232 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101444401 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085316469 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106627208 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077345268 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.079277133 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094110165 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083411093 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099360825 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.08416459 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089741125 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081280993 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.077627787 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102879269 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083729007 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098795368 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081321796 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104955404 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.083969286 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099414921 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.073565855 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.099569387 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082189313 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10668033 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.085858004 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098890181 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077228886 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075854631 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.101909886 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08147593 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103022053 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082858137 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100992079 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071831758 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09769004 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083590763 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.103964912 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078460214 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.076927025 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.102291481 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.077835593 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100679595 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.083387586 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.098439691 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077514292 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.100733034 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080712025 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075369242 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10670591 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.079062947 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099937462 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.081898524 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106873777 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.079928432 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102859614 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080139556 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100498348 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084502575 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.075635596 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096780782 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079444415 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107000116 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.079471845 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095060498 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074576295 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.102275364 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.075699461 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08118957 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096084054 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07934906 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103089233 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079026008 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100072972 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079521317 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111318342 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091926445 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1028038 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.084471433 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.106747883 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082035917 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.078841149 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101290416 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083024449 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102899221 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.085843426 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103370961 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083063899 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.099665341 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.074477697 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102994607 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086355705 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.076332306 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098538672 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.076937799 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101042663 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.08461076 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101322033 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083519197 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098798187 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078391651 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106448742 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.082060161 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080767699 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096512948 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.081605547 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10666869 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.083978217 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103826623 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.08778699 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100144011 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076634809 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106118245 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080232337 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.083091061 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097458864 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.074729381 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.095786308 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084099462 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098665415 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08139849 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07103646 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105052015 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08478569 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.097766658 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07711487 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102246046 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.086422963 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098563983 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08157919 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10025809 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.083802911 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110378738 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078088331 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080668982 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108010952 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081723565 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092368367 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.083312393 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100637851 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.077640877 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100148856 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080682245 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079386909 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105533323 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.082218142 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091599745 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.081023263 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099804524 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.07632962 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076155746 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105754589 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.081127268 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100759755 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086570528 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104119224 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082718515 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102134132 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082041076 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103494175 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08357403 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100898643 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084682409 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.100248424 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077965044 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.079142364 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.097136349 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.07852191 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102501189 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082465204 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.097734928 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084447507 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100103231 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078760643 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.079807973 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103716199 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078353838 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098647597 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.076761793 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100401779 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079018777 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.096128405 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.082355792 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.075814877 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106263192 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081351745 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106009824 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07754249 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09360735 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.083210463 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.079095443 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10447453 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083655288 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104851764 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.078445425 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101769084 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.080383755 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107521079 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.075285984 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107045213 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084110527 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097680121 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.081257337 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07666763 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099465052 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.076222439 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100238829 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083100977 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.097576287 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08158326 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101959059 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081552623 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.076617191 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099903617 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082926698 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.098510681 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084047841 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090858054 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.07744953 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076675749 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103458979 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084845226 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104069092 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.079964525 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.10858619 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084254444 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099910914 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074803112 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104749007 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085741865 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.081975598 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107631914 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076386287 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.100095998 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086988235 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093180276 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080161433 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097919941 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07650922 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08529058 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104803949 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.086425561 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099199853 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.077172451 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094612178 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084566397 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100351501 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.072913393 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078558568 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101859433 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08009468 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10070656 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083541089 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.100316481 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085195418 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105723214 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081875217 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.080265294 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104732228 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074792888 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.097758148 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.077499379 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.100724386 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085501285 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.075610417 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096106383 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081656552 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100664527 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.079627537 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10216533 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.080834322 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104252474 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084139604 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.080915001 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110145891 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.072736601 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102348754 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082310063 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103087681 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.078013015 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.102376728 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083123716 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103955832 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.088404314 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083260771 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100172342 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082687944 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10071912 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083104389 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102233905 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083818775 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.097928718 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085380991 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106378798 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081140253 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.080375367 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098975522 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.078725531 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104021828 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084621454 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.100915307 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086859803 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101175983 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.081237957 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084228737 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10373777 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081136441 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106364447 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.080576678 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106100696 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078687084 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107351754 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.079275654 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104653454 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081466443 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.07552077 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103747333 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082164367 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101724572 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.084552682 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104633917 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.078609731 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.076933772 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100737454 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.080384078 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109352569 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085854283 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.101908644 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081676701 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097241282 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.076089771 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104989202 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.077327848 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07966114 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.101541282 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084872253 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.101877619 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079096117 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102093344 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.087758061 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104623157 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.085035916 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.095674293 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084862105 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083156481 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101669039 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.079849022 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.098936338 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084419733 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.105116743 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.080604657 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.09832678 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088798049 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.103498866 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08609944 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.079476928 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.099776319 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.078199588 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098799527 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085661461 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.101031801 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087361712 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10101218 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083659919 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10899917 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080859576 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.078374275 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109943889 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082216169 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106940463 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.0776104 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.100841017 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08609826 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105248728 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077796079 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.097680655 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.077690148 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.080897643 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.099107556 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077389842 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10998046 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087289212 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.101551266 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082212839 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101549678 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079412459 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076589959 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.099843845 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085007994 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.100930637 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089254397 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.098461699 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.079053678 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077003345 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104297834 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082137309 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.103676391 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.076252954 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09772239 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.077704768 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.081108669 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108351932 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081478396 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105300196 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08215562 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102347148 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080657256 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109217018 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.076230027 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103541762 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091558093 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104374715 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080380666 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.104161542 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088731271 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103070548 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079069076 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084223795 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102535486 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.079059741 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106368322 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084420291 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115472015 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081902844 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.098509199 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082827599 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.101157664 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079807418 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.086457998 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108070038 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083733296 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106059675 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080018994 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107685886 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081881334 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106325301 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.082479697 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10195031 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083094005 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078540656 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103380457 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.077101772 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106874762 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085198635 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102978351 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.086594097 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098843976 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090903587 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.107864358 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084573237 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.07500942 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100084294 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.078871771 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097783612 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085754496 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.096890426 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082342458 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080870058 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103643875 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.079695524 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105770319 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08199702 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10578921 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083203526 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072544976 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.101357072 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.081479626 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100933702 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078505223 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103663477 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086619161 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.105431338 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089997831 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.07880717 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102560601 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080706452 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100574103 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077991331 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.106183586 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082632716 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081117371 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10045149 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082697649 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106854657 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083384028 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105687746 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085989828 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.102879647 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088380784 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106582069 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077820271 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075530973 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107247703 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079984504 seconds)
  done (took 54.97337903 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124832973 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106763699 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073541646 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095843828 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121591652 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079704762 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074247806 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100676032 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078329551 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109091887 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074451076 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095878989 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115812771 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103289963 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120697994 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110257662 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075080085 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099696412 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075375713 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098966527 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095759861 seconds)
  done (took 2.92085513 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102857759 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114824486 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090381108 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118416124 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106785139 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092866075 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112376651 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114016575 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096792019 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108763384 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117091725 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09145859 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.108945503 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106913776 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088345261 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11099194 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09685402 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106633058 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113451537 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091927879 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111282058 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111426563 seconds)
  done (took 3.202776067 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089648802 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082116937 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.104480255 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.074024358 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103128149 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.074415454 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.108893562 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.077647092 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086249113 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.099400765 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.078012687 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.098195269 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08424513 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07316965 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.099862451 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.076181378 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150272984 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10854656 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08287215 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105592132 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076984425 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.101702001 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.078520723 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.076731368 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.099830028 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092419635 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105415793 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083441273 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10397875 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.07880209 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082201661 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.099057057 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.080100366 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.100846507 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.07927514 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.077143424 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104776132 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082270234 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.098766791 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.079992397 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.099708631 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.080212751 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08348699 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102379693 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079499326 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.097287868 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.081125643 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082218919 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096863929 seconds)
  done (took 5.331133158 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114413489 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.132487662 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104910814 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144163212 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118801583 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093248574 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.105586967 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143013937 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078068708 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.080351749 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121968303 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118881069 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081644519 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.111534113 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102845231 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084123881 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105262009 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.079660222 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108398254 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08004718 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109821697 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.086141769 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118583096 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116470643 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088413396 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103973585 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.079889271 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110403743 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.093474381 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110636939 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109935269 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090802108 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119619705 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105444645 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.080025008 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10552204 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100134391 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105550053 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085572065 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098446694 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086293635 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110851639 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.086394368 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122676082 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103846695 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.085437133 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103667759 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.077076697 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116321419 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.085573349 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114960462 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119781439 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087831287 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105547683 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089863213 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119899446 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104201655 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082490757 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107837629 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09372545 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098883301 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088522121 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117400424 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.084581063 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114080778 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117252806 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.083784698 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109975706 seconds)
  done (took 7.980911908 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113314708 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110427145 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099039151 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122021819 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110930308 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088843189 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110251067 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088013354 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110385214 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116373309 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089096668 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.157825217 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084275145 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117164704 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109163627 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08908273 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110993279 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088736242 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110490398 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088107965 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109851056 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12129165 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089165107 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12044485 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12232018 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085616048 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110080587 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089141807 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121297158 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108631135 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101612868 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.110502164 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087386 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122488336 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122495795 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.08769008 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105660713 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087394664 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111014872 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108997767 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086770868 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121995229 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088482497 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107798038 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08857187 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110819806 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121069083 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.100959286 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116351882 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116592632 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.088736233 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122244802 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087798923 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110577003 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120955127 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130312615 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100064723 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121715613 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10981365 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099737903 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121974063 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130241477 seconds)
  done (took 7.539176528 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113037173 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117240142 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.122856858 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075295102 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099494978 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088392356 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098924287 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.078567013 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115531413 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095352692 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119592572 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107436556 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092096161 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119803015 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086256001 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113105958 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109459672 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088422643 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116834575 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10882168 seconds)
  done (took 2.967085408 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089918212 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121390882 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.081297912 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109574657 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.083514992 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109821978 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082469064 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104439875 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082177814 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105270526 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09418145 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115064132 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081797064 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109688312 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112538809 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088818219 seconds)
  done (took 2.470581038 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.102699102 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123445843 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.103381912 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.109187588 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.077257393 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107430951 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.082179677 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.098011956 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.076746416 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.118101937 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086723467 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109038231 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082915147 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100132508 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.082102383 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109028899 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077349427 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083450306 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105785631 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103294223 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108292753 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.082227174 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107626568 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081588496 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106142176 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085249094 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110215257 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076950347 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101362443 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083111662 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105047814 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087515187 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.099762333 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085681199 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101201387 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077779644 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104520853 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08504814 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107769462 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.084275842 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077951427 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105761781 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.082949779 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105217129 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.076572898 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106288531 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.076434552 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108694471 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081819102 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10530891 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.083273468 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109653292 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08777272 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.113369427 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091495265 seconds)
  done (took 6.13978888 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096781068 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106203071 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076916647 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.076985984 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106923566 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.082761655 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107450843 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.083101747 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104843404 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077885286 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104730253 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.085768676 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104411703 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085508798 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104604413 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085665779 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075094464 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104630673 seconds)
  done (took 2.582617062 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087190916 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078972255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.111340133 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08033224 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103196379 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082885492 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098844255 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079097404 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077606065 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103404672 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079692487 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105164674 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078944672 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.104962133 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080295035 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101274843 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.083714949 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077894537 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102555643 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07533306 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104601617 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079402461 seconds)
  done (took 2.888658607 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118021642 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.122046601 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.089028154 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.206072058 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.122584225 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.105949197 seconds)
  done (took 1.677853312 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106747083 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14141817 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08067478 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106059489 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094212109 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108474053 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085808176 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107402315 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120565377 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098188872 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108049369 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12198107 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098941508 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119693676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116772073 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094415056 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10731528 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08450798 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104330507 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129672079 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085674987 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122408744 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107783297 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085846863 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10781904 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096416563 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121993086 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120355461 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084452661 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121557681 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116759066 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086076882 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121484018 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120177723 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083512801 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121216907 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0854998 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130631245 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116740166 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118521526 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08376304 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116333817 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098186939 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115566733 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122077914 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085333362 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115415612 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106780204 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086100881 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135930106 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116923753 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096203938 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117457781 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121454246 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120902327 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135432486 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101079812 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119264832 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11673634 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099419817 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119360237 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117211967 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09630388 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120728857 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117168854 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118590013 seconds)
  done (took 8.109552785 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121486961 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105357437 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085614618 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121706415 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119917158 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086056335 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109226865 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085545805 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109063825 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081910185 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154438044 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10836768 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120662726 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096834746 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10918847 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085103912 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109062144 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119613818 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083026099 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13723479 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108413987 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097738676 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120005679 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11959574 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120925013 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095014433 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108851237 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085993216 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108141031 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085620784 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116303199 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107683471 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097928794 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105672816 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118531099 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08784082 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107937318 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092733454 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108477577 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093807363 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120448703 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131180798 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107948573 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086510863 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121385576 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085726542 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108675813 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082272026 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108797009 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081722441 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121318042 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121234179 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12272481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096824986 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109510405 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10728141 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087322374 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108275868 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086463503 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117538902 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118364985 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087328759 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137730203 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107755377 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087495832 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120618021 seconds)
  done (took 7.93037306 seconds)
done (took 151.354672357 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097852133 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136355477 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095364402 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.165638683 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.082425587 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.114148852 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13712421 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095400716 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.104342067 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081623612 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10345893 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084869527 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.145978745 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105018877 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.081227643 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10618652 seconds)
  done (took 2.655760105 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.17750384 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.292032466 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100956549 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.100833358 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08692997 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080393793 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103682121 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088536747 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104150416 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.081860928 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080292741 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.104842122 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.079964438 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.104073388 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.083019341 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.103158936 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.081507057 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08090988 seconds)
  done (took 2.859265235 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109281379 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148860775 seconds)
  done (took 1.187462171 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117390143 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173917937 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.270292125 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.152340061 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.132673977 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.0947125 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153506331 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123477596 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.204143829 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127225365 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.105364233 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111061468 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.135769231 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092550063 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112099689 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.088611069 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.138753339 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.087994528 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11259458 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.089098641 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136386667 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.081053448 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115092379 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.08710178 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185630592 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126437993 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102762245 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.081928687 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.087917003 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113413945 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.086809731 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11811898 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125067434 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.146373753 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092890849 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169584267 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.089562836 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.108300331 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.091074952 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.087798141 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114566807 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.114462254 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.095498836 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.110179458 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08092572 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.109832646 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.081766992 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.079990489 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113099793 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.088403161 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113281756 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.086859502 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.389692516 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.09062934 seconds)
  done (took 7.449409074 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799311127 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149161498 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086588454 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.866920694 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134624018 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1232739 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.762966332 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132848354 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228664208 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.798624124 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100426002 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121841506 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.2242789 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.229211286 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.950444257 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288026964 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669551042 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123202702 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110698552 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.145453211 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115804964 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132488382 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103253067 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424179969 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.109329441 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085101203 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114743209 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094086358 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.154513239 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108812559 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087560652 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192967945 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.241181766 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.177971789 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10936133 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084399531 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107328337 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.160878346 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260416319 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190718164 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.172738306 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080851243 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107993744 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.094157279 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126873002 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103155953 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157308568 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.166265571 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.165177369 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11012233 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09519708 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115960037 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.094077619 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178525443 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084784225 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315610066 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.28929835 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107239761 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113784443 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103190317 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258459525 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084375388 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222270801 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132245066 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186089891 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107299645 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753712631 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.159533126 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108060525 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091283843 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.114232529 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.089789874 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118064084 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161297414 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.400817373 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097521409 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111650705 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083425375 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226799723 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085624381 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106848331 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157022192 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.086376078 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115981672 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097487048 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120043505 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.163222691 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.226197678 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120681949 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114998071 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091511119 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119501991 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.087439595 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.206636935 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21604766 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.153278494 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207671019 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119650431 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159098624 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16099194 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117553595 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165496268 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.113766058 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100678427 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119060617 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.211843392 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.115254097 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109023862 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089635817 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115559059 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.140148007 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088497962 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116022718 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163382696 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.4548749 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.159334442 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.105815141 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088542937 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117450422 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157024396 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090594758 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257837193 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11615254 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162769571 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091276572 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.10625966 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.092426009 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.157007564 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120569727 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116768212 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096702471 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1164982 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.227543161 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215498439 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097750048 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240181923 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175812581 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0941992 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.165245779 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117134944 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162861556 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115772531 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095523689 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109702036 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.748342487 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121338568 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091856078 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113954691 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180805591 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08478937 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108680352 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085407532 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082166972 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776627931 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110482082 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084181671 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085694884 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116613593 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092065081 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115274212 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089059325 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179359905 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203289784 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118785676 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113969138 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086156745 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156730489 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109560511 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086624215 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08520875 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109927505 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.092201869 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112171907 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085873503 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186818045 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.155068616 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.193382247 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.594404929 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085234868 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10983452 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224722655 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086921223 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290915027 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092638212 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225306632 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161853192 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105317609 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.284016415 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18463114 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.159239709 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.112357663 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.166218125 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082488702 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11513704 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.157620459 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107687447 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093959641 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154001426 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122191044 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.096549466 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.967225307 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1084023 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223329829 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082452339 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.163569336 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111190862 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094882307 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294711903 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108302369 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103404184 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156472331 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114014988 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085913552 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.86866442 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087225524 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118591651 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092617972 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21951829 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159573015 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116932191 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092346546 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119070141 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.156929724 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206124651 seconds)
  done (took 42.267883947 seconds)
done (took 57.343106097 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28361741 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212169606 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270255379 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166460296 seconds)
  done (took 1.958968207 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17445427 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.12262071 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.143305507 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.078823995 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149656864 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104467251 seconds)
  done (took 1.727328636 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.37026254 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275185444 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.215318112 seconds)
  done (took 1.811284962 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.246219814 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.241756144 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.349819233 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.396652587 seconds)
  done (took 2.285340462 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.201480688 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096588879 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127435255 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111560241 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165926563 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.20477667 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13944888 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.147958866 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104293314 seconds)
  done (took 2.298979693 seconds)
done (took 11.03900022 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.304931673 seconds)
    (2/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.266657373 seconds)
    (3/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.170262264 seconds)
    (4/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.230574822 seconds)
    (5/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092788344 seconds)
    (6/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.235677 seconds)
    (7/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.226967953 seconds)
    (8/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088154359 seconds)
    (9/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115122787 seconds)
    (10/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.222084266 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087542718 seconds)
    (12/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.195244917 seconds)
    (13/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.173902249 seconds)
    (14/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.171213697 seconds)
    (15/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.116689881 seconds)
    (16/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101162904 seconds)
    (17/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.223305984 seconds)
    (18/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.159714897 seconds)
    (19/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.093926654 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115858152 seconds)
    (21/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.084440942 seconds)
    (22/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.216232732 seconds)
    (23/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113962624 seconds)
    (24/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.16513285 seconds)
    (25/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.12194628 seconds)
    (26/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069773838 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.186342079 seconds)
    (28/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.097435042 seconds)
    (29/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.089739684 seconds)
    (30/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136289042 seconds)
    (31/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078179356 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.172752122 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.228461054 seconds)
    (34/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.092049411 seconds)
    (35/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.095132222 seconds)
    (36/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.080213518 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116969116 seconds)
    (38/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195546149 seconds)
    (39/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.154191519 seconds)
    (40/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.190110897 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.112101266 seconds)
    (42/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.16471898 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.132319019 seconds)
    (44/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.171734686 seconds)
    (45/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155651344 seconds)
    (46/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.198921109 seconds)
    (47/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.176203654 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106895408 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.113515664 seconds)
    (50/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090601871 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.132268405 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.088884975 seconds)
    (53/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.120206475 seconds)
    (54/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.236827435 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081846972 seconds)
    (56/286) benchmarking ("sort", Float64, false)...
    done (took 0.17464965 seconds)
    (57/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.151588043 seconds)
    (58/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.119109003 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.092817334 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.104916724 seconds)
    (61/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.070379959 seconds)
    (62/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134054021 seconds)
    (63/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.08579747 seconds)
    (64/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.188357039 seconds)
    (65/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.204830415 seconds)
    (66/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.099724987 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121657018 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.082173028 seconds)
    (69/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.072811689 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.170927276 seconds)
    (71/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135020639 seconds)
    (72/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.19926307 seconds)
    (73/286) benchmarking ("sort", Int8, false)...
    done (took 0.194173261 seconds)
    (74/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.17100275 seconds)
    (75/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.122466197 seconds)
    (76/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.089810547 seconds)
    (77/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.186099146 seconds)
    (78/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117951508 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.081850404 seconds)
    (80/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.177922913 seconds)
    (81/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.083054489 seconds)
    (82/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.094706647 seconds)
    (83/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.085019171 seconds)
    (84/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.082233729 seconds)
    (85/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.218681485 seconds)
    (86/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.104370668 seconds)
    (87/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.095165997 seconds)
    (88/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.130772774 seconds)
    (89/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.093437197 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087615341 seconds)
    (91/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.098774688 seconds)
    (92/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.085875455 seconds)
    (93/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.106421483 seconds)
    (94/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.167665625 seconds)
    (95/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.188647723 seconds)
    (96/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.118719006 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112143099 seconds)
    (98/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.195238994 seconds)
    (99/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.114365282 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.105647417 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.117553564 seconds)
    (102/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093315079 seconds)
    (103/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.08180875 seconds)
    (104/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.175381212 seconds)
    (105/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.108352546 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.082791616 seconds)
    (107/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092232604 seconds)
    (108/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110494454 seconds)
    (109/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.093958766 seconds)
    (110/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.094386522 seconds)
    (111/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.081628668 seconds)
    (112/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.153847807 seconds)
    (113/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.071431487 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.185231567 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.091785798 seconds)
    (116/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114478458 seconds)
    (117/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.128221684 seconds)
    (118/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.202812808 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.114271068 seconds)
    (120/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.081012034 seconds)
    (121/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.188721545 seconds)
    (122/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072974113 seconds)
    (123/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.195000831 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.087404785 seconds)
    (125/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223394701 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11444129 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.083600359 seconds)
    (128/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133605626 seconds)
    (129/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.178600983 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.082405217 seconds)
    (131/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.130069852 seconds)
    (132/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.094649348 seconds)
    (133/286) benchmarking ("sort", Float64, true)...
    done (took 0.24054617 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089029715 seconds)
    (135/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.163440188 seconds)
    (136/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.196430869 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08176784 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.1134275 seconds)
    (139/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095581603 seconds)
    (140/286) benchmarking ("sort", BigInt, true)...
    done (took 0.239450537 seconds)
    (141/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.128054214 seconds)
    (142/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114899059 seconds)
    (143/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.1051668 seconds)
    (144/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.108873579 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.091714465 seconds)
    (146/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.10754698 seconds)
    (147/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.175728759 seconds)
    (148/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.084643825 seconds)
    (149/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.072007341 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10639752 seconds)
    (151/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.163722435 seconds)
    (152/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.095719522 seconds)
    (153/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.083937249 seconds)
    (154/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.095503738 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089317917 seconds)
    (156/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.079545564 seconds)
    (157/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163807563 seconds)
    (158/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.073297521 seconds)
    (159/286) benchmarking ("sort", Int8, true)...
    done (took 0.225781932 seconds)
    (160/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.113507535 seconds)
    (161/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.175556711 seconds)
    (162/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.180050545 seconds)
    (163/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094027498 seconds)
    (164/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.098799624 seconds)
    (165/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.179170538 seconds)
    (166/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072448169 seconds)
    (167/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070558991 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109235191 seconds)
    (169/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.09314387 seconds)
    (170/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.069605476 seconds)
    (171/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.105255704 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.087912757 seconds)
    (173/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.113496685 seconds)
    (174/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102190494 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118693647 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.073638481 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.08619247 seconds)
    (178/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.10625125 seconds)
    (179/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.10950377 seconds)
    (180/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.113473258 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081580866 seconds)
    (182/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.107553063 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 0.200470439 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108564804 seconds)
    (185/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.079121182 seconds)
    (186/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.101092174 seconds)
    (187/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.079566665 seconds)
    (188/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.079883088 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.136015828 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.091514377 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.116123295 seconds)
    (192/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.082947111 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186980863 seconds)
    (194/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086753213 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.16832333 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106670751 seconds)
    (197/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088832185 seconds)
    (198/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079598336 seconds)
    (199/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.099242724 seconds)
    (200/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.085260675 seconds)
    (201/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113230635 seconds)
    (202/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07421945 seconds)
    (203/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.070475028 seconds)
    (204/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113560991 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.082644136 seconds)
    (206/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.079376423 seconds)
    (207/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.162428957 seconds)
    (208/286) benchmarking ("sort", Float32, true)...
    done (took 0.235325845 seconds)
    (209/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.086572849 seconds)
    (210/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.109202031 seconds)
    (211/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.071277825 seconds)
    (212/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.095248392 seconds)
    (213/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098967071 seconds)
    (214/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072418677 seconds)
    (215/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.09681629 seconds)
    (216/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070556524 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.096177535 seconds)
    (218/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100197571 seconds)
    (219/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.080919383 seconds)
    (220/286) benchmarking ("sort", Float32, false)...
    done (took 0.177637804 seconds)
    (221/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.109000776 seconds)
    (222/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.072541301 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.082488065 seconds)
    (224/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110225866 seconds)
    (225/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082136246 seconds)
    (226/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.095021345 seconds)
    (227/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.092913046 seconds)
    (228/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.199420191 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081893653 seconds)
    (230/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.106537378 seconds)
    (231/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.153179392 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108120405 seconds)
    (233/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.083504197 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.105494512 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.084379958 seconds)
    (236/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.070836475 seconds)
    (237/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134804356 seconds)
    (238/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087442126 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132086205 seconds)
    (240/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083770116 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.113441829 seconds)
    (242/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.086509912 seconds)
    (243/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.078858278 seconds)
    (244/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.09735087 seconds)
    (245/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.083877495 seconds)
    (246/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.097079329 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.082970181 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.090373867 seconds)
    (249/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.134298709 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072954503 seconds)
    (251/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106020086 seconds)
    (252/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.082491317 seconds)
    (253/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.188436886 seconds)
    (254/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.070147778 seconds)
    (255/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069323717 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107726358 seconds)
    (257/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075248291 seconds)
    (258/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113734633 seconds)
    (259/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.082992964 seconds)
    (260/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069462131 seconds)
    (261/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.095542081 seconds)
    (262/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.079537355 seconds)
    (263/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.107621744 seconds)
    (264/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.072273328 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.08969504 seconds)
    (266/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.179739079 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.079945598 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.106876018 seconds)
    (269/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.070494179 seconds)
    (270/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.134286082 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.086479889 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.115027934 seconds)
    (273/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.142342589 seconds)
    (274/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.095896103 seconds)
    (275/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.073814767 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080403898 seconds)
    (277/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.097451488 seconds)
    (278/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.082603935 seconds)
    (279/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.07257672 seconds)
    (280/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.107666122 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.111065428 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.106707948 seconds)
    (283/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.073875928 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.133705901 seconds)
    (285/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.071010293 seconds)
    (286/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.119963224 seconds)
  done (took 35.561003366 seconds)
done (took 36.524366187 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096592614 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148172457 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092752544 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135006757 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.095965809 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121532475 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.091702734 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093336791 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121774239 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095737417 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.120006471 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072662384 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.119018042 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093243542 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.117741895 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113506427 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120341531 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.08980911 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.110320746 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.083083871 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.085443566 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.108418822 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083696697 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.096580285 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095376 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.090312458 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114112028 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093429822 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.108204438 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.083404417 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.080210513 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116559128 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081288022 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121863945 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091054861 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.110373636 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09500378 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.091470514 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.109368822 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081609971 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116298461 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.082651151 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.112866984 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09146777 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.083799594 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.106820187 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.085999094 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121030236 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114346193 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112865987 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.090804406 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.092000178 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.118556398 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.088509293 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.10757312 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.085722609 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.10628742 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114452916 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110884576 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088990547 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089423857 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.116599821 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.081492753 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110254641 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.08683072 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117114001 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095099799 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080758506 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118106741 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.087138483 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.106579363 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086816782 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.080650458 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.10951126 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091401383 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119393358 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081703716 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.082614763 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.115681234 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.086824935 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.107247741 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084958762 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.107633244 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.086641771 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085198013 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097660373 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.082279109 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087265907 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10785972 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.084982831 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114916069 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08927565 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.108092454 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094886335 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081160872 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.107204778 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.083369721 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107026339 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.085719388 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080957324 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.10861138 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08507671 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.11477972 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08556579 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.08360698 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121483055 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.082760345 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.113790494 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.082624247 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.081231464 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124121082 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.093012281 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.108751674 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088338135 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.081059922 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.110285045 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081818531 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.108307953 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.0833146 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081669296 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.110201213 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.083011234 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11006948 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.085110731 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.096388003 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.109106216 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.08126124 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110816052 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082816303 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.086356047 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.108655049 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08241266 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.108817638 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081160327 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085516055 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109262767 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.084389079 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110492259 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086422732 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.082886895 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11218792 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086441714 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110082997 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.082232285 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.080413373 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.103191221 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087639192 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110641019 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.084667968 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.082324873 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110406987 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082520709 seconds)
done (took 15.888004088 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.084277471 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182418986 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.143471208 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.117042173 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129949677 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.082602208 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119238019 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11310589 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.111364976 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.138162116 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.107205971 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.12687755 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.122263108 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.107175133 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083772564 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.085705977 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.110443637 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097962593 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148657078 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12747381 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119706783 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.107085711 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.113858229 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133645764 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09139662 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13692295 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.082986869 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112994967 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086926199 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125008275 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.102845251 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.111108757 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083985721 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128989974 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100138709 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114795034 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.083745378 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088850631 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108954976 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082864209 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132276167 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104678665 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.114829858 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08821633 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11213086 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085818675 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.109386396 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.092589566 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.117858379 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.087926055 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.122275155 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.113771759 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.111114534 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.093133305 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.123960797 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093848927 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.11718603 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.086076206 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.08229144 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.111985988 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082393101 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.111245301 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.098423716 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.134199938 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086308915 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118520605 seconds)
  done (took 8.197616109 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.101229506 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137382526 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100211815 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.126618354 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082872459 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082849034 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10971623 seconds)
  done (took 1.762531466 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084891562 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108356102 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135214652 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109007027 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132786371 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.134792438 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090392055 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083162926 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13001482 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084837878 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135387724 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123285368 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112140275 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.090715744 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138018954 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.083322385 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137488967 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.083119881 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11274331 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111347336 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112633205 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.102387559 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.111919637 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.084838808 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10094782 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.111046795 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15780355 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089902874 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081509796 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.113761124 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082268987 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.149374115 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100864485 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119043385 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083786525 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129209387 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10295931 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107486315 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.100792598 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.11518909 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.103480843 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.084103944 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.111907296 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.082440242 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.113928227 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098860949 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.087178967 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.111976706 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.086888398 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133694035 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.084996387 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127233021 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.085408899 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.087115622 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112606525 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.086919773 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123819393 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.08496788 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135969169 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082418611 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132160953 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.1048663 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127236678 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.105151381 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112345868 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.102656997 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.100482969 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.113917318 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085394757 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.114277004 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104576258 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.107845339 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.08792038 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.097963339 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112172053 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110002731 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137721643 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084843943 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12188105 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084854224 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.110832536 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08562511 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.135291847 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088970925 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084272061 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115392579 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087825961 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107577637 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.084993854 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.089131436 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.109330865 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085898697 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.112314054 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.08653947 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086849178 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131357277 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.084580047 seconds)
  done (took 11.267547782 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088236093 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086144392 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.115948311 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086980435 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111737642 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087122351 seconds)
  done (took 1.619311529 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114916929 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.111496464 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.098760695 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117290899 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.125118218 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135432842 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109849744 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121076077 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.101255272 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.122598339 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108780265 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137371774 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139120227 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.090551675 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.134598172 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.090758022 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.109368235 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117763347 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095090795 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117072843 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101656841 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118489687 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089331725 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130453577 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094476778 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.116702111 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09100728 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.123560783 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.096584723 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121218501 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.090222372 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.121084351 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090330223 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.120999343 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10975813 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.117325379 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089886086 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122840789 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091213799 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12127951 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111300136 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117012248 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.097230569 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12353467 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.094195087 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.117449514 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09672911 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117740021 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109297171 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123707588 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097333574 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.115679422 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094691642 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12264033 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.091296477 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120747667 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096178912 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136838744 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.090276333 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116866811 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.087752108 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119648954 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095215938 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12052855 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095830637 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122964756 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09175324 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114971998 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090963393 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.08924571 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124383013 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.08647345 seconds)
  done (took 8.932129049 seconds)
done (took 32.797687318 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690398521 seconds)
  done (took 1.728490002 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.820897819 seconds)
  done (took 1.860375874 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.430149419 seconds)
  done (took 18.49540382 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.470851273 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.56673772 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.954273143 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162171346 seconds)
  done (took 3.192890542 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.973956138 seconds)
  done (took 2.029281124 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284140975 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233482706 seconds)
  done (took 1.562477831 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.800669262 seconds)
  done (took 1.853697178 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.456158839 seconds)
  done (took 2.503656986 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324054592 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155037982 seconds)
  done (took 1.538103065 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553390678 seconds)
  done (took 1.608015723 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.090931916 seconds)
  done (took 16.144905214 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241461826 seconds)
  done (took 1.3025512 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28997012 seconds)
  done (took 1.345015751 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.64348867 seconds)
  done (took 4.696928398 seconds)
done (took 60.911801325 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.095429524 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.096624074 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124562829 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094068076 seconds)
  done (took 1.459434448 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101076821 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.091027083 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.126607397 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.089563508 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127374668 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090183506 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121062258 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164851517 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.091261098 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.092364601 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118499316 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090200633 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.121097938 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092971948 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116175668 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.094880363 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125599781 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091382598 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122794986 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092335818 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114048613 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094948706 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120287064 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.091099469 seconds)
  done (took 3.645478991 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.096795133 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.088824984 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118794862 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088954147 seconds)
  done (took 1.458566345 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.096666815 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101341033 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.128542148 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.095424245 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13027354 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.100229728 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115804507 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.087033701 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11667825 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094937582 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.110888048 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.109925812 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127624647 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094920819 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.122757277 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089662179 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085637142 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.129240098 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094957726 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123159566 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088285726 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.121582408 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086549289 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129013659 seconds)
  done (took 3.645911235 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.167019171 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.124807187 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.107997118 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.118773627 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.130180349 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139935122 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.083494122 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137830123 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.083608816 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127375264 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088214303 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162786506 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096227403 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.110606575 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.08483412 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08222219 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124260649 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.096004101 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.114839996 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097200702 seconds)
  done (took 3.33879361 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096076711 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087459496 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.110779337 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087114543 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120609973 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092958786 seconds)
  done (took 1.664716017 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094349861 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084762678 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116524973 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.086859162 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11672883 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085442164 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083747409 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11282119 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085487234 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109852581 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087982052 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083112894 seconds)
  done (took 2.217772943 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.542654019 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116454215 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.114601996 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.085960287 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.094332925 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113089809 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101190593 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.11389444 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113495678 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.111385947 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.085804948 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087388045 seconds)
  done (took 2.7499069 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207573962 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097080829 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261360563 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.349186288 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158622059 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164225369 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276614022 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165086646 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181913267 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134012776 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19245981 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128042528 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152437051 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176336659 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137790943 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.126877989 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171617758 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223473617 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119657048 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20018111 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160004271 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16608194 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17731851 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150913625 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133904011 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129629806 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118776456 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098891228 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168458224 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167001306 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196516561 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1198902 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137995696 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196199728 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230349819 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177074191 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278609324 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104870685 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177695132 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166307833 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222600164 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139311807 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191569488 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153184379 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099965643 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204971188 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128889911 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177407141 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13025632 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138338845 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180741648 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175188783 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.178453994 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106119757 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.324214253 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121552622 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145111682 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178867739 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183182481 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187954396 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165729463 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.116098374 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181592125 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181915059 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17631107 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115723026 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162404153 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123321019 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172294153 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192520082 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17430687 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161740117 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209064369 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106686582 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162117212 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166670721 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15102445 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174768585 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131140803 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119435461 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146564175 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107868313 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1267055 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.163162065 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122321504 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200059213 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134457238 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141666211 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226569622 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128736312 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159436137 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160378174 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163152365 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144846369 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086718377 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144568719 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148199818 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125451571 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130923865 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15562495 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138227382 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099067089 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149551642 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.093042468 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157154461 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.124121318 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133410643 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161178624 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.123910353 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160935725 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119310391 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.14985425 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166826253 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182257135 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130113064 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102143719 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190270469 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15537589 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132538295 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170641543 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181966471 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125795324 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13652782 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165625235 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190038875 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140814045 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184842774 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110042568 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133153209 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138012242 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155625948 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126649893 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155675359 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128347307 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123981673 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214946144 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.094220563 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133361575 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170625106 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09891909 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127311456 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112124579 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133635523 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.10549916 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.139562164 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134025674 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152299151 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129559012 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151425856 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15151198 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139859579 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186869562 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129150652 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.121739489 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145626424 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088845116 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.175141327 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180216941 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128687334 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192929681 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.166060936 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19294704 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162172355 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130205596 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174208294 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098303441 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116954734 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161784466 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158547714 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131973574 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178395571 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217031142 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166206441 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121487355 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146466745 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161146686 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161658278 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153990902 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.106990081 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159503052 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155013411 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.091150363 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122979727 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124643747 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112299866 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128653669 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101963565 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178299376 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159818509 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211896353 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132331623 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140807437 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178582489 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123463667 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160174493 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.168780417 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109933954 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182845571 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183027176 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165662427 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141532871 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171234919 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089292062 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121572574 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103796547 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16311157 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130680495 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104376483 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141211396 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178475037 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170425633 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147200019 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197586784 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164322602 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188095416 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118741864 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.13830759 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165410177 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15552079 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.148797715 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132702676 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148381474 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173307084 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111711735 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185749341 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15990768 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16679035 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220897801 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.121144232 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128544652 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117477486 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16202144 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138951501 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163307665 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141893184 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106968557 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149616279 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.094850667 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124175666 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170314301 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141438976 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174219292 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.1148897 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193086414 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096462908 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142188586 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156893497 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116143432 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113219793 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16289258 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181758239 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112421592 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155637712 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168712991 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129422896 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305917234 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187477406 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180992869 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133505314 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112420996 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159271595 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157648218 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160510297 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176003317 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115534211 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176925325 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155658531 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.133602929 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105498716 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14595038 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147470834 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108620111 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.130023091 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15079169 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104886822 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175505676 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142022742 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156206926 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162606638 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.11968317 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14320252 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140247524 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196603025 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126478766 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173480154 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148054589 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163776127 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194336578 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123792599 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098447836 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125904452 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176192599 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102062275 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15739005 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.180603047 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196102152 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158728087 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163255602 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13662294 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.087364448 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156535818 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146741042 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194473569 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14324187 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105228001 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210204347 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113630326 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127934315 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131048342 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307627606 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116248886 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170734204 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111596635 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270986096 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096287543 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128367327 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12916696 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166511556 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137130701 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.14672273 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160726659 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142784559 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158484879 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106370159 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212555653 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203791344 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167097566 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169309394 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.101740137 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155755501 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160344467 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17362202 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141962949 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.106023974 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160723481 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179023436 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.184591227 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132076157 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159802945 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131371246 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156646015 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166116419 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132756048 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19467647 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128005376 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132406612 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138398441 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121619829 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15364977 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.181467792 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104852219 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170282865 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155363526 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130638822 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096722587 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150822086 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156339709 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110783642 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125710735 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169060916 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.092366806 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160747803 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17778131 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09954322 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151831083 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145141897 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135351754 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112872084 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144250576 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134536126 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.137234355 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181916282 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128153568 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173347299 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173313203 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160337956 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156276648 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114177923 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666124692 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.097299304 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178185167 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145495951 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181011461 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146773457 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163831087 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128964581 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147494353 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164003556 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146608322 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226524851 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132084998 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156073082 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13069199 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142898559 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112806099 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.130689036 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147733887 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130693187 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139538265 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135157285 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.152366629 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114991137 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.13065948 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107647738 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18145703 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144542313 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173729661 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178182701 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105095121 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164061716 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165658488 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130449483 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157967106 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169405469 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10983101 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148079377 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130895718 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102496701 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177643701 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121305044 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128440245 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157746604 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161916329 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160945416 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.130813796 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128242402 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141279305 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15827627 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126695598 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.122823541 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155325921 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129871082 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.096843657 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152396128 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151703724 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.117544565 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125657991 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.135478828 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177927851 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.120784982 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102315917 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280689379 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156203934 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188222192 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.142190671 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102211045 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142457736 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144295691 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149096932 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128903676 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128162474 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100239029 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.12900318 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.161813707 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113417468 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156229507 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183031772 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1546474 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196709338 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.104311971 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278481091 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138155591 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150303241 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.093535656 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126905518 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111738996 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132888703 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111206344 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215124521 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179113361 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.116366958 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132556626 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096314858 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.123105835 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103517989 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158609098 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151998723 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154537664 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111819599 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.114039166 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112892685 seconds)
  done (took 73.755063644 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154554195 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132871647 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147596824 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201013461 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166620755 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251682174 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211038492 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237098848 seconds)
  done (took 2.662133926 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.090110318 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.141317043 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.123431469 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133928413 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.114552793 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.08862507 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.328072857 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130212234 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.086824584 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.145864131 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.131207841 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115401886 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.478243325 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.116315829 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.087623606 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.111301005 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115558679 seconds)
  done (took 3.689243013 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.349419327 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.487887926 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.241962639 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195451457 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.181482782 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.091561825 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.733820603 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093961345 seconds)
  done (took 12.529508958 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119505941 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.11191581 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.160484971 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.158395628 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.117715132 seconds)
  done (took 1.833273031 seconds)
done (took 115.700816634 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093978089 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095312217 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123858593 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096109831 seconds)
  done (took 1.554490804 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101160141 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073108915 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10494041 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077636755 seconds)
  done (took 1.516260373 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189461501 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.165595712 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400117614 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073902444 seconds)
  done (took 1.664210595 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11074526 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127870458 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.101650153 seconds)
  done (took 1.50528267 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.102146361 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096424158 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.127378327 seconds)
  done (took 1.488269415 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100772092 seconds)
  done (took 1.256444664 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107158531 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136071715 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109310245 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.133239955 seconds)
  done (took 1.647869429 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094048603 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094381981 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.136519209 seconds)
  done (took 1.483800944 seconds)
done (took 13.633321118 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103811286 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.420562051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.38611699 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133998406 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.694317649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405896616 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.008609484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144269308 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165046887 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088365608 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133514419 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670509976 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.064936076 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.341407824 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.023236942 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.368081869 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.668565386 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117837545 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087835873 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116483524 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.994002108 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08654241 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117585734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087102146 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.697598926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.391889763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117634601 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.339213567 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116282496 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098226653 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373537058 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118919442 seconds)
  done (took 16.833899096 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094861712 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175555197 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099553088 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118467337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095717756 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.087960317 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122352191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08887612 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18023478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117368389 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106594232 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.090632527 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122440793 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088174113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137869695 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088081334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117635117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088394751 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115692068 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090266436 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.10589862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117473128 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088642431 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116933886 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088264796 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130003103 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09042728 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087280846 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118006251 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095571341 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12069873 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089006035 seconds)
  done (took 4.639811493 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140034011 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184483135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09822746 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152702471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170439858 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090313706 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196160478 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143287052 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153606434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118546658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105343799 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118355986 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121334813 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.119823833 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107528734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118623881 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089208596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117574171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088951938 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115760163 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.10967625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087358741 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119170895 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088242019 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118235401 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102244105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118488815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088770548 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11535295 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097550859 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091142393 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120193322 seconds)
  done (took 4.983727296 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.092600802 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.092697167 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133363195 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.103466331 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119157961 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.092106925 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.120735353 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091124791 seconds)
  done (took 2.021133089 seconds)
done (took 29.642452189 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.1075764 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.092815957 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132092788 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100114408 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.129796866 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.100697294 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.11659004 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100913327 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099776913 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.127501471 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103997972 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.117428005 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090967973 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115959703 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.103329683 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093054589 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131986193 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097004684 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133006846 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.10085851 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.1197619 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.09998998 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097619864 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13220865 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.101562422 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132819592 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.103791898 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.125228991 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088512466 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119845599 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.101215903 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.137938386 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.091300234 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131780731 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094439238 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091598296 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.120848985 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.091813606 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131315125 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099805264 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12336715 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100902883 seconds)
  done (took 5.799909098 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114529992 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146499444 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111515962 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08306565 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.12056615 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083161258 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.144575594 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082175097 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.114650682 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.1127721 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.106454615 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080596133 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080068854 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.105493436 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079631268 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077364009 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.113174304 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078530408 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.107346038 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.08105064 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081854827 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.10463422 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083175982 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080517764 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.107484719 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08400218 seconds)
  done (took 3.749481178 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.095801877 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102617132 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.140402992 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.169851393 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.122141638 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.125550895 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098265439 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.103553177 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.136155225 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.087471079 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.120780171 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.116207573 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135276717 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.096251924 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.120275703 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.104157623 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.10092338 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.120757146 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092235298 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139122448 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.105151749 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.12805083 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102878713 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128883029 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.089403759 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089369841 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.12410682 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.099066591 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.125471991 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.097257309 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122927511 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09257965 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.089014438 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.130711405 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.09374971 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.119906478 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107158676 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127263259 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.09740895 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.088640511 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126568169 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.09041491 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139923402 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126631054 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.119021551 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.09506871 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121485854 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.097482187 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.117633043 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107425548 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096851842 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.119240682 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.090752575 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118995667 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090319764 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102874269 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.121204477 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.089803172 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131758413 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094402509 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.131016155 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093774539 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102467907 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119637072 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.094259063 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119901185 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.089173202 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.086662549 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141155139 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094347845 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.15915283 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.08870589 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.120342297 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.097157166 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125807149 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096033049 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117865568 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103911931 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099205431 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122447595 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100848537 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.120889742 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091902551 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135430902 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.091553175 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.0884766 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.119699129 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.094674353 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119655038 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090124155 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130818739 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.090144917 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.090857331 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.132428467 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.088128429 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119499278 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.095019845 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.091770717 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118419212 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.100191834 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124458149 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088515225 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129800258 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.088702984 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119923494 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.099737876 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.091917342 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118873054 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.092583792 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125286232 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.089246515 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120932818 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.091852252 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.089541816 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128664234 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.095960328 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121156169 seconds)
  done (took 14.0082299 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226782256 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21439038 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.185528921 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260219774 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.132838472 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11442118 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210273132 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155735212 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090007335 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157271782 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.167362488 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18174116 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168525364 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178571304 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168938442 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088971603 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.106513603 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164955321 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212709892 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.288102863 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109174327 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.127476026 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.127472424 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.156539273 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133181659 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.098345799 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.13562089 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.10045186 seconds)
  done (took 5.652997019 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10551625 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151758662 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.093981081 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141274547 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.114559589 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119500171 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.09374029 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119862625 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102960445 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132570684 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.088765704 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123372521 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.097453368 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.095852297 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120404815 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.097002664 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.12918815 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.090005 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.120784881 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093533956 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.098530129 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136748258 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.091862612 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119199199 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.097515151 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119052159 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.09007592 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141199436 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.088459956 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.143023721 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.085996466 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128341367 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102296156 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.120378256 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.089904608 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090769375 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122480204 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090515393 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120920658 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.08815298 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.087114103 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111891542 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.088070376 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134176627 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096334745 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.114159472 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.09552137 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123142583 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.091533439 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086248622 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12330863 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093167529 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.12127868 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.099096178 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.090997437 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120981828 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092439505 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11926414 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.097335584 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.090630692 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.118506765 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.08797065 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123306605 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094228456 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.12825595 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094787374 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.087233276 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.122860005 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093747213 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126039328 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.092370865 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.094229149 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.118714165 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091464746 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.122628169 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.09540031 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.091223931 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.119170781 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088865641 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.120562873 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.079146545 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.089184846 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.108936793 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092190962 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.117407285 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.088893503 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09145196 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126561834 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133568771 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.092721526 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097372475 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121374337 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088417205 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122538349 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087013575 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.092379008 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136342567 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13799733 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.090393641 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086176372 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.135428288 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.092075632 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118419018 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080121615 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.097333456 seconds)
  done (took 12.395170551 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129185317 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150521006 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.091431773 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137702362 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123358029 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156125298 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.095688844 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129308852 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.091478056 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.13775173 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.091070949 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097304692 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.120551341 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104207544 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15552056 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099934684 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122499859 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103742828 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12512337 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135591796 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139029252 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.106993135 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138483811 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.08946214 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126194295 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.107068666 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159192968 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103317363 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133950246 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.108953135 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133542473 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.127768148 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140934961 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.093327699 seconds)
  done (took 5.318867392 seconds)
done (took 48.103358507 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.271242343 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.523787955 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.267435314 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.236725257 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.332153236 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.297330928 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.276948876 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.263985227 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.826370033 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.268207704 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.521236698 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.950427451 seconds)
done (took 60.234799002 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.262859066 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.430937577 seconds)
    (2/2) benchmarking "String"...
    done (took 1.577317312 seconds)
  done (took 4.203436827 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.842606937 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.253775086 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.533865521 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.27000827 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.271632011 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.558584896 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.132811623 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.733079172 seconds)
  done (took 28.950851882 seconds)
done (took 43.456661662 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.259801805 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.310595294 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.280125514 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.252448901 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.389961514 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.293059374 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.626648295 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.309719832 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.291995647 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.257148323 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.273471909 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.269848696 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.276711032 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.662194593 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.286239249 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.2810289 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.344730495 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.845523558 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.711925961 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.289311086 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.292258589 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.300549436 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.284575769 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.276701463 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.294944047 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.275639858 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.28327872 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.275235456 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.991903185 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.275920954 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.297073239 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.874666888 seconds)
  done (took 193.433528489 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.270106209 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.224486758 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.320241916 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.328215863 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.758478909 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.471924345 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.401980229 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.853065434 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.293526638 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.27876388 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.475727614 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.272319685 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.55067229 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.251432905 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.300029492 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.346109449 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.48151467 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.566235493 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.315108211 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.430936593 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.274868922 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.358889455 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.289706329 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.444276726 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.283395195 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.313259465 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.317840184 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.313687286 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.468631959 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.403289484 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.310751827 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.284785915 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.932214444 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.134261535 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.29153779 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.273961147 seconds)
  done (took 152.084919185 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.271687904 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.272156555 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.270766348 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.306778531 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.27400544 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.887411182 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.891766759 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.804627429 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.830234586 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.791380718 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613163176 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.275610201 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367802628 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.287511255 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.27569149 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.287968528 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.29796639 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.274604131 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.27248051 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.886072101 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.288649043 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.306769202 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.454309558 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.291463227 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305800983 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.667984708 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.270971052 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305450239 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.609467819 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.325270924 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27271249 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.7012305 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.955662615 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.392868163 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.274452934 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307327366 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.2728457 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.555965316 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.27347094 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.273868359 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.275892102 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.00055392 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.276206956 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.883523535 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.277783906 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.271370957 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.276050121 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.2737614 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.7075845 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.027268107 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.276846284 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.271899512 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.276808914 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.271924818 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.272009601 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.272956909 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.306867997 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.728311363 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.37055222 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.270572172 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.272500092 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304077783 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.269988569 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.49441769 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.272925588 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.611150367 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.320079928 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.374529631 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.855976704 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.271479388 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.369175315 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.389482306 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.268288601 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.268091612 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.26791882 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.268515208 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.267510065 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.380059429 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.268705519 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.268991011 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.689361436 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.445893786 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.287852047 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.269241792 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.723773802 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.370721238 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.268877645 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.699305285 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.273170807 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.268647923 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.035569945 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.368679145 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.26915257 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.26891595 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.269814102 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.68985582 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.86509004 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.567634283 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.273249563 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.257394838 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.274593484 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.701193563 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.835836901 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.971096374 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.273740464 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3830594 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.447712208 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.288175507 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.267569726 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.726003143 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.274743321 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.326333921 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.273538631 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.668064474 seconds)
  done (took 376.280703951 seconds)
done (took 722.998442369 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.90476869 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.899045366 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.01051724 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.89040165 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.848704624 seconds)
  done (took 10.748797943 seconds)
done (took 11.944909037 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.47009467 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.474038616 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.338709425 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.472254257 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.305928768 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.491170346 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.453982925 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.294662155 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.37711454 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.36024189 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.380951325 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.329528448 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.306610869 seconds)
  done (took 19.252786301 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.600726135 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.616397886 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.338805356 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.615095487 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.3139537 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.62314895 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.487249213 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.494812313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.500005307 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.290031822 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.28912095 seconds)
  done (took 17.368503114 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.602806305 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.613251339 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.346273661 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.622219676 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.321405485 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.612761965 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.493992929 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.50444648 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.49914504 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.291765014 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.289600894 seconds)
  done (took 17.397309568 seconds)
done (took 55.215598852 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.292627957 seconds)
  done (took 2.492603834 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.314830696 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.489834445 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.301502956 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.281650682 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.278079577 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.279390829 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.283288797 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.278303141 seconds)
  done (took 11.707760995 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.282369526 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.28415508 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.282761969 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.283627303 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.282497178 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.283165528 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.286263465 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.285656255 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.284620401 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.285234329 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.285441444 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.286039154 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.282919181 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.286681973 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.283231998 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.285677621 seconds)
  done (took 21.75094412 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.286134755 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.2832753 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.283246068 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.284363811 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.283875626 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.284758083 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.284941351 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.284774004 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.284546442 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.285175458 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.283885298 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.283199932 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.28545306 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.284552065 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.284537209 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.286310407 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.284358346 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.285021747 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.2896904 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.284989411 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.28493281 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.284941001 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.285399859 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.285591109 seconds)
  done (took 32.041207714 seconds)
done (took 69.193484121 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.867217238 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.177002213 seconds)
  done (took 8.246850864 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.34652379 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.348230026 seconds)
  done (took 3.898340801 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.288762674 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.288493406 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.28909754 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.288335496 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.288283137 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.290092934 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.288736309 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.288865374 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.289127164 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.2900494 seconds)
  done (took 14.09383989 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.290600331 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.289592265 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.286653673 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.287718138 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.289303537 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.285422257 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.288305814 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.288787439 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.28980954 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.287434231 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.288465796 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.287442786 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.289113551 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.287005186 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.289052599 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.285870329 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.28599937 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.287385596 seconds)
  done (took 24.387375573 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.302021499 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.310027706 seconds)
  done (took 3.816547903 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.417485694 seconds)
    (2/7) benchmarking "second"...
    done (took 1.329264549 seconds)
    (3/7) benchmarking "month"...
    done (took 1.397608499 seconds)
    (4/7) benchmarking "year"...
    done (took 1.853853219 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.328633046 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.308619095 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.328427018 seconds)
  done (took 11.16845319 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.293350092 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.465510941 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.571292749 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.86271351 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.290350521 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.293989844 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.145045238 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.293685613 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.297349516 seconds)
  done (took 14.718137984 seconds)
done (took 81.531251488 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.305172651 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.275960878 seconds)
  (3/8) benchmarking "parseint"...
  done (took 4.405385028 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.280740866 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.293392839 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.575372837 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.307624206 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.403375108 seconds)
done (took 39.052509045 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.280216171 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.273953977 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.10473245 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.285491168 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.394692493 seconds)
  done (took 19.264839506 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.356599073 seconds)
    (2/2) benchmarking "read"...
    done (took 1.621198372 seconds)
  done (took 5.184256942 seconds)
done (took 31.935746559 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291662936 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.291771264 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.291013496 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.288658477 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.290177848 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.288493789 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.288754964 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.289243101 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.292143718 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.292323571 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.291777604 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.293353489 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292337024 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29214982 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289326309 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293571361 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.289883119 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.290438549 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290259008 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.292601153 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291019522 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292558894 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.291525237 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.290334885 seconds)
  done (took 32.190824026 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.294793347 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.292223574 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.295256821 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.294573422 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.291388876 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.293403325 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.292609957 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.291435506 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.293814881 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.293758039 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29048004 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.291153637 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.295063067 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.290978537 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293288831 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.29217904 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.295376904 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292429514 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294625019 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.292164244 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.294073091 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292082652 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.2972709 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295453368 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.293335026 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292640151 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.294957839 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.293678195 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294652847 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.292447824 seconds)
  done (took 40.011180777 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.299846886 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.301909206 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.295186601 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.295171783 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.295873011 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.294991327 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.294965657 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.295458707 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.296059587 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.295293147 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.296050074 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.296353246 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.296377506 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.295399085 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.296134066 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.2965014 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.296032196 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.296119509 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.2957381 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.295664541 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.296700655 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.295375371 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.296348778 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.295438436 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.296605 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.296129584 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.296086335 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.295887508 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.295239505 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.297459538 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.296833493 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.29694114 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.29671789 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.296399116 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.297012414 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.297404937 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.302219668 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.304043178 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.297575819 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.297193985 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.297215278 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.298424508 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.296749254 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.297523194 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.298885797 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.297657865 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.296984757 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.29858723 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.298045893 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.297513845 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.297936759 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.297974261 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.298445649 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.297970575 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.298621349 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.299571683 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.298854932 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.29779854 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.297951488 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.298310599 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.299479917 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.299212771 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.297728541 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.299446991 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.299395364 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.298784579 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.298717102 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.299342555 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.3004772 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.299145589 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.299424698 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.299671863 seconds)
  done (took 94.63403524 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.298996027 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.298455112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.297510425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.296237304 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.297585296 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.30059015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.297304155 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300741835 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299088941 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.301196549 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300109425 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.300484541 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297643886 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300077708 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300148134 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.297579844 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.300472694 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296234022 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.301201743 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.301844776 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.300584821 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.298231824 seconds)
  done (took 29.797506376 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302116447 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.302282801 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.297691764 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.30202052 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.300298051 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.302987181 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.300779181 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.303300233 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300565634 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298495171 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29961978 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300498552 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.300477858 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298654957 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298527998 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.301246726 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302664158 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.300634688 seconds)
  done (took 24.628335314 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.300695074 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.300554405 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.301261822 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.301342052 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.299314929 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.301666985 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299749132 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.301817252 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.302175741 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.300487844 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.301881519 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302918607 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.303156361 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29948938 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302951437 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.300003825 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.303315456 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300139439 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30188814 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30149122 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.302944749 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.304274993 seconds)
  done (took 29.850702549 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303932204 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303554764 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.300764939 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.301472285 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.300829544 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.302169851 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.303549603 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.300051836 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.30475883 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.302144085 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301083663 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.302412037 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.302014352 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.301331935 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.301706715 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301079977 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304411688 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.301842502 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30447565 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.301426453 seconds)
  done (took 27.263913861 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296521327 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297957507 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298189885 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297659013 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297389671 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.296693972 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297229644 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.297776586 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298626923 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.298404297 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.29883352 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.299162784 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297850774 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.296901472 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297078087 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29746982 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296652379 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297864918 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296900505 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296859005 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.298394213 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298402027 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299498754 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.298504348 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.298990314 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297864887 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297254898 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29763487 seconds)
  done (took 37.557635774 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306910166 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.306257025 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.302850744 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.302159188 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.304720683 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.302816452 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.301801648 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.304622306 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.305263154 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305266002 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.307263835 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.305866176 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.30599144 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.306054379 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.306928523 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.307863458 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306414808 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.305170489 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305319093 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303685405 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.307452705 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307731272 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.306739423 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305431392 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30713434 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.308124309 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306002495 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305889266 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307945185 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.305098465 seconds)
  done (took 40.391179059 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.353031975 seconds)
    (2/2) benchmarking "in"...
    done (took 1.351964366 seconds)
  done (took 3.927505894 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.304802543 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308658203 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.308498838 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.305973944 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.306359918 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.308403852 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.308912188 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.306054091 seconds)
  done (took 11.679892424 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.30270918 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.309029067 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.308935163 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.309131839 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.301185972 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.302513366 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.310779436 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.328672892 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.302779655 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.305318766 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.30980327 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.310990629 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.3071532 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.302922792 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.303758239 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.304565013 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.308413592 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.300802834 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.301551052 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.309371975 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.302451391 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306905958 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.306489426 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.308352606 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.305571465 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.314860508 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.307845355 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.309852677 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.303872553 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.308206287 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.304187517 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.307855478 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.302503117 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.303481138 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.310783658 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.301067776 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.313848206 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.327721204 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.312283068 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.302490023 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.310814422 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.307597878 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.307109835 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.307249544 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307308983 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.302473099 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.312006606 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.308366049 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.306188331 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.309859273 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.316481327 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.306319105 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.308391914 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.308351128 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.306985089 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.312363964 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.324963152 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.310306262 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.316468115 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.318956369 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.318824886 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.315434681 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.309261878 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.302925833 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.317635395 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.331848664 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.315346393 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.329376768 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.309457332 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.311990637 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.313069131 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.320344448 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.333058403 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.304874612 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.30560562 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.313241278 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.30727916 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.313755071 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.315256559 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.330809317 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.304445709 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.306788413 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319728984 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.332194632 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.308440605 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.305670807 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.304148728 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.307093919 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.309801615 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.319823067 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.324674162 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.314830892 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.308006299 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.308221917 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.310170515 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.304919314 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.308630475 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.309650213 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.311120815 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.314642957 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.307175932 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.31455331 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.319073842 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.306203576 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.307492462 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.316548607 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.315203824 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.309543075 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.316005651 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.315709118 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307756612 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.311872533 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.316793708 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.31329643 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.313359024 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.318762973 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.306100954 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.310205033 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.306361606 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.316015392 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.321585293 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.337355132 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.315918349 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.315685393 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.316304955 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.320475528 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.308913701 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.314715254 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.319578049 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.318201822 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.319494398 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.315595663 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.321702776 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.316441905 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.312105931 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.31654757 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.319751719 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.320155391 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.312325306 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.313672729 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.313406731 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.311632234 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.312508575 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.31496407 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.308182606 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.313565919 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.319355446 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.312509406 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.313517694 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.313172478 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.315949399 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.318861741 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.314094196 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.310439625 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.31268283 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.310044164 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.312576679 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.310660386 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.319648783 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.318776133 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.31888646 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.31391542 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.316528385 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.310508229 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.317614506 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.312908942 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.316310648 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.317746509 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.319288949 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.312616657 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.320389562 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.312105103 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.317634264 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.320362424 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.320007608 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.311118342 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.317115378 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.310929008 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311135194 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.311673028 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.317097329 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.320972868 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.309793009 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.320668174 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.310644085 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.311342641 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.320551204 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.314806211 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.313869875 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.311973321 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.3179186 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.327530147 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.327580791 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.340586725 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.317039161 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.32402191 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.316981827 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.316783002 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.319279589 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.312104281 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.321457587 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.31196463 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.315736938 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.312377947 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.318236559 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.31350795 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.315534851 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.321599681 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.323531187 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.313171457 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.322397392 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.316736946 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.316690313 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.318899492 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.322313603 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.313247309 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.316127195 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.319063365 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.315812315 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.315496203 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.321596265 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.313634063 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.322304644 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.319985679 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.318134792 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.318375848 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.316186973 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.315766743 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.322959083 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.319041626 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.317518049 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.326123818 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.336492861 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.317490033 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.324337746 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.336865105 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.317310339 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.319340051 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.324208476 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.32106556 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.322000744 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.332870056 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.324171652 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.315346685 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.315526694 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.318163353 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.324426407 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.324733907 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.322064066 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.318115707 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.323906439 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.320159802 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.321791695 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.320414654 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.31909689 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.319477773 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.320475358 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324929097 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.324782652 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.320740336 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.317102001 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.317235547 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.315901867 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.323442649 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.324409254 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.324964311 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.319578022 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.322299228 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.3217042 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.329689417 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.320748342 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.317286829 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.320494984 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.332876846 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.343023653 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.326703518 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.321855145 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.325535508 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.326677687 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.321491948 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.325138979 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.319905598 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.320922605 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.320933174 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.319646197 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.323811287 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.321291941 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.326529401 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321825705 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.322856742 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.330236454 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.325785505 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.320891533 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.318960297 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.318116986 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.327374175 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.321358156 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.327417369 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.325115032 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.323488799 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.320709366 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.322577025 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.328930996 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.341410956 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.322564523 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.321212104 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.321888882 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.322596853 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.324530193 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.319990896 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.327653101 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.32902261 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.327759176 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.332626707 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.325388186 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.333574927 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.320559291 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.327960965 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.329170629 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.327287801 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.323570914 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.324236848 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.321096027 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.331010599 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.34058056 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.327082503 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.325471415 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.321415462 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.321359305 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.331634329 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.321613155 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.331417799 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.321499129 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.333206712 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.348435105 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.32849345 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.325548583 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.326923295 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.321745819 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.329999051 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.324271889 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.329186346 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.322292601 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.325923251 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.326918761 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.32670886 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.333046302 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.322187201 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.331929899 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.328060295 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.33194511 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.333772962 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.347788908 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.32799499 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.332181753 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.333684979 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.322386283 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.332717124 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.343154994 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.326987228 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.323622824 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.33330599 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.330140817 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.326550435 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.32799296 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.323096693 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.32833181 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.335855159 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.324312263 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.330010485 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.327684191 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.324186883 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.327360927 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.338651778 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.349738802 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.330709185 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.338691885 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.33082616 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.328942847 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.328684223 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.324800204 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.327262456 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.331271939 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.340485897 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.342377074 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.329762187 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.324769302 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.328457154 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.325397756 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.333737735 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.335031322 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.324866617 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.334769819 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.331154485 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.326297475 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.332501713 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.334827849 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.330305166 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.330804395 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.330723128 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.340750696 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.32635472 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.331030888 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.325788724 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.336618758 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.329841763 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.329053251 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.327045261 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.330422686 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.334755131 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.331841998 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.338597316 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.335802799 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.332609422 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.330615922 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.326776116 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.330826877 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.330399363 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.327144495 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.327812845 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.32776369 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.330989063 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.325914713 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.332279864 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.329213764 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.336960854 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.330708961 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.337130224 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.333905756 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.338539443 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.330127174 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.334653769 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.336698009 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.336323553 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.330300225 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.33268239 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.338325186 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.33491696 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.343109708 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.340806539 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.332290399 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.331686598 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.335655081 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.340211751 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.330976654 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.332258157 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.328863786 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.333039273 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.333515227 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.335531872 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329257082 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.339277089 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.333537039 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.333268398 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.34106725 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.356979846 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.329401185 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.335513206 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.337724639 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.333025794 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.334760629 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.339825542 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.33244466 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.340615885 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.355054706 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329555033 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.335724567 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.333059886 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.336838819 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.335329453 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.338612489 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.333410668 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.336596864 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.333713162 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.330328531 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.339310421 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.337079342 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.333498589 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.334301562 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.337811237 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.341732504 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.33653184 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.33512758 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.333855107 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.335072058 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.330945648 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.340669116 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.337204323 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.335885711 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.33304388 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.33068857 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.334366539 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.335574913 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.332899981 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.335416369 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.340111128 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.331242739 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.33622168 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.345171235 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.347717879 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.337115209 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.333415207 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.333929499 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.336518504 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.331870563 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.331748997 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.335736348 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.335858149 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.340436767 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.333402131 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.341552201 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.33776196 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.352517479 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.362683083 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.334946776 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.336001177 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.337243023 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.342565238 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.338637755 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.341125672 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.337415906 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.338679219 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.340951921 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.333435689 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.342002377 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.356988449 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.337439172 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.347196731 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.340934737 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.344261412 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.338669338 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.3336709 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.334860774 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.344839061 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.354993897 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.344182006 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.347547242 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.369042502 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.357485138 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.337907961 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.334273816 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.337744043 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.334105358 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.340460555 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.335552299 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.343757109 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.344695906 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.335824738 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.341321269 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.344077814 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.338386133 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.344970337 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.343615517 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.338267492 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.340199003 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.342249261 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.335267666 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.343891661 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.336282972 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.335078645 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.335594667 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.338409673 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.352783281 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.366153266 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.343968698 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.336333252 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.342314737 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.342610673 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.342901307 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.356394642 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.353640466 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.336045168 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.336414445 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.341290056 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336438718 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.344433944 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.339766319 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.338247387 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.339526915 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.34181516 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.352560632 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.344880879 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.344881547 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.340411077 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.338118963 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.345655929 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.340218398 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.337334861 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.337498927 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.341931347 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.34424895 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342252287 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.346302375 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.345915539 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.344718575 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.354903737 seconds)
  done (took 791.207809916 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.345781344 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.343480619 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.344504523 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.34426474 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.343974138 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.343575927 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.344592808 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.348116345 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.345544435 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.34392077 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.345707986 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.346587452 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.34635725 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.345950214 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.345014842 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.344418977 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.345427404 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.345316326 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.345921067 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.345191561 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.34449582 seconds)
  done (took 29.50575321 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.348287187 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.344994438 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.345906177 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.348099958 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.345618203 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.34797202 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.345747451 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347972118 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.348411647 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344941544 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.348417326 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348009828 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.345259796 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.344459362 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345876281 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347929698 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.348901115 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.346926125 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.348654385 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.346053677 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.349777242 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.347931868 seconds)
  done (took 30.894181674 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.341109482 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.341198488 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.344918173 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.347018813 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.350442806 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.348027796 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.341626104 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.349565755 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.349968225 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.345337913 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.343959055 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.345884837 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.35326939 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.355552649 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.347018612 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.350447586 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.492915334 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.341324775 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.342409023 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.342702726 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.347125258 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.351394186 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.349685852 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.348511517 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.34464855 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.343056688 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.351248088 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.351137416 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.342398356 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.346426243 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.346922294 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.351667293 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.345845028 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.345725417 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.345769574 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.347192347 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.354942669 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.343221204 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.349441376 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.351150648 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.357177988 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.374737004 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.342907344 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.352969253 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.352153646 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.352081263 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.351818129 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.352237293 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.350709397 seconds)
  done (took 67.479454143 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.353207405 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.353408332 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.350003452 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.35262376 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.353191508 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.352104459 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.353510507 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.353099933 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.350011194 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.350080925 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.35364613 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.351564526 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.349589211 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.353169172 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.353126576 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.351401477 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.350512204 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.350301022 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.35098769 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.352247473 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.35156426 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.354108032 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.356519486 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.352275649 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.354366912 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.351623886 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.352565289 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.354629957 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.352940695 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.353166465 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.354103685 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.356054602 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.354585588 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.352311257 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.353165386 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.354664278 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.355977066 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.353165055 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.357143293 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.354035704 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.356167657 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.355613607 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.35586431 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.356943854 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.353009575 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.352291886 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.35198471 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.352083213 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.353614455 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.355527698 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.356220658 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.353748387 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.355705885 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.352700614 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.356396715 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.35872299 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.354113103 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.354845859 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.355512182 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.353805055 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.354774237 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.357434245 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.355821784 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.357358935 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.357263784 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.354942149 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.355078116 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.357148288 seconds)
  done (took 93.326502332 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.348956806 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.348676183 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350762036 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348851104 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.348146296 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.348418278 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.349263544 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.349221264 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.34888002 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.34951391 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.350282352 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.358160911 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.349360008 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.358479964 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.349129278 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.350381775 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.349712071 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.349599148 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.349847552 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.349582816 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.350204527 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.348588113 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.34952968 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.350830171 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.349776592 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.349560262 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.350166939 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.349685759 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.35008502 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.34990364 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.35175297 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.3511789 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.35076315 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.350021933 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.351187835 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.350944551 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.350370002 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351400533 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.351246491 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.350349308 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.35187406 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351741383 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.351647089 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.351272249 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351269208 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.351722207 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.351115662 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.351859931 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.361491751 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.351003495 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.351663153 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.352063365 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351856215 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.352460351 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.351907171 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.360396894 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351560984 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.352306457 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.351949212 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.351578696 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.352334595 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.360716783 seconds)
  done (took 85.047939481 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.361800123 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.361097989 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.359384422 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.359074761 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.361077721 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.359860136 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.362034255 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.361788036 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.361070464 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.362343352 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363399443 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.360622227 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362422288 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362700049 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.361586143 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36194987 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.36216181 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.361011177 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.361314869 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.359976427 seconds)
  done (took 28.49672396 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.360589088 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.362497461 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.359965765 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.35914412 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.362197483 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.359673151 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.362874185 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363020789 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359374124 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362150107 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.362171357 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.362619561 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360575891 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.360200627 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.363731799 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.359336782 seconds)
  done (took 23.05237997 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.360894253 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.363777602 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.353783163 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.355293415 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.361392249 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.360918403 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.3637721 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.361051044 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.361310898 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.364736171 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.363167735 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.364812458 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.364754218 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.354286257 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.361815274 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.363853895 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.36186923 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.360487153 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.363954966 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.354631762 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.362460572 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.361404219 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.364786304 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.364941113 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.363074961 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.362874622 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.363162574 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.361350068 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.361574873 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.364709315 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.362941169 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.363016999 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.362893258 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.362872644 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.357516906 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.362703353 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.366264241 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.365098125 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.365200339 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.365373111 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.36720315 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.363865947 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.365460098 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.365322316 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.364245326 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.366399347 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.362947433 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.362706706 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.36396663 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.363919906 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.367270127 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.358133029 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.367103247 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.366779171 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.366307515 seconds)
  done (took 76.230592271 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.366460394 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.366655216 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.364138032 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.366712972 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.366967852 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.364641709 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.366824984 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.365346117 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363541926 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.366443118 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.366076016 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.367307615 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.364333233 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.367252197 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.365471934 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.367937359 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.364760618 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.364961152 seconds)
  done (took 25.861115692 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.365162501 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.365344152 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.367393113 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.365257787 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.365200316 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.368824824 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.365109075 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.366775004 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.367345251 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.365134791 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364721395 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.367891187 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367768304 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.368575143 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.366474283 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365048396 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.368269849 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.367789181 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.365558927 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365609787 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.368216038 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.368933509 seconds)
  done (took 31.342872575 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.362661477 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.362724645 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.361784093 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.380105499 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.383560471 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.387200393 seconds)
  done (took 9.515494123 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377127743 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369641621 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.366228876 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371275743 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37004666 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367316981 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367065247 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367978787 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36886225 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367031037 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366740429 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369332258 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370165893 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36777659 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370833328 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370206876 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368445897 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367446562 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36913702 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37066286 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368398999 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370693662 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369332191 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367278962 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368579176 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367601134 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370645797 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36865352 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370302702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371197568 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37029279 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369673994 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369745489 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369654476 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371489643 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371858519 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369371002 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372002566 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372045346 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370431526 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.370621333 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371464756 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372493936 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368817018 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371561775 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369580568 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369254096 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368951635 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370016012 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372697564 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371576911 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370399168 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372123657 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371533489 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372577332 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372626937 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370314196 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370605703 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372088929 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371333098 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370801554 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371926065 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371387451 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372031362 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372398552 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371212467 seconds)
  done (took 91.736838927 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370672519 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.371643877 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3719047 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371982242 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371062212 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371440142 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372700733 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372666732 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372027359 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371334524 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374223933 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371543919 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37340117 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371582222 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372445774 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372428541 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3731728 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373254791 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372709743 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375293888 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372835303 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37254983 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371903871 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372544557 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37344384 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375540394 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37357827 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372858331 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373466108 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373388236 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373756956 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372469339 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374533711 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.372134318 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373578986 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374633275 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373347612 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373821989 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373308173 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376169939 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372573508 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376461888 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373183158 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373668457 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374495993 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373343129 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374516283 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373259494 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374050117 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373071198 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374297551 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37412437 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375051573 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373975499 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374093356 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37463554 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375253806 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374136938 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374643983 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377852583 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37445511 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373363859 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378154998 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374627 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375949851 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376279898 seconds)
  done (took 91.940144544 seconds)
done (took 1848.776357856 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.531898096 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.48813379 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.370440713 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.366366341 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.371481736 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.369467196 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.384822563 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.371965432 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.371603568 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.37144484 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.37096699 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.560424762 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.366238575 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.37292109 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.372062581 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.466596464 seconds)
  done (took 43.792631983 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.398914227 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.376137005 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.500252788 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.392806576 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.400314677 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.580041438 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.439382037 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.375321642 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.561686389 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.418747596 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.059431789 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.399114547 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.375419266 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.57550908 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.396096898 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.579444361 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.643089394 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.069642687 seconds)
  done (took 31.829131624 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.868606187 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.367956452 seconds)
  done (took 9.522963276 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.396224996 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.378062872 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.377318273 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.374057936 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.367085071 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.369105751 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.375249092 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.372377501 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.392660507 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.512302342 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.378066932 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.383779591 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.396817722 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.37605389 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.379478628 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.416215791 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.531333124 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.380190415 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.379011578 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.382474898 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.377376463 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.506611745 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.42175326 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.381457084 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.515314279 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.442111686 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.385068959 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.384121448 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.502126993 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.381873546 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.377266847 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.378029896 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.379183779 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.315962321 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.84567578 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.370237451 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.402915134 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.385079673 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.379718736 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.573563189 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.379360104 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.38245515 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.36864597 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.821607176 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.527650957 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.500562477 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.710743146 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.381592407 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.380122022 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.440194716 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.379217815 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.379916551 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.419304778 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.181647074 seconds)
  done (took 115.17502666 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.376154422 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.760256593 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.542711975 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.396826195 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.103123263 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.145447036 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.391638501 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.691369197 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.383645299 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.373556785 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.663435113 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.922802131 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.403882121 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.426723066 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.853430403 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.444993313 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.373024404 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.259198308 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.396954095 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.373699816 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88484265 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.374732397 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.378574405 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.533995456 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.412982123 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.858589064 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.908992658 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.982626074 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.400184251 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.372502036 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.881070842 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.407471869 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.39533479 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.373850097 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.654226873 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.764179016 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.731936071 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.376507528 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.417807281 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.375601325 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.409234627 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.849993284 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.74169185 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.374591313 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.37453724 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.872087514 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.375908398 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.376745648 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.374868123 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.588469734 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.083257757 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.376832079 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.905687226 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.375927252 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.649646571 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.450722994 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.389743181 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.888368602 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.375443011 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.611713691 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.43319633 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.375931463 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.379810209 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.379413728 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.378017544 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.749209232 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.498173139 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.378233958 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.747012397 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.874006698 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.404152787 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942165396 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.192863584 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.40412099 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.480892645 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.375379098 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.075596753 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.899142817 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.386437191 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.376302669 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.7335068 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.381257685 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.676931864 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.399911617 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.394648677 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897335456 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.377684852 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.422890314 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.383998975 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.376243201 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.137946787 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.382115002 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.682042214 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.419930491 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.379122089 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.376224276 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.420712525 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.377242116 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.377759423 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.383229447 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.935379368 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.40278376 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.515429789 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.403580986 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.389183891 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.379850883 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.380462984 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.380001677 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.607799037 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.844734474 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.386922341 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.379926412 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.378070271 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.380141768 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.540169975 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.381640736 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.712646642 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.378042563 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.379522323 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.378675049 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.204810469 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.4068474 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.379801884 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.399647444 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.286811586 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.584874254 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.40032156 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.398377546 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.380908841 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.398709975 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.731327834 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.400848882 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.380088282 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.383599369 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122125906 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.429066356 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.393007703 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.728036778 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.386254139 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.351655382 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.39898023 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.381476579 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.678024001 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.668402207 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.448194668 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.392363403 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.379879677 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.092983082 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.413762855 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.520432077 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.403373073 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.364786315 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.580807314 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.568346947 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.384064561 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.969807691 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.380751304 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.607507724 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.381837362 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.689255722 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901903929 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.399285038 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.382801774 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.116770048 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.130594222 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.028292377 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.387155617 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.678530005 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.376819779 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.859743928 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.381984485 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.383144492 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.959479588 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.383341048 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.385588484 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.382809336 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.382214656 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.5359254 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.558705552 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.579878234 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.385846118 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.860446146 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.431464061 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.383679409 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.384297084 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.385247187 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.730236913 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.427603948 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.389651985 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.408757878 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.384184163 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.393720315 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87864377 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.231408692 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.390462134 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.536094639 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050763967 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.40202963 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.384022727 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.007325221 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.907241489 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.922094679 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.423628702 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.720017884 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.389646386 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.425265261 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.067305119 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.479025118 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.882827005 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.385734668 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.385924854 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.00735069 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.404237198 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.74129543 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.385585133 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.38453263 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969265908 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.40315331 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.387825273 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.794997397 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.409799471 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.644424568 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.38449757 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.436277356 seconds)
  done (took 1123.596485062 seconds)
done (took 1325.201271044 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.384937657 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.38550353 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.375311775 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.393371767 seconds)
  done (took 26.842914419 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.393604577 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.392588329 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.390242356 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.392988193 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.389475255 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.392401039 seconds)
  done (took 9.655921294 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.550566313 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.386702857 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.39305545 seconds)
  done (took 19.63512941 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.61828321 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.773065802 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.758599639 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.788203899 seconds)
  done (took 11.243590483 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.390855756 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.391231209 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.394942628 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.391259012 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.393384276 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.393845305 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.39331919 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.391335855 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.393406266 seconds)
  done (took 13.837579279 seconds)
done (took 82.517539464 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.072734886 seconds)
    (2/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.382012222 seconds)
    (3/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.403370806 seconds)
    (4/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.440703503 seconds)
    (5/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.484026059 seconds)
    (6/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.370102192 seconds)
    (7/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.800435345 seconds)
    (8/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.482566972 seconds)
    (9/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.419223336 seconds)
    (10/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.372430401 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.661581227 seconds)
    (12/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.808188187 seconds)
    (13/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.614075391 seconds)
    (14/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.729268649 seconds)
    (15/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.48426357 seconds)
    (16/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.920826734 seconds)
    (17/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.483137873 seconds)
    (18/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.782479527 seconds)
    (19/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.44105451 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.420582315 seconds)
    (21/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.521897195 seconds)
    (22/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.664537167 seconds)
    (23/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.516414296 seconds)
    (24/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.441749327 seconds)
    (25/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.496828969 seconds)
    (26/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.067841274 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.382114843 seconds)
    (28/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.373116877 seconds)
    (29/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.543173732 seconds)
    (30/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.387309622 seconds)
    (31/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.058755951 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.090697642 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.394630519 seconds)
    (34/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.209491355 seconds)
    (35/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.321828096 seconds)
    (36/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.485907895 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.503829722 seconds)
    (38/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.373115665 seconds)
    (39/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.093802577 seconds)
    (40/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.316252182 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.41970504 seconds)
    (42/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.390204713 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.75917638 seconds)
    (44/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.096094467 seconds)
    (45/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.254860162 seconds)
    (46/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.636390014 seconds)
    (47/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.671030673 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.381787242 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.505473881 seconds)
    (50/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.453499042 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.758325106 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.693483372 seconds)
    (53/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.917418541 seconds)
    (54/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.409944502 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.325495339 seconds)
    (56/286) benchmarking ("sort", Float64, false)...
    done (took 5.706385125 seconds)
    (57/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.862616531 seconds)
    (58/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.583236632 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.390771302 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.513669109 seconds)
    (61/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.383425112 seconds)
    (62/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.497814165 seconds)
    (63/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.46094196 seconds)
    (64/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.384122753 seconds)
    (65/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.375613704 seconds)
    (66/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.983790542 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.130130842 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.41035948 seconds)
    (69/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.375625854 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.376006175 seconds)
    (71/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.452565146 seconds)
    (72/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.395461053 seconds)
    (73/286) benchmarking ("sort", Int8, false)...
    done (took 4.46499431 seconds)
    (74/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.413665372 seconds)
    (75/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.390663647 seconds)
    (76/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.414474256 seconds)
    (77/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.296984439 seconds)
    (78/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.480248532 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.665470824 seconds)
    (80/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.396171006 seconds)
    (81/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.393023948 seconds)
    (82/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.604181079 seconds)
    (83/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.391852475 seconds)
    (84/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.503888166 seconds)
    (85/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.983664446 seconds)
    (86/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.134205865 seconds)
    (87/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.55845867 seconds)
    (88/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.163773903 seconds)
    (89/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.425752535 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.255319302 seconds)
    (91/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.387537021 seconds)
    (92/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.075428388 seconds)
    (93/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.406423166 seconds)
    (94/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.504234529 seconds)
    (95/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.376563238 seconds)
    (96/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.422849674 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.399248729 seconds)
    (98/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.378288508 seconds)
    (99/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.403839006 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.620670988 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.069439806 seconds)
    (102/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.426989897 seconds)
    (103/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.505563261 seconds)
    (104/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.677405613 seconds)
    (105/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.520982818 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.344088943 seconds)
    (107/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.506190393 seconds)
    (108/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.463343045 seconds)
    (109/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.474738126 seconds)
    (110/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.37950282 seconds)
    (111/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.424893709 seconds)
    (112/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.803371832 seconds)
    (113/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.17707177 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.92073834 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.423453241 seconds)
    (116/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.425353166 seconds)
    (117/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.087285771 seconds)
    (118/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.386776449 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.681822917 seconds)
    (120/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.818055763 seconds)
    (121/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.379078441 seconds)
    (122/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.474423088 seconds)
    (123/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.398917884 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.224593076 seconds)
    (125/286) benchmarking ("sort", BigInt, false)...
    done (took 6.396279012 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.663634889 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.436867541 seconds)
    (128/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.451344789 seconds)
    (129/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.387977801 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.392183335 seconds)
    (131/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.416772219 seconds)
    (132/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.4336041 seconds)
    (133/286) benchmarking ("sort", Float64, true)...
    done (took 6.404676015 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.551209143 seconds)
    (135/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.917263565 seconds)
    (136/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.050590786 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.303606118 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.435920299 seconds)
    (139/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.410710028 seconds)
    (140/286) benchmarking ("sort", BigInt, true)...
    done (took 6.396880464 seconds)
    (141/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.807337378 seconds)
    (142/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.428200911 seconds)
    (143/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.094026523 seconds)
    (144/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.405862454 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.42445782 seconds)
    (146/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.406436026 seconds)
    (147/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.165222574 seconds)
    (148/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.412405033 seconds)
    (149/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.90494693 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.823210836 seconds)
    (151/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.397197769 seconds)
    (152/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.266929108 seconds)
    (153/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.555810516 seconds)
    (154/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.380428408 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.378038396 seconds)
    (156/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.241009308 seconds)
    (157/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.398037573 seconds)
    (158/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.400838375 seconds)
    (159/286) benchmarking ("sort", Int8, true)...
    done (took 6.39854724 seconds)
    (160/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.447917032 seconds)
    (161/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.942080231 seconds)
    (162/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.717942602 seconds)
    (163/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.436248714 seconds)
    (164/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.392066102 seconds)
    (165/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.380879019 seconds)
    (166/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.403330798 seconds)
    (167/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.399763741 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.928421756 seconds)
    (169/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.480654598 seconds)
    (170/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.37874432 seconds)
    (171/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.2711141 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.431505224 seconds)
    (173/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.431195668 seconds)
    (174/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.990016141 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.45421471 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.381167504 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.426116036 seconds)
    (178/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.486772094 seconds)
    (179/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.275421011 seconds)
    (180/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.451545284 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.828477249 seconds)
    (182/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.418088124 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 5.482757006 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.479895843 seconds)
    (185/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.845358059 seconds)
    (186/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.382877264 seconds)
    (187/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.821025145 seconds)
    (188/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.519326684 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.138129488 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.446475649 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.628422149 seconds)
    (192/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.415098044 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.518299256 seconds)
    (194/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.26769204 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.407500817 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.217585524 seconds)
    (197/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.91585252 seconds)
    (198/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.429456072 seconds)
    (199/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.384500309 seconds)
    (200/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.481712968 seconds)
    (201/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.473170095 seconds)
    (202/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.587856475 seconds)
    (203/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.405833298 seconds)
    (204/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.437902121 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.023760114 seconds)
    (206/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.447312667 seconds)
    (207/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.51797437 seconds)
    (208/286) benchmarking ("sort", Float32, true)...
    done (took 6.399578499 seconds)
    (209/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.46134063 seconds)
    (210/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.44968409 seconds)
    (211/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.38545762 seconds)
    (212/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.646920975 seconds)
    (213/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.93879088 seconds)
    (214/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.408238663 seconds)
    (215/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.470429872 seconds)
    (216/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.11410031 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.428064855 seconds)
    (218/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.882292412 seconds)
    (219/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.257224403 seconds)
    (220/286) benchmarking ("sort", Float32, false)...
    done (took 5.432468916 seconds)
    (221/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.394837205 seconds)
    (222/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.392326449 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.401704742 seconds)
    (224/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.472662482 seconds)
    (225/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.404350576 seconds)
    (226/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.950460917 seconds)
    (227/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.412835047 seconds)
    (228/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.911492295 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.89555827 seconds)
    (230/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.411618276 seconds)
    (231/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.349967315 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.214728418 seconds)
    (233/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.51185671 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.629999923 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.434510849 seconds)
    (236/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.38757737 seconds)
    (237/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.345698646 seconds)
    (238/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.650784771 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.442978647 seconds)
    (240/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.50486609 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.434273894 seconds)
    (242/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.50009113 seconds)
    (243/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.855170596 seconds)
    (244/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.396904432 seconds)
    (245/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.494740567 seconds)
    (246/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.387166964 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.834289266 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.81779882 seconds)
    (249/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.015639902 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.39521447 seconds)
    (251/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.9553118 seconds)
    (252/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.32512536 seconds)
    (253/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.229416333 seconds)
    (254/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.145047747 seconds)
    (255/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.948479547 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.095865235 seconds)
    (257/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.417492677 seconds)
    (258/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.443941179 seconds)
    (259/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.387187562 seconds)
    (260/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.716046532 seconds)
    (261/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.657710173 seconds)
    (262/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.059211484 seconds)
    (263/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.53272975 seconds)
    (264/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.388635158 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.521274421 seconds)
    (266/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.386977261 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.492772329 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.525536979 seconds)
    (269/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.598133243 seconds)
    (270/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.012050122 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.428622581 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.241604191 seconds)
    (273/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.427308455 seconds)
    (274/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.171458897 seconds)
    (275/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.398463548 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.496336992 seconds)
    (277/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.52110128 seconds)
    (278/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.696989025 seconds)
    (279/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.96864119 seconds)
    (280/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.371343232 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.054874402 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.433697568 seconds)
    (283/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.388920402 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.991842282 seconds)
    (285/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.400824832 seconds)
    (286/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.14864147 seconds)
  done (took 970.284868962 seconds)
done (took 971.591561537 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.434578444 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.430703641 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.413087044 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.435072595 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.523713914 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.588671076 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.421953882 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.41543257 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.460553769 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.463315649 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.411999175 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.588447011 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.414157699 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.413861407 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.412918058 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428466912 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.542785258 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.41393055 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.430726082 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.423494669 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.429980728 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.413836501 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.463784683 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.589763665 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.417017055 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.41617319 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.418312229 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.434218895 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.527064447 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.417903368 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.418201624 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.425666183 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.544726882 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.41363999 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.410109126 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.434735977 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.428371673 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.425017056 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.419229926 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.446846999 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.066148265 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.421934015 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.417705779 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.416245691 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.416713213 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.420604458 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.417277171 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.422294296 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.429963621 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436395844 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.076514838 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.437919051 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.420204053 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.416981896 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.426009951 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.416253019 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.419397351 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.434600423 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.435645962 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.433588735 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.536125878 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.42289353 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.418936726 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.432432004 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.425054142 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.023652885 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.414685613 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.421482567 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.995231 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.423112399 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.021785395 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.428360853 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.418793834 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.431428082 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.45004938 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.550877953 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.413101762 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.417752936 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.425172902 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.417166079 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.428946199 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.431998061 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.423876831 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.419774318 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.433292125 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.594769693 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.430300166 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.420523959 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.428260827 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.437361129 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.427924346 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.431909218 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.422342554 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.414321405 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.428627286 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.423044191 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.421494634 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.423153583 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.423749884 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.430814304 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.991027564 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.438936044 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.416377265 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.415221055 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.419105301 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.433591225 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.998595862 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.422012483 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.44264474 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.467107752 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.422898604 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.540866462 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.42461037 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.438867299 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.430725216 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.424585434 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.415302245 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.541768562 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.99075295 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.436700516 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.423085177 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.419698665 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.440162553 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.423682235 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.418040893 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.554573242 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.4242064 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.436394007 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.541279976 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.432228305 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.453562346 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.419487025 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.425415572 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.451880329 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.439754787 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.452792764 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.425523388 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.439498765 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.439146085 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.418865404 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.433869787 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.43324648 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.423731242 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.427933944 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.416823008 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.456488412 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.437744601 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.437203144 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.443307822 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.543486563 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.420527883 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.542642896 seconds)
done (took 241.069137954 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.490884478 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.416605129 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.516976413 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.42843428 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.532386107 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.529620728 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.426582523 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.426210111 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.426376447 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.841615831 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.427659515 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.427800053 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.417008461 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.427820856 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.512173841 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.430978407 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.427763149 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.789850399 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.421434545 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.496375539 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.427083968 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.427798527 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.43068604 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.835687726 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.423929608 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.425106838 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.496139171 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.429610322 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.792082407 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.423664606 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.425123431 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.799253942 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.515849672 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.447443959 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.44033534 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.437096395 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.533557348 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.452821354 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.510825908 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.510992448 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.518510264 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.460877533 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.424383151 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.426264848 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.43167287 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.422557788 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.429351881 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.458664214 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.426790472 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.43083087 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.783061236 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.442903659 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.430795492 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.430968925 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.430224214 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.452859747 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.431489272 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.424430918 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.517899337 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.425030112 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.491189513 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.829144064 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.852582597 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.432853393 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.422211195 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.431481826 seconds)
  done (took 154.993085402 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.495036557 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.502327926 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.548472388 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.429607796 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.478706951 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.549599504 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.429733582 seconds)
  done (took 11.768975168 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.434409085 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.433840249 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.478426426 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.476628072 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.424842719 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.606631978 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.434492524 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.439462496 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.431809396 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.480002367 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.425596374 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.434296755 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.441456037 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.423604306 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.476699439 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.440577988 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.544701751 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.430674755 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.426208511 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.580851433 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.432493332 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.441242147 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.481439402 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.441412729 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.427107898 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.436093004 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.25740315 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.426570247 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.433045671 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.434934721 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.433151523 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.506963234 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.436989914 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.429326892 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.432885076 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.544938088 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.426985317 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.43450917 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.43645798 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.424887451 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.436050236 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.435404089 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.436541239 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.432931364 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.436453709 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.453078173 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.436149075 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.434849224 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.436748675 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.437475113 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.481354142 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.437826427 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.433118431 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.434979969 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.485074484 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.442472559 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.428057205 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.434678103 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.437698396 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.43461557 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.581180752 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.480573127 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.435956517 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.47886925 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43795751 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.437653379 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.437246988 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.436857913 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.485759013 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.438132109 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.480984807 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.433925221 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.612574562 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.453908418 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.438554799 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.434616179 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.43475451 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428530549 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.428921192 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.436642047 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.434473867 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.433339181 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.438204251 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.435661959 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.435120753 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.603283925 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.538326238 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.434893019 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.445164268 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.441389717 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.437277588 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.485200192 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.438691176 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.437242087 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.486311681 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.548203234 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.486934718 seconds)
  done (took 163.34285195 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.439147995 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.443464199 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.437234949 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.456914942 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.436031136 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.435423607 seconds)
  done (took 9.989812396 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.436464398 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.442158713 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.439914789 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.440994863 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.430437883 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.431851567 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.431453795 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.436385191 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.435347514 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.438893697 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.431169553 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.432243978 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.431785985 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.432799423 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.431777493 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.441055153 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.431415227 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.437145971 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.439558388 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.431452531 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.541557209 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.431139791 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.431660419 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.436549561 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.436704095 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.440141216 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.444421622 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.441829003 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.440834388 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.441336773 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.434324106 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.433561801 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.437816451 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.442330785 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.43752098 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.438540551 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.446836487 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.433419252 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.440073073 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.433315086 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.434145432 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.433193917 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.44185399 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.434184844 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.438120713 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.443462767 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.438329021 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.445664073 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.434609735 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.435252875 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.434313284 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.442621806 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.43361534 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.434757554 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.439872372 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.460973284 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.438849519 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.433188304 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.434752527 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.440403815 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.445710556 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.436099607 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.441806057 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.439089722 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.442110462 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.434992471 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.440895398 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.438664721 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.43546778 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.444173917 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.434728626 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.442081703 seconds)
  done (took 105.961407166 seconds)
done (took 447.388318568 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.507325037 seconds)
  done (took 7.853684509 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.983687665 seconds)
  done (took 8.330717882 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.924903377 seconds)
  done (took 24.279245517 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.452778187 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.503311831 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.448558032 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.441945489 seconds)
  done (took 27.192679789 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.88020385 seconds)
  done (took 8.225879052 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.436838186 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.448337919 seconds)
  done (took 14.233873794 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.754144443 seconds)
  done (took 8.101498308 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.563568029 seconds)
  done (took 7.918876797 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.46078599 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.45902459 seconds)
  done (took 14.278651844 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.416210031 seconds)
  done (took 7.76330556 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.318278783 seconds)
  done (took 17.666739881 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.443020326 seconds)
  done (took 7.793922508 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.500037438 seconds)
  done (took 7.847684222 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.26198128 seconds)
  done (took 10.60979907 seconds)
done (took 173.444093614 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.433194002 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.434758465 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.435803298 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.435279233 seconds)
  done (took 27.08660024 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.479485837 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.480060717 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.481077058 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.490143966 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.482992834 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.479920205 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.4727127 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.47137978 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.490616663 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.48241542 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.482182037 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.482980828 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.47937099 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.47167756 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.482871067 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.481693353 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.491079373 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.481520902 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.471984221 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.483566054 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.44819335 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.491540856 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.484574178 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.448782011 seconds)
  done (took 36.841626625 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.965306195 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.515622316 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.601039025 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.499098285 seconds)
  done (took 7.929473073 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.498768357 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.501056872 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.513701467 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.555695504 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.577701002 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.509754846 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.474259234 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.469309322 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.456891137 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.501812942 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.579063 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.517079216 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.585442574 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.448037729 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.633198394 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.447911048 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.447514917 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.499934539 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.551855237 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.56725681 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.448896211 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.499474773 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.505200143 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.516967748 seconds)
  done (took 37.656025265 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.447997255 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.467547822 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.448084445 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.448322765 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.45729619 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.447358338 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.449479041 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.450121206 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.447685563 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.453969937 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.448136722 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.461359241 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.448513116 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.448527566 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.454740404 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.450931692 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.454927747 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.448961561 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.448929861 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.456211144 seconds)
  done (took 30.389571066 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.438763188 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.291113748 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.790302561 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.694244609 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.438790141 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.437850466 seconds)
  done (took 28.441059751 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.524531272 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.674016835 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.446586673 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.85026795 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.935068258 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.45328006 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.445552646 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.711101664 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.096237635 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.094210587 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.51687192 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.521129596 seconds)
  done (took 21.623307769 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.45133054 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.438762747 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.452252497 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.455281913 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.507545374 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.450675224 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.45327175 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.439636166 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.514887364 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.513856303 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.449812112 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.509251608 seconds)
  done (took 38.989727959 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533939484 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495085379 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.530589805 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.48627794 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.23151008 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.657461372 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.494135901 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.204204991 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.448414204 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719652757 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446370945 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53727081 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.701298722 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44609522 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.454687264 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.553213355 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677930238 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011593962 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455029233 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.888011794 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473040402 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.463744757 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.976997769 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.71505091 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.659823354 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.432978018 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.709691851 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.226202871 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770594918 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.463485491 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459357302 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448134948 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722897563 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145420181 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56363941 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6909653 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443958497 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.993386461 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.451551404 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.888351945 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451205525 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.471831931 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459550802 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449116729 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.383811169 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44921018 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234461343 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.453674309 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.160347254 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.450366862 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.75567012 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546992403 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.453748267 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.022921531 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461464253 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.462667409 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.453859466 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542997835 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016750193 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.158718418 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463228445 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.391991863 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.443059649 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.89678184 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135437123 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.456428912 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.453811058 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.454595213 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396160632 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.891779907 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467451186 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58855797 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.476455123 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.112049893 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255387022 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.469675036 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.392502384 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081624824 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462898479 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.393724868 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680397902 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229743492 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389997086 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.397591303 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.385570948 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.258088836 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467112308 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.138141322 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473499487 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.206541894 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.722382647 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471979635 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476468399 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.677565255 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.329681765 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453352118 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.466223216 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570314778 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474906509 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.212956475 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417959016 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.456682018 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709378386 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.665085321 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453402997 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.55838675 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990811782 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483612414 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.475559239 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.458197764 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.709140144 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.099481731 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.470869843 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256633335 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472227465 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.23271963 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299653863 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460826188 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.46453771 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.45460556 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.751987154 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.331535932 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.344094348 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522030003 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462286216 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.45414378 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.051477833 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.302668554 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.336815584 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.683836022 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.49714586 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.472599722 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.444813912 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451114959 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.45928234 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470942057 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.233667176 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.679295605 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457605529 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738256098 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389530929 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593437496 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.471513979 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.67914426 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.790247801 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.461357514 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714633724 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471164062 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.463501982 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494857578 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474319272 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5563653 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479569123 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.469602109 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.718976294 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.459989855 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.460632473 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.912764686 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.235694335 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460846142 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.462809467 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455406218 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110529228 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431058848 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.465424244 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352661569 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.471752327 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526117756 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.463674295 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.704794783 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.899722751 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459705317 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.47211409 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.455097507 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682308114 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.468106693 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.911993756 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539669264 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.992568746 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125409403 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472612076 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.392437762 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.170662875 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.151791319 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458541086 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.64846462 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.45881302 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706251414 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476051793 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.477432727 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.120654023 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469591257 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.919413227 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.466413926 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.471904883 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.465339487 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459249907 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.918608773 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.215384889 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.473235695 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.478184891 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603441341 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.473757704 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.394180872 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.977069657 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46520955 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.460586373 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.235746297 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494452892 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.92427099 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354202225 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.719540466 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45470784 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774446688 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.086216846 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.50439158 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.461225293 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460610181 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468057711 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.48663309 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478809156 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.471538192 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.927697518 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.911233759 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026951544 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344472527 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064388306 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.821088711 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.466856683 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.351667033 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.223232521 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415781139 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.121127471 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731624269 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.228841723 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475765921 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999987859 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.81909303 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.33555255 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768780262 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.700513221 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.823945849 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.463296103 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797508635 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.684071164 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497022824 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.469745399 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.408861031 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.741146279 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083854721 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.485875742 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544578992 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223325097 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.483447834 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.241745674 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.483309986 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.320638308 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932775626 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.034723626 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.888840552 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.464037755 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.479659768 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333467596 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.47097634 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.991028614 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164178918 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.476133034 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.004906501 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420732385 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.708808805 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.474431071 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.459381969 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.248097649 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.472220141 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.721473582 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771268253 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400061807 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.481095301 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078764889 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.319271618 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.470640976 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466602164 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308191173 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.487763551 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797722497 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.476747143 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.924082568 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478052532 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.399521043 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399325155 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.158195153 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.47047374 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437515344 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033067738 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.491984602 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473221692 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.500553023 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323331661 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.722451936 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.480438692 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.120656413 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69514233 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462288394 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514134587 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.469042188 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.472552676 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.447435629 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.350065324 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.704078355 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.543773691 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.698459503 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.560565745 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.370644637 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.462037891 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.710701505 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.364486504 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467290894 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741180088 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.177454554 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.46904686 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343375582 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494830354 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.46688979 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.507136062 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.473459442 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493012948 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538163968 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.714563929 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.47967467 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.479682067 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933530696 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.503034116 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.472249588 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.482827551 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563700503 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293627434 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.930955785 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.250330693 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125779697 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307987112 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.127737961 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.780895425 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.472202046 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477176678 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413380683 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617369851 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.9964488 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744730337 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593273921 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.475902485 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494145713 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.483892234 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480373995 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691400244 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.745842438 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.340577713 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472475081 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14148289 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.630207706 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482273364 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.682581205 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041084104 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1135591 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592760103 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.477932512 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.240724339 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744167208 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.563647753 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.471327807 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068756407 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.48739101 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.306207204 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.484531885 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470075474 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618818965 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77538061 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200974854 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.502285792 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.627625966 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.245110773 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.959671004 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.729538865 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.034638323 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.720093737 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128339414 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.257090364 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740489459 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543134209 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71980193 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.586873158 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619975141 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.479319719 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.373448516 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.470889735 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322979335 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.182828623 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.482187151 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134748738 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741269243 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.476689458 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.480248717 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496283222 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.482500329 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.697244499 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.303298861 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.706086433 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484235018 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.478723942 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.048055013 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131264923 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.787921782 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421568081 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.478748733 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.747795911 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.709475504 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499880382 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.927532166 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.185894681 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121524455 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.456821423 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496659268 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.49245044 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297104253 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143923636 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.957113022 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047819966 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.144956508 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.490516613 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764442781 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.486756095 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.488725875 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758561176 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.479656702 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.475277175 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.733608474 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.130205675 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.35050966 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.486634824 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.126930467 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.412937873 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.703496022 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.531441057 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432160407 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.485427017 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.947625435 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.505027605 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595474049 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488288505 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.480983494 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480540507 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.240682553 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.769351884 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.481825411 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.456998248 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.485844091 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.503639677 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576063356 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111673133 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501371813 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.152008687 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.827371882 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.73438511 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.488252291 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.462266748 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.479930607 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477319612 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.232891876 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.48606041 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.481456791 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129642613 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.493818042 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.496182656 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.481710127 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.694571406 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690225814 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.494451496 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730310587 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477094807 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520946822 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.375845254 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.250745624 seconds)
  done (took 1735.782872603 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.529652971 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.496117429 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.499086133 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.587378462 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.491519303 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.530924271 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.589425328 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.567689906 seconds)
  done (took 53.675887993 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.487358489 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.642161516 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.510427934 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.490514664 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.485071955 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.49275082 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.985567792 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.491854411 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.485588499 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.486600684 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.484224627 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.474844497 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.185201413 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.484158667 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.490938565 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.476713605 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.483668458 seconds)
  done (took 68.03160977 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.066727351 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.600929478 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.989006723 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.500953081 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.512167368 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.509793048 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.112057472 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.503349662 seconds)
  done (took 56.181453059 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.487029148 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.48579877 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.485371962 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.485015521 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.486547192 seconds)
  done (took 8.816044151 seconds)
done (took 2152.795137625 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.485709707 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.488508022 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.485250719 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.486473503 seconds)
  done (took 7.332252798 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.46017877 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.200969093 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.460321269 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.473845676 seconds)
  done (took 18.981103918 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.476808389 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.47910676 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.298238095 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.198415561 seconds)
  done (took 5.884861078 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.221780121 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.242978896 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.228089972 seconds)
  done (took 8.076435255 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.48144865 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.486106792 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.486277543 seconds)
  done (took 20.837705699 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.796026329 seconds)
  done (took 3.183486551 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.6222021 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.678773944 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.816448051 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.839999952 seconds)
  done (took 8.342630524 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.891236428 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.845215386 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.665607734 seconds)
  done (took 6.787506518 seconds)
done (took 93.769152552 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.756111503 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.500030132 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.738297946 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.724005687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.76550145 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.727345856 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.761045695 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.681570399 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.49394845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.221098828 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.725660467 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.740338017 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.949776671 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.500582282 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.947157329 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.495917289 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.739673277 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.813521416 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.413788793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.492564029 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.788930463 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.365697555 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.551474963 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.389442237 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.732642282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.66992962 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.945438916 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.495756153 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.477112541 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.993940166 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.669761731 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.482885589 seconds)
  done (took 202.138419196 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.478465485 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.476932304 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.475954641 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.47712891 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.477647083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.47881537 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.479680068 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.496369651 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.496884019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.499003212 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.479420628 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.477097634 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.521980232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.478475824 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.499006103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.483302597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.481390109 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.478843881 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.494145823 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.479331311 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.478182742 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.497888798 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.478437014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.513797061 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.4787748 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.480418964 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.499814988 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.479147518 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.48023383 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.496323556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.481957052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.513527304 seconds)
  done (took 208.976736543 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.478593306 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.483758556 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.48215294 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.480078482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.480717797 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.479648958 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.480328336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.516512687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.487917814 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.480947843 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.491104031 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.480860585 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.483621588 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.481243955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.511197972 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.479727979 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.496297388 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.479899505 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.498841378 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.481026577 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.481780046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.487779802 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.481391216 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.50233718 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.515161535 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.48109364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.501152398 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.481546823 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.482006813 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.506172076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.482570679 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.502704767 seconds)
  done (took 209.031221491 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.691619464 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.492888288 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.495146709 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.429463244 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.49518259 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.493553053 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.491115296 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.694320559 seconds)
  done (took 15.675413151 seconds)
done (took 637.207925041 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.966262763 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.660735241 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.705630954 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.516354046 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.389053944 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.530921964 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.515543473 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.709742721 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.504921481 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.721731188 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.867015455 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.508276167 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.027558847 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.513674201 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.791463131 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.623341877 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.453883929 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.607298116 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.86826037 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.208570216 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.810375202 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.104633892 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.719060619 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.475279026 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.035883841 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.078606816 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.299902314 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.447793907 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.516046274 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.86681144 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.33046354 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.598777811 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.560497441 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.561801352 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.625586702 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.624965238 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.554248776 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.611805464 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.711979058 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.85461018 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.19613728 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.292927744 seconds)
  done (took 100.962055209 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.47766548 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.477364556 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.475700118 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.476309697 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.478254674 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.475978875 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.477408901 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.476826469 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.47764831 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.476865194 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.476648465 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.478475328 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.477333746 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.478349387 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.475792672 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.476392611 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.478772901 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.479509374 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.47759047 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.477279483 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.478153314 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.477424436 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.478478865 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.476827416 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.478470078 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.478348253 seconds)
  done (took 39.808294257 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.499257167 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.758075285 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.942608593 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.50035509 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.493311321 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.497673852 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.582158712 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.500548258 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.497659121 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.497406609 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.657745346 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.502564656 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.530219827 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.981474901 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.505284186 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.500636346 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.499804668 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.493589857 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.768856026 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.503872714 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.604612348 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.501273165 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.583683526 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.503838936 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.52201241 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.493881742 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.498693857 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.068747258 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.496871537 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.656200518 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.426379755 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.588921204 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.051695727 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.953387834 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.420065949 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.508793002 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.501549744 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.660756066 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.495905156 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.494161274 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.582842555 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.49434826 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.954067254 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.193113383 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.516863596 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.500338864 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.091853613 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.661365547 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.775157656 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.504959593 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.981686832 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.501102507 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.502105042 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.497754815 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.774615068 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.502292033 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.495802205 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.134195801 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.521515387 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.584420269 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.503016058 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.496388039 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.776778601 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.49744226 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.762253597 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.498827681 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.504492132 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.518838302 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.953710302 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.500950731 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.221740434 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.517898933 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.503293139 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.661127332 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.763568278 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.129552543 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.502321401 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.778955921 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.060060226 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.584465569 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.502717269 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.062224008 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.587926967 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.504011478 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.505497494 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.505983746 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.50339251 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.549994802 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.583006181 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.155944296 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.215895439 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.160427059 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.608975964 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.50678314 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.499142217 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.137549317 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.526125846 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.505332355 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.949563679 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.221344048 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.520584001 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.506524346 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.226501014 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.521988872 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.589398506 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.505963227 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.972250019 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.507968673 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.550684876 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.505627336 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.506942757 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.525426027 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.586718523 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.504146705 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.506739927 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.193009732 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.691470903 seconds)
  done (took 197.363604271 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.502081176 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.493035017 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.503634794 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.493055262 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.492391416 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.501808629 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.494208127 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.493750689 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.499719644 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.493619962 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.493797061 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.494228338 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.497185131 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.501489472 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.506181697 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.502277118 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.106787566 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.494863142 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.496203658 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.495879699 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.328254513 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.505171849 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.496330544 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.495604014 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.49455882 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.494267278 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.496667194 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.497793957 seconds)
  done (took 156.767367199 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.508499614 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.134146197 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.498722141 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.649984299 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.532607289 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.5050598 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.647286475 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.567331711 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.503720232 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.505062626 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.507534714 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.84239648 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.509375971 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.088092594 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.724408485 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.656384577 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.081129397 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.529334082 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.507342661 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.506667648 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.653303022 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.513303481 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.8449348 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.139535991 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.511987793 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.14066059 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.491439973 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.509812554 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.502085966 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.141792906 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.508466557 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.85468296 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.591417663 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.57174565 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.142577428 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.116964655 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.147127222 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.687390696 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.504308723 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.509436734 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.508062269 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.490649595 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.142733971 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.512210801 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.505229507 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.136815209 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.53381589 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.513369287 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.516770217 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.509493813 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.574007908 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.573819082 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.853079168 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.149408491 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.598771486 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.525606154 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.652815868 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.903101034 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.511228262 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.117132309 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.499322619 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.156405338 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.539379319 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.493255062 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.511340666 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.516942246 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.681906024 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.659432759 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.119242667 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.535008032 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.115123996 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.711886806 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.512010684 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.510338576 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.512944841 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.148355392 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.119583177 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.710142085 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.659630961 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.729484613 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.495307553 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.505575314 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.493564637 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.593734142 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.513841063 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.19036449 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.140316899 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.544447027 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.514223168 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.513113606 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.515284365 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.706529663 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.185559578 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.603799216 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.10500465 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.900535369 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.879431758 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.524620988 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.582238527 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.535299772 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.859367867 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.520861269 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.580247512 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.973490327 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.864515787 seconds)
  done (took 180.607572431 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.777380629 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.828178432 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.623416523 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.668972922 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.149158377 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.096462748 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.897766172 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.672601265 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.642438511 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.790487866 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.831120702 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.615365172 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.748512711 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.594818756 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.29881258 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.586251864 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.614187572 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.677729403 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.662138313 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.610443588 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.210045578 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.810561011 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.716071282 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.613927489 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.61519011 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.361758963 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.120187545 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.046780079 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.692987443 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.965066142 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.084084058 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.681608605 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.563212395 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.278916348 seconds)
  done (took 72.55966682 seconds)
done (took 749.460426577 seconds)
SAVING RESULT...
DONE!
