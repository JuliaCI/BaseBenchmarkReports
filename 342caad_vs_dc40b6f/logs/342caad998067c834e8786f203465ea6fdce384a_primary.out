cset: moving following pidspec: 19221
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.337038634 seconds)
loading group "string"... done (took 0.478922297 seconds)
loading group "linalg"... done (took 7.879644335 seconds)
loading group "parallel"... done (took 0.177540452 seconds)
loading group "find"... done (took 1.187114372 seconds)
loading group "tuple"... done (took 1.906058867 seconds)
loading group "dates"... done (took 1.290771898 seconds)
loading group "micro"... done (took 0.239476154 seconds)
loading group "io"... done (took 0.733616986 seconds)
loading group "scalar"... done (took 43.358332937 seconds)
loading group "sparse"... done (took 13.79174871 seconds)
loading group "broadcast"... done (took 1.076406782 seconds)
loading group "union"... done (took 14.992981735 seconds)
loading group "simd"... done (took 5.119516019 seconds)
loading group "random"... done (took 9.905867511 seconds)
loading group "problem"... done (took 2.012634769 seconds)
loading group "array"... done (took 22.842099755 seconds)
loading group "misc"... done (took 1.45408983 seconds)
loading group "sort"... done (took 3.66916901 seconds)
loading group "collection"... done (took 19.707238086 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.459385818 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140886039 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145451233 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133228613 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206090919 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138929796 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158443052 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.111283756 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.994510887 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181984894 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14167719 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.496012497 seconds)
done (took 5.118036187 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.261285093 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08132037 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094628306 seconds)
  done (took 0.938401116 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090555079 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.141745787 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08999099 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073689341 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090582337 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.075218545 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073885863 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.092494095 seconds)
  done (took 1.396324159 seconds)
done (took 3.445600267 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.728422912 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.290160879 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201217352 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.507762429 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.175468838 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.209982566 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.745298391 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.408817898 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.242559362 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100610572 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.127886523 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.442603304 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129036121 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.790064058 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.085501581 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126067064 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180178145 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.497145617 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.093876718 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090039726 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115422045 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154936251 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08861717 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101020089 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169661912 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.093743262 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.186203576 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105968284 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.075773882 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.266517123 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200634092 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.762010681 seconds)
  done (took 11.285737074 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113105574 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13560025 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075855809 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154813509 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138509444 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082098179 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100157404 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077383651 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12487499 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181963714 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115806597 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141973998 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092406689 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08041177 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.1178899 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230372929 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122213347 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119934586 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080916066 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104179634 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120129669 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112016211 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090640369 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108042473 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168937856 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205606171 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108687544 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124775797 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.078499017 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111254932 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143239683 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.159566778 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075553186 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.076931046 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178631848 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124326597 seconds)
  done (took 5.146873159 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188732812 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098829051 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169483285 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162581481 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142135429 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.154226058 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110051564 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260983484 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.112350039 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162641025 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144416096 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.128127077 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114735311 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078453869 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081760021 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095706408 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.70816291 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.170881948 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113026228 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11672912 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097846566 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084535649 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.733991948 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084035109 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094550862 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080868746 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088284728 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162150926 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081400682 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.178909224 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119392512 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.077454735 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136349285 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211522939 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109266553 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136820874 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078778178 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.093679658 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181061788 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084020292 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075377345 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124748034 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133759689 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137349548 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.076568964 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095422937 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.211802627 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.076302222 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113073688 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.014957665 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181694971 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090808166 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.074096146 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.337151597 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114026238 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076483479 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098634596 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.292524635 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128680982 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096184794 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077858636 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077630988 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097941553 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.741237692 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.077586547 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.124452437 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076479991 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106491344 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.131385795 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07961485 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096300967 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084403263 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102868622 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097830957 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095609313 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079798255 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.076887585 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095701017 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078240114 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116109404 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.074888073 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100681386 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076813729 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164516449 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077784469 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116056338 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124983465 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.081337069 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075420353 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130845262 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098121508 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.078361727 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136481574 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.073842444 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.077966454 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117721774 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097298548 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14136119 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080036512 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.203519669 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.075816707 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124188126 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.083306394 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132433986 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111482371 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079336946 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101097142 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075420338 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093773119 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147089618 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078754671 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095993838 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07928362 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108464768 seconds)
  done (took 23.723483329 seconds)
done (took 40.9117781 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.35839037 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110701415 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111686364 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.111904973 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110582402 seconds)
  done (took 1.630128242 seconds)
done (took 2.437059747 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.278241198 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175705958 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073461225 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191457241 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074847391 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.180453599 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165282218 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113127087 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.18881643 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093305096 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.169599689 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074903011 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074039631 seconds)
  done (took 2.682576303 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093118321 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11527368 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081023025 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09297796 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093705755 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092428159 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110316076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09903865 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110720094 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082901095 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073404792 seconds)
  done (took 1.849086593 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093357454 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094682813 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099329484 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091141211 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09322583 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091786378 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110080026 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099335148 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110588849 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083164084 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073519048 seconds)
  done (took 1.849704291 seconds)
done (took 7.176273656 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09679342 seconds)
  done (took 0.895305576 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.082000838 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.695622962 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121443855 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.169079681 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.342407812 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.216827875 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.611135532 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.138976682 seconds)
  done (took 16.377394483 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.11249177 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.117467614 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08176827 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102368671 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.080618497 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102457073 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.080121133 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096644317 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08228538 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.081501156 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100887641 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.077938947 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099051913 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.079416852 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098301668 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.079315016 seconds)
  done (took 2.341481926 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116242905 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115917877 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105501271 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087741771 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.104311844 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.083505087 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106789526 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.085215481 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101601951 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.083733469 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107782042 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.086464056 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105164149 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080786837 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105732723 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106742736 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083826487 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104149924 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.08814022 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104135159 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088046702 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102932192 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085817521 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106677926 seconds)
  done (took 3.268071048 seconds)
done (took 23.688296477 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154779908 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083829398 seconds)
  done (took 1.043692868 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101132286 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.119724864 seconds)
  done (took 1.036603644 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108693316 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098613908 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.1371752 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097579615 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.100342456 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080676866 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.132387147 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099473515 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081718048 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081129158 seconds)
  done (took 1.83530129 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085849708 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084000757 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.107798184 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.119743833 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.091927118 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.101296048 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085280494 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.10330595 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.086167188 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.097836816 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.089110189 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117050655 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086297121 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.1193935 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10444642 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087238151 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108894179 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084727739 seconds)
  done (took 2.576346104 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080777869 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081129834 seconds)
  done (took 0.984039043 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083544695 seconds)
    (2/7) benchmarking "second"...
    done (took 0.078731909 seconds)
    (3/7) benchmarking "month"...
    done (took 0.102750989 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100058226 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.0795127 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078006227 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098599129 seconds)
  done (took 1.443263267 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.504670134 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.146525104 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.280368403 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084185021 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124824697 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.322088963 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098977841 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084203299 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10549485 seconds)
  done (took 2.628005732 seconds)
done (took 12.36134001 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.090918759 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.100298034 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.132230584 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.479152022 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.11948494 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.077250355 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162137907 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.270972051 seconds)
done (took 2.258023043 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148727736 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341715823 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.127581855 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072326015 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098083887 seconds)
  done (took 1.459010464 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078991081 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080566273 seconds)
  done (took 0.983689668 seconds)
done (took 3.417974311 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078111408 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.132639884 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077225268 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.074824899 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099591425 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.075199419 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097009441 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078187134 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.077195086 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.097346903 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.077927426 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.097577981 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.078556529 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077557576 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095117005 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07520563 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097124547 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076184215 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074933277 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094467284 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075432717 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096311729 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076037455 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.074900611 seconds)
  done (took 2.907100178 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106662431 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098523911 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084764576 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.104098088 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083116211 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103786759 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.084627401 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098577502 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085347913 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100811956 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082877247 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.102213034 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08114553 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.102697297 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080667118 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102580371 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084490219 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098840723 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081344484 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101858155 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084078041 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098851119 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.082768006 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104000976 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082001886 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102591322 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.080947386 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099348821 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084561409 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.102180407 seconds)
  done (took 3.617017649 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085444163 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075573474 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096368783 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08307736 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.095267934 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081191136 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.074457202 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096342589 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080835404 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095532094 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081594196 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.075217445 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096516107 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079902194 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.100688983 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079640122 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.223542747 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077088667 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.074812065 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.100502584 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.078844485 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095138925 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079447994 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.075431184 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095395862 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.075558164 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09485501 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076778787 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.076169842 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096603267 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.079176445 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100008288 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076743683 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.081577489 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100480747 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.075392159 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099212566 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076052273 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080202854 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095994714 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075033966 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095247258 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076475472 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081805778 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.099423321 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.078175197 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096164718 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081202517 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.099104744 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084118081 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.075704767 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095981352 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081986789 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100746145 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080929874 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.074882943 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097281887 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075280549 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.100009187 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076150081 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.075305667 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095877119 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.078527479 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.096139852 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.093234714 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.102227607 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.076336503 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08227948 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.1008318 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.078503512 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101815219 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.091671304 seconds)
  done (took 7.191369773 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081475413 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106147793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079150029 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.077947728 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094395347 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07631817 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103344577 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076873304 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097635994 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096558248 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095954088 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079823668 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077987527 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100834696 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077164193 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098009923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086119794 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093714626 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077430923 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099681198 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077856579 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102498789 seconds)
  done (took 2.789916014 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227767461 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107246164 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144495717 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096030755 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116917034 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115405112 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083942972 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106232747 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083559358 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106192358 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0864839 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104006326 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117001824 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088060049 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107767983 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089404781 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103420864 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08772605 seconds)
  done (took 2.803281273 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092844958 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09920795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104327552 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099096068 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079548362 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102291445 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088028391 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115397792 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082777993 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098643211 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090964225 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102548274 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082090211 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098867401 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083549823 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099404371 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.083445792 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07897898 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109944802 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105652311 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086754141 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109787336 seconds)
  done (took 2.932442172 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098402615 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101563761 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102462217 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103695232 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078717536 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100725206 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088232077 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099223097 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089887891 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100886368 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080419476 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09946331 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088403905 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098873439 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.087467409 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0990565 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082445646 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079560784 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102353842 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078074943 seconds)
  done (took 2.698371177 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121810943 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114313565 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094137084 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12613971 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094051815 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11567592 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125978172 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094906778 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11399681 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107990776 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114978676 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095667906 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12640407 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121824511 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095293765 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126117142 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126499664 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106526994 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115047288 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094918311 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128645333 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094315801 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127637076 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114437078 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095367208 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115576232 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095194398 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12195758 seconds)
  done (took 3.968680769 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080173013 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079741741 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.097519062 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077022835 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.076352772 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097713535 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076898062 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097028345 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079605966 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076615008 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.100546457 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.079725403 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101184886 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079371954 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078256765 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10064613 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079752443 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096782993 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077135867 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076465119 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.099243877 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079235061 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099269338 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077643899 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075949215 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099669922 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077297814 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096576484 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08014112 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076078172 seconds)
  done (took 3.413313629 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087361971 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104698969 seconds)
  done (took 1.03603766 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076503328 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116369674 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076797825 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08243515 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106187105 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.079864474 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110919089 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084804248 seconds)
  done (took 1.574224006 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098435881 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119123437 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088022383 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113034937 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099569527 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.116762823 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143180264 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.106977937 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085687524 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098598642 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.096844138 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.099515254 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.087343625 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100096131 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088218386 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086026275 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.102051659 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09119992 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10907429 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082803201 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106881896 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092801574 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103233868 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.089167653 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10170336 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092349914 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110281254 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.093097237 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103692582 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091684868 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.105963103 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.074849439 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.0844338 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.107711554 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081144516 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.119465657 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093722365 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104848018 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.089112524 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108112121 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090613455 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099595598 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.0865767 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.111141529 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09225424 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106020212 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087527317 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098233312 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.07946974 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082621822 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.100721395 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08007392 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094632004 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088996191 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10482955 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0953045 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.102608503 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.083157596 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102343587 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084655902 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086886663 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103316307 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08261927 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10462742 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088832455 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.103826165 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088530447 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.099119398 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075053777 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08144637 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110955373 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104536105 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108661809 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104397551 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087101795 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080834729 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104224241 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08742476 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10929572 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089038817 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.104962536 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086380065 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107600596 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079021626 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102297454 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085285182 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099860347 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082158396 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.075727801 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115373636 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08084674 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099726141 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077879247 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109199307 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083576588 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104251285 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078031763 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107806255 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074705345 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086772559 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107599563 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080925173 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110626326 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085170002 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106813845 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.087807097 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110491532 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080064867 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104434412 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.077704904 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107037734 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083741965 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087860096 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094995038 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084247871 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103383557 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086287098 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109919574 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083663512 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105558765 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089673969 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106785899 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081753917 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.075904036 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103955693 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084175659 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110674189 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.087420069 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102562315 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078436773 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097329546 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.083929388 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10344172 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.084846113 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102946355 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082665287 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072705865 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100578926 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083313794 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106845773 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078546738 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.098317753 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.085361145 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.098790536 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082973507 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.083960334 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100998506 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077441928 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104722455 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081072459 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097785723 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088898592 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101812204 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081932094 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10208285 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089577031 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.100659209 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085124979 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079812071 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10361698 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084648916 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.097846101 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078339647 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100489123 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.089396184 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100260593 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078973379 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075276699 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107220735 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076849587 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103415625 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.078651752 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102756821 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086154962 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079974231 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102012432 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079682495 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115410621 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091943035 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105421579 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08365932 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109664345 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082453021 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101191899 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083046048 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105353807 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084580904 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.107937687 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085909668 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106449659 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084592973 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07686055 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109313857 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089565233 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101753579 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082919237 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099940475 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085988159 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10856262 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086357053 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105799552 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084397014 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081840237 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11264169 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083825887 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.106573406 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080570662 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105231593 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.091482373 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106516612 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088204048 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110732463 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084133048 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077882515 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110399483 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081223038 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107840158 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079135639 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098104102 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079531318 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107414901 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084041237 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.082754327 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095619844 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088091692 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110015225 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.080177605 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099496332 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086101784 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110592696 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082631373 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104238833 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084157956 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.086122718 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115057912 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078565619 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103739769 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.090083545 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106225105 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.074160091 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10826261 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083976861 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.1006371 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084811145 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082964885 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106368199 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086412169 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106634364 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.074786192 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105386981 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085506388 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099398635 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081041421 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088414885 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105990515 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08185593 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111270008 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086298098 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.108074122 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085613213 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.106158774 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.088260863 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108409905 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085013978 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.108366555 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085009035 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099893792 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084162145 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.079323216 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102919367 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086401851 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.107801631 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081133271 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107884138 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084340054 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080808546 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082986782 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085450185 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100720833 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079085274 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099217406 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082560274 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099935974 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08022627 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.082267324 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099008248 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086147897 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104187425 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087201783 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09998325 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.075672527 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104420219 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.082182238 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083942612 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105919313 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084774368 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101142963 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083455886 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102718657 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088486464 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097053449 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090547109 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106432098 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080061257 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102918004 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.080827817 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.080752389 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100169457 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081151979 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106413954 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07936936 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102844382 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.085304635 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102126457 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.080927972 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081368075 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105819459 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.078620157 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105844003 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073639557 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098505007 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079220463 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083165613 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108496571 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.0843753 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103556505 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082225698 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108167938 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082215797 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096468053 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.097477499 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106893555 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086132615 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108872443 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078963392 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.081694643 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111486859 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.072894602 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103398696 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081643043 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099666381 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090419033 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107453983 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.089315675 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.079428311 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.10021412 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.07557372 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106344017 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082226395 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094480568 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080844862 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083580357 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103899979 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0812774 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105682828 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.081762781 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106032971 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086939649 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103405353 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082238592 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104667885 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.077343184 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.077481876 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099647484 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082825036 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107097572 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.076812661 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097374098 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08572055 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.081891611 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102012714 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083950808 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10257244 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087839419 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103766299 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082530987 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111813378 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075695521 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08437678 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106048719 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08507124 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102897102 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086722158 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106592683 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090262951 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111397193 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086261135 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102902759 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086449143 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082848017 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107123794 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084347187 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107500551 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079206929 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108423284 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090000346 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103322504 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085253466 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101757591 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082642596 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.086628505 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10982111 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083342617 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110856 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085471626 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104436076 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088989036 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106246592 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084680756 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106768297 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.082396768 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085397937 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09971852 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.087910254 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100686553 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085390553 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102454436 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078204509 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103885475 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084965671 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081072362 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.10659048 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085565829 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100001465 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079238371 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103784038 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083168597 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111386754 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090805959 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105608763 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086571277 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080147227 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.10219878 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088279052 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102058031 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084580099 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105458768 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089152337 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105191453 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083796586 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085061154 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113843518 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088860484 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.1097154 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079821486 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110204582 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088873568 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107655201 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08440014 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103192516 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089192183 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107924487 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082952231 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.079939348 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111844356 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085264307 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108012209 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08059117 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101332255 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082529641 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101050143 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087841728 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084619289 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109035099 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.082754071 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10612544 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090816883 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102286755 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082296513 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115668735 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087070028 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112505495 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082432178 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104352385 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090599303 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109926112 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082559711 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081217996 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102548765 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085143961 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102857677 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082422454 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113323816 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090280363 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106016132 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083924919 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083568212 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102590496 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080849323 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103693445 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089729864 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106588785 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09333911 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102160555 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082994316 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080859074 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109896623 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086706307 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10682879 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079177916 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102312053 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082682709 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.084665726 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112374091 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085639146 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108970991 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087395855 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105943924 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084507228 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114177121 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079305868 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107099738 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094059299 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107131303 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082595374 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088084822 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113338635 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088419183 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103934611 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088661746 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107734951 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.082755776 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.111795667 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089450531 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119403018 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08680044 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102781375 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085723342 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106524856 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082957719 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090200229 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11292727 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088814086 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110794592 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084680516 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112798694 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086646894 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109782 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085695633 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105559018 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085696822 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082607179 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10780679 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081137711 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.11148238 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089714888 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110043712 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091030432 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103411159 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095346707 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112639402 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087821728 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079589917 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105524358 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082662557 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103567816 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090093485 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10210443 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087303303 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085416565 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.108938238 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.083809156 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111763015 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086009545 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.111065666 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088465728 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076840279 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107145739 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085853348 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106406958 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082405744 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.109659785 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.091169785 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110223018 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094945541 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.082693816 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10799842 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084091353 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106489646 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082629202 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112345614 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086830354 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106895743 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084518867 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08771597 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.112260755 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086557557 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112960934 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090757689 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108294196 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092254027 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114529825 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081144769 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101660996 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090876741 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084061909 seconds)
  done (took 56.970796212 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130123363 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112552972 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077749347 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101763874 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127590973 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083720164 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077536182 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107497211 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082744696 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116321973 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078007716 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101365875 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123522596 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106788306 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127503951 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115800964 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078448296 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10558142 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07938738 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105476647 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101859952 seconds)
  done (took 3.041510222 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107194044 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120194844 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094736121 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124505806 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112513395 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097438861 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118757764 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120532991 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101387349 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114278068 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123847829 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097786117 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.11464819 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112735295 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092161949 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116277943 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101139886 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113295979 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118624834 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096145148 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116775129 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116807783 seconds)
  done (took 3.329454658 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093933693 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08700315 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.110092789 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.078102859 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107792284 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.078935125 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.113465623 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081081607 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091065383 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104917087 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081606918 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.104119793 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088146822 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.077619681 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106042705 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080631206 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.158171899 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112909878 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087097004 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.111880986 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.081852478 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108185711 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.082147932 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081142112 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105016039 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.096334178 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.111535125 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.087475597 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.109958078 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08269572 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087043559 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104822126 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084847197 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106483953 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082565106 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.08171871 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.110658798 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086697828 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.104882739 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.08428598 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106078317 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083513354 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087568251 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109152494 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08412755 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10383556 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08523352 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109184888 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.080102745 seconds)
  done (took 5.581484218 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120757343 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.137355043 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.110914395 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.151742655 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125873186 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097397617 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.111065544 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149147284 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.082422393 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085067578 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128502663 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125021709 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109067425 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.095078216 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113730164 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08859948 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111569631 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083669898 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.115377239 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083364036 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115678494 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090907744 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.125240421 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121959266 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091944398 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109718445 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082480009 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11702761 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122087468 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094303905 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.116606714 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094895355 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126059572 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.1083266 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08404515 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112390771 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.104548408 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111154541 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090291154 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104764791 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089069943 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11683331 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090092784 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.127474235 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111188749 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09015776 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110700217 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.080988719 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121865674 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08966809 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.121220481 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124512729 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092045437 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111417982 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092861476 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126560852 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110750806 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086184753 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.115058624 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098428501 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105289654 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09186795 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124238198 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112501821 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.097391786 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124907979 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110955781 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09419542 seconds)
  done (took 8.374201465 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11840346 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11581385 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104312712 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128319577 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116826077 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.093138514 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116130559 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092117954 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116732434 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12188156 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093064865 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.164693482 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089873915 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121405959 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114181454 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093830279 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116582995 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093070501 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117195553 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092562359 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117100418 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12730442 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093109015 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127885452 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128879128 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090255995 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.1168048 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093398675 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128455347 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.1160415 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106685352 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11678241 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092869702 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128934525 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129908791 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.114789088 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089189535 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092791904 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117861976 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116535004 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091424389 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127715997 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093611576 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.11349376 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093127408 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117028474 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128123419 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.105263243 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123869609 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122573524 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.093780006 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.129305997 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115619959 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093881818 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127768101 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136215655 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105137859 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128895476 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116935725 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103553829 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127771638 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136875328 seconds)
  done (took 7.911843976 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118511827 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.123693598 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.128681739 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.079446964 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105635036 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09292778 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104783908 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083207889 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121223043 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099705836 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12530118 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11463045 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097215032 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125917049 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114859305 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09762104 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115484323 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091934854 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122909486 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113191896 seconds)
  done (took 3.091488959 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095057338 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129613086 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086080286 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116094069 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08767574 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115935447 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087287725 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110452078 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085803663 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111746002 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098880537 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121555996 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085689203 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115367743 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119561958 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.093931734 seconds)
  done (took 2.570910329 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.106624272 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.130133889 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.10878502 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.115508112 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.081735794 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.112785572 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086913664 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.104504226 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080603994 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124102942 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0911073 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114673258 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087726565 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.106176205 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.086482266 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.115949725 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.081691079 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.089248539 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112577823 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.108301815 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114015956 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086912975 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.113432631 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086073949 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.112779645 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113153958 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.092846705 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.081621208 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.107675522 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.087615467 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.112123527 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.092921191 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105364438 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089807232 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107339046 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082496857 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.11150365 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088557738 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113969541 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088578932 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.106069117 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088586106 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087019774 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.11144724 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080848703 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.113319692 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080745418 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.115247626 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.087263228 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.111646608 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087917178 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.1171603 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.092899757 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120481486 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.095615963 seconds)
  done (took 6.45292639 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101456431 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112209623 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081276603 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082154054 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113365828 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.087478052 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.114931313 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087705384 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111236221 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083130645 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110853677 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090811834 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110273907 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090535247 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109254115 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089347205 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079260843 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112205679 seconds)
  done (took 2.69126237 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091576322 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084789841 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.11679326 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084831034 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.109928689 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087582831 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104961984 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084746015 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083101672 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107207528 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084955655 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.111254278 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083499693 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.111424814 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085138597 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106981845 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.088039287 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084156523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109661192 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080978433 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111565636 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08437097 seconds)
  done (took 3.022566946 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123825852 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127073249 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093209633 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.219310105 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.128975768 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.11186948 seconds)
  done (took 1.731211142 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112073204 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145786577 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086862436 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112339781 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100569873 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115058214 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089882373 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114855449 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128263929 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104503291 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113760548 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12535511 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103533743 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126145481 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123633264 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099354005 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115331124 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112265519 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088163112 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135793222 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088170313 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126168368 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112326816 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090414235 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11394435 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102433814 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128440391 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128999996 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090782903 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130436521 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12404751 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090900202 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129046135 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128337318 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087990474 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128973766 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113036722 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115155455 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124024175 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127221181 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088156891 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123795773 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127684947 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09883966 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129649563 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089515524 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12259508 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114654911 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091390202 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143066498 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124453824 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125684276 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100726532 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128481142 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126911398 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142505044 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10391109 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126240472 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123404507 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126917321 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103626426 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12390822 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124530762 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103434307 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123724264 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12669016 seconds)
  done (took 8.529180601 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125671393 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110680958 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08982558 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128415552 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127412459 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090877031 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115437008 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090946531 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11553378 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087585566 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161773969 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112945871 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121950248 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099288851 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112821833 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108909522 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087969319 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119861027 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084009009 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138900671 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110755133 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099589889 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121304738 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122143286 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123625653 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095512086 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110242967 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086270582 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110761598 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108251855 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095280109 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109975777 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098104486 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107001682 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120697749 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088106698 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111229981 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095381672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111575738 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118740487 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099878828 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131992814 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110022486 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087688737 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122886689 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109249295 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088327536 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106681454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090155221 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109398529 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102838968 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127156495 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125192345 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1247917 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087657308 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11146468 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088793955 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111470059 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090199315 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122488298 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122978764 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09009172 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143952161 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115218577 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091122024 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127673848 seconds)
  done (took 8.14317143 seconds)
done (took 157.195949228 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.10418899 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144380825 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101325977 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173027949 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083260818 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.115669411 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13754532 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096364253 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105231761 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081812785 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10448028 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085711544 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.168073039 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.083310783 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.081115848 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106777282 seconds)
  done (took 2.69468403 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.178374437 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.294252346 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09953751 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.103808339 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087640702 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.084972787 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.108810823 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091668712 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109582743 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084871449 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109247651 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088085973 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084796067 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111420638 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.087674796 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.10999432 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.086582355 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085640365 seconds)
  done (took 2.935189447 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115325535 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15803031 seconds)
  done (took 1.213689727 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123382224 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180675457 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274169019 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153900185 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.134150304 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097052472 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155822556 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123794561 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205136949 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.128263892 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104053821 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.112596184 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136497368 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092574277 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113282964 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089077447 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.13927425 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088241879 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115445367 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.091559464 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140785181 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.08302779 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120539181 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093565925 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.192992068 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129973159 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106675398 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084271977 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.093271767 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.120403651 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091928553 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125726075 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.133372046 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.153523616 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098484996 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176791345 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.089989128 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113621494 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094219233 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115737823 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.100850279 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.122713778 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101396265 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118502387 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.0862705 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117629977 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086827205 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085077083 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.119661604 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.093809859 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.120346023 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092389903 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174517344 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.32969145 seconds)
  done (took 7.695224098 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.81271147 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150526859 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087887352 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.881897508 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13717212 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124340714 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.773785342 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13544601 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230989658 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.811239639 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101853325 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123394927 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227702588 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.22712269 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.896070023 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307378888 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.681000003 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12448989 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112932346 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.148084585 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117752821 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135645927 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104945517 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.425529777 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.110735642 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086707682 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115932026 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.096938212 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160285978 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.117225662 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093477536 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202668157 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247894502 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.183349875 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113740596 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089164278 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114458348 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170589268 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249524129 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222057241 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180128161 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087504866 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.116408059 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101394472 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135905448 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087501313 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188622027 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174978687 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173639477 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094004035 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124965387 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121349995 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.09825291 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.161004652 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112680238 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314466367 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.293299419 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110731633 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095618437 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130025323 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269673981 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091529592 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231671894 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117855818 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222714387 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090068999 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78377528 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161308625 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108251383 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093167967 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116630134 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090714001 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120277628 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163236036 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.400708996 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098406973 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113866914 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086040041 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228153556 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087682358 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086626255 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181803825 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092465662 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122785751 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105330433 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126647114 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.174572913 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227040034 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12663111 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097153359 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117516844 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.100078066 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.111811315 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209260843 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220359695 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.156704731 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.214517451 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119619931 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162370012 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164492222 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11936253 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168710588 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095016427 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127376158 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120803088 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197662458 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145200878 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114279273 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096943941 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121213323 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.121997243 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11628849 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095064018 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.18967721 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.462108162 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165059508 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083555176 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113756465 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093825637 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179673525 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094410797 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261546536 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095436549 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162173971 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117026149 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083521674 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117932257 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.159613108 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120899985 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093874471 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121139909 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11701082 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.225670271 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195846473 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122197378 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217256095 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176852165 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117167326 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174284378 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122876427 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170474886 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100568501 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125625342 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092025139 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780969379 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121464241 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093910876 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11509619 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159737033 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109729275 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087196702 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.111547564 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085506473 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796457428 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088413969 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.107005546 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.088144581 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118585662 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096853621 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116893228 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092312112 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163025253 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236467295 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123525243 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098467885 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.117181263 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165710765 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09353934 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116992932 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092054781 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.11698222 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102282225 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119598498 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093405226 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17489618 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163355114 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229297516 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.594770031 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09010624 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.090670413 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233508391 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112472708 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266772872 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123610195 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228513806 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164445418 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.087101794 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322058631 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.170698483 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190126332 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094464966 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173929179 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114507746 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097106364 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.191555386 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092760737 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122344418 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164377592 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10466573 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129877857 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.971457192 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086618686 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2238872 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.106874466 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16683885 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09328217 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127281012 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296463528 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092480262 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132026342 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165648601 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094543358 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.117686315 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.851907083 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111654737 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100912826 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123718971 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204929359 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.193847235 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099611821 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12414691 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100815217 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164517088 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.239038783 seconds)
  done (took 43.346379494 seconds)
done (took 58.815051536 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.294057398 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.22786457 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.27454657 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169561699 seconds)
  done (took 1.999656392 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.184870507 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.130880134 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.154620591 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085010053 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.159332139 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.111548938 seconds)
  done (took 1.786255676 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.372786681 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276197239 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.217956901 seconds)
  done (took 1.827016415 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254842801 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.278261741 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.327896096 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.401999151 seconds)
  done (took 2.32306846 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206357007 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.103983623 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.13098342 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.117438316 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.177270457 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.212414366 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141192466 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.153329553 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10822645 seconds)
  done (took 2.356564509 seconds)
done (took 11.257391044 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.182792477 seconds)
    (2/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.285230222 seconds)
    (3/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.269437513 seconds)
    (4/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.152935876 seconds)
    (5/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.267717832 seconds)
    (6/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.22023295 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.227115227 seconds)
    (8/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109722041 seconds)
    (9/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.125759394 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.198774831 seconds)
    (11/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.246526497 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104973874 seconds)
    (13/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.182248867 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.128957542 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.12735195 seconds)
    (16/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.143472146 seconds)
    (17/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125090218 seconds)
    (18/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.202200319 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121604789 seconds)
    (20/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.22966697 seconds)
    (21/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099951411 seconds)
    (22/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.233009192 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.139885785 seconds)
    (24/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171363033 seconds)
    (25/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.216230142 seconds)
    (26/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.126577924 seconds)
    (27/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.100961794 seconds)
    (28/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.127760975 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.115232963 seconds)
    (30/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.211940076 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08664115 seconds)
    (32/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.23635929 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.138912432 seconds)
    (34/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.192947582 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.212505578 seconds)
    (36/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.116106491 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.097358155 seconds)
    (38/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.122559448 seconds)
    (39/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.170452263 seconds)
    (40/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.186015176 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.14776219 seconds)
    (42/286) benchmarking ("sort", Float64, true)...
    done (took 0.24698813 seconds)
    (43/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.206164616 seconds)
    (44/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.080703613 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094643531 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.123021777 seconds)
    (47/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.147429217 seconds)
    (48/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.172300328 seconds)
    (49/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100065055 seconds)
    (50/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.211801657 seconds)
    (51/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.163943843 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110613692 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118204543 seconds)
    (54/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.08776549 seconds)
    (55/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.143413305 seconds)
    (56/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.20896677 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095835901 seconds)
    (58/286) benchmarking ("sort", Int8, true)...
    done (took 0.236440338 seconds)
    (59/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.17528631 seconds)
    (60/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100461894 seconds)
    (61/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.210324507 seconds)
    (62/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090091633 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112521874 seconds)
    (64/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196317091 seconds)
    (65/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12738886 seconds)
    (66/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.205337521 seconds)
    (67/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.109349227 seconds)
    (68/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.18765206 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.117025547 seconds)
    (70/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.106616419 seconds)
    (71/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.185710158 seconds)
    (72/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099548854 seconds)
    (73/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.158708854 seconds)
    (74/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091545346 seconds)
    (75/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.074370185 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 0.11510968 seconds)
    (77/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.144320613 seconds)
    (78/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.210301978 seconds)
    (79/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.084060194 seconds)
    (80/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.189953662 seconds)
    (81/286) benchmarking ("sort", BigInt, false)...
    done (took 0.235603473 seconds)
    (82/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.130194068 seconds)
    (83/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075627044 seconds)
    (84/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.147656982 seconds)
    (85/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.198296556 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089117049 seconds)
    (87/286) benchmarking ("sort", BigInt, true)...
    done (took 0.25227233 seconds)
    (88/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.187264377 seconds)
    (89/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106384029 seconds)
    (90/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.214802812 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.137114138 seconds)
    (92/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.159247261 seconds)
    (93/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.125869143 seconds)
    (94/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.185914013 seconds)
    (95/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.074284322 seconds)
    (96/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.101664452 seconds)
    (97/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.12872987 seconds)
    (98/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.188433803 seconds)
    (99/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.142365733 seconds)
    (100/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.187170989 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094795158 seconds)
    (102/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.105058504 seconds)
    (103/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097967238 seconds)
    (104/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.085561583 seconds)
    (105/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.118784125 seconds)
    (106/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.195849351 seconds)
    (107/286) benchmarking ("sort", Float32, false)...
    done (took 0.15858664 seconds)
    (108/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.122785968 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087331445 seconds)
    (110/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.122393104 seconds)
    (111/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.077337696 seconds)
    (112/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.097159486 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.105083376 seconds)
    (114/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.174867541 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.115471762 seconds)
    (116/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088746368 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.195452067 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.126312908 seconds)
    (119/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.118911195 seconds)
    (120/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.169987296 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087267796 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123591629 seconds)
    (123/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076114207 seconds)
    (124/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.101976492 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094627275 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09489112 seconds)
    (127/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.106323169 seconds)
    (128/286) benchmarking ("sort", Float64, false)...
    done (took 0.183935139 seconds)
    (129/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.091001134 seconds)
    (130/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.195514598 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094310202 seconds)
    (132/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.120523799 seconds)
    (133/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.220831958 seconds)
    (134/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.104303898 seconds)
    (135/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.0901873 seconds)
    (136/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.114016943 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088823642 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094941508 seconds)
    (139/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.123119776 seconds)
    (140/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.144424711 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.102699036 seconds)
    (142/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.079003457 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.11356092 seconds)
    (144/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.11803386 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12896701 seconds)
    (146/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09400496 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.113286206 seconds)
    (148/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085986609 seconds)
    (149/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.097663669 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127334127 seconds)
    (151/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.134366402 seconds)
    (152/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.205639654 seconds)
    (153/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088133663 seconds)
    (154/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126458032 seconds)
    (155/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087522517 seconds)
    (156/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.175197208 seconds)
    (157/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.077760503 seconds)
    (158/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.103844986 seconds)
    (159/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.197150333 seconds)
    (160/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.080897562 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087852502 seconds)
    (162/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.103731089 seconds)
    (163/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.076942744 seconds)
    (164/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088353355 seconds)
    (165/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.122314907 seconds)
    (166/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.190916646 seconds)
    (167/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.075568482 seconds)
    (168/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103493814 seconds)
    (169/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.121417679 seconds)
    (170/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076064355 seconds)
    (171/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137268301 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093351919 seconds)
    (173/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112821199 seconds)
    (174/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094469146 seconds)
    (175/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.075841784 seconds)
    (176/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.102784897 seconds)
    (177/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.132926566 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.125566614 seconds)
    (179/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.087477837 seconds)
    (180/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.119775836 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088817918 seconds)
    (182/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.084317274 seconds)
    (183/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137407858 seconds)
    (184/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095499976 seconds)
    (185/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.127219493 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 0.23680674 seconds)
    (187/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.095463593 seconds)
    (188/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.088124654 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11434198 seconds)
    (190/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.088963227 seconds)
    (191/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103329021 seconds)
    (192/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091701151 seconds)
    (193/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086960269 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125079007 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095718336 seconds)
    (196/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.167642716 seconds)
    (197/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086735978 seconds)
    (198/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.142461726 seconds)
    (199/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086446362 seconds)
    (200/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.102078607 seconds)
    (201/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097256484 seconds)
    (202/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.075933094 seconds)
    (203/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.122287337 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.079340336 seconds)
    (205/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120398108 seconds)
    (206/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117569164 seconds)
    (207/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.10218476 seconds)
    (208/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.081622512 seconds)
    (209/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13933524 seconds)
    (210/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.182408742 seconds)
    (211/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.104650784 seconds)
    (212/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095493273 seconds)
    (213/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.085449712 seconds)
    (214/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.123592151 seconds)
    (215/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.09014242 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11528529 seconds)
    (217/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07928977 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.077805225 seconds)
    (219/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.102927412 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086693442 seconds)
    (221/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.113222491 seconds)
    (222/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092265804 seconds)
    (223/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.194022013 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088929363 seconds)
    (225/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.0784492 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.115876607 seconds)
    (227/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.075918882 seconds)
    (228/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127429648 seconds)
    (229/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.090454529 seconds)
    (230/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076207874 seconds)
    (231/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.130269103 seconds)
    (232/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087520286 seconds)
    (233/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117851856 seconds)
    (234/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.075740337 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.118576907 seconds)
    (236/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117250048 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114309001 seconds)
    (238/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.075571257 seconds)
    (239/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.075939934 seconds)
    (240/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115337541 seconds)
    (241/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.078413442 seconds)
    (242/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.191593662 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094187478 seconds)
    (244/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.105029813 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096787388 seconds)
    (246/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094229289 seconds)
    (247/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.102934956 seconds)
    (248/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156770324 seconds)
    (249/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.103101694 seconds)
    (250/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076672298 seconds)
    (251/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086270167 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.142233661 seconds)
    (253/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138856742 seconds)
    (254/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.079565855 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087236995 seconds)
    (256/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.115873465 seconds)
    (257/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086729612 seconds)
    (258/286) benchmarking ("sort", Int8, false)...
    done (took 0.202121845 seconds)
    (259/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.10197309 seconds)
    (260/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100920594 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120736139 seconds)
    (262/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087183438 seconds)
    (263/286) benchmarking ("sort", Float32, true)...
    done (took 0.24455194 seconds)
    (264/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.076368861 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.113591319 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088200673 seconds)
    (267/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.1013252 seconds)
    (268/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.109267056 seconds)
    (269/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.074974821 seconds)
    (270/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.102698323 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096881002 seconds)
    (272/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089854119 seconds)
    (273/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120018774 seconds)
    (274/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.077557967 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116293123 seconds)
    (276/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.169016589 seconds)
    (277/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11627377 seconds)
    (278/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.079519666 seconds)
    (279/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.078939863 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11268969 seconds)
    (281/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088562271 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.115699659 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.087133693 seconds)
    (284/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.110701912 seconds)
    (285/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079011551 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090102439 seconds)
  done (took 37.673564286 seconds)
done (took 38.647320907 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104698936 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.158380273 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099196359 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143670052 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.103100978 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129137138 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.096450276 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099753051 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123230841 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.099932688 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.126505203 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.076702471 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124977767 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.097417742 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.122119489 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117308455 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.127376652 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094702139 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118046338 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085931696 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.092124512 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115296244 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.089807047 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.105487284 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101610848 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095997417 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.12154464 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097686905 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.114604067 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087217437 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.113212024 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.09446302 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087995916 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128638277 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095238011 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.121021246 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099705814 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.124073351 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.090274946 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088529922 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.123659639 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089541875 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.122043058 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095458933 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.089354197 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.114834555 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.092012319 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128449618 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119799597 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120043304 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.0968286 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124742173 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096317672 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.094208294 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.11547973 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.091856205 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.114228341 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120958578 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118226812 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093859381 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.095858836 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.11812645 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.085765786 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.118091742 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.090557751 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.124920868 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100152405 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.086790308 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127600993 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.093559943 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.11577482 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.092895419 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114647235 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089101692 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09825934 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.127162227 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088048681 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115061283 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095029653 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093375192 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10968846 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087852604 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.114037065 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.086766263 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091223319 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.1037596 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.083948774 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.119875787 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086260453 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.091248847 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.121291144 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.091406645 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113103996 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.096408468 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110870924 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.08566122 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088327491 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.114763829 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090963172 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.086866736 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.117199057 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091936249 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.123654192 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091539661 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.089211166 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127986568 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088727198 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.121456241 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087908187 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11345248 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103689523 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124224205 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086354205 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09507314 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.114440737 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.090803177 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087327349 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117029603 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.088275294 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114569067 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.089751699 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088224254 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118657796 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.088486815 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128637511 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087391617 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.087828037 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115842351 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.08801804 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.121086821 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.08804309 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088777546 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114639227 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08642674 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118351058 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088226155 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09024896 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113313773 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.091363663 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.1165916 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091955315 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118896325 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.087300527 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.085375833 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11380852 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081747099 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119712062 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088421444 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087604605 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.115277158 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088888457 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087966287 seconds)
done (took 16.801289284 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.084883615 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18380175 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145957738 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.117834164 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133162508 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083186342 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121580706 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.114526171 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112143936 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139852923 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.107206097 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.129683458 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.123249428 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.111446194 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083973533 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.089821197 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114264917 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.100570813 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.149726627 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13308977 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118698185 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.108276611 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.113511018 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134090462 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093085418 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136892583 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.085285653 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11645833 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.089362066 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.13099881 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10511532 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114798875 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.084955668 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134571575 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10212667 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118010362 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086404038 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095753555 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.114828699 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.086305022 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139085812 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131396259 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.090633382 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.091441744 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116958601 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.087740797 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115277189 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094869955 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122850732 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.090034351 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127406087 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.115256594 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.114509362 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092760394 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.108784144 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.095163734 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119325094 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.086757622 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127835392 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.087795424 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082879595 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.114190167 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.098407714 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.135550165 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.087002032 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119934695 seconds)
  done (took 8.356177109 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.101926217 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139302959 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.102288139 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129671087 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.083143261 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.111749278 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.085514207 seconds)
  done (took 1.782175789 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.086088705 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110631202 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.141439753 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.113040496 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134499175 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.137672911 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090490225 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083752514 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130961459 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.085016495 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136181713 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131393219 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11370121 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091700271 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139320514 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086458632 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.140492117 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.085532342 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115850662 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11130609 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115709586 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.103107749 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.113135628 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085920255 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103100486 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113411934 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160283557 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090971198 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083576076 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116708906 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084221861 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.154328299 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103601085 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126162628 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086366123 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133919112 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.107190875 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114148588 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.104334468 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121671187 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.10316856 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089068409 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.113607426 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.082292598 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.115850415 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098515092 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117388343 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.086750587 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.087310935 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136006902 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.087328501 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.132260414 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087147121 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11841416 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.087167577 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.08749685 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121570779 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.085588746 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135274803 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.086295734 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137567633 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10411772 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.13486276 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.106485611 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119336406 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.103037818 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.134339131 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.09208117 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088472077 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117295237 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104063952 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111749217 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.088735375 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125478738 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.087896219 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112639787 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.14242993 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085805636 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.122869003 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084583622 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11196316 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085464594 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136927428 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089543382 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084334152 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116480982 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087389203 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108499369 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.084583397 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11639079 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.084707269 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.08588016 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116658731 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.08565779 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117085382 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105796396 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.087552082 seconds)
  done (took 11.489755877 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087410934 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084995246 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.116580106 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087378957 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.114400613 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087609779 seconds)
  done (took 1.622885652 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115388298 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113555254 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.099264777 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116205917 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128699738 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137767964 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.114339506 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127225098 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.101878616 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.123821036 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.109553896 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.139821586 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.144543696 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.093272478 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.13751658 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.090870868 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.136479652 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092666927 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.09518918 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119087016 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100952851 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118932373 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.091992742 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132079805 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095919113 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118048172 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090458746 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124737404 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.096941933 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122585213 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.091443314 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.12238359 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09113714 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121415997 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110798439 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.122239344 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089677432 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124777825 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.092705465 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.123403884 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.11256592 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117837709 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.096769382 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.124788658 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.094613709 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119119114 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097047514 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118236249 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109947657 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.126199506 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097546533 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.117319692 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095911738 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.124152249 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.093398582 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12205126 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097456389 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.139006158 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.092162725 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120400661 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.088022208 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122345416 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.094918757 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121919197 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.09770799 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12404393 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093165299 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117554632 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091701249 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116056669 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09858378 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.113467065 seconds)
  done (took 9.061225371 seconds)
done (took 33.334815735 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.695326874 seconds)
  done (took 1.731831005 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.826724393 seconds)
  done (took 1.865204992 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.926577168 seconds)
  done (took 18.996394456 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.475330183 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.571774405 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.962315058 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163813367 seconds)
  done (took 3.216528515 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.978297569 seconds)
  done (took 2.036332861 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285159915 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233628293 seconds)
  done (took 1.563481926 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.801266714 seconds)
  done (took 1.855780305 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.456504396 seconds)
  done (took 2.506475281 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328074449 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158277959 seconds)
  done (took 1.548173214 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.56813034 seconds)
  done (took 1.628327491 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.574160959 seconds)
  done (took 11.634523903 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242091204 seconds)
  done (took 1.307721407 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291026714 seconds)
  done (took 1.346624979 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.808700967 seconds)
  done (took 4.866222013 seconds)
done (took 57.148358729 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096420443 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.0970684 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.126461261 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.095580795 seconds)
  done (took 1.470017382 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10165198 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.094150256 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.12799367 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.091953425 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127985194 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090769785 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122370175 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.167714051 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.091974744 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.094180479 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120066751 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.092280806 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122532653 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.093311595 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116514977 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.094916465 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126916049 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.092421693 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123614629 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092120794 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11520786 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095235711 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123422949 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.091453739 seconds)
  done (took 3.677295474 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097197445 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.091624612 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.121654749 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089580241 seconds)
  done (took 1.468991446 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.097075218 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.103788025 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.130398337 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09750145 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132659309 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.102758236 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116779817 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.088553277 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117261387 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.096292106 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.111988433 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.11071733 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.12951593 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.095733752 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126848222 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089204136 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086157579 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130050466 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.095286089 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125361879 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088354759 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123427505 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086965067 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130365309 seconds)
  done (took 3.683550112 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.167654097 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126084956 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.108507493 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.119453157 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.131300469 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139713606 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.083699584 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140454826 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.084702356 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128029886 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088315455 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166393236 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.097491677 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.111465458 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.085146542 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.084327054 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125026442 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.098402472 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.115547174 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099397785 seconds)
  done (took 3.369462764 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.094947543 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089112363 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.112474632 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087289969 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122153385 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092035145 seconds)
  done (took 1.67459919 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094137696 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085236724 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.117520538 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.087655672 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.117747584 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.08558487 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.085360276 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114285206 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085963617 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.111564271 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087973025 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083742355 seconds)
  done (took 2.233886823 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.514400256 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117511319 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.089471156 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11261888 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096664426 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.111023493 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103242847 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.08600134 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142091837 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.086321895 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116031276 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089206296 seconds)
  done (took 2.742759088 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208936508 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095226255 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264606704 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.353432571 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161550978 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165157151 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277537392 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166292432 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.183812534 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136321279 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194335085 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128978048 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154421836 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177616101 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141317788 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.128581781 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176832069 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227175634 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121458729 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201627683 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161688793 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166989334 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179071351 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151931653 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138332302 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129675346 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120635331 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10117896 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173584508 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167866153 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20231207 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120326447 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141010385 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198526144 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235676339 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178412454 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284408863 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106488133 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.178944414 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167423814 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225481216 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140657925 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196486297 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155238792 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127790334 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181209868 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128397752 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178855566 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13340598 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141574959 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181145313 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177342266 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.180191461 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134691893 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304097116 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121505792 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146544501 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182609253 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188340817 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189038108 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165832579 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118229055 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184915084 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183167116 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182534454 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.146079465 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16694635 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098817585 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17616391 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192564734 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176100899 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163561601 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.211336539 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106688718 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161168716 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168752285 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154035082 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176138545 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130089457 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119746351 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150033392 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110492023 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127856812 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193477903 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09556869 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203488594 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136250877 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.170742971 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200802653 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157384862 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132706172 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164433731 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163642091 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147347617 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.089621975 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151602829 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.152986773 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153871824 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104322339 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157262358 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143626262 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099895811 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149913786 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.095215126 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162464135 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.126802073 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163579821 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135100083 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124431964 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167402724 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121384195 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149180016 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167968705 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183516699 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132069021 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102523189 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190962264 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157679878 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135950594 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174923374 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183753559 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.124713353 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138422113 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165666447 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190638806 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140811116 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185859331 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13889874 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104769887 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138664645 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160399862 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126202297 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.157698637 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129701813 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.152534513 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189392673 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.094778319 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136894716 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174556881 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097723147 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128233642 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113599969 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135649427 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.134931407 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111946884 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13571739 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156912925 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158857417 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126485492 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152992798 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141926377 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188463191 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132172867 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.120852626 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147837657 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.089157718 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.203937014 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181936951 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101474885 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1937199 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.165148682 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222067189 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16232992 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103661984 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178475387 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101016868 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119829483 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164658616 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16128357 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161661585 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179929033 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191581641 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.168246614 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.154956551 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118148292 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16273063 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163929801 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156188148 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.105948466 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15987742 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158464771 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121232375 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094781862 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127084187 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112627276 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130320444 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101440026 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208806294 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16066686 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184191542 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16091032 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112574879 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179750212 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125755044 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163726488 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170033152 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108757403 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.181442149 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178157388 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166456553 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143090544 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171986241 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089114238 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123395721 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103993759 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1639336 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132927101 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103735281 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142281091 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180380076 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1700554 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148725285 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1988652 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166683764 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188184414 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12019146 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.138956173 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169743113 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157602786 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.177687655 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10736664 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150966858 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17538448 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112939099 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215433947 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129546758 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165723797 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222689158 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.120494435 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13011485 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148640971 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162086745 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11079444 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165143754 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143247588 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106397191 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150290627 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.124742715 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098681795 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173093136 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14306318 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1776208 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145497912 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168787865 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095996537 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142904336 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159388771 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11570563 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114752124 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165819867 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182546592 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14278428 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155028864 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142639042 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130671016 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306129325 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188264071 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180751701 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136264596 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141977256 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1326182 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1594999 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161082516 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177035483 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146354125 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176881848 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127475253 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134953047 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13334792 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11755006 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149058806 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.139367062 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103206379 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152537842 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.134388455 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174731842 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111850003 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159879749 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162648029 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146766831 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.113967754 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142449142 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199378 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15543477 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177205003 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.118582747 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164119608 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194158878 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124615494 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100558959 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.126909513 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179839164 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101983215 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157791044 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.18384419 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224126424 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160469803 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134335525 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138754443 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.08737785 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157573912 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149058203 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195678912 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143093325 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135418906 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185185236 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112767654 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130607829 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162250019 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283941949 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115685454 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171988725 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.113761174 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275689746 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096913584 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13106068 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157961184 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169279941 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108090009 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.174714774 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165021867 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114100564 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158773483 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136516577 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186865209 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204911808 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170216037 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171658378 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.130901403 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129392159 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160881341 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173616566 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145097511 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.135316062 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132344041 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180541911 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.185323773 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13297368 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160669376 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160222433 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128369622 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196338016 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104566283 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194915125 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130955115 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162940601 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10872521 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123457968 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156666464 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.18186237 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134667388 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140230992 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157026756 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132386579 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096175274 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151039722 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157285948 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141095895 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.095845782 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169812012 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.122009703 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131820872 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178125567 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130057659 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150969755 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115146535 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137843375 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143587683 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11529381 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136613864 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.136511441 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179060338 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.1306987 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172603018 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173984605 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16183218 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157295702 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112501151 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.667127226 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127149806 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17943558 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117793512 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180935847 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147790182 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16509159 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158140442 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11912987 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16523515 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14860257 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228169814 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164123093 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155786772 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10103596 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145104138 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140991293 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101738341 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150088274 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159982372 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110011182 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136552997 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156828544 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142505979 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.103302782 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136715288 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181524261 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117189578 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172800082 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178185115 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137258315 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163749257 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16898758 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099443842 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158762067 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170708132 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141437758 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148674456 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.102219229 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133149461 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179910328 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093915202 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159885012 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159226709 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129450482 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162625734 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.133192914 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15836794 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140176472 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130498222 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130056315 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15181661 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125452501 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131592404 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126120964 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124605517 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152847283 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148749324 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095080003 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166096431 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181094431 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.092467566 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131368224 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28363705 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155784387 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188751481 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111523946 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134567652 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111319651 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147019153 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152157146 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16091687 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.09874102 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132363627 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.098686461 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.167524375 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142633279 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126522146 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18416228 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156004807 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195737853 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136186817 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276882094 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108779651 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154324541 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092215402 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131048479 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141515509 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103657866 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143396315 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189657486 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181584762 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144078176 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.103906451 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126179737 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.093918237 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131905321 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129963296 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15318813 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156887255 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142423509 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084586932 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145490247 seconds)
  done (took 74.449294519 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166263016 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.156436687 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.163229917 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223104762 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.182511872 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27863251 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234491536 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253343698 seconds)
  done (took 2.818657944 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098817933 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.143114187 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.128226866 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13444017 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.116610765 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.088679973 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.328118859 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133303925 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.087144967 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.147043613 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.130988026 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.118408054 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.495482177 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.118544199 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118039043 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082240473 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116277249 seconds)
  done (took 3.748135239 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.469562058 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.505204846 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.394825477 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.199209518 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.185188164 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.093558476 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.753817118 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093777293 seconds)
  done (took 12.854820417 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118422452 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.113587023 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.162124805 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.164740629 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.11842737 seconds)
  done (took 1.847971288 seconds)
done (took 117.097338211 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.103472553 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.102834841 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125476267 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.097305768 seconds)
  done (took 1.584428858 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.104310854 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.081613949 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.113256552 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.079030496 seconds)
  done (took 1.545411455 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.194425905 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.176162705 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.416801094 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.079963606 seconds)
  done (took 1.692034741 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.118828677 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136674969 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102955467 seconds)
  done (took 1.535084802 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.110415383 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.102836033 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.1291084 seconds)
  done (took 1.516980017 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109655487 seconds)
  done (took 1.280071667 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.116667982 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.145588178 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111610732 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.14449663 seconds)
  done (took 1.693599872 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103556724 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.10431035 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.145476199 seconds)
  done (took 1.525639479 seconds)
done (took 13.913611232 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112721586 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435059579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.390207785 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142824542 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.700132546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415123624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.02366467 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149206145 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170344065 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095680791 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141886339 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675628805 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.047777747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348881517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.032193151 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.347565255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.672618606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119431681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088665384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118428159 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007813125 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121530316 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089864442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09050616 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702534586 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.394037282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120237688 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.34578497 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119169805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098212623 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.378025903 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119620248 seconds)
  done (took 16.974391722 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104003089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185222581 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.100590277 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122059844 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097755289 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093574285 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124050924 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093783066 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183601426 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125479576 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107899288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117597203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.094209169 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088593976 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140510066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094651978 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.122167488 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09124883 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120680578 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090364916 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136830197 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089756729 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090850286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119623507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09115068 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132484797 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090042154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118353999 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091096099 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096816547 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124995283 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.090171809 seconds)
  done (took 4.746938047 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150226985 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194973504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.103599006 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.154081544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176619676 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093139563 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200662363 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147336086 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154180372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120268579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105316522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120163039 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123220353 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121352171 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109434294 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11968238 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089461026 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120135127 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089834719 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119187102 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110440247 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120000081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.091150076 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088196518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.120427029 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.103834592 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120423679 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.08969148 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118700865 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09820962 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092259681 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120534797 seconds)
  done (took 5.066526282 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100378215 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.098546406 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135807876 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.108200628 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121366991 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.092286533 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.122638031 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091707657 seconds)
  done (took 2.052495959 seconds)
done (took 30.01391425 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116318171 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.100797083 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.138760546 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.103086137 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.130230751 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.106755127 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124232103 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101377197 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.10333004 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.129779184 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.106999018 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.119433908 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090973779 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117853277 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.103777443 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09278439 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134351683 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101146883 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135187498 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.104508248 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.124728013 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.10094886 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128244766 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.104607255 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.135308701 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.105022185 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.108311579 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.12768102 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088886291 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121403786 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.106066133 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.148514931 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.099014333 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.141456995 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096639442 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09583019 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122050946 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094797024 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132949199 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102592658 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.126637104 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101940038 seconds)
  done (took 5.944172058 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.123778764 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.155102863 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.120275304 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.120864298 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.092684884 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083401641 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.146473612 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.088732139 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.118689741 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113604097 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.114807786 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080973979 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081056426 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.107410103 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080559978 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07793252 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.113759803 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078482745 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.109649886 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081650702 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084976425 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.10761435 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.084088736 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.083519487 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.109515579 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.086078557 seconds)
  done (took 3.834272091 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104608958 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.111293796 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.145759285 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.173171041 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.123546596 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.127501413 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.099458051 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137400823 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.106707718 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.089251323 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.122643679 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.119802729 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137985913 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.098099859 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122364267 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.104202487 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134213912 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.092468537 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093393258 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140572156 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.104522943 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130881165 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100862688 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.1305818 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.089382535 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092799706 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.125758894 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.09832443 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.127075061 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.097727488 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125397423 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.092793632 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120305043 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.101857887 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.097353812 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.121366252 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.108516412 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130094542 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.099692391 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121011268 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097581877 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.091102337 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142756696 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165911468 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091554203 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.094390545 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123101159 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.100590851 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121245872 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107247259 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128483868 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09332574 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.094704915 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.121964268 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.092564755 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136049578 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094519274 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.1249215 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102075287 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097082585 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.132760536 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092726785 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135468138 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.09396589 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125408482 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.091571348 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091462555 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119119261 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.112292229 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128827907 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.130599763 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124214105 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.089948935 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127657181 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.095604518 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094589211 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.121027985 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104090918 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129852231 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.094749422 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130828807 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091743925 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091129071 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138613991 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.090980075 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.121769014 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.089862329 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125775615 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092618738 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089935405 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134909633 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.08860515 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123900534 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.105161828 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120285789 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091468133 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.095158789 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126108068 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.088580035 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134601035 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.094404945 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121222028 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102550853 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11999312 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092953676 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097905442 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12535426 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088054018 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124897655 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.095595147 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.120402743 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093775695 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.091441141 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.122912909 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.098440354 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127924835 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092875133 seconds)
  done (took 14.236637398 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.237347461 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215691642 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188124301 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264349084 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134741239 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115288233 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211686683 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158329783 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090070072 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159105611 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169731631 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183042951 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170481952 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183662528 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172787575 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.089337087 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.139602149 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135446952 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215726825 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.294146916 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.10983186 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.130114919 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159605536 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.127619981 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135887892 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.098773687 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139209339 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.101677298 seconds)
  done (took 5.735585616 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114252975 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153742012 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095410245 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142645554 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.116207046 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122108396 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094166343 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.121790262 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103817304 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135387839 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089697592 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125758908 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098708148 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.097675998 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122885209 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.098876033 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130516236 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.090883998 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123224402 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.095214694 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.099494463 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.139757701 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124824586 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.09092494 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.098174094 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120893557 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.092372293 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143360892 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120316397 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.113105615 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086529122 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130258769 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.103377716 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.122802761 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.089587547 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.091020437 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123873954 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.091773449 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123883012 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.088245998 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.087979314 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.113673952 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.088904487 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136399631 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096050978 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.116516263 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.096998154 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126185319 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.090913557 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086229806 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.124743644 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092517799 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.123244225 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.09861412 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.090910995 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122342238 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093142901 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12121239 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.096760746 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.091512577 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11972326 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090892656 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12556948 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094057267 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130234147 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094981766 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.117731967 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.093546486 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093695604 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128028979 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09225995 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126192856 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.089279577 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091746787 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.124215612 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.095286552 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.123483827 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.089245835 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088134883 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122250265 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.079147923 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.120594463 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.078933605 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092125671 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.119433875 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.088485571 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.121818183 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.097385213 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136344524 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.091332293 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.128033036 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.092714179 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.08874028 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124434275 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087395395 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.122655411 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.107063048 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141512096 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089490631 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118708367 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105439909 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.092676229 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121594195 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080341227 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130220328 seconds)
  done (took 12.562175365 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.134235986 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151832082 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.091407435 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.138798372 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123565133 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15787778 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.096276654 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130043335 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.091287525 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140031442 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.090407775 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098446864 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.122062229 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104270813 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158166598 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099632352 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123576778 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104294768 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126169651 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.13733184 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.14087207 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107995787 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.139994102 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09199628 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127977781 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106464123 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.1602694 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.104213484 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135815817 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.10842463 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.135988695 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.128679546 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142650438 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098639293 seconds)
  done (took 5.361843402 seconds)
done (took 48.858859751 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.291287598 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.524188341 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.273451372 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.213883798 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.330807896 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.286482408 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.281798561 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.274063596 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.704531691 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.276284919 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.505779927 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.897047228 seconds)
done (took 60.06576241 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.329285509 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.428969442 seconds)
    (2/2) benchmarking "String"...
    done (took 1.569636636 seconds)
  done (took 4.212048254 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.815003725 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.276359597 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.539495854 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.267994563 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.268660443 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.563825372 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.195086366 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.740878012 seconds)
  done (took 29.050754856 seconds)
done (took 43.61251537 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.302612124 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.289762609 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.270840862 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.255625646 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.39383875 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.306887951 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.343144191 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.375272686 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.288289168 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.256609355 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.290465555 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.291169814 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.280351876 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.440792819 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.278934805 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.27361732 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.350972393 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.947190573 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.706288467 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.279308536 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.276647973 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.308621949 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.275543855 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.270244107 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.319918224 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.270273561 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.289002288 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.280613054 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.138962414 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.272520475 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.306875238 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.579152139 seconds)
  done (took 193.010171251 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.27053892 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.122842313 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.263685736 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.336012133 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.543912065 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.4744664 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.415809794 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.754689958 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.294712186 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.291022242 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.416776588 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.275622759 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.522881217 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.265661207 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.300576455 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.344751661 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.498034652 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.565677474 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.314463062 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.427612859 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.297175216 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.343404778 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.250626464 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.415664539 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.318698699 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.3646332 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.282440056 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.307484286 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.46675858 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.393525302 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.298429503 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.277850817 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.967728498 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.129644764 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.292508265 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.308477187 seconds)
  done (took 151.616809238 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.271576402 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.271836791 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.272038322 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.307385211 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.271788017 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.919793786 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.924457673 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.842803815 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.370800096 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.91001057 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.599854641 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.272410836 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.272054038 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.370440792 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.287730201 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.273274778 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.289243589 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.298624601 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.278392898 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.272975913 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.886386986 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.286237752 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.472096859 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.458911098 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.293457192 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308380954 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.674476271 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.273750153 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308548385 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.618350143 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.328980019 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.273245223 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.743072389 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.038594939 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.389960236 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.275454646 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309842998 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.275301529 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.560770643 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.274197736 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.274795197 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.277562803 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.0435099 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.281816187 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.922173378 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.279667952 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.284864059 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.275897505 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.274481357 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.607972339 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.181804373 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.279925393 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.274047185 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.277285899 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.274797997 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.274793491 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.310135859 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.7232175 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.384988454 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.275200587 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.278842055 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31019858 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.275415965 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.456680529 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.275774758 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.274920319 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.331977824 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.384671737 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.72713081 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.924933404 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.282237754 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.379392847 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.400931476 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.276557029 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.276686918 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.276620541 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.27630992 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.390715111 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.276247445 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.738226373 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.276791537 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.462308732 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.296482038 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.906742688 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.38337922 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.276900724 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.789138 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.284035996 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.276396838 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.10426489 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.378916846 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.277575663 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.277265696 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.277681596 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.276692677 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.741271439 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.928500464 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.662308513 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.285022277 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.061811469 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.281667246 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.752250715 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.889980901 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.04878547 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.283611042 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.393857571 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.464504204 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.298963623 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.27821521 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.946113277 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.283341795 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.336500931 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.284278996 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.678733616 seconds)
  done (took 377.874995026 seconds)
done (took 723.703824032 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.904992033 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.896848642 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.018019408 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.88645149 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.836799518 seconds)
  done (took 10.751930707 seconds)
done (took 11.962010034 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.488044507 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.487715936 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.34767794 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.48919386 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.31502449 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.509395076 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.469787371 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.300291198 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.394882667 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.371225931 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.392012309 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.338691726 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.316448547 seconds)
  done (took 19.429519094 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.637712212 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.645440068 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.349116937 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.671531679 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325003751 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.645394336 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.496788433 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.503915722 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.50665388 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.301108195 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.294321728 seconds)
  done (took 17.588309914 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.627920293 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.634228797 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.352264451 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.638580846 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325999378 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.637201304 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.506295364 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.512963945 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.516345552 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.302040742 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.294438292 seconds)
  done (took 17.559865526 seconds)
done (took 55.789919477 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.306185745 seconds)
  done (took 2.517397257 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.334442494 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.501869646 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.313292729 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.296291409 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.291930263 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.300129178 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.297311571 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.294401936 seconds)
  done (took 11.842224701 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.28819166 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.29072952 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.290567309 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.290339489 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.290030972 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.290511147 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.287420068 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.28719607 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.291107971 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.291305069 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.290881947 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.288382974 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.2884327 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.288292864 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.28858537 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.288056426 seconds)
  done (took 21.842561618 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.289997772 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.288094001 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.287993746 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.289810215 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.288915427 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.2881704 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.289832489 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.288795849 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.288641268 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.287988085 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.289346273 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.288782854 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.289482621 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.289484329 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.288187953 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.28928664 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.288748826 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.288961823 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.292673074 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.288437468 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.289047297 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.288744202 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.289341941 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.289936398 seconds)
  done (took 32.153911578 seconds)
done (took 69.567275131 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.981681324 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.251629474 seconds)
  done (took 7.446817592 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.351332915 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.352688563 seconds)
  done (took 3.9187425 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.292391953 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.291472958 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.293089164 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.293015784 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.292438313 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.292637736 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.292376516 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.292307531 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.29252824 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.292793195 seconds)
  done (took 14.139946179 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.292419531 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.293784752 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.290584396 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.292392554 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.29330121 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.289922077 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.293449525 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.292652453 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.293269285 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.290019812 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.293578486 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.290709058 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.293737528 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.290656415 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.293333533 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.291005463 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.291751483 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.291916751 seconds)
  done (took 24.473921658 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.307566139 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.314654803 seconds)
  done (took 3.838286557 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.421984834 seconds)
    (2/7) benchmarking "second"...
    done (took 1.332757587 seconds)
    (3/7) benchmarking "month"...
    done (took 1.401366257 seconds)
    (4/7) benchmarking "year"...
    done (took 1.389151526 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.821140961 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.313341266 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.333843459 seconds)
  done (took 11.229944522 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.295181359 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.483874915 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.597508119 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.873227104 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.296384304 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.298696793 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.153924352 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.298967551 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.301796575 seconds)
  done (took 14.816054779 seconds)
done (took 81.07762705 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.325631029 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.288133831 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.709541617 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.305532849 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.303471105 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.587816607 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.295360749 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.420715633 seconds)
done (took 38.454958334 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.287447181 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.286360383 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.178595833 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.296469754 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.42672289 seconds)
  done (took 19.406480325 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.434752764 seconds)
    (2/2) benchmarking "read"...
    done (took 1.631623264 seconds)
  done (took 5.284095905 seconds)
done (took 32.196589862 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296339829 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.296040856 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.296789718 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.294294109 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.296071392 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.293730013 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.293885024 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.295908593 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.296432695 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.29424639 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.296273543 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.296513385 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.296451097 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29714095 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294460485 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294679794 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297825976 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.294527013 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295135704 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.294694774 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293661687 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297204354 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.294812497 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.294259003 seconds)
  done (took 32.311029979 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.298578633 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.294981865 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.297302344 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.29873675 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.295706779 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.29842406 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.297294948 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.294312142 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.299409882 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.298182537 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295513559 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.295322181 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.299030775 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.296244193 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298842697 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.295708179 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.298920862 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296308409 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298490879 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.296615312 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.298473235 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295808398 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.29705136 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298695982 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.296780627 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297164399 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.299303641 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.297726694 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.300064573 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.296925946 seconds)
  done (took 40.14237663 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.305824925 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.308400992 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.299878274 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.299928931 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.300683813 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.299804485 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.300339633 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.299871063 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.299228136 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.299913445 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.299731889 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.299985581 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.299738389 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.300034986 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.300620676 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.299607044 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.300591821 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.307518086 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.30014701 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.301301377 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.300377183 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.300199688 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.300679641 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.300536655 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.30277462 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.30233401 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.301934641 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.301145843 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.301375091 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.300102518 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.300657875 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.301016499 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.301721676 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.301479688 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.30119555 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.300012572 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.306068986 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.308719228 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.300272408 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.301296573 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.301990814 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.301226633 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.302782093 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.302439943 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.302329946 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.302615059 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.302225145 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.303030638 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.302662417 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.302802194 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.301894275 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.302663105 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.302574401 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.30387213 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.302651352 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.303323106 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.302301595 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.302624964 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.303136134 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.302532513 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.303611499 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.303592928 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.302772428 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.303664869 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.302995443 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.3033611 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.303090486 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.303130117 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.303038056 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.303896178 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.303448172 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.3045654 seconds)
  done (took 94.973931411 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.30409369 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.30115629 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.301724718 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.301074246 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30188038 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.30435795 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.30201426 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305055971 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301292271 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.305256937 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305175268 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302095 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301464021 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.305232591 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304100363 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.302112135 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.304806842 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.302351509 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.304840513 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304978537 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305459622 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.302474789 seconds)
  done (took 29.899453092 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306050128 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.307106218 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.302786208 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306883106 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305560671 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.307199445 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.305479448 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.307819241 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305671182 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302647546 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303980587 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306147142 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305874463 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303808071 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304280049 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305367312 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306709219 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.305263088 seconds)
  done (took 24.726143976 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.305162029 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.303494513 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.307320356 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.3040865 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.304368546 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.307016557 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305141285 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.307408371 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.307865989 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.304103373 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.307136256 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30717128 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.307088383 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305304553 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30698695 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.30465294 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.30762338 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304562508 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.307524448 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305737409 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.305270872 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307436131 seconds)
  done (took 29.960026393 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308339202 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307738652 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.305518318 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.305988347 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305435807 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.307054711 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.306825457 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.305291508 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.309683435 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.308004918 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304903979 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.308816229 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.307414612 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306057295 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.305879245 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305201824 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.308752698 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306616888 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308562599 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.306242993 seconds)
  done (took 27.367947982 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.310401842 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.310781936 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.310859102 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311372288 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311270233 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.311248735 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.310951779 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.31089896 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310987241 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.311729238 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.312375512 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.311333934 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31208409 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.311369022 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.311667781 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31173148 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312133511 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.310991297 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.312192912 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31296288 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.312545872 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.312592193 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.312408695 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.313027881 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.312545325 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.312240014 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.31315275 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.313319445 seconds)
  done (took 37.962801777 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312728776 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.311609973 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.309216579 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.308922362 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.308779742 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.30931629 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.309068186 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.309605688 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.312138317 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.309286243 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.312234966 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.312331348 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.312231858 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.311971196 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.311655406 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.311098811 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311692221 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.309191739 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309748583 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309092372 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.312965608 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313254844 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.312396764 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.309876818 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309799655 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.31225401 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309481808 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.31047432 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312777083 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.309695212 seconds)
  done (took 40.558147607 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.356942273 seconds)
    (2/2) benchmarking "in"...
    done (took 1.356691329 seconds)
  done (took 3.947964043 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.310466516 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312547424 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.311959003 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.310532897 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.310866636 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.313182911 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.314191237 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310698764 seconds)
  done (took 11.72853193 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.313952418 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.313188838 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.314418595 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.314746569 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.315053846 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.313356543 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320058733 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.335282711 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.314275431 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.314557674 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.322545225 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.322782583 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.316689653 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.314564934 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.31265959 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.315635597 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.315050784 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.316600126 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.317587121 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.316938502 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.316652602 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.317288583 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.318010084 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.313247057 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.317297957 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.327738774 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.319013997 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.316621938 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.314959444 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.31907645 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.315172275 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.31303553 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.317567668 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.317115805 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.316282866 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.31787313 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.325644807 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.33990545 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.322874572 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.317600775 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.317245198 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.314392966 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.316508628 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.317493088 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.316755088 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.318010174 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.317001919 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.314546519 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.315643014 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.319477441 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.323092951 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.315860695 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.313767887 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.318862392 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.317391299 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.322224972 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.340766193 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.32161281 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.328345107 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.327686136 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.329586356 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.327088525 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.318741715 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.318539084 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.329115082 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.344119944 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323710955 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.33627419 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.315595742 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.317108333 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.324736763 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.331072549 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.346542091 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.319128827 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.319735019 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.319381704 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.318330152 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.320111879 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.326204803 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.341276408 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.319888958 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.32127548 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.330196796 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.34417699 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.318441922 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.321336284 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.321430408 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.321647717 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.321894851 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.330269436 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.342685014 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.320593327 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.319498423 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.319253087 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.32121644 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.322278958 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.319595069 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.320108511 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.318136223 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.321482793 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.321414651 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.325407989 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.329463219 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321683655 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.322746298 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.32735409 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.321472111 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.319993313 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.326866465 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.320517603 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.321704751 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.322878553 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.327228557 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.31905252 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.325373088 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.330331215 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.321574252 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.322077951 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.322235188 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.322781662 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.331992566 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.350712901 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.321463921 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.322428399 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.327361388 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.335842658 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.322796117 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.323876771 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.322429013 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.319394012 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.319215973 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.323021627 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.322828044 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.323493191 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.32363745 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.322737006 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.320311975 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.321821017 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.323751966 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.32383061 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.323199347 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.322156605 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.32344101 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.324496536 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.324026027 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.324049356 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.329383823 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.322702999 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.32387602 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.323883943 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.320938097 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.324648559 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.323752527 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.324436784 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.323129459 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.324980311 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.323153683 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.324835522 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.323860241 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.324319028 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325199937 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.324841774 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.328814825 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.326078052 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.328036059 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.324055068 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.322007429 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.324708335 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.324414865 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.324387888 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.325334616 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.32366403 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.328878137 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.334429029 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.324974653 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.326212382 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.328077597 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.325675706 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.326507022 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.326359629 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.329145166 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.334555836 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.326378708 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.332684887 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.327423213 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.326719551 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.327179502 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.325688947 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.32586703 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.327649462 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.330195535 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.335930897 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.338975573 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.35364663 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.327618525 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.33082989 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.326761731 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.332614139 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.329596288 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.327511287 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.327029249 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.326774973 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.326048377 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.32813376 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.328914238 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.32747511 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.325864487 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.32719253 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.327644842 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.328114413 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.327414316 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.326870127 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.328023617 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.324471715 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.32846516 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.327516651 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.326861876 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.324990789 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.325895903 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.326399026 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.328078541 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.329321298 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.333986114 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.325665946 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.328856521 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.327892275 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.326559442 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.327440697 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.327985813 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.329787064 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.328016764 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.3344907 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.349062233 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.328755584 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.333666552 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.349908981 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.327953543 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.32974697 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.329171766 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.326147741 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.331627576 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.338704014 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.328815464 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.330636348 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.331335698 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.328835314 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.33026536 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.335175851 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.326902847 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.328943339 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.330491995 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.331380617 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.327525208 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.330330399 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.330787984 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.329772839 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.332120418 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.330367785 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.330282155 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.330617569 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.33122242 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.331710394 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.331883845 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.333349595 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.340750571 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.336681637 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.329967459 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.331689057 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.33277086 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.335970927 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.329472984 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.333130389 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.332360079 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.344077272 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.359754245 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.337899783 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.332330284 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.331978243 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.337149271 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.332710766 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.335757314 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.331928531 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.332753539 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.330841705 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.331002603 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.329392784 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.332587101 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.331738554 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.332819663 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.333883246 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.336382874 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.333094106 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.33208452 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.333688073 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.33395653 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.33335351 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.332073526 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.333877248 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.334796509 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.333241783 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.332200847 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.333094664 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.339521294 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.353510951 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.333721371 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.332986233 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.332725732 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.331785036 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.333310945 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.335150094 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.337120065 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.343501813 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.337825104 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.342817009 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.335824588 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.343039546 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.334964356 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.338292976 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.344574355 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.331979147 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.332939276 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.333567261 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.335184631 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.340501057 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.357935475 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.335714726 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.340774819 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.336078501 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.335986424 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.335213814 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.336069288 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.335214934 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.33569081 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.343100304 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.359993371 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.338867692 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.335990358 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.331885381 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.335781373 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.33613681 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.333681572 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.337269397 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.335996437 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.336414734 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.33523102 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.334986686 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.336006354 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.337316447 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.337302876 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.333601154 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.336618076 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342338597 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.359767313 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342941458 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.338049146 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.341771276 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.338647567 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.34327673 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.360035257 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.337602776 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.339390958 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.336745819 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.337582505 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.33660447 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.336415112 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.336710145 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.337607644 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.34053032 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.338081114 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.338409041 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.336636048 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.338062394 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.33631654 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348512866 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.364341773 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.339766592 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.342924652 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.334540511 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.338795093 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.343249141 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.340275404 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.337284587 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.3411482 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.350475062 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.347407193 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.338653131 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.339320217 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.339414469 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.33965684 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.33859085 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.339357844 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.339602701 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.340193624 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.3401098 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.340427668 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.342023996 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.339618255 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.339154806 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.34053677 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.341536167 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.34986774 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.340566779 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.340276054 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.341399053 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.341455955 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.340334731 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.339601741 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.341706729 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.340604421 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.340479085 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.342399094 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348319695 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.348019219 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.342502337 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.341190291 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.342097107 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.341096808 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.341927256 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.341740456 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.341776691 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342041745 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.34190486 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.342259782 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.341309732 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.340861422 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.341802842 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.340819834 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.34172093 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.344392376 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.349721101 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.341734659 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.338644319 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.341703064 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343019063 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.340632523 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.341555517 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.348778407 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.345570679 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.354404216 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.35210397 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.34718474 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.341869749 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.346131568 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.350635868 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.340412872 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.342228014 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.34403549 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.343603213 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.344271561 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.347244769 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.343573025 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.348172891 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.341766114 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.342212708 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.351019329 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.367697432 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.343510069 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.34554149 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.348640203 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.342933831 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.340106836 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.344213982 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.343167197 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.349406416 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.365003082 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.345139973 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.344894212 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.342777763 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.346045644 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.350375005 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.344594103 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.343599296 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.341311543 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.343256797 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.345448815 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.345695712 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.341967353 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.342666431 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.344307251 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.348733791 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.352169818 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.342454036 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.347088695 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.345506529 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.345549497 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.345990646 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.346376882 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.343159437 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.343031148 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.345397469 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.346823863 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.346345482 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.346920704 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.345948143 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.347850054 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.347632982 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347440197 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.349762395 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.359416256 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.355730348 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.3431362 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.345187903 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.3463881 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.347050348 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.346701147 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.347497822 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.346036756 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.347160689 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.345874466 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.347117732 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.346457987 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.35035825 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.363534153 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.372203737 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.347087698 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.347106541 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.347814793 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.34689236 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.343915833 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.347488948 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.348677826 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.351037545 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.357596264 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.348603586 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.352205049 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.369098044 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.348674459 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.352955581 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.350838919 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.355352554 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.350484764 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.348322375 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.349336311 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.354563787 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.366695062 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.348972428 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359925993 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.381025652 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.369071869 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.348551128 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.348727897 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.349168528 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.351980299 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.352834216 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.35322299 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.351613922 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.353216701 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.353543957 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.35378697 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.357380828 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.352778942 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.354386476 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.352847336 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.351503022 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.350655817 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.347474097 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.350946184 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.34995281 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.351372391 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.351111277 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.351303619 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.350612916 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.361364371 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.379573824 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.351926117 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.351934592 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.347271701 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.353714339 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.353139495 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.362954814 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.359551358 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.350650672 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.351940573 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.351796445 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.350910202 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.349965407 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.350636647 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.350433873 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.350729658 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.348264369 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.364330008 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.361955115 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.355595426 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.35015009 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.35270224 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.352390365 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.351142142 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.352602317 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.351739776 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.351133528 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.353776816 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356391672 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.350267847 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.350523683 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.355334688 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.3595287 seconds)
  done (took 797.433779057 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.34944819 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.348726776 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.34901544 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.348156384 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349637492 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.349037276 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349253197 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.349792887 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.34892379 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.349815995 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.35007749 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.35071624 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.350729586 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.349989895 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349768245 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.35047945 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350829243 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.350369554 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.351071933 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351821953 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.35115644 seconds)
  done (took 29.619123151 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.353166861 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.351239512 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.351787435 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.354693891 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351346881 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.355047401 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.351808923 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354126899 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.354932782 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351401124 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.354084441 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355473748 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.352188604 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.352317418 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351666445 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355414259 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.355099093 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.352065081 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.354134365 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.353212745 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.354952579 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.352311717 seconds)
  done (took 31.044719902 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.357053161 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.355726686 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.35441854 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.352178165 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.355083918 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.353188934 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.35609708 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.355182105 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.356445912 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.354662732 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.354281981 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.356336244 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.36328568 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.362552728 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.356890247 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.355696978 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.499666875 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.356284807 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.357020926 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.357289467 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.354082641 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.361332699 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.354154743 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.354408271 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.35414527 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.356390057 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.358169805 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.356399459 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.356801144 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.358910994 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.363476374 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.357339973 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.355895579 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.357624619 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.356085666 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.358924925 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.362666983 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.358368926 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.355809178 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.357502476 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.368820256 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.381905468 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.359480104 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.364368275 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.357298671 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.357363622 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.361547609 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.3670442 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.35567141 seconds)
  done (took 67.966095285 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.357701783 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.3574329 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.355516229 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.358350404 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.359081881 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.358522599 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.357887416 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.35795184 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.355964881 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.3556127 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.359322652 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.356474455 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.356527 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.359125953 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.360022327 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.356099144 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.356837633 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.356796451 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.356400903 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.356429196 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.356323786 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.360063943 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.36017091 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.357109709 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.359644965 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.357802628 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.356669889 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.360099871 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.358899216 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.35766197 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.35953284 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.360376872 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.360999129 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.3571058 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.35686175 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.360094324 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.360808719 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.358274272 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.360654996 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.357596779 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.360797239 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.359872247 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.360307139 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.360710034 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.357665443 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.358181482 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.357949317 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.357946646 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.35822053 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.360841509 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.360666479 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.35897878 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.361169428 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.358576199 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.361168583 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.362393888 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.358632731 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.358607371 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.362053941 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.359845685 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.359467055 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.36183437 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.360424952 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.361121687 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.362531714 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.359830859 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.359166562 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.362741228 seconds)
  done (took 93.685173315 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.363011444 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.363681123 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.363527136 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363063553 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.363422258 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.363437477 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.363600283 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.364264764 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.364963776 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.364658576 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.364811337 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.364579847 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.363239802 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.363893284 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.364185711 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.364471497 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.364078656 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.364122211 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.363898967 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.364366995 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.364712167 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.364595838 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.36476175 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.364371621 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.365341574 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.364513359 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.36555116 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.364882911 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.365456772 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.365995124 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.365556555 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.365778342 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.365308243 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.365894355 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.366673306 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.365880435 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.366260077 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.365185518 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.36537333 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.366055081 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.36667216 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.365685942 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.366611305 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.366682657 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.366602223 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.366769038 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.367311856 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.368213149 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.366070245 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.366090325 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.367012079 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.369146776 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.367153987 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.366858706 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.367029016 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.367167422 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.366724056 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.367097188 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367302038 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.365688685 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.366966279 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.36651401 seconds)
  done (took 85.940651884 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.367103326 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.367164315 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.365140319 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.364184876 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.36645607 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.366922305 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.366507776 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.365909967 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.367180692 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.36725631 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.368629359 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.365526188 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.366037969 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367885543 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.365594698 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.366519362 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.36536604 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.366202394 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366773273 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.365534945 seconds)
  done (took 28.611758838 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.36545551 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.367662906 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.366184998 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.365636983 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.367136678 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.365356706 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.367907437 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.368278766 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365752448 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36787608 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.368731098 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.368101129 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365539665 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.366126906 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.369150884 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.365920642 seconds)
  done (took 23.154950249 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.366216916 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.368645326 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.369941118 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.369096347 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.366089724 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.366649333 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.368070821 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.366589655 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.366792505 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.369214725 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.368987973 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.369331736 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.369346126 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.369826128 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.367016569 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.369724626 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.366503661 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.366643458 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.369858415 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.371350439 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.368400613 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.36644516 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.369990333 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.369865015 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.367923398 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.368533161 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.370202637 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.368014739 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.36714107 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.370193461 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.367323885 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.367659595 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.367907302 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.367932951 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.371015812 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.368378305 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.372137611 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.371460603 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.371225786 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.371106704 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.370958623 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.368792875 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.371325669 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.371233743 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.367946825 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.371179592 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.369697715 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.3691732 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.368878183 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.368368713 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.371635783 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.372484587 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.372008321 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.371807665 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.372118277 seconds)
  done (took 76.594281735 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.371877164 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.372045427 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.37055449 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.371899772 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.372154492 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.369550943 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.372013058 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.371658695 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.370935697 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.373367221 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.372530489 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.375181836 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.371212131 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.372851016 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.370790973 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.373373724 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.370184008 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.368650575 seconds)
  done (took 25.9792553 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.369937667 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.369568773 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.373226641 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.370303237 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.370766776 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.373493172 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.370132789 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.373383095 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374131758 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.371735815 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370995221 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.374363597 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374690383 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.373602995 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.371511625 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.371554939 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.373898489 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.373735692 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.371169157 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.371204254 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.373659811 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.374188281 seconds)
  done (took 31.481334719 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.372937111 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.373877399 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.373487044 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.391489 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.394867627 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.398246864 seconds)
  done (took 9.594385071 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383841432 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375757952 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.372600353 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374890438 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375138285 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371987035 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372166655 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374017458 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375567346 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37260919 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3723867 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375593704 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375542868 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373619702 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374727945 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375265054 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373704348 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372467619 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372418883 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374962233 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373275354 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375658343 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373433407 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374103502 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374137819 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373577615 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376080958 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373099232 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374486284 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377091872 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376684144 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373700186 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376798819 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374817376 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378020404 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37703409 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375595746 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37698597 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37715986 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374769307 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.377093521 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37637261 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377730454 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375370352 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378106797 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375225805 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374913263 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375452184 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375156434 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378338451 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378168196 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374044393 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377877461 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377133046 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377287994 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377744201 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374589151 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37554066 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377549785 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375737434 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376713139 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379097806 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376094112 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375853871 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379288567 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37737776 seconds)
  done (took 92.107141548 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376789826 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.375616574 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376893544 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377276569 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376247455 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376037829 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37714272 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376942179 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376012719 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376917017 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379098236 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377138969 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377269806 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376169699 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376307326 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376944247 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378163444 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377342558 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376827103 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379967617 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37774322 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37716371 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377919788 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377702458 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377522202 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37999089 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37853066 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377665679 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376870789 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378003369 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377230023 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377357535 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378849801 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.377459419 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378763378 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378461804 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378424221 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378775135 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379350223 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381629997 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379007203 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380320562 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379988497 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378889965 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379690673 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379078525 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378909296 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379081422 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380015511 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379569603 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379572133 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379829206 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380125556 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38028092 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380230787 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379736831 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380007954 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380397498 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38008706 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382625402 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379310788 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379137169 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383118758 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380179197 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380391475 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381404184 seconds)
  done (took 92.285099026 seconds)
done (took 1860.294834129 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.544914402 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.497669741 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.380817662 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.397749847 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.382404018 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.38105239 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.379574551 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.380771051 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.381634835 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.381228024 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.381365957 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.571785794 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.380405527 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.382624482 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.382373667 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.477871793 seconds)
  done (took 43.984104369 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.414037527 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.38695752 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.524539496 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.411928825 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.412656529 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.607295546 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.454551363 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.387682528 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.59038561 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.432916899 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.196343839 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.413022448 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.386068864 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.674730232 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.409864741 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.607939449 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.678324507 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.203732623 seconds)
  done (took 32.492720047 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.943859225 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.395848491 seconds)
  done (took 9.640353295 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.410948481 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.390685866 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.387790728 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.385263824 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.378334866 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.387173111 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.385773758 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.38355728 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.845723635 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.548647531 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.396630852 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.395797351 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.408221735 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.38720519 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.383858633 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.428101788 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.571546045 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.385854676 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.383779747 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.391923749 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.386231135 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.479353849 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.43553827 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.385323397 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.536473225 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.850472129 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.396884925 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.39370523 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.521689165 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.386079309 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.386834908 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.388416123 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.389310063 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.321679004 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.939842083 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.401021765 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.414673675 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.396522557 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.385930083 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.534865297 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.38897678 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.39336186 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.3847507 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.921130854 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.540576497 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.520148 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.920553308 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.396951924 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.389910031 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.457099091 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.388759177 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.390494232 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.433845931 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.231463166 seconds)
  done (took 117.03920044 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.422841964 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.784278752 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553064348 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.402656273 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.069979178 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.021687731 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.401156995 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.723315634 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.420834675 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.381728393 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.741464431 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.959973026 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.410502728 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.426394499 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.982993637 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.452621416 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.38257157 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.274919037 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.410733775 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.386433427 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.933672736 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.392637676 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.383527617 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.547228868 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.425612742 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.903786776 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.048713983 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.836939047 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.409324563 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.383138271 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.902313122 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.408278506 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.462686372 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.384110131 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.672992373 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.798106889 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.771741565 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.38465117 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.411994627 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.389986007 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.412748692 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.885281228 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.778309896 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.383692281 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.384914976 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.909763401 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.384007738 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.390337283 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.385805465 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.593480933 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.032648293 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.386661529 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.044535165 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.385347067 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.764448867 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.434607433 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.445211551 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.921159755 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.385596464 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.536812765 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.420538696 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.386169094 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.392464101 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.38730345 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.388997007 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.78477263 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.522267161 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.394356529 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.783770286 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.897795075 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.40635096 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.963053695 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.314380609 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.408450487 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.482768855 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.387036432 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.004143763 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.934466781 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.398455161 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.386502803 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.771390172 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.389145527 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.73631923 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.406454886 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.388175456 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.957861095 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.40121494 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.39671946 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.387935818 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.407451575 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.093199075 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.388625435 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.704037296 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.444675428 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.388540387 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.387149805 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.409846771 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.387491045 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.395920747 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.394313174 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.964230125 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.415102292 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.396262214 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.415842749 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.387871297 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.387821265 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.38833047 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.389262624 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.615568397 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.950758441 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.402407475 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.388736186 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.40639893 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.389151857 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.561306148 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.393593058 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.747385363 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.388578268 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.389412378 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.396257012 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.060883075 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.430048978 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.389617764 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.390180945 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.344418486 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.596469619 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.413049503 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.389738731 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.390857939 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.412879171 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.827782362 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.416866081 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.463026467 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.391931942 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.14885193 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.423056904 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.425961642 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.6871293 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.404682259 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.391462052 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.417261213 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.390589776 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.695310245 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.689330756 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.43320379 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.391218949 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.399917419 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.124669911 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.415351234 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.541760416 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.413880552 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.439856763 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.591020841 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.765371454 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.39344711 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.042752638 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.391383612 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.613139859 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.394195073 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.707397516 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.93838887 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.4127296 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.396881852 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.150037568 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.132425285 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.075508236 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.395963427 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.749428524 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.402883844 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.869237459 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.392413873 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.393159827 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.893498584 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.397680822 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.398722164 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.393276767 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.392121529 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.461327071 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.572146937 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.742923985 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.400385298 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.89836545 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.425831773 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.391945298 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.39737975 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.404093116 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.74434952 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.401853152 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.39411593 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.428633088 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.394693978 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.399542982 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.916181698 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.246513433 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.397701162 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.551098476 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081436042 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.4138926 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.395100395 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.123474472 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.092294012 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.959406662 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.41179533 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.75589867 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.3959341 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.438052554 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.031767081 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.481174421 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.921183557 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.39893465 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.400634529 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.0422406 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.41528853 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.751643823 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.395666501 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.397964086 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.001371854 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.41593009 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.400149114 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.830055404 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.417823447 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.651388525 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.396259666 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.445320789 seconds)
  done (took 1127.539812358 seconds)
done (took 1331.99448256 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.39600174 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.409843459 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.391475664 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.405856989 seconds)
  done (took 26.920470199 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.408536294 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.403628866 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.406823888 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.403158626 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.409645078 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.403638073 seconds)
  done (took 9.756435083 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.858793224 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.406678424 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.407119812 seconds)
  done (took 19.991979197 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.648923988 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.882097757 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.809939983 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.986157709 seconds)
  done (took 11.649909284 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.406841839 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.407569913 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.40724258 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.409801782 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.410222763 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.411415746 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.411016589 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.40965431 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.410276915 seconds)
  done (took 14.002846945 seconds)
done (took 83.638687151 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.110862271 seconds)
    (2/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.228909299 seconds)
    (3/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.955842134 seconds)
    (4/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.463028685 seconds)
    (5/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.800735268 seconds)
    (6/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.348192318 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.426483242 seconds)
    (8/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.3017451 seconds)
    (9/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.40760341 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.344449149 seconds)
    (11/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.387789615 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.696518789 seconds)
    (13/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.429084014 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.441353935 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.10772135 seconds)
    (16/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.450846204 seconds)
    (17/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.504798612 seconds)
    (18/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.39570901 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.426269389 seconds)
    (20/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.400303787 seconds)
    (21/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.413662288 seconds)
    (22/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.38655228 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.843422185 seconds)
    (24/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.410830711 seconds)
    (25/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.310886349 seconds)
    (26/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.428403898 seconds)
    (27/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.531331342 seconds)
    (28/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.52608236 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.846560246 seconds)
    (30/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.172655881 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.848655221 seconds)
    (32/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.411398537 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.3526923 seconds)
    (34/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.667080941 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 6.401490706 seconds)
    (36/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.700227698 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.531991809 seconds)
    (38/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.427636339 seconds)
    (39/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.149629073 seconds)
    (40/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.397234083 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.426638569 seconds)
    (42/286) benchmarking ("sort", Float64, true)...
    done (took 6.402556217 seconds)
    (43/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.298227136 seconds)
    (44/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.389402453 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.461804959 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.286780759 seconds)
    (47/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.488921803 seconds)
    (48/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.994860041 seconds)
    (49/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.428464056 seconds)
    (50/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.790039309 seconds)
    (51/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.200334757 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.476033967 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.51378705 seconds)
    (54/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.486428219 seconds)
    (55/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.318423956 seconds)
    (56/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.583700253 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.657619224 seconds)
    (58/286) benchmarking ("sort", Int8, true)...
    done (took 6.402683639 seconds)
    (59/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.789310605 seconds)
    (60/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.533817748 seconds)
    (61/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.199225229 seconds)
    (62/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.492224364 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.460625724 seconds)
    (64/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.389677525 seconds)
    (65/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.492940779 seconds)
    (66/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.105011601 seconds)
    (67/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.412659565 seconds)
    (68/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.391044158 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.272183898 seconds)
    (70/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.399055088 seconds)
    (71/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.408536378 seconds)
    (72/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.488758432 seconds)
    (73/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.321877194 seconds)
    (74/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.497641828 seconds)
    (75/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.848329341 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 5.760246358 seconds)
    (77/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.404923746 seconds)
    (78/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.22169832 seconds)
    (79/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.977962331 seconds)
    (80/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.392204978 seconds)
    (81/286) benchmarking ("sort", BigInt, false)...
    done (took 6.407400984 seconds)
    (82/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.663693293 seconds)
    (83/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.693252076 seconds)
    (84/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.42952038 seconds)
    (85/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.401037292 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.271149564 seconds)
    (87/286) benchmarking ("sort", BigInt, true)...
    done (took 6.405172693 seconds)
    (88/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.395516332 seconds)
    (89/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.368461758 seconds)
    (90/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.400052676 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.478174295 seconds)
    (92/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.392794213 seconds)
    (93/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.423587865 seconds)
    (94/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.393065235 seconds)
    (95/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.194553221 seconds)
    (96/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.417812862 seconds)
    (97/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.456590817 seconds)
    (98/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.411265412 seconds)
    (99/286) benchmarking ("map", identity, Float64, true)...
    done (took 3.015333283 seconds)
    (100/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.40212527 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.619453912 seconds)
    (102/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.409367484 seconds)
    (103/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.509648828 seconds)
    (104/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.431636277 seconds)
    (105/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.94597738 seconds)
    (106/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.393890706 seconds)
    (107/286) benchmarking ("sort", Float32, false)...
    done (took 5.511390384 seconds)
    (108/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.518711999 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.104321661 seconds)
    (110/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.518173306 seconds)
    (111/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.260555463 seconds)
    (112/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.550248907 seconds)
    (113/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.696666184 seconds)
    (114/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.418788043 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.324017646 seconds)
    (116/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.517787326 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.936376843 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.429795651 seconds)
    (119/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.149995011 seconds)
    (120/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.402886361 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.433353689 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.669053565 seconds)
    (123/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.393506814 seconds)
    (124/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.089537556 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.363634415 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.674564505 seconds)
    (127/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.480337588 seconds)
    (128/286) benchmarking ("sort", Float64, false)...
    done (took 5.879964309 seconds)
    (129/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.507546917 seconds)
    (130/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.394492772 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.55968269 seconds)
    (132/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.060835741 seconds)
    (133/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.409363435 seconds)
    (134/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.001390454 seconds)
    (135/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.525960214 seconds)
    (136/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.534091544 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.385570671 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.443329116 seconds)
    (139/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.434067664 seconds)
    (140/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.360176185 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.408893804 seconds)
    (142/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.402725405 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.484414406 seconds)
    (144/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.428219158 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.177181048 seconds)
    (146/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.449208282 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.449170304 seconds)
    (148/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.227331964 seconds)
    (149/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.440885387 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.467304817 seconds)
    (151/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.637723723 seconds)
    (152/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.613768269 seconds)
    (153/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.494744128 seconds)
    (154/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.424207873 seconds)
    (155/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.414534576 seconds)
    (156/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.397556397 seconds)
    (157/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.411434134 seconds)
    (158/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.351712042 seconds)
    (159/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.444889051 seconds)
    (160/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.39663716 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.545481325 seconds)
    (162/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.784305 seconds)
    (163/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.218365302 seconds)
    (164/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.419984138 seconds)
    (165/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.528736277 seconds)
    (166/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.396559168 seconds)
    (167/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.458319824 seconds)
    (168/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.177988421 seconds)
    (169/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.405848705 seconds)
    (170/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.422675527 seconds)
    (171/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.293072215 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.436732494 seconds)
    (173/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.408765563 seconds)
    (174/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.430205054 seconds)
    (175/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.798055517 seconds)
    (176/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.874511797 seconds)
    (177/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.623511786 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.45422847 seconds)
    (179/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.492633277 seconds)
    (180/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.698278931 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.198259297 seconds)
    (182/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.862084202 seconds)
    (183/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.435537535 seconds)
    (184/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.437461753 seconds)
    (185/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.420806518 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 5.490702104 seconds)
    (187/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.028053096 seconds)
    (188/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.4306318 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.470006779 seconds)
    (190/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.436461748 seconds)
    (191/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.407529907 seconds)
    (192/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.476541847 seconds)
    (193/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.410726857 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.458832385 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.630599874 seconds)
    (196/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.509565902 seconds)
    (197/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.659333485 seconds)
    (198/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.33514496 seconds)
    (199/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.393534597 seconds)
    (200/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.479751333 seconds)
    (201/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.468479331 seconds)
    (202/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.409025163 seconds)
    (203/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.439729309 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.402844376 seconds)
    (205/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.440306933 seconds)
    (206/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.498328734 seconds)
    (207/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.399817341 seconds)
    (208/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.406952163 seconds)
    (209/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.415248355 seconds)
    (210/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.97979566 seconds)
    (211/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.459349881 seconds)
    (212/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.439859012 seconds)
    (213/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.953894066 seconds)
    (214/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.41943094 seconds)
    (215/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.559781811 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.436151686 seconds)
    (217/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.49892877 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.071351006 seconds)
    (219/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.999091443 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.461950414 seconds)
    (221/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.495743441 seconds)
    (222/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.477407868 seconds)
    (223/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.511361323 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.502457912 seconds)
    (225/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.409892401 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.805039652 seconds)
    (227/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.666488774 seconds)
    (228/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.171901195 seconds)
    (229/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.422102722 seconds)
    (230/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.36575197 seconds)
    (231/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.430096294 seconds)
    (232/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.079186259 seconds)
    (233/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.459486145 seconds)
    (234/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.575278857 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.462645176 seconds)
    (236/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.445052396 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.663989312 seconds)
    (238/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.201353335 seconds)
    (239/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.628497587 seconds)
    (240/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.966607142 seconds)
    (241/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.410143731 seconds)
    (242/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.541691199 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.441455462 seconds)
    (244/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.402404955 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.830589736 seconds)
    (246/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.441558193 seconds)
    (247/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.399319314 seconds)
    (248/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.790515634 seconds)
    (249/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.837502407 seconds)
    (250/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.681601599 seconds)
    (251/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.554883594 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.440316054 seconds)
    (253/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.417179174 seconds)
    (254/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.890113865 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.819370586 seconds)
    (256/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.442250494 seconds)
    (257/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.369093337 seconds)
    (258/286) benchmarking ("sort", Int8, false)...
    done (took 4.461581412 seconds)
    (259/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.442972519 seconds)
    (260/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.198070966 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.529102568 seconds)
    (262/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.417008965 seconds)
    (263/286) benchmarking ("sort", Float32, true)...
    done (took 6.502430477 seconds)
    (264/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.246065104 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.522063591 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.545515443 seconds)
    (267/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.987163646 seconds)
    (268/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.499897306 seconds)
    (269/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.984454202 seconds)
    (270/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.412397582 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.233461871 seconds)
    (272/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.423603809 seconds)
    (273/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.419904954 seconds)
    (274/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.468290252 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.487790021 seconds)
    (276/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.522387305 seconds)
    (277/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.427422147 seconds)
    (278/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.403820889 seconds)
    (279/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.425637912 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.550850316 seconds)
    (281/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.427477603 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.876983887 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.466690486 seconds)
    (284/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.844091666 seconds)
    (285/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.416855369 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.510839378 seconds)
  done (took 984.497616481 seconds)
done (took 985.817635344 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.450601965 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.446962919 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.428666966 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.449513877 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.540812161 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.60550432 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.439134116 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.430409677 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.475924429 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.476943936 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.428480357 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.604761237 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.431101225 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.429172779 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.430234222 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.444940418 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.6366898 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.431117544 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.44635678 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.439210563 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.446246172 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.429422331 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.480827953 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.605649449 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.433352076 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.434217953 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.433375835 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.451588215 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.543001451 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.434500066 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.431996798 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.443689834 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.638862368 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.429339599 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.426054453 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.45065002 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.442740921 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.441507755 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.434217759 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.463350731 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.120673416 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.431952225 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.432355267 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.431830638 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.431311599 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.435848477 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.433421092 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.436605673 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.446240642 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.447110575 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.111650011 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.446745492 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.435337939 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.431978851 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.442607011 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.432322816 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.435671572 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.450058924 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.451029671 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.450415735 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.628147343 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.4382034 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.436000311 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.449832151 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.44045868 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.150316722 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.429091903 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.437454795 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.125244048 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.439375985 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.150037262 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.442014181 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.434615063 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.446744777 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.465281972 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.642842685 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.428730884 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.432210832 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.44121301 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.432465233 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.443791384 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.447580715 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.43885372 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.435083353 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.448961036 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.610311345 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.443788722 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.436091422 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.443838051 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.454007618 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.442092171 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.444925619 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.437355808 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.430148687 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.445118451 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.438030506 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.436811966 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.438105944 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.44010755 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.445115194 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.120755039 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.455077393 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.431902092 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.432490511 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.435349518 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.450501716 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.122653231 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.436455664 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.457222263 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.482994001 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.438032601 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.634147167 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.440401529 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.454721074 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.445240973 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.439413723 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.432038939 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.636192207 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.118492868 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.453088934 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.440206984 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.437606319 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.458884043 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.441603357 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.437452898 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.659132684 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.440656951 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.451929028 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.557884977 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.448394267 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.468504042 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.435851261 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.440744051 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.467926356 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455779698 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.468830322 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.440827385 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455158865 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.454301974 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.433801364 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.448960048 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.447933007 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.439403269 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.443007201 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.432181106 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.468638832 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.452264956 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.452534733 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.458998409 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.559067514 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.436003122 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.64046192 seconds)
done (took 244.822229059 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.499536583 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.433581051 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.526491005 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.438752487 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.544848729 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.545419314 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.437322642 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.437391914 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.437411997 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.818045501 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.438842317 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.439134368 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.441171214 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.434648963 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.519170577 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.436295779 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.433561628 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.776990952 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.437581033 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.509585749 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.435040754 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.434272409 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.436675122 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.817412137 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.434140609 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.433497888 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.510341208 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.436229564 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.782526815 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.431097065 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.43782766 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.783664032 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.52734915 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.453306584 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.447005774 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.444067656 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.542347407 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.459213828 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.520033107 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.521136493 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.524979812 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.477039811 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.43351216 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.433592301 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.440280334 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.441171634 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.435640981 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.464962245 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.433151013 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.436641401 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.778955512 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.447954206 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.435251184 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.436307718 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.436857064 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.468736051 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.437304409 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.440700911 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.528813934 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.441047296 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.50327456 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.819760588 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.818457417 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.439646911 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.439654009 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.436657403 seconds)
  done (took 155.451643975 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.506161515 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.512168381 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.56149585 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.441223328 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.490975088 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.567699855 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.44119771 seconds)
  done (took 11.870783918 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.445301592 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.439907212 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.488570232 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.489539624 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.441234389 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.620733572 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439542571 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.451381139 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.438682326 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.491635299 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.444844512 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.441614159 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.446744009 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.441663954 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.488961393 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.45191182 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.556379259 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.442980634 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.442786745 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.592687904 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.43898139 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.448437054 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.492529285 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.452778195 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.446772066 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.447959871 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.260269484 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443017434 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.440129461 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.441776453 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.439465756 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.516549636 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.442036058 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.441054814 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.439584473 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.556472595 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.443811396 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.442170349 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.443485116 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.441966568 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.442307658 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.443755701 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.442974447 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.441538757 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.443168697 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.465181376 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.442995036 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.443596362 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.443137563 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.444178818 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.493421924 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.444386875 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.440814329 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.440615649 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.497258327 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.45015024 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.444508671 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.441339073 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.444147312 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.44009605 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.594586657 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.491316627 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.443474503 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.491817216 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.444545577 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.444769291 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.443472324 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.444199522 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.498284877 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.444244666 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.492705117 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.442332083 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.623447734 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.467404779 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.446316114 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.446729345 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.44724858 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.445695402 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.442832854 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.450658862 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.441402441 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.444739345 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.449855971 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.442115481 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.442545885 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.610032668 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.550478747 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.442637744 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.457402858 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.451501586 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.442820313 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.498264363 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.445245639 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.442221834 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.497306952 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.560986865 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.497668566 seconds)
  done (took 164.323413572 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.451701969 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.455035648 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.450020028 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.469565794 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.44788495 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.447207885 seconds)
  done (took 10.078120897 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.450116516 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.448807766 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.446641627 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.44618339 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.513614248 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.451404586 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.448417538 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.449218154 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.452673829 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.447703532 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.450309018 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.449771034 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.452437248 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.448152797 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.449071492 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.448231635 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.448397179 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.444950287 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.447769971 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.448321858 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.541235635 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.448392174 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.448191224 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.449620365 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.456473721 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.448530068 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.456402314 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.449639979 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.450136223 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.458810061 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.453737174 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.452443858 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.450548747 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.457179754 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.454709135 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.450717885 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.453798063 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.450599684 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.445638089 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.452857232 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.450766263 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.450683557 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.448628077 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.450859134 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.452402853 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.455443617 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.457786578 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.457989768 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.450902844 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.452706505 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.453610981 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.450713646 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.454554422 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.453579104 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.45346264 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.476831886 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.458118666 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.452230936 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.45303401 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.454290478 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.453172141 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.455226548 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.453682005 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.456531914 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.457947963 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.452600844 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.452366434 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.457159384 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.452431479 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.452104157 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.4523094 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.448826443 seconds)
  done (took 107.064626094 seconds)
done (took 450.134901442 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.696960138 seconds)
  done (took 8.05846768 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.59414735 seconds)
  done (took 7.95590265 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.440562072 seconds)
  done (took 26.08353921 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.507633918 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.553290703 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.44855526 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.451306213 seconds)
  done (took 27.321666757 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.929848053 seconds)
  done (took 8.289788712 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.450790213 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.45633357 seconds)
  done (took 14.268822005 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.99236186 seconds)
  done (took 8.352505633 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.615975645 seconds)
  done (took 7.98282373 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.465370835 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.479788415 seconds)
  done (took 14.318074387 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.450070104 seconds)
  done (took 7.809764452 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.520416543 seconds)
  done (took 12.883054509 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.45497487 seconds)
  done (took 7.818935846 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.515156957 seconds)
  done (took 7.87741151 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.816786643 seconds)
  done (took 11.178950715 seconds)
done (took 171.561727851 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.444840368 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.446997326 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.447990129 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.44553124 seconds)
  done (took 27.147004683 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.487187102 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.485610016 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.48716802 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.497210395 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.488644201 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.4861829 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.478423839 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.479059835 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.49749851 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.489741853 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.488646602 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.489230525 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.48737499 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.478591979 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.488368926 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.48867668 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.497716021 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.488710489 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.478364167 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.49032197 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.454337324 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.498323031 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.48967255 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.454230336 seconds)
  done (took 37.013144003 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.976766573 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.52511912 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.608078446 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.50618201 seconds)
  done (took 7.979906192 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.506357218 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.508060676 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.523367714 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.559360443 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.584513482 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.516627661 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.481923318 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.475519656 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.461541318 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.508023736 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.583399382 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.5251128 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.593246032 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.455767976 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.640208014 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.455769739 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.454695364 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.507375226 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.559758501 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.584767066 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.454750333 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.5076663 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.511933927 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.524248785 seconds)
  done (took 37.848226078 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.455571087 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.474076376 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.454670463 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.454857659 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.463634246 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.455379185 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.455837534 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.457050561 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.454688813 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.462544906 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.454548502 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.469323081 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.455915448 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.455639477 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.462375394 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.456622427 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.461698202 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.455697051 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.456263889 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.462306007 seconds)
  done (took 30.545576629 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.450217113 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.304432046 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.801088678 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.706864513 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.451514854 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.449207775 seconds)
  done (took 28.530964747 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.543738943 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.696303703 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.456968088 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.897440346 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.970703692 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.459391381 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.458464832 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.742436928 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.174940648 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.163527899 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.53562401 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.538862721 seconds)
  done (took 22.00572083 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.458521754 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.459278338 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.459376158 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.476489402 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.52513268 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.462242446 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.464803251 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.452540345 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.532682452 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.530312747 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.463691821 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.526200017 seconds)
  done (took 39.180463865 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539524985 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.505566666 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.558568284 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.507249149 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.201092828 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.66461775 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.528039174 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.254617618 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.456161369 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.727593888 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461525143 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544299717 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.711645852 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460840621 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.4555253 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.663163285 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688874262 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020617743 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454973143 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360013983 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487397243 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.464284915 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.19745602 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.751043276 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.674321048 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.438332093 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.71561649 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.23293968 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8123943 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478456576 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466085085 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454765041 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.729150575 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173726271 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572440229 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727349236 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471376013 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.087485688 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.445669736 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 6.352179685 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.465560014 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.45817538 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466009042 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455790928 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.390618371 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45780395 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237897527 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.461561184 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.167738757 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.456782124 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.796046156 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560005507 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.460569845 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.030489872 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.507895247 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.462893742 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.4602156 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554098445 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028949123 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461449622 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47070837 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.392244106 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.469794601 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356422133 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223633899 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.469985003 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.461344747 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.461056494 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392578495 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.339640798 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481435237 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595724132 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.483249256 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.119956019 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343588326 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.467935982 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.389429142 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087608236 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464835456 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.393273678 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688501703 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.234126255 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399793243 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.413018461 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.392657661 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272499433 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465422155 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.090609548 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478124866 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.239389222 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.753980479 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485398141 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482667119 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.683257604 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.344994337 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459341106 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.45974256 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.576134961 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480313023 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.240032049 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416135177 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.462921782 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.718440993 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.67209962 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459586284 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.675873583 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032096122 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485268259 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.474483956 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.462662591 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.73299121 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.175939197 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.485957085 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480005876 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487983101 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.249020647 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30876819 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477627487 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.472347076 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.463013692 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76601013 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.360244752 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.622144021 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529225334 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46771815 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.46173458 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383807293 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.324747066 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.622574036 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.724265296 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.50741634 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.472734015 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.463031752 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42408438 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.459043716 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481230118 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.243205463 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.68713508 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462672299 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.739643419 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39734371 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600070145 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.479251032 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.686318348 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.866025422 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.468519635 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723606719 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465450176 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.473861444 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481814204 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481812233 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562841133 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485173243 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.467394882 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.729165752 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.466640874 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.466142365 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463228135 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.251809643 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465158015 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.469298191 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468386075 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173588142 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444664235 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.472737317 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360117783 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.477086562 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531641592 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.469752701 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.73609316 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 4.068416889 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474219791 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.470420801 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.474129878 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69665367 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474859491 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 6.126257077 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542937953 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.025329381 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208445817 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487709501 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.399788683 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.176832975 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.157882577 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466082726 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.66394191 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.466743122 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737946471 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488028487 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.489221152 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.176339534 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476070887 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.133716695 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.473329522 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.479075051 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.472295095 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46701977 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 4.137802935 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474821882 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.50822493 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.486992298 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610785633 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.480923241 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.400878211 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.982899391 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.472098003 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.46611141 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.245528036 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501178819 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.132285977 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359246887 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727817081 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.47730502 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799604183 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.244568492 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.504113979 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.469376274 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475271138 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469861262 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.497674971 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476060052 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.478903027 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.135760915 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.918592696 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037829898 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30170351 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118164565 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.906560395 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.4733406 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.377069507 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254815949 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425194721 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.128319771 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744243699 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253235371 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.446916185 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03249109 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.877392825 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.399107763 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812109855 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.708305217 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.895274928 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.469914643 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.814335125 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.690143586 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503320449 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.481114593 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.406325703 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.758105234 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11684028 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.497328451 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549443589 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257256565 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.493008642 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.251459717 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.500415743 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.340709736 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941579944 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.040758105 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.864628606 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.475201654 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.479776948 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362237577 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.475001853 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.999492785 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18775261 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.473997775 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.064933608 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433264877 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.746114597 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.489846315 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.474659026 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.530516357 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.491555194 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.735985549 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804952751 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417201222 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.48233355 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122157085 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.336702602 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.476476733 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472126763 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32428995 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477504634 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840156697 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.480898889 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 4.179151284 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488813782 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.406823291 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407066681 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.16497918 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.480996647 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44603041 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040796904 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.490078408 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481894718 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.481805409 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328768754 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.731764352 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.487303595 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181986292 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.708556331 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.486825231 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496611018 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.476996128 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477166618 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.461377165 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.373107664 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.711430312 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.567282703 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.699150659 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.605050603 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.380697524 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.548870958 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.710613714 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.357439232 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.485222422 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.774649454 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.192406934 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.482503028 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308935091 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500007773 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.478278325 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.493112226 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.494206524 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495950527 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544585264 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.750901153 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.494089871 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.486061301 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948782652 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51504506 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478746148 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.488849619 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56891518 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442343008 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 4.185617635 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.257661158 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197693355 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329319168 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197060247 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.828908512 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.486086215 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482594791 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411128862 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625094791 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.005674742 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.749906074 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596250784 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.488793014 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500039661 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.487914305 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481673723 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698167681 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.752632369 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351970065 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495294437 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.148801864 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.35945252 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488184375 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.689831401 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049431227 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113651287 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593039145 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.476849683 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.272270944 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75058907 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.569448462 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.477965657 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.072372386 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.497483681 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.357353732 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.483180424 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481233763 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626572026 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813614497 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210276254 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.509848397 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.63800623 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.25252149 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414408124 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.745411674 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.098126714 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.755938614 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204634061 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316865039 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744547927 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54906446 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758687018 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.621900199 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626704621 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.481815769 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.371070927 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.479558835 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326718349 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.190207621 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.489643379 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20920325 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754285288 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.483869647 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.484772766 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511158256 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.489299431 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.704578216 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.301900783 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.704174079 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49063112 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.489908366 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.473628954 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.207400796 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836466472 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425825145 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.483981654 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782667109 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.725460521 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507000601 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.933438384 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.192273559 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120216251 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.457118585 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503420707 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.482081852 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320475737 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208233471 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 4.220596761 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062583641 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.143633189 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.482281323 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766748154 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.489965429 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.48444703 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791132825 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.48717274 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.495500479 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770293441 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.213860041 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.420923525 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.508250448 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.225455117 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.42015118 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.712310897 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.570442362 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.418199833 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.483223528 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.972807651 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.506048819 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603153545 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494720527 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.495352734 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495160873 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.247201352 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.764414196 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.488653382 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.483852603 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.476296686 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.496019057 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592135092 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134377505 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.511750061 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.159951573 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.835411889 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.74253593 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.489389987 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.47870044 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.487287014 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484158944 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.208759805 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.461835404 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.487757137 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124521582 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.493543623 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.503198045 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.489442182 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.703007746 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.696931094 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.50408658 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767095899 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.502360122 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507434562 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.397314798 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.258408028 seconds)
  done (took 1749.740398394 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.501708463 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.542270864 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.509828551 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.579961813 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.54225658 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.508050003 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.51070735 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.537756317 seconds)
  done (took 53.631338895 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.488007269 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.647623475 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.523103029 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.485112539 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.495603739 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.487122794 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.059711941 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.497969311 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.496525484 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.497422322 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.492064287 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.493996882 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.256999833 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.504959561 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.506512177 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.483540257 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.496148178 seconds)
  done (took 68.319370832 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.502625939 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.927358285 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.299823168 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.541351321 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.49129058 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.491878001 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.701295456 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.508210717 seconds)
  done (took 56.865963342 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.50505161 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.504307726 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.504464205 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.504787384 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.504924454 seconds)
  done (took 8.924329715 seconds)
done (took 2169.09671762 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.49200689 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.495138219 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.492372693 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.494288963 seconds)
  done (took 7.374797428 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.475826618 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.223505792 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.475827996 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.49240113 seconds)
  done (took 19.069619525 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.498283812 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.497541617 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.403709589 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.247350116 seconds)
  done (took 6.053610845 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.238678591 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.250211975 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.233522644 seconds)
  done (took 8.123018023 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.487000341 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.494504819 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.497146036 seconds)
  done (took 20.878672301 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.802623254 seconds)
  done (took 3.20331148 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.636008739 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.686525144 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.850243193 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.839900815 seconds)
  done (took 8.413545845 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.875301114 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.860494508 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.678118997 seconds)
  done (took 6.815890231 seconds)
done (took 94.329759506 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.030029235 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.512253257 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.696709533 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.99658635 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.716929454 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.694225772 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.894236313 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.963564603 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.511046154 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.497439974 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.007660303 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.72040449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.836816356 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.515578164 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.83828849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.514258973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.719350455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.086271018 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.501213782 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.505914542 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.894369152 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.639630913 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.832418021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.662629213 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.71879648 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.647734207 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.221662221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.516438364 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.489063424 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.247221768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.647228287 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.489120275 seconds)
  done (took 205.167454858 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.506551058 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.48972977 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.505653387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.501296271 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.506337542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.496847727 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.48978053 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.489723346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.490675317 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.492066942 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.501408989 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.492009101 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.491510063 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.490072474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.511216104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.490664426 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.517793918 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.490585558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.508300996 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.49056924 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.514056922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.490438071 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.51169033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.491392339 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.51652681 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.492035022 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.491913755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.504430286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.49138484 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.491637041 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.492100866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.491538309 seconds)
  done (took 209.335481707 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.494049125 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.491174031 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.492057849 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.493187949 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.501010531 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.491733254 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.493884705 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.49188792 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.50699828 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.503163714 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.490714778 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.496714747 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.494963596 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.491036808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.512332726 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.506266581 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.49379306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.492262906 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.502263257 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.507747307 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.493777867 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.503621455 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.493347188 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.492956217 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.517311688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.493805858 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.513842449 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.513436463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.49333038 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.493335215 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.494854801 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.513975464 seconds)
  done (took 209.370608259 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.690420792 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.500231538 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.500893824 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.456454639 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.500743646 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.501008904 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.498231886 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.692001377 seconds)
  done (took 15.747008373 seconds)
done (took 641.022441049 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.070963937 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.749316672 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.715751463 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.523148686 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.488767399 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.542837338 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.521634571 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.72157547 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.514438488 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.73287459 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.950730421 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.519976755 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.108203262 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.520499224 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.808406718 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.633469812 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.469943636 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.578424453 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.880509368 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.229904768 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.812441635 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.130416534 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.728614398 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.507004151 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.134739558 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.144834534 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.391512914 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.459123559 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.522633822 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.889120571 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.47101034 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.709969811 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.576941219 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.578699999 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.636230568 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.636655967 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.658523864 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.597330601 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.720390676 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.88488751 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.233701144 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.314057287 seconds)
  done (took 102.428733335 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.49330236 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.492834001 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.492227598 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.492678641 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.494321895 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.492616072 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.493124622 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.492965328 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.493029344 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.491947525 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.492990664 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.493469782 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.493258235 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.494630633 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.493410743 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.493181038 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.49372363 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.496144091 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.494193358 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.49375144 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.494946081 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.493910309 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.494931564 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.494540025 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.493874095 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.494665926 seconds)
  done (took 40.24501947 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.506218634 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.778560293 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.977689686 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.51239842 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.506784488 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.50996033 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.601858332 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.507251916 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.509676802 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.51002946 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.675114347 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.509915536 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.545868616 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.009497154 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.509226272 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.508356199 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.507600375 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.506023317 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.787757384 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.515285736 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.625603816 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.508067101 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.60217574 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.516459652 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.532518299 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.506136464 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.513171744 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.097577676 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.511090369 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.67757561 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.518424822 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.608911173 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.072453191 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.989939002 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.524537476 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.518334648 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.508598116 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.682479741 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.51073434 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.508423984 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.603316991 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.510025695 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.989191613 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.232621848 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.532181781 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.507741368 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.12162948 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.68209327 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.812502277 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.518653725 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.02331859 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.512858471 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.511180422 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.511098941 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.813607263 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.517317178 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.509131652 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.167288096 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.535324425 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.604035086 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.511080909 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.50931192 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.797361985 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.509978029 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.783867283 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.511528884 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.51833864 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.533143603 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.991448066 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.513817741 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.257112659 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.532992168 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.510700673 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.679031144 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.785749836 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.158805468 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.514298982 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.800999224 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.086143896 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.604767739 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.51540278 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.088522545 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.60925357 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.515896802 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.514000175 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.513060524 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.51199574 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.557441662 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.604668645 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.185984281 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.248493976 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.199757369 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.630979871 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.520611188 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.512697597 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.171800511 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.535375611 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.512862534 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.987376587 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.256528313 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.534816425 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.520059354 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.26494914 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.536775594 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.609677548 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.518939194 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.999534986 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.513742987 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.558413323 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.513043767 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.519429328 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.539186276 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.609075745 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.517739236 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.514485428 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.228376833 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.712303332 seconds)
  done (took 199.672360686 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.525144506 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.506514779 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.519348277 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.508316927 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.506672079 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.515813035 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.506475121 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.507875457 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.513070527 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.506696636 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.508547272 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.509039231 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.509925217 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.52151221 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.518394953 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.51480082 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.119611318 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.508881377 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.508612821 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.508014807 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.351983478 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.510692737 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.507544867 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.509170467 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.509862454 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.510123537 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.536405921 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.510584836 seconds)
  done (took 157.209771685 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.517020844 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.204257773 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.518582339 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.680892629 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.545090802 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.513722546 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.673840438 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.585706338 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.518030596 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.513745026 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.513960494 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.884967665 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.51859658 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.148149667 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.761590417 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.68642552 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.1458142 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.539936443 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.515039202 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.515477067 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.68629428 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.537214191 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.885578378 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.20773223 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.51926742 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.206267631 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.507934075 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.518213477 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.517582633 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.211515411 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.516927853 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.891264808 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.611850087 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.589314469 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.248144614 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.181711466 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.182871154 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.701912401 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.518183523 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.516680672 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.516265299 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.507839669 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.212085592 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.519771125 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.518174514 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.210594938 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.54189467 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.519987734 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.524478184 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.516688786 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.58977061 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.590701694 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.894732817 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.218573215 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.612897887 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.531143769 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.678651126 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.935590045 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.522225866 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.152157778 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.508596102 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.219322377 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.543736841 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.508465267 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.518790539 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.524487226 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.702201174 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.680552968 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.153873785 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.542282916 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.151841433 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.724882048 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.51802196 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.51886134 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.522147647 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.218059501 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.154165663 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.724796552 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.684604589 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.770894849 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.520137391 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.519719977 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.510357628 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.614794834 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.52060706 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.238358502 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.183349254 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.543297769 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.522162929 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.523088828 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.521697347 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.74758757 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.229029041 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.615668626 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.153413274 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.918732151 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.898397511 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.523945556 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.592883941 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.543251281 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.899445951 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.524318929 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.592266458 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.007198963 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.898178339 seconds)
  done (took 183.24853094 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.807415433 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.916197141 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.628485402 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.696558439 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.194165137 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.145677262 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.930985611 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.681810896 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.649723461 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.821552901 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.853902729 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.612569414 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.768536496 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.611040024 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.317574542 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.604269803 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.630372345 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.68980086 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.687417641 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.70906466 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.263636926 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.844037671 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.745290027 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.657013636 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.628764321 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.444549014 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.14319891 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.107625366 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.729574225 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.029102536 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.084522683 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.744997213 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.630646596 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.30820611 seconds)
  done (took 73.746268061 seconds)
done (took 757.958021567 seconds)
SAVING RESULT...
DONE!
