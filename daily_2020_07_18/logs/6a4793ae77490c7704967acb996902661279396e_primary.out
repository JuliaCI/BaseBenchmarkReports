cset: moving following pidspec: 7013
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.60031 seconds)
loading group "shootout"... done (took 1.193032227 seconds)
loading group "string"... done (took 0.406800408 seconds)
loading group "linalg"... done (took 7.644990284 seconds)
loading group "parallel"... done (took 0.150923919 seconds)
loading group "find"... done (took 1.433464442 seconds)
loading group "tuple"... done (took 1.873832188 seconds)
loading group "union"... done (took 12.340419792 seconds)
loading group "dates"... done (took 1.253130308 seconds)
loading group "micro"... done (took 0.193121928 seconds)
loading group "simd"... done (took 4.15160399 seconds)
loading group "io"... done (took 0.995537614 seconds)
loading group "random"... done (took 8.286076271 seconds)
loading group "problem"... done (took 1.533934012 seconds)
loading group "array"... done (took 18.583845189 seconds)
loading group "misc"... done (took 1.445282433 seconds)
loading group "scalar"... done (took 37.956978291 seconds)
loading group "sort"... done (took 2.89152555 seconds)
loading group "sparse"... done (took 11.40897366 seconds)
loading group "collection"... done (took 16.840247815 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.499571986 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125748637 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.12802675 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115579662 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.142845375 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117740333 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122623923 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083670766 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.904342736 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.141937281 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.112431305 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.43755465 seconds)
done (took 5.254832127 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.163856891 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087336197 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076836166 seconds)
  done (took 1.274115998 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061768954 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123958205 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063060021 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063418572 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063794998 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062935895 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063014303 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063196175 seconds)
  done (took 1.614461409 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070121236 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065417401 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062100976 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06471551 seconds)
  done (took 1.371868959 seconds)
done (took 5.611835387 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.234919104 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099803912 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.284077281 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.390973797 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.454058858 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.089949738 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071131556 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066957496 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.127127911 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321369282 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108729622 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.182407457 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.087619442 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.179551899 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.977073277 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.116267573 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08199679 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.119912295 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089483927 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128419352 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.409448253 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074480785 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071540978 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066804055 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064540451 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.646203851 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669521037 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129071457 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080154106 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.099934196 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113136257 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.635195171 seconds)
  done (took 10.418709434 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092026976 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.090206293 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06543165 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12198753 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093644293 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067969638 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072120554 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064234016 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090181068 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12139328 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087667592 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097987232 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062586485 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.066161677 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.07339493 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194943939 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076196895 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077630164 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.065151484 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077047653 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104550226 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077606598 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076411046 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076164228 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125511116 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169492405 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095721376 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094655643 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065769401 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079514888 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111659446 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126648076 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065054459 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062685074 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117967616 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091543957 seconds)
  done (took 4.458151039 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.950630784 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087878769 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.101480781 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.613016904 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06261036 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.150362969 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242278836 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069986911 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.430488078 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.111588484 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.147192086 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.111219837 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.143317098 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.111018464 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067141079 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.245206914 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.112870131 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.408161578 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067786917 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064803351 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062251344 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066319721 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065363603 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060749286 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067631188 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088787748 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.084404925 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.171390609 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.943233741 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.252258208 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06526079 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.156314356 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.08603266 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.365014652 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.06736846 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.081690503 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.393104702 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.120955338 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062963483 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168017056 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.118239013 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.061684216 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.113432569 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076864952 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067383176 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066563086 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066580833 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072488253 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077061628 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099661304 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066055344 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062911652 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16141444 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062449966 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064954597 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.065996552 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.14789546 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064324296 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.143320917 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062372835 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065781087 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094146661 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065921721 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.090178255 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.106339441 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.339253668 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.026849115 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065829601 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.24025446 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075218225 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.0641399 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069953025 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064105871 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065533362 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065248047 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073655878 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067016514 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06571857 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106876185 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064214105 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067076975 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064554782 seconds)
    (82/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070166464 seconds)
    (83/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096611872 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062960165 seconds)
    (85/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.46139166 seconds)
    (86/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096916018 seconds)
    (87/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064759286 seconds)
    (88/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075579969 seconds)
    (89/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10377484 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064665908 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.061864745 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071900702 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.171559334 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064590406 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064135653 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06573869 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068547034 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090542247 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062478195 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067893618 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11020773 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.021375665 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066005043 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065189538 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070221297 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068069453 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06723584 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063966776 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068765211 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066809195 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063422711 seconds)
    (112/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062097605 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.113856054 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064506583 seconds)
  done (took 21.667730591 seconds)
done (took 38.605263029 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.253641902 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084523042 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085735235 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085584399 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085698382 seconds)
  done (took 1.80215779 seconds)
done (took 2.992496591 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.105937774 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.0621008 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100218523 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.097727616 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064924554 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062233629 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.095873614 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.062283105 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.096300662 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.098693462 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.100708332 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.100423658 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062498158 seconds)
  done (took 2.313572336 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067646539 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079119031 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081704054 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.06044774 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070082908 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079705309 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060794707 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078953505 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086602571 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079767408 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080536651 seconds)
  done (took 2.008095648 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06742356 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080021118 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.085710954 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.06070171 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072445731 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079674983 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060817792 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079794934 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084435071 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080118831 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080086965 seconds)
  done (took 2.010506619 seconds)
done (took 7.510702417 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.067240135 seconds)
  done (took 1.236348305 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.541389993 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.689012641 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.070415543 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.091104974 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189719445 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.103499839 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.241339066 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.07522747 seconds)
  done (took 8.351837396 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094059921 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074455707 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068724409 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068653957 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06718504 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068000038 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068891725 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066881499 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067360456 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069176194 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068579631 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068348163 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068436879 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068562565 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068892983 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067638345 seconds)
  done (took 2.389883392 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09658145 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096022088 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072513629 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073700414 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071864527 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07115743 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073832775 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073039537 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070286967 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072002499 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074873134 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072841847 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072134721 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063897248 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073470638 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074875328 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070807535 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073165036 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073518004 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074597453 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073873829 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063318951 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072137287 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073424993 seconds)
  done (took 3.066415166 seconds)
done (took 16.224448612 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11621357 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077586963 seconds)
  done (took 1.371665159 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084975174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069095501 seconds)
  done (took 1.342865547 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075307673 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058769805 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.082839298 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070580915 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058362713 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.057997077 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.080274947 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058294028 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058095686 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058778426 seconds)
  done (took 1.864004881 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060127176 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068485272 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.065770148 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068283761 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066016743 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060110305 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06304662 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060095995 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068620358 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059001103 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064573694 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079121701 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063742166 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081019372 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063210905 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064420469 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066899094 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063607418 seconds)
  done (took 2.391548456 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.058315714 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059743126 seconds)
  done (took 1.326385333 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063503958 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059502757 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062685138 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062553723 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059492698 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058772844 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059501738 seconds)
  done (took 1.629755248 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.342788661 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114881122 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.307845358 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066769849 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075251932 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.239752822 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059893046 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065090712 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065422915 seconds)
  done (took 2.584140981 seconds)
done (took 13.708311828 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076091406 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.079701212 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.085100826 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418382036 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.08995172 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064612018 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110851506 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.165189323 seconds)
done (took 2.310754699 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.206779166 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.450283215 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.948962091 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.062709516 seconds)
  done (took 3.672210965 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.317825884 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.080627683 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073159081 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.062861332 seconds)
  done (took 1.756480517 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061340675 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067463977 seconds)
  done (took 1.343418358 seconds)
done (took 8.199030329 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061115097 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.05972386 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.060253771 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060030461 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.060850138 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060352667 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084875612 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064890478 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.059719199 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.059758279 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060229193 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.05973742 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.059883412 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059787901 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060106352 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060241471 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060147218 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059867687 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060424347 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059989448 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060355037 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059902342 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.059957851 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.059817963 seconds)
  done (took 2.714594518 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078022887 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062223062 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063653112 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063420576 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06420453 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064413649 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06401503 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06237018 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06585618 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063515366 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065728147 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065628318 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063302552 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06522448 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062921254 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064593918 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064269438 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062152913 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062292419 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.063922132 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063951932 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062215392 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064225147 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06372771 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064314072 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064370865 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06219978 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062599322 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063763233 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064196603 seconds)
  done (took 3.153806514 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060974353 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056608136 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058238667 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065516028 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057043628 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057872206 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057918423 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056372052 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057234342 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058439758 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057847922 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056930359 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.05817495 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.056861007 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.056853318 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057994643 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06054773 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074388008 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057315398 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056808114 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.060398738 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.056862711 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056858236 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.05725236 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057724084 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056827771 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056700193 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.05739882 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.056636056 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.05756832 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.056769171 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060161287 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061564977 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057548713 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.065661344 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.060801865 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.056811319 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060517965 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058169509 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056499633 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056752286 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056628184 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057108749 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.056901071 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.065406448 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.056883068 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058270017 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057526479 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.056992461 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056450114 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057075155 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.05904663 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.061464634 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058626446 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.056591965 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058310438 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056558449 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057735652 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.056691484 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056588223 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056395322 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.059561396 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058653301 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057751946 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.073796592 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.058598693 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.065325736 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.056830369 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060591677 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.059917983 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057420521 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072106229 seconds)
  done (took 5.470448869 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085601372 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084637994 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061830987 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061836407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057572928 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.057462432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065472073 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057638098 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061811393 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076676179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057705536 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061216515 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061586306 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061415917 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058172393 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061488184 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066181379 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058147909 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057753917 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06176417 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05844056 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065591508 seconds)
  done (took 2.643880986 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136699663 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063397544 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.0997713 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074512755 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066597223 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074305197 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063329992 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063405983 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063409707 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063644661 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063689378 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063114219 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065962873 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063462763 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063475901 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063921495 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063860028 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063675045 seconds)
  done (took 2.512809453 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074632773 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062982195 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084106251 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062502568 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062617718 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062722417 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067107265 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068043787 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062590057 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062877848 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068120956 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062385726 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062544317 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062550717 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062360668 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062938024 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062199246 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06286637 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067885606 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067085048 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067362559 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068022955 seconds)
  done (took 2.681517855 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072639435 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06225669 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075525684 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063911191 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057905258 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058060886 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06301176 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06199253 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062734756 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061737202 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061969792 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059025373 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064686682 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062034119 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064266422 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062096016 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061390026 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061953876 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061667986 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057689446 seconds)
  done (took 2.492671121 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083705098 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060798677 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060701485 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078940488 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060240886 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060602663 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079027246 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060487577 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06062884 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081709758 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060294598 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060835132 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078738138 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078623011 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060800038 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079154726 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078426868 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078812225 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060497742 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060571954 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082274406 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060354012 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078393886 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060316599 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060500258 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060472519 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060667104 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079056496 seconds)
  done (took 3.163251141 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061012048 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068844181 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060082814 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060296407 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060128246 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060335422 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060332385 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060469869 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061103456 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060337379 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059852714 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060047045 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059847195 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060219189 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.059960862 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060197422 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059840628 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06037909 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060284431 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060296718 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060456328 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059926238 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060043981 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060413578 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060260552 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.059667689 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06023762 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060286933 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060259764 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060304067 seconds)
  done (took 3.058540759 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07152502 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068920661 seconds)
  done (took 1.382191413 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059677955 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074998725 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057311801 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067482201 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067810478 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062010041 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069332235 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067930756 seconds)
  done (took 1.763917632 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.06637737 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086885138 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060895424 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061264008 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.06478568 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118539708 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074811738 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.069661922 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075850109 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061494579 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061076062 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.073562864 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.06023579 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071380255 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062975071 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068511483 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067281363 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072105393 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071293562 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.05863948 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073564215 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063417433 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059553538 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061582614 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060975938 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.0660458 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.074300935 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070601578 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067632187 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057844306 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.081402342 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059001488 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060581647 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066027514 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.062464171 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057789936 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093066454 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058456484 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064429182 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057327896 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068811963 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079079455 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070432754 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.075404275 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059770164 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060345813 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.05724685 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059919461 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060494944 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066338851 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.05758892 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064167647 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057436446 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059919594 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067023195 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058262234 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064666645 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065764599 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071914775 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067206146 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065098058 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071090932 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065237432 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067379225 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.058832523 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075907559 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.05999935 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068868306 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071079325 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059417974 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071260171 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057635665 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056692287 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057753575 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089633726 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.059700304 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059770364 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058446113 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057894549 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059904691 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066540651 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064765141 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063750644 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061984388 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073973339 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067183776 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057963505 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067228472 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074905895 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060201748 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058095037 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073128241 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060045714 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057404274 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074166834 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.065792514 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060060955 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060189759 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060390222 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070553514 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059366824 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056657121 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064692102 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059900601 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060799052 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063288527 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064238035 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057378505 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06691625 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.06376578 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059558792 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056151645 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061175276 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.05859348 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056190123 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065337383 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.056657749 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070603926 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062028747 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.069232451 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071017523 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.065813639 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073286906 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057282122 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.187506703 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.080324769 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069877831 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.062119495 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079685157 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060693188 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069763515 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059541364 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062386188 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068143994 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059323568 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062010481 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060162555 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.067363293 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061792128 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062175546 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.063125126 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065519859 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069576238 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059510739 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065597515 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059186898 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072506077 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067246509 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06174913 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063001638 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059332006 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069452246 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064065157 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067837858 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058077409 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059406621 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058212677 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068135554 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066730967 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060544081 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068362031 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061729919 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059929942 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058664536 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059669735 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.060913392 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0627301 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058974525 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06532018 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067346669 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.07124619 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069958843 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065774294 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058425631 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057556506 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060055475 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057530543 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062327263 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067378026 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071946233 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068882102 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076881002 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058410607 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066673414 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060085489 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073774493 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069169191 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059439126 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064111879 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056855784 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060099394 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066764846 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068773036 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071328728 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071058098 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062152516 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061568202 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.05794426 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070900352 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058585268 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064880178 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.067853976 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06398874 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.05879335 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060250426 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065968879 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061852287 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058074692 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.07364221 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06616716 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057666134 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070324294 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058089962 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.06766429 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057932714 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060450126 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061671878 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060160113 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06645781 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074524758 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056634726 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059123942 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074919632 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059651604 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059693232 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064041241 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071944026 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061917213 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064142907 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066788185 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06583737 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061035899 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065305558 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058696358 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067048032 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061821143 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.06783495 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.05731005 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074285244 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056541924 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.070855301 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058137311 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.067359218 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058694648 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.064740435 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.057367346 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.071508729 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.058602426 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.057764359 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.067659107 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.055318563 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066458656 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.188979238 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063937258 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065883033 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.070191255 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062531836 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068473418 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062509371 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067408237 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063825599 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067490558 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.070027079 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061600697 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058144478 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06714218 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069127487 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065471589 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060456486 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060106967 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058787389 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068344756 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060982038 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059933444 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067278105 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062816471 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063201746 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060391097 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060711042 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060422723 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068165775 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067405868 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075117861 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065177123 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064499039 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067925147 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.057995148 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075518278 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058986794 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064466499 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058168972 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066779535 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067745602 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058855925 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076211705 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060062993 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065073367 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070556358 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065480493 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060288543 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07461039 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062433423 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066779648 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064764548 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061439865 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06362193 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060275862 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065040738 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067790214 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067696432 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059103606 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064593266 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066078386 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060060389 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.06904679 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060231012 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065629921 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060413489 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057397764 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062858539 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.068701418 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062207589 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062501314 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058291844 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056778615 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058340719 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.06717762 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062393559 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065164104 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071543285 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057061709 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.05955968 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057942439 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063211556 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075203234 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066843554 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065449303 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063047109 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057631526 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060697724 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060347797 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058565254 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062576006 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057192926 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057688239 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067889113 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060019158 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06156389 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058222566 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059738964 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06623239 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063901642 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058443908 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063797809 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057993689 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061835537 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.056947431 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059398431 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061257395 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057107905 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060379958 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.06660564 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.072267154 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.062655948 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064808754 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059777549 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.063848513 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071808671 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066575418 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059378042 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065307348 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.05661075 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076544063 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06521488 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06375666 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065026448 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059270688 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.071563196 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.059955032 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.065165432 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073401026 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058017365 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.204416599 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059110965 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07637061 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062615794 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058275601 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065611789 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064515513 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063637169 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070271987 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058966262 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06576788 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065785873 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061505952 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060734871 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060927303 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066538128 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072318761 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059047399 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065000183 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065133571 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065698645 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.061662651 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068977701 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065236485 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059808011 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060345542 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060892275 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059285034 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069317819 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058663516 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062712414 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062084829 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.05809949 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06437739 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07273947 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067876946 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066718995 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057903063 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058677931 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.076272241 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06042203 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062536645 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06534897 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066543478 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06983637 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067037325 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07354083 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059032908 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063181136 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06925551 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059461561 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058164296 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060965609 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059931242 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065741194 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066864077 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064445707 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062645973 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.063838544 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069899199 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060033168 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061630931 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.0648431 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058825843 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067039334 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064610272 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065266974 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060086804 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057931925 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060436236 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067038467 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064085147 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067224801 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059343961 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067625191 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071522168 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06451221 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.0623125 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057975018 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06254084 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066058969 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063981426 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.05792228 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.061898328 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060384828 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067184484 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067213613 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061891476 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05774488 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073594851 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065500751 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.065992635 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060486719 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060424958 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058695635 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057810082 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068216557 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057768995 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.05994798 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061749655 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060156607 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074189345 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065064572 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075800033 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059236427 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062002589 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057457912 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066286943 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062192336 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.05849961 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066498476 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057456822 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074200975 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.06806724 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067060585 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057059471 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061021964 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06439306 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071469239 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066249249 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066453984 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.0612154 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.064779579 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.058304379 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.066103652 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.056173763 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055366253 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.065213463 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.201415153 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070715213 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058584424 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.068258681 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062348973 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06588923 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065233135 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060637858 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060825727 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060900183 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067035446 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062178392 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067684294 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062113403 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074695782 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.06050933 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068890299 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067872114 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069436048 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07158723 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070460718 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065629234 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059861354 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064606167 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065554114 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059450503 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062305256 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062826476 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081406867 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.060806313 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060877492 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072011739 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067854032 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.058464501 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.06724641 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062176143 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067185211 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059185761 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069034732 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065847509 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.06120206 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062564337 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063164113 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058577287 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058734148 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059982385 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068262815 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063225523 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059473797 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077395012 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060337462 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066445999 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069759155 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06490127 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061217042 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.05859914 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061848341 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070603967 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073000867 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06254549 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066441143 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061926421 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068576678 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058324198 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067022161 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066683074 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066317662 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059201786 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060391485 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073204659 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073699701 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063644337 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068248385 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067274084 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061019533 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083762417 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066106708 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061079578 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070011886 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063235118 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059229906 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058740037 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.063900623 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070669472 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059313856 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062731405 seconds)
  done (took 40.138189021 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097646305 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060612499 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059676482 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059519907 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072181173 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060795545 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059370488 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060493548 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060443719 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062868498 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059422383 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059201213 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072143686 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075955923 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071047824 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064642094 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059269061 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060376664 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059103734 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060207976 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071130475 seconds)
  done (took 2.718399758 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066914687 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074505789 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072815061 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07838769 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068429658 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065148152 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072351009 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065334815 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073440104 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070580068 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073811593 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065385834 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07079329 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070235744 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070642171 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064655284 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071561924 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066806141 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063416236 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070408789 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063538845 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070415963 seconds)
  done (took 2.855302082 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059847188 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059112291 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066351364 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058870455 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058913248 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063840631 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057564901 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060723481 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.060768973 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.060597756 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064902364 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058242538 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.056956276 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.061704277 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.056955112 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058405392 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.101584843 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058754037 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059050214 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057525235 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06437547 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067835461 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057842367 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057567217 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060951636 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061581977 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057442516 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06125943 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058226878 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061180585 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058742319 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.05739328 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065157581 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066707221 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061586715 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060983436 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059824896 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058479486 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058386679 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058960464 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067310356 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060831171 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059155138 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061423194 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068579416 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059472237 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058857869 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067101572 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058929422 seconds)
  done (took 4.345468695 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073156058 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107445484 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063326509 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088046173 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074515492 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066317104 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0633457 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091061544 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061093457 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061801392 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.076289727 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07406882 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06194444 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063510299 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064918003 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061884359 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062879072 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060625118 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065637951 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061459741 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065514942 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064727588 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072632834 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073228973 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062976497 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06079186 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06125842 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063358118 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.072912771 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06618509 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063973386 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064432475 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073210982 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065298656 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061115375 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061349164 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074199098 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062045656 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061529609 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059755836 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061259296 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063741711 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064900616 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074551026 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06202599 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065533361 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061909539 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059270977 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073390182 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061409053 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066665976 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074476458 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063075723 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062761778 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063795692 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073558878 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062022466 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060139856 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061964832 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073115367 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059480117 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063170083 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074000234 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.060940207 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066079481 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074576491 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065487245 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062918261 seconds)
  done (took 6.016548046 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068598029 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088690451 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070216934 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070174729 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069844863 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.06922595 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069420224 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.06906291 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069131962 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070056271 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069160758 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108661539 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064812949 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074733021 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068872607 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068919962 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069162179 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068915759 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069195174 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069039023 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069242481 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069728286 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06961392 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069846518 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072749509 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064344181 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069127793 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068904929 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070002247 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068924127 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072806177 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068876732 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068941873 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069988594 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072845689 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068751626 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.05863247 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069107108 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069116519 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068791958 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064359898 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069952897 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069068585 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064453527 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069137652 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068941762 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069774079 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073086028 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078348193 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0708968 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069280775 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070154892 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069164907 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069243737 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069837263 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078611814 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070278578 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070584094 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069256447 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070094006 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069844232 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07855561 seconds)
  done (took 5.740006122 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074811513 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066533552 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078068238 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060002123 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057832698 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068226701 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.057417871 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057703392 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066690574 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066774894 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068633002 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068540737 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070865623 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069014645 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068522508 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070622017 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067818125 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067885396 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06629615 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067950229 seconds)
  done (took 2.697168795 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.06989297 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07599067 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064440826 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068550957 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063682435 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068560711 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062636088 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064435094 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064049348 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06373584 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069785206 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069833602 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063837586 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068009468 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069695046 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067724663 seconds)
  done (took 2.417916776 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.065173554 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.06740362 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066124754 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059104508 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063085597 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058542906 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059125832 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.05746782 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058539369 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073517354 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060887454 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072283827 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060986789 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.05918775 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059996989 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066255757 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.05996399 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060823218 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060695597 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.06607306 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065503441 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060315437 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062890519 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059127191 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064310346 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066457226 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061223497 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062766754 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059134299 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.05986936 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064508828 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065630338 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059538218 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059740612 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057748219 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059704058 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.05971475 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060212735 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065865232 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059811279 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058798659 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064616668 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059302284 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060541011 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058341407 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059914431 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058143538 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064876976 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059492826 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064433215 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059215169 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061421171 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059559638 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066851965 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062045573 seconds)
  done (took 4.75378635 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073367939 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063884609 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.05793316 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058876506 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064546428 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065642329 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065082799 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063775919 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064653702 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059314933 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064914293 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064064319 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064941736 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064911634 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065003707 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064879094 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058992114 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064565195 seconds)
  done (took 2.509241831 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068710672 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063005026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.06736328 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064197661 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064257232 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063963211 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059598875 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059314919 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059432524 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063664191 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063795877 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063591533 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059714082 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063760575 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063766076 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06392559 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064079148 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059539242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064088082 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059998499 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06379286 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059798442 seconds)
  done (took 2.737446309 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084870889 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081527166 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.120855447 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07694936 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084738397 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069217031 seconds)
  done (took 1.873117673 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086736885 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102762667 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064443253 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063998988 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075668334 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068066959 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067980705 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069046147 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075799792 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074586269 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067866407 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075814363 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074154808 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069209981 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073762746 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077123722 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066559866 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066377374 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06244982 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078415075 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067983724 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074186743 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066859988 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066530306 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06671545 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086822748 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07718896 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072073087 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068635838 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074261246 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076891928 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066292246 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073882042 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071983842 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062788947 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074184656 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066537532 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077181006 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074286319 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068935834 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062848499 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074201778 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074103416 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068763283 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077603653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066784862 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069208924 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066991807 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067111815 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080850152 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074505522 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069420909 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074370723 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07793887 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077563614 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08064818 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072600192 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069216341 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074464558 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072428277 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069468918 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074439012 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068765035 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072278519 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077254927 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068545969 seconds)
  done (took 6.136189088 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094658819 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063469273 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068306364 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074201782 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071038787 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068789995 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068470041 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06850354 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067202519 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064407703 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104211928 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06875413 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069812067 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068786257 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06680158 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0666984 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066692966 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0690102 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063405045 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080619615 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066938435 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069198684 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06907559 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068869221 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072048578 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077688081 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066571501 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066491222 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066686152 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066574676 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06877589 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066680312 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069526813 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063050294 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068804565 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067091691 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06657948 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069535665 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067143162 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074057585 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068959607 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077289329 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06641367 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066919082 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072040877 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066437354 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06661918 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063412258 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066679179 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063325544 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072370857 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072374574 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072604601 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069344322 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067357881 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06727781 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066636435 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066908435 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067250902 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078033284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069033877 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06651156 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080477272 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066397966 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066888344 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068935875 seconds)
  done (took 5.981521385 seconds)
done (took 123.173130954 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205211196 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180646459 seconds)
  done (took 1.730361928 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069198628 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.092342543 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.071036148 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129576587 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067167445 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100829962 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099999193 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.071804091 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066655198 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066546073 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066542432 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.0693567 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132789831 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066767771 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066381039 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069680199 seconds)
  done (took 2.669173088 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100712657 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.176832654 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104471308 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066078493 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102154441 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074435843 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065777523 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076378627 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068415805 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068138183 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072955003 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070427234 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.0675298 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071097583 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069163931 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072930548 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06720511 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072196441 seconds)
  done (took 2.832327831 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089374656 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08184873 seconds)
  done (took 1.539172961 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15234621 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101249672 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140217666 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.321396599 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.135310736 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277745599 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128444863 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126590029 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.107794038 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123484446 seconds)
  done (took 2.976840189 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097954899 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.161438141 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299682652 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.1172049 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071131226 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.083093535 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115861298 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07753691 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076324718 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076413823 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.075897197 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075617469 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.092802756 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072226032 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072341873 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073045363 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.096331004 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071084318 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070956242 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072193215 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095587316 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065226715 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072810869 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071233212 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073913929 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074095609 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066685955 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065537599 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072034044 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071070543 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.074544082 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.079875595 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074054117 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100432072 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069207503 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.101279078 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.070723762 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069345831 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071325607 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069612798 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07377633 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.073303341 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073703467 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.072622356 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066478049 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.070878115 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066619084 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065165525 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075470828 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066315629 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.075263368 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07410345 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100079731 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066738489 seconds)
  done (took 5.870550225 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106012319 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105601783 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070091667 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11246718 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104524799 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069528676 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104250927 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097215223 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106253226 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068666048 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066852434 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068259924 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078723688 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078527339 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116713695 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107796263 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071534493 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069166615 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106460187 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1058141 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066225884 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100625988 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094849066 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104692944 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065454888 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067965407 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065885639 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067925649 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072087331 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07411905 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066836556 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077829774 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081544131 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074252178 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064890126 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065769372 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066070208 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076268377 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07609886 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074811987 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073720779 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065136617 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066109454 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067502163 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067973074 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06509072 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074776445 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076439539 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074998051 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066513339 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068175469 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065753108 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067388215 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076225622 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073745056 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076919638 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075524695 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065783258 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066006964 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07079173 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076566276 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075284651 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076349565 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068754996 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075243631 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066054406 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07621734 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080349902 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065945692 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067930339 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066509566 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066628833 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067605567 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073205019 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073436556 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06789622 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06609866 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065812708 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075808386 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073846647 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066624768 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072729153 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064891877 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065945071 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067685635 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067613765 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07276814 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076372616 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068261277 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065940574 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066940756 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065910321 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064404883 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.071976457 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075890243 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075582793 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074230676 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067263122 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074722892 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074337525 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067779981 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074444052 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065151592 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067295467 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065956945 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07317787 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071391485 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.207602186 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068328635 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067290806 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075517878 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077956913 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067106097 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075568732 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076438416 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07577492 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065744303 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080262642 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067027338 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075295861 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06753618 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076267974 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067252786 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076316791 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067246214 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065561144 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066479243 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075724241 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068492669 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067319264 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067620751 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067024153 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075274408 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077938139 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068643947 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073774821 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074493036 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068174024 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074511224 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066608197 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074640431 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067833389 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067612192 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065508281 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07763244 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066844177 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066729578 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066699984 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076315112 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066851719 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076589285 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074109349 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06524049 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077034833 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076115842 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073366884 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076195364 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068471101 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066778172 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065701624 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067203868 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073376183 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075646003 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068443781 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066135102 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074186608 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075167413 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065160959 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07397267 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07398168 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074044654 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066801631 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066769178 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076672096 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076776477 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075327873 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073818944 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074901569 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066585606 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073739986 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073831892 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066134114 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080050758 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066028029 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.078901193 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074706189 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073031877 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074377494 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076182574 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075816122 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076178593 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079982979 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065524251 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065719082 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075615267 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066492838 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067105171 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074562131 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067993216 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068155837 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079179154 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066637833 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075458029 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06507121 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075158027 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06497968 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067977702 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079230534 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065886035 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067324795 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074530227 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065979904 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.0716938 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073771579 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.071734648 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064272037 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066339573 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073581074 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.072341044 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064352808 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064172511 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066622806 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071630611 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07077426 seconds)
  done (took 17.901952348 seconds)
done (took 36.900664434 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20400003 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154653422 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186076133 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.112624078 seconds)
  done (took 2.12928275 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.096691237 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09461387 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076224725 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061184756 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.082749131 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06157522 seconds)
  done (took 1.884980279 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278298898 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196809242 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.175079345 seconds)
  done (took 2.056758549 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212265122 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192160713 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.451362512 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284901346 seconds)
  done (took 2.643562884 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.130730359 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078762129 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.060835194 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071237873 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.113520298 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145932863 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.089693151 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.113856036 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072262342 seconds)
  done (took 2.341879489 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.132743275 seconds)
done (took 12.632112329 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.100243425 seconds)
    (2/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.427988763 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067991644 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.064254838 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.113610088 seconds)
    (6/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076781092 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.17312553 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107434173 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.228072612 seconds)
    (10/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.073720182 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072119083 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.139465746 seconds)
    (13/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070343202 seconds)
    (14/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.204219394 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081600925 seconds)
    (16/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.195423195 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077417553 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.061582413 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.164850312 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069892934 seconds)
    (21/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.167739101 seconds)
    (22/309) benchmarking ("sort", Float32, false)...
    done (took 0.12878239 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071801519 seconds)
    (24/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.061283452 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070460976 seconds)
    (26/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.073632564 seconds)
    (27/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.117107474 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.131551038 seconds)
    (29/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.107066055 seconds)
    (30/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171298105 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085574884 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070255511 seconds)
    (33/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.060823429 seconds)
    (34/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.179232436 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.095418986 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.085554064 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.081704959 seconds)
    (38/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068569957 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.174550891 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.224945052 seconds)
    (41/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.150691093 seconds)
    (42/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078871503 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159762069 seconds)
    (44/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.16870438 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070071983 seconds)
    (46/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062473852 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066251399 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.060338785 seconds)
    (49/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.061679274 seconds)
    (50/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090025193 seconds)
    (51/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.067923348 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150760713 seconds)
    (53/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.063792811 seconds)
    (54/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068247294 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06123714 seconds)
    (56/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074863931 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.078759095 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 0.144400989 seconds)
    (59/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.204982963 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.197479671 seconds)
    (61/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.124877578 seconds)
    (62/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071694639 seconds)
    (63/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062591531 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073878574 seconds)
    (65/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.133605541 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 0.063631661 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06247262 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087938931 seconds)
    (69/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061229494 seconds)
    (70/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.073999309 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071739178 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15165338 seconds)
    (73/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.135096814 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068356577 seconds)
    (75/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.060666751 seconds)
    (76/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070349532 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.180754572 seconds)
    (78/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.077386073 seconds)
    (79/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065100422 seconds)
    (80/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059655388 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.222008036 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.171258062 seconds)
    (83/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.134790051 seconds)
    (84/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05997111 seconds)
    (85/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.134138476 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.266473306 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074874499 seconds)
    (88/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.062885936 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062085049 seconds)
    (90/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.135102729 seconds)
    (91/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073519012 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.191862429 seconds)
    (93/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120724397 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06175787 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06875376 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086202115 seconds)
    (97/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164511544 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070361196 seconds)
    (99/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06485052 seconds)
    (100/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.069840442 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.211743627 seconds)
    (102/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.136320874 seconds)
    (103/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.063655484 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.216178856 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157406859 seconds)
    (106/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.061679673 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.062253247 seconds)
    (108/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06246172 seconds)
    (109/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066985674 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.163877762 seconds)
    (111/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.136091976 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148750396 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.068311353 seconds)
    (114/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.060721159 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.078121231 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068989567 seconds)
    (117/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.192501461 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.078332562 seconds)
    (119/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.062548168 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154571949 seconds)
    (121/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06266282 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11983551 seconds)
    (123/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.060715798 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.179647461 seconds)
    (125/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.201145534 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121763619 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070017587 seconds)
    (128/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.060870599 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072824614 seconds)
    (130/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.062061502 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07006054 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.061288844 seconds)
    (133/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.061591104 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068471367 seconds)
    (135/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.061435312 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.062621044 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086494464 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067109256 seconds)
    (139/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071381879 seconds)
    (140/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070097247 seconds)
    (141/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062495964 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070839444 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071255881 seconds)
    (144/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.062466719 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.060998374 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072133514 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086984473 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.123735765 seconds)
    (149/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.075447805 seconds)
    (150/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.155886647 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084451339 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071923939 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128328519 seconds)
    (154/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.202028973 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.169213729 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202680448 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.133198986 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113995925 seconds)
    (159/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070244647 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083310393 seconds)
    (161/309) benchmarking ("sort", BigInt, false)...
    done (took 0.235837026 seconds)
    (162/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069864912 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.180808223 seconds)
    (164/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.076269485 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071904755 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.161658105 seconds)
    (167/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070258088 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.174650431 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.060538102 seconds)
    (170/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.061988828 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.119918258 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065441861 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062850152 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.086012301 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06067479 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.120449944 seconds)
    (177/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.061260482 seconds)
    (178/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069211454 seconds)
    (179/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.134005227 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061862866 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137998426 seconds)
    (182/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.192591978 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.060560977 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.060395535 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.127816868 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069238475 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.082654107 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.239967819 seconds)
    (189/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067341121 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089426811 seconds)
    (191/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.062657736 seconds)
    (192/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.165019663 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.062257034 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.08806256 seconds)
    (195/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078295052 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066480548 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070936765 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062086358 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06214432 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063459994 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.063088087 seconds)
    (202/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.062850432 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.061726194 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.061744146 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064129011 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069750627 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114765048 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.061509999 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08448733 seconds)
    (210/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.06619312 seconds)
    (211/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.062765733 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061456907 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.126725273 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068458961 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062112791 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.061916358 seconds)
    (217/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.062484835 seconds)
    (218/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.061160992 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.061812362 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072630483 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073228683 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.169771654 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13601046 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.109842507 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.061296991 seconds)
    (226/309) benchmarking ("sort", Float64, false)...
    done (took 0.129550616 seconds)
    (227/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085962844 seconds)
    (228/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.063239643 seconds)
    (229/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06261145 seconds)
    (230/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.061421255 seconds)
    (231/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089983306 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.159378472 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069722927 seconds)
    (234/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.062518993 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142203484 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069245586 seconds)
    (237/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.133501777 seconds)
    (238/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.060979699 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.062825382 seconds)
    (240/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.062178421 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061092304 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.062269329 seconds)
    (243/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.072494796 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11446413 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.060751073 seconds)
    (246/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.067805757 seconds)
    (247/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.132479003 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069968258 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073040642 seconds)
    (250/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062418176 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086258787 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.061237464 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06382779 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.061786725 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.073589121 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06096456 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.060975133 seconds)
    (258/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.072989147 seconds)
    (259/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068355975 seconds)
    (260/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.060863398 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.060937841 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062006484 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062045665 seconds)
    (264/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.064222695 seconds)
    (265/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.063605319 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.214650994 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08682949 seconds)
    (268/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.062685678 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.083943085 seconds)
    (270/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062416459 seconds)
    (271/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.061157074 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.061195478 seconds)
    (273/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.067824365 seconds)
    (274/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.062422622 seconds)
    (275/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.061441532 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068256439 seconds)
    (277/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069591852 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.07678551 seconds)
    (279/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.06635748 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.1044849 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.062633181 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134510114 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068004152 seconds)
    (284/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061884186 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069392928 seconds)
    (286/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062185538 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.163958751 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.158121501 seconds)
    (289/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.062442921 seconds)
    (290/309) benchmarking ("sort", Int8, false)...
    done (took 0.165026575 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071899953 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.060666689 seconds)
    (293/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06176459 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.061094742 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.061035436 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06087333 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06221155 seconds)
    (298/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.061733094 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073153506 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068649099 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.063727026 seconds)
    (302/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.061613763 seconds)
    (303/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.060292245 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.062409132 seconds)
    (305/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.060511445 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060538657 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.060265044 seconds)
    (308/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.068957192 seconds)
    (309/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.061123806 seconds)
  done (took 31.398735369 seconds)
done (took 32.82029888 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082835209 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087247212 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069819503 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.08272505 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.07840951 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093560434 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069780356 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075027836 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.077106312 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.075897126 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.075923894 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068146739 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070735077 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072119435 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069375744 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085078471 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.075695544 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07064665 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.070341162 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061529926 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069920598 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06140433 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.061389563 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.067987723 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.072826043 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068914095 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071329161 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071062606 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062000356 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.061644348 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066260279 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070696612 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063923157 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07469105 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070680317 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070115181 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071641325 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.073611758 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061349136 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062216251 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.071386093 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.061350684 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070150051 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.06890491 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.06719807 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068077391 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070464476 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074267073 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084760736 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0657459 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072330781 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073327951 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07352457 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067305762 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066829744 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070337772 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067608086 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084384906 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070194455 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065374206 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.071657705 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070682286 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067849552 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070729201 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070083318 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.072462364 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074380601 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.067777218 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072570426 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068828986 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061572942 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069947928 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066299411 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061682752 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072817691 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074619026 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060698583 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.066135762 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070267043 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070344643 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061649963 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06511311 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.060942375 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066457518 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065749145 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067536809 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066640932 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069211613 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060952819 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.070803449 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068979358 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069503744 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061662658 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075153699 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061881413 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068168254 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061661701 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061802109 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061014467 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06687616 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061279531 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065478457 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.0703467 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060589899 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.066575178 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.075376358 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061352149 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069000901 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060984787 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061191132 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073258266 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072311051 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061661455 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065242878 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061078692 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066824305 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061181905 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061196185 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061175111 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061678459 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.065924921 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061684206 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065316634 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.066767515 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074242639 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.061233982 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066016352 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065377909 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06137203 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068276122 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061606949 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061156732 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060273857 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074028816 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064204412 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.060656438 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.066519147 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064567076 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.068485601 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.059823862 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.210022585 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068412366 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067557952 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068642096 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061104747 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073211921 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066496805 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065280091 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061678914 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062316769 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.060792695 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061680071 seconds)
done (took 12.056300139 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.062827606 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.105120153 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071508591 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.07915399 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.074650558 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062449791 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.066980603 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.081194205 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.065186392 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.082257069 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.082765338 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.082001878 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.089899851 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061057839 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.061842316 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062904602 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.061010412 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.06843775 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078099515 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082423988 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.091860355 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062240694 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.071630585 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.077357772 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.073604393 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.082096065 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063154495 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063496233 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.064330621 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.078404295 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085476639 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.061537282 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063119575 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077495965 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.076745058 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071761837 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063094502 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066964686 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062804998 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061901797 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063254514 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.076993418 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.066505522 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.071677201 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063182586 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.062844712 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06290438 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.066552253 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.073495448 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.066610226 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.070703688 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075543371 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06477115 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062204077 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061059398 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.067103246 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.062192789 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062872782 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062064298 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062258343 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062063492 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.064430384 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.062772825 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063054721 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06581426 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066204463 seconds)
  done (took 6.085658189 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079961363 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089820297 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.07862513 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.0796538 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061955651 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06256704 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062488498 seconds)
  done (took 2.034719181 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062821583 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07534981 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07840988 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079083841 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.071495708 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.080985183 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.062852925 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092228773 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.061730788 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075048917 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109721844 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079608489 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.0658057 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074292215 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.062364809 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.070700782 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062693957 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070427005 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071443786 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079200902 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066864307 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089781515 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075694618 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06334733 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.083385925 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.067814731 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062265546 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063173393 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063706643 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06404563 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0640391 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102491066 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.067005751 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077131093 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063998377 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.062504992 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.068787002 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065903545 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.0662239 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.069174849 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.068433372 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064490744 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.061635305 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06425045 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.065123095 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.067209922 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.061767918 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063921755 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.063564788 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074458928 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.061717693 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.067401293 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066346088 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068217248 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068554893 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06748644 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070894345 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064520052 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074384564 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.070347622 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063821405 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.072299348 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.07110135 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.068393394 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.071286589 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.066656529 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.067348452 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.068579749 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.063912137 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064692302 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06406345 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.071410885 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.06247218 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.064658014 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06597963 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064890118 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067408342 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078680725 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.07862221 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074960484 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06399044 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063974319 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067191226 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.078657134 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067894396 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063604154 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066050747 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061766626 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06685495 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064264209 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06882541 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064560519 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071524481 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065291055 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066469799 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071436571 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062233279 seconds)
  done (took 8.239951003 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065571297 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063661995 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065568997 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064508779 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063823922 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.063929553 seconds)
  done (took 1.935203657 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087763396 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064614654 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077820207 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064940856 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.098098642 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.07109437 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.071694064 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072884776 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.076371329 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076801057 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.071133973 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074259734 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.070423556 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.065930651 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.070936398 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065503392 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.0713635 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068200337 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.075612352 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065961331 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077829486 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.065906375 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065748257 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.075640647 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.066512959 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065011065 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063792614 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075999705 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076023236 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075650539 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.065507074 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.066589004 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071132203 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07266693 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.071584542 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07124377 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064145713 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.069711571 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06583973 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.066482209 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.073221047 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066076669 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.066699935 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.06936085 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072801985 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070915637 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.069423038 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067698997 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.070471043 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.069509496 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.069202648 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065087111 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.066332733 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.069457447 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071155599 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072906313 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.06967745 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.07123126 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.065393109 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071126969 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064167211 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066446927 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072302487 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.066752928 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070151074 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.069170808 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070831261 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.065830524 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065997398 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064035473 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.069444642 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064177539 seconds)
  done (took 6.568604393 seconds)
done (took 26.369265265 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.993263449 seconds)
  done (took 2.493480863 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.56425605 seconds)
  done (took 2.098267287 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.709375633 seconds)
  done (took 8.241780619 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.300384744 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.343820403 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.713507279 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131553075 seconds)
  done (took 3.059260435 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708666729 seconds)
  done (took 2.249970632 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232167884 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221406001 seconds)
  done (took 2.009417262 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.34721487 seconds)
  done (took 1.882199619 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.077703136 seconds)
  done (took 2.612986505 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.233417011 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158189444 seconds)
  done (took 1.936114132 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451259769 seconds)
  done (took 1.990890971 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.245730983 seconds)
  done (took 5.789327258 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234765888 seconds)
  done (took 1.818199509 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.230345912 seconds)
  done (took 1.769634815 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.728661429 seconds)
  done (took 3.265219087 seconds)
done (took 42.761729862 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079056864 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081856361 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080994316 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07758779 seconds)
  done (took 1.838011474 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070876962 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.06705311 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.070781594 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071065177 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.067786283 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069310901 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.069827459 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.066253526 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.067673208 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.06650288 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06494073 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.066503308 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.06924999 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.066481751 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068853661 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.07061495 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.066352991 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066359614 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069152948 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.066782577 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069529268 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066580384 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.064467852 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.065431478 seconds)
  done (took 3.168208737 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074902774 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069632398 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072280557 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067684019 seconds)
  done (took 1.830356452 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072962394 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082419327 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.084364899 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090116297 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.072764218 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.07329393 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.08123676 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082347492 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.061937679 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.085248255 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064381586 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.062954595 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063034614 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.083737037 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080958207 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059661639 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061433647 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073612306 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072531325 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074739531 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064130118 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.061967296 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072599688 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072381376 seconds)
  done (took 3.297390301 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076770944 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.062032777 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075941849 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089055291 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090225086 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062110164 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077610362 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090279725 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.1376961 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061889064 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067749129 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062167688 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10331273 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062173051 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078254893 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107571533 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11122428 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06562763 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095351685 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061912591 seconds)
  done (took 3.192143703 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073816676 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06630219 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066225433 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.061640211 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073251101 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069061205 seconds)
  done (took 1.969666134 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06440056 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063739263 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063766833 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063307769 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068246141 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063567197 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.061773951 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063474946 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064017983 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063561544 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063056477 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062238585 seconds)
  done (took 2.315512778 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.160127987 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065942877 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066382267 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064940373 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067838925 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06249942 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.077553495 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065626329 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.081284859 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063123271 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063024196 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065085335 seconds)
  done (took 2.453671601 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09954955 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130072464 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094924341 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070187555 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16923857 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093416349 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.08811201 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.121151372 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0925542 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.06703011 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090923908 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133964621 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093131633 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.096368214 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079836036 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123703218 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108356843 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085796808 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11309893 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079749154 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068048509 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132476627 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067103557 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090628153 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099244229 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.09504451 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108115052 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131584554 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082076233 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.087070888 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080160425 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.071801886 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102589795 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081824872 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.094691115 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091414722 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095871843 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083684612 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08339183 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11743563 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1583971 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099423091 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098305042 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132332693 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076250233 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.106526917 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079281067 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098152117 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102359663 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091261966 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073454165 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089695156 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.104522469 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100099606 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080013287 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079140788 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116429689 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.096490464 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093351605 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076957079 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103982539 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.084144627 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249634629 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119233274 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140598711 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100370545 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136454213 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122545495 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095354392 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.087420957 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.089320487 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073446912 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109953935 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096721885 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135861752 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107788976 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098387351 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.092811942 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081197602 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106071637 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112585478 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09331585 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092674044 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146172195 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107688344 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094082053 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090179793 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.137845169 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069770168 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146837075 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087057949 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118740674 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096156628 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137898451 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089786282 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.081625731 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104646816 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103060088 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087821087 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101138701 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082577959 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112957438 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09022581 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100505757 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079852525 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088387593 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084820185 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.094769722 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073213404 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102839942 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114047404 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112985414 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.072556981 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106971758 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083969633 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.074139453 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090576148 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138240887 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080912658 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072521071 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147118804 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.090109031 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.113366624 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257759692 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083977416 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116578588 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13712723 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090838043 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08928327 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075131865 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152866684 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074289957 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116409545 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079439067 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100088728 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104550377 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135755324 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137475136 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094949994 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075947881 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090103158 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.105633547 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085141897 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084408413 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075263739 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107560987 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124523315 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.097543534 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078523281 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.090155257 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.067074257 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113639211 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074617596 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082717586 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094728191 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.085585122 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087814931 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142194364 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.082554492 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10771871 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09605545 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.065090061 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090093601 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157502769 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081277067 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108991379 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115865528 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082078986 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065676536 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.094536018 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.070954867 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107722846 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.090633957 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105161856 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076730227 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105755884 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.066674795 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071999826 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132861097 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099145467 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087206546 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.129982573 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102709298 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085593607 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102206003 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.241093764 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097496577 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102540505 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.107268898 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105051668 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072466715 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128686518 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090642345 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075785375 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086371009 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077740037 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.075466603 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098657462 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113581111 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087732927 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099819499 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10149166 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090213764 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.107460124 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087834449 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077983391 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130789956 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074115424 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073546602 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086356034 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.10446698 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086400718 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.133328773 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.077380232 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136009243 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091362809 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079704679 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115573543 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.066874664 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068016522 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.080523948 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090066725 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115263705 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077692073 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076178182 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117642096 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131800721 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096293864 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102794672 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.066505323 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088957491 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135082341 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.112203123 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079863232 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109040124 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082846228 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129126921 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095829132 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118647984 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104743114 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10961747 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089674323 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.078751377 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.071825827 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085668071 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1093933 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08333291 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07949223 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064906382 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071606756 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090959112 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088947108 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110011742 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086066226 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287227477 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072031726 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103000614 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106213488 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106090163 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090039342 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094228364 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.090972392 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090483845 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090231253 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090176491 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.071706758 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12621352 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101463129 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076859057 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087463477 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094807739 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106503632 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107813638 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109134875 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091993801 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105852599 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121937836 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09740022 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08053457 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082269169 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093630085 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.083176505 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07969311 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103596505 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112308681 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097386639 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107970417 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.093606728 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.08972612 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10676906 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091721626 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087330131 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.116983835 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152635324 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.100872366 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102596937 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084065525 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106411105 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104082549 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111739003 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.110036905 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107729589 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068422354 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.073452938 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068439975 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105361172 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077592624 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117533526 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075172115 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105337453 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096534524 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078351462 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.065044533 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100600589 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092063893 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.080261345 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121318545 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110107072 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070127822 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087427418 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102652698 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232250245 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125260755 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101918691 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102029816 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070524857 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090721369 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07257995 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10926369 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099521577 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.075887131 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.074549416 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.068158526 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106035412 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082560125 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108686426 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08934966 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099808156 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118102169 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135984701 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085404077 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094744447 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118089372 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1120037 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.080098502 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111408114 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135511425 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.119474434 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.079547025 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.082939798 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104730827 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104504323 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100284792 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074475702 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077369114 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108053435 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113864736 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.066243164 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083335492 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069034086 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.082946637 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112531019 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095564772 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080704456 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117032919 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073126314 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107209964 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094642952 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123024581 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122149765 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145850155 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095365024 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083170893 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075174207 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12408285 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.069299653 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116828825 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112724512 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086849383 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.066453304 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082032512 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.09379044 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.625488744 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106187917 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.072910874 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131657767 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234861296 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114477968 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08404645 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.118154806 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090386972 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101331855 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0906279 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132998537 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08159452 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109663277 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.171271708 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111427787 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106562777 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072237475 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.083793108 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.072752277 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.077365164 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08128428 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085470995 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108155668 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084152171 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103834935 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.07836337 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106774611 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089709123 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087377989 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.097436419 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079267228 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138076615 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085837379 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122730391 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10578422 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076771494 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073214705 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.085465144 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10044956 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080287754 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09358201 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077247819 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075223868 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152828988 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102439131 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083270513 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100953774 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.08958368 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.086668324 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090702548 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117152729 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109445217 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071523396 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.086124979 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102794097 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077281094 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07309059 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095363946 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.067846807 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089263173 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098919148 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095740088 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089767435 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102775492 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076612485 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086421652 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108622742 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083142844 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074789935 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074616453 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074010199 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073778948 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254869214 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111815754 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118045588 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110578951 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091434821 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094841169 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.078441056 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.218463969 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078803983 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0959895 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.103862079 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074075955 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.129597272 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087256677 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088498964 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095301235 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100358811 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15293332 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072648575 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108930493 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092010195 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108227005 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085268842 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10716161 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094966274 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09183053 seconds)
  done (took 49.893076277 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.091414637 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.144683673 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.15243498 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078865298 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.092436079 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11707163 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206531288 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189651577 seconds)
  done (took 2.747527307 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072296842 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077883255 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099978614 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.079031423 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062589751 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071065448 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.202275315 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.077533473 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.061968051 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.092070927 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.073101611 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.064164552 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.411157527 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.061885617 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.063150343 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.071434573 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062953629 seconds)
  done (took 3.360760473 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.362832074 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.595434472 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.344647824 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071121553 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.970126495 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084989964 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.181655704 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132831166 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077297379 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534125479 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370014805 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128437437 seconds)
  done (took 18.520645926 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077033685 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074005951 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.078018602 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.078307466 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073150825 seconds)
  done (took 2.041450416 seconds)
done (took 98.185595829 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07703204 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.162104145 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.064600998 seconds)
  done (took 1.921269792 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080194692 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.078596871 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077492459 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.075635387 seconds)
  done (took 1.980086493 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070208403 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07251964 seconds)
  done (took 1.803324452 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226480176 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160327368 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089317183 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079257296 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077338084 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076487036 seconds)
  done (took 1.901530006 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068315413 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068828414 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068885462 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070170397 seconds)
  done (took 1.937391309 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064178037 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.063113841 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065044769 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067864317 seconds)
  done (took 1.923386065 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081203503 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079880916 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074966442 seconds)
  done (took 1.900395599 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.092075007 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092993662 seconds)
  done (took 1.848524602 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.076683021 seconds)
  done (took 1.739907593 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.085020062 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094183941 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.117286066 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.098993771 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.117365558 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.098814051 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075830054 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076530782 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071369264 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.069326276 seconds)
  done (took 2.570099824 seconds)
done (took 21.741108609 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07429976 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363419513 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356001916 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082231682 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66609935 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35230476 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.980060365 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087341991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094983191 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06469005 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080864593 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645278237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.971120688 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326158026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.957594505 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324064364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64677433 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064159035 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063565419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064492995 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964629077 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063542429 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06434106 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064148503 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.680842298 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368906003 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065558905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320025188 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064572605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067056189 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.352300737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065733875 seconds)
  done (took 16.04850861 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.065671038 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116526587 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069286308 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079652321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066872508 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06530681 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067714623 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064981459 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104898903 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065133246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081039742 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063895302 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068355858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065999817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08428363 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065293918 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066539462 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065303059 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064779837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068599006 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082593195 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064519158 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065530155 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065295979 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065219314 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077781211 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066325562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064699943 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065105138 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067683308 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0684867 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066757764 seconds)
  done (took 3.959870107 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115965336 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12297399 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070005805 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103062746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11504976 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066171913 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144746282 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08799086 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109229466 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064862407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081241217 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064964957 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.09954742 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066537917 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085111325 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065237748 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066859667 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06564223 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065146431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066438835 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083155001 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065321463 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065952315 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065657415 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065873878 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079695082 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066436804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064838315 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064857119 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067758076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069361219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066478987 seconds)
  done (took 4.231022779 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066318019 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068661707 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077206065 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079216115 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065797144 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066606403 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067194812 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064382885 seconds)
  done (took 2.240288198 seconds)
done (took 28.152214869 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.0743935 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063972241 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067847192 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083672426 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069885622 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.067796621 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061152011 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.070579586 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067725626 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.067936229 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.069006238 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062913414 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066634405 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.061288805 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068706907 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063196875 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.069070143 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.067398786 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067779553 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.069069284 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.065544043 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068806984 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071090814 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070089215 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069558048 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067716076 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.072615286 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068151475 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.064186824 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.066294346 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.065271153 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.073941479 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069541053 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.070396124 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063277298 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.063241387 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067419117 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065048328 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.069706852 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.072216957 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064866822 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07376387 seconds)
  done (took 4.516076251 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080474881 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085594123 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.078616051 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077670284 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094924002 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078666762 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.082681331 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.074940008 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.072959666 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.082799876 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069404452 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.076197609 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07444162 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068328413 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.072756994 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070181579 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075469266 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069928867 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073415281 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073729498 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082886766 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067759287 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075717378 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.074690145 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070223207 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075442875 seconds)
  done (took 3.670823976 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069271305 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080948878 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087939077 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143885152 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10824932 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075888958 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076894335 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086714968 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092717209 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064493547 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068063305 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.088719853 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087914654 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070148683 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103697023 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.079847032 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078727788 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065776468 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071182403 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092504884 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084460369 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081022532 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090120715 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080180578 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063086666 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.066058855 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069838455 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.077104765 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070855943 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075229466 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.06792893 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067160175 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.0644996 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.074701411 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.06823184 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.063193682 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087119294 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075358541 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076188638 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106104673 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072818743 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.064762052 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09129917 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124262234 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063170887 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.066993131 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.066883554 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075256406 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064604513 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09129153 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077526532 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063474521 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.063956701 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.064850632 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064874747 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078415061 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065619933 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.065248295 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074067911 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070033168 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084720799 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068685526 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082839046 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063760515 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073471956 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.064773421 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.064759422 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062500024 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094163717 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06974631 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110966542 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064202107 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062300183 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074897404 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07372614 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.069352445 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063204472 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080778995 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074091191 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.066887382 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074638024 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066483406 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066698765 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09409479 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063585105 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06309484 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.0624387 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066739535 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.066433752 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064036152 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076796186 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063065473 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066461634 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.078280905 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06329485 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06421527 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.06680478 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.066181069 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063089787 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076214903 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.0676741 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065007764 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074935757 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064173015 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066476702 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076753585 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070548798 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.062787701 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.065557459 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067029666 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064910861 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067450065 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066341492 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065649709 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.070373911 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070261713 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069007942 seconds)
  done (took 10.359581978 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157711692 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.148596444 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065567712 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142260249 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07097452 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.069412399 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.142913928 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.08256079 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064143336 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.064876189 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063738137 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.092636521 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.088660836 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.098628763 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068571781 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064290779 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087036554 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.096029508 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.144110098 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140587951 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087051041 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.070576477 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066091864 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065282931 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065278792 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.072267091 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.07923538 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071640591 seconds)
  done (took 4.255807012 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074992154 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.087900314 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068515065 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.074563434 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08454157 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064702189 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.065872294 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065859156 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078423226 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074833002 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064177849 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.068680498 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067924306 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.066963659 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065171224 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07047938 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.070504255 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063306614 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068010806 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069166058 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073888998 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090046983 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.06811759 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06370187 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.06662306 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063395149 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07380249 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077185366 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06400895 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.078841819 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061609118 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068745256 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077692008 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064556503 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.063660477 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064408363 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064380032 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064076015 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064466431 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062703275 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062415313 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068614275 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.062723847 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073440416 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077363686 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070733257 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.06627394 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066897574 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066622509 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062076463 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066863634 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066785271 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.066564823 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.070832913 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.06751679 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066651751 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.064889427 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.092121587 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069799109 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063427479 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063910612 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062902782 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066611878 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075342316 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080242661 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066231701 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062699169 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064184598 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069493823 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077622072 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063430201 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068343405 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061640272 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064670346 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066530303 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066646722 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.064880245 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062891016 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06426577 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063920094 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06504011 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063737221 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.063632808 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066237999 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062502114 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062823357 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064701065 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.0661993 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073986712 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.063385854 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.06748761 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065114284 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.062721832 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066192089 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069649421 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.066472718 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.076855239 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076475874 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064754197 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062813868 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.076918826 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066635048 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063256663 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069924915 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068062142 seconds)
  done (took 8.900497574 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08610306 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065565141 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080140483 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.087147356 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074626359 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069732639 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075480846 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.065237758 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080323324 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063748247 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.072403334 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062782161 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075187593 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073809896 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065587859 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07492753 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067140802 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.080897839 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.077968053 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063119904 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072737149 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075888925 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.076083858 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.078192773 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077524504 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.078540633 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076008793 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.067261979 seconds)
  done (took 3.798885957 seconds)
done (took 37.179258124 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.75265633 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.022122296 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.75715674 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.970530997 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.049472683 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.832400716 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.798460788 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.75039907 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.917383627 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.805347266 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.035832114 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.265222864 seconds)
done (took 65.703511334 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.786498829 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.912946896 seconds)
    (2/2) benchmarking "String"...
    done (took 2.03034294 seconds)
  done (took 5.633213285 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.976754407 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.396543404 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.015913065 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.75135035 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.757269488 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.17911203 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.542387494 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.199249834 seconds)
  done (took 30.531562514 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.901363508 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.986710843 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.43952591 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.478335184 seconds)
  done (took 15.539381334 seconds)
done (took 63.248828847 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.801822747 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.762890209 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.834872914 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.778341469 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.754086478 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.75439834 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.75485024 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.754607193 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.805265137 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.795178844 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.752692113 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.754975386 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.753939021 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.761757951 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.283169831 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.803282422 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.765373179 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.756274249 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.765690616 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.799995619 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.757225806 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.756173979 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.22755262 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.909723031 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.371263615 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.900858895 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.097087887 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.147079052 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.767878918 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.753871132 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.954484117 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.002009806 seconds)
  done (took 203.328372925 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.753553036 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.735613513 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.804491532 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.784308919 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.211377167 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.931237914 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.850644836 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.245734122 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.757525377 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.766514074 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.890576238 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.7538606 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.897596771 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.700095406 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.789225501 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.757270342 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.941591384 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.920927853 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.792868201 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.915262244 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.757886083 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.743366603 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.708313509 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.883018311 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.769629063 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.767678953 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.770001032 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.776910407 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.940901062 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.917462979 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.773520588 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.757024717 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.957521292 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.623252378 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.773145973 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.768209171 seconds)
  done (took 168.581161749 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.950665209 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.763107175 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.755582057 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.811986157 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.877980639 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.756398023 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.422933326 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.766004566 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.323354673 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.756327746 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.756566811 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.755880869 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.75478421 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.755894063 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.766675498 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.844279437 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.759213469 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.771129101 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.757282991 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.781211371 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.755495721 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.755202267 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.756223913 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.755257867 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.75498044 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.755766651 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.756187534 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.227999262 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.008115157 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.75845765 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.75680342 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.52580429 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.771194958 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.972992008 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.760158373 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.848200422 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.813829801 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.879423438 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.759902673 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.974737065 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.834943792 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.758318424 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.75740668 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.821429374 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.771212567 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.757010735 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.759097086 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.762300322 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.822163042 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.035481259 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.761009395 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.879643442 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.243426636 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.759760695 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.757735596 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.757891092 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.350775933 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.760821484 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.758135882 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.764002473 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.764495986 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.758748357 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.758081814 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.144871473 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.828848329 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.852913101 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.969436033 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.761006781 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.971762099 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.983929057 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.758547577 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.758882825 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.759063856 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.760833243 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.758753165 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.761187207 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.880394941 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.7670882 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.893419042 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.846922439 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.883842484 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.766858628 seconds)
    (82/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.77464544 seconds)
    (83/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.596065122 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.834177614 seconds)
    (85/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.801449778 seconds)
    (86/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.588500378 seconds)
    (87/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.766324146 seconds)
    (88/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.136681059 seconds)
    (89/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.542928161 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.766583736 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.763004721 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.763007334 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.776573257 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.763014328 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.762916686 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.764479734 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.842602941 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.767725401 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.765071676 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.885364781 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.477678815 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.968160381 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.767605955 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.762712498 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.771506498 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.845761745 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.885636403 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.766597789 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.829302929 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.769208236 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.765945414 seconds)
    (112/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.764015296 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.855848168 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.764880341 seconds)
  done (took 398.914093477 seconds)
done (took 774.527213262 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.366016903 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.338609092 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.434383014 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.354762728 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.331095143 seconds)
  done (took 13.525794496 seconds)
done (took 15.22908795 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.778686574 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.770366796 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.823757278 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.848928548 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.781053116 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.784008233 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.84685696 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.784695683 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.815934794 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.821178625 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.849870688 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.851102353 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.789625612 seconds)
  done (took 25.24834796 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.775465514 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.920880719 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.990953826 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.806243089 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.775164023 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.999261553 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.830534845 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.912903262 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.916830372 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.000794339 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.006347307 seconds)
  done (took 22.639759258 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.774338283 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.923087757 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.996724729 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.810715809 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.775753662 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.004072717 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.838640966 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.912522074 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.918980117 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.006352959 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.01927995 seconds)
  done (took 22.693168739 seconds)
done (took 72.28452389 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.769188895 seconds)
  done (took 3.473399756 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.795447658 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.937683444 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.770755546 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.767853098 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.770293405 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.771145524 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.768961729 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.769437321 seconds)
  done (took 16.05550293 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.770726529 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.770617874 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.770839443 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.769838293 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.770195491 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.770034578 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.770310052 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.77030734 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.770078073 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.770623201 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.769517944 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.77038627 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.770028252 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.770098773 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.77090035 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.768624713 seconds)
  done (took 30.028696004 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.771997418 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.772038401 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.770784545 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.771060934 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.770467531 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.772186207 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.771998982 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.771742755 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.770830745 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.771675695 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.770955044 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.770982917 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.771400411 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.771688339 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.770457507 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.770680449 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.77073995 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.771461722 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.776017083 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.772780793 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.772156991 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.771997492 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.771644623 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.77183738 seconds)
  done (took 44.22678866 seconds)
done (took 95.498117224 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.509864615 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.502775432 seconds)
  done (took 9.719678059 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.771268728 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.772083664 seconds)
  done (took 5.253388185 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.772988765 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.772815652 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.773076012 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.772035346 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.773480123 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.771954847 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.772276606 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.772842726 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.77293596 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.773046043 seconds)
  done (took 19.435230657 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.772579201 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.773081725 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.773199119 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.771605657 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.772904041 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.772982457 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.773425221 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.773656895 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.773739866 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.772947687 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.77339642 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.773268951 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.773335194 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.772451328 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.774264098 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.774060831 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.773726497 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.774488032 seconds)
  done (took 33.626160963 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.772191946 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.774162824 seconds)
  done (took 5.253699219 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.775054867 seconds)
    (2/7) benchmarking "second"...
    done (took 1.773990129 seconds)
    (3/7) benchmarking "month"...
    done (took 1.774404297 seconds)
    (4/7) benchmarking "year"...
    done (took 1.774230366 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.773847055 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.774772895 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.774300026 seconds)
  done (took 14.12895572 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.774314685 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.929957514 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.991992863 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.641164065 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.774572319 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.776765099 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.099756569 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.777579014 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.779121604 seconds)
  done (took 20.253000401 seconds)
done (took 109.377980026 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.590837749 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.774883205 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.027105042 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.833464897 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.808347956 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.066249923 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.790482044 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.039254856 seconds)
done (took 42.640490165 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.786702213 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.772767715 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.800124197 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.80198305 seconds)
  done (took 22.084873231 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.775673058 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.114567392 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.799125903 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.596410612 seconds)
  done (took 22.012362136 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.15719336 seconds)
    (2/2) benchmarking "read"...
    done (took 2.116357284 seconds)
  done (took 5.987848794 seconds)
done (took 58.58439951 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775662122 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.775830948 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.775041155 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.775851119 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.775373018 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.776024524 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.776656442 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.775537509 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.776047661 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.775379922 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.776003136 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.777677589 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.77763479 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776299852 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.775921457 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776681992 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77569198 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775189169 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.776664247 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776833377 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776496066 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777595578 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.776780051 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.777925846 seconds)
  done (took 44.341701573 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.775631071 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.777048308 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.776454839 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.777571809 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.776907445 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.776444689 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.776218494 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.776192103 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.777029753 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.776736166 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776519325 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.777031991 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.777251039 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.777996853 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776733166 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.778951768 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.77826687 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777231833 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778302165 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.777288527 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.777536823 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778013701 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.778593811 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.778839557 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.777651072 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777659849 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.776204211 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.778157528 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77763719 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.77768877 seconds)
  done (took 55.03156204 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.778804328 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.779957185 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.778398239 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.779410621 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.78093951 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.779073647 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.777889746 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.77986338 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.779002341 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.778926557 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.779239061 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.778817729 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.779202881 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.780130098 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.780507056 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.779061349 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.778390656 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.779222805 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.778780451 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.780092648 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.779569738 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.779717392 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.780534307 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.779719604 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.779526544 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.779773086 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.780061359 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.779427916 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.779424338 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.779629446 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.78024068 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.780480329 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.780454281 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.780719334 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.781462451 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.780994838 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.781121076 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.781586229 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.780105921 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.78004867 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.781561775 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.780794734 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.781460414 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.781288759 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.782348045 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.782379817 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.782652829 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.783052618 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.782257596 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.783760975 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.782052819 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.782432107 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.78258922 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.782538027 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.783480544 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.781470607 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.783041858 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.782559904 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.783580256 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.781952281 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.783654647 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.78282009 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.783964709 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.78449235 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.784072479 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.783715515 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.783548548 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.783087144 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.784507383 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.785255516 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.785006947 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.783946919 seconds)
  done (took 129.961586554 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.783857248 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.784487543 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.783561074 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.78348053 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784821438 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.783588416 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.783834084 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784326817 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784561185 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.784907472 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784142513 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.783222151 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783767334 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.784869766 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785078744 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.783407292 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.785441447 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783651023 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.785277357 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.785105597 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784840305 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.785233787 seconds)
  done (took 40.975593084 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784098924 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784996037 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.785017223 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.784727517 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.785329673 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784869279 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.784541072 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784832795 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785068088 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784951032 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785690527 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785178271 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.784475515 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785529017 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786362338 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.786117766 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784410495 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.786423058 seconds)
  done (took 33.852265034 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.786231442 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.785878522 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.7868172 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.787312852 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.787139962 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.786513931 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787826385 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.786083118 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.786982312 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.786949843 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.787045256 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786696008 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.785686294 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785967221 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784927514 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.786719311 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.787099505 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787303021 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787905591 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78666662 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.785935037 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786646078 seconds)
  done (took 41.027401489 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78777378 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786426692 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.786517158 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.787830808 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.787113688 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.78687803 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.787314301 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.786621318 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.787457039 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.786231548 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786031343 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.789086492 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.786690449 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.787577818 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.787363302 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787459444 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.787597837 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.78757352 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787738611 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.790395174 seconds)
  done (took 37.46917921 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788847597 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787190085 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.788099616 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788052501 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788431018 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.787204441 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788053786 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.787667717 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787604807 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788503268 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.78854377 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.78869137 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789225842 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.789589096 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.788594661 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.789412836 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.788940207 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.789386469 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.789606264 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788067183 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.790251346 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.789610414 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788638218 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.790324855 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788395946 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.789813035 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788583844 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.789415957 seconds)
  done (took 51.807970209 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788768916 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.789704176 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.78928271 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.7899469 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.790811772 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.790144603 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.790409014 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.790307375 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.790258967 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.792007211 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.790740791 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.78965661 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.790451252 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.790946767 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.790472266 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.790093913 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791878664 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.790496562 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.79114729 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789870549 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.790628146 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790641148 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.791036021 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.790598553 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791381885 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.790328057 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790099299 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.791225394 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791304817 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.791130333 seconds)
  done (took 55.440958352 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.810646205 seconds)
    (2/2) benchmarking "in"...
    done (took 1.811636161 seconds)
  done (took 5.346845397 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.791516146 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791669975 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.791803347 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.791338533 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.792098639 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.793372559 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.790967646 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791289472 seconds)
  done (took 16.060119469 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.792936885 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.795962789 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.792544593 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.792061791 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.792954387 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798228095 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.793964704 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.793201933 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.794557572 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.794725586 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.797480545 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.795179749 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.799914131 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.797153668 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.792614187 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.793332988 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794310096 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796122564 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.793641216 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.792870738 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.795857165 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792963008 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.791931075 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.792389001 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.792602187 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.794987661 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.80172453 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.793992236 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79430588 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.79342497 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.800564483 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.793139089 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.793841321 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.794448124 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.793215755 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.794481666 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.799609311 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.792696484 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.792843417 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.793074967 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.795717624 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.795551362 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.796803214 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.800071391 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.793362919 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.797500117 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.794432646 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.794050859 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.794464313 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.798671144 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.801808016 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.795963675 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.795332062 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.795138513 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.797292137 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.793998271 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.794443146 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.79667473 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800011984 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.801730218 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.797676367 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.815227663 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.804299822 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.795549207 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.795291705 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805110749 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.819530316 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.798210685 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.796977878 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.796059836 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803382038 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.796805323 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.794869188 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.79466318 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.808675421 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.803382144 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.795224323 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.79526097 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.79711687 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.796031553 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798447273 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.796960512 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.796843959 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.795921192 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805996084 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.821086311 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.797048726 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.795987864 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.799598863 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.798181554 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.800834875 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.798686621 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.797573326 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.796793022 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.798789965 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.79853362 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.796738586 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.79740964 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.797440528 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.804555975 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.797937119 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.797490242 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.800555517 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.804447218 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.796767138 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.797260041 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799264589 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.796857059 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.805450851 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.799210627 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.798247793 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.797459376 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.798381328 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.801241975 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.797049379 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801395722 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.805430095 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.804982346 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.80065804 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.801659931 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.802379969 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.802522186 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.808310431 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.822639324 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.798436467 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.801417953 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.803886045 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.810597083 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.801502905 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.798072746 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.800828265 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.797987535 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.799556224 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.800475795 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.799853295 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.799388213 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.79891722 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.798702714 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.798585896 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.798792764 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.801634201 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.800452065 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.802073478 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.800340324 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.801722709 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.798801205 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.801779983 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.806409679 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.799561783 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.799654542 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.800296687 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.801712142 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.802099206 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.800827643 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.799771549 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.801045618 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.800302286 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.80195804 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.801777056 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.800103499 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.800030309 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.800353114 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.806030242 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.800200841 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.800671919 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.801610699 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79962389 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.801086796 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802455088 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.801220976 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.803473197 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.801369285 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.805621968 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.801990644 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.802557406 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.800556584 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.802019706 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.802059525 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.80488997 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.8125209 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.804843909 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.811225075 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.801508099 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.807143568 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.802103244 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.803579327 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.801275724 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.801316799 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.800194898 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.802935897 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.802353111 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.805175751 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.821402306 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.813728205 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.805327575 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.804179136 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.807927094 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.806735443 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.809126297 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.80316817 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.8029719 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.805317907 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.802920141 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.803284173 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.803140695 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.805477437 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.803522496 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.80355158 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.807152725 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.802012516 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.80273761 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.803950384 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.803672093 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.805673246 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.802748071 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.803180173 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.803038061 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.803374604 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.81076511 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805578358 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.80393562 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.802788559 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.806230513 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.802981618 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.803927008 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.805608955 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.807923613 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.806480381 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.805224049 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.811375526 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.806955363 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.804479587 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.804889585 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.803704643 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.806583849 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.804452298 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.808658747 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.811772424 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.807602932 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.805305287 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.808581201 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.804564133 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.806648946 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.803402129 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807096816 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.804966941 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.806484728 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.804367746 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.805651617 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.811682281 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.806114132 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.804710984 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.805492277 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.806343808 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.806566707 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.808118292 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.805654208 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.809002184 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.813034743 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.809894008 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.807740708 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.807947292 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.807914115 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.807206695 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.809909345 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.806007552 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818274151 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.816461186 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.806414407 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.805674286 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.805433229 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.808075056 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.806648225 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.805923785 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.812497898 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.807431943 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.808270886 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.812749969 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.808179021 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.805664345 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.813003518 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.808754067 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.809875859 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.809753838 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.807211173 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.807102283 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.806998757 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810200413 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.807351152 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.809263758 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.812321851 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.80817271 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.809444387 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.807852548 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.815306557 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.807433493 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.807651615 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.814729499 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807968958 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.808171702 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.808708503 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.807946124 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.809162313 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.809446667 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.808175606 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.808776031 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.808823993 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.812454441 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.819295923 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.811549216 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.816215132 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.814106452 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818242681 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.808380394 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.809192474 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.807787041 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.811247777 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.815746847 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.809669979 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.809063638 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.814647597 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.810937532 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.81055927 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.813281549 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.809500143 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.808955999 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.808992884 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.811513945 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.814404083 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.813252311 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.809078682 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.80936652 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.809388194 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.809015108 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.812598545 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.811599777 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.810907284 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.810970096 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.809227851 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.810883553 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.810163284 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.811317297 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.809255056 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.809628072 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.810258849 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817501406 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.810277628 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.811490448 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813535044 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.811668648 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.819442294 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.81088071 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.810247795 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.812277783 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.809965857 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.812987516 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.81107759 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.810295017 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.811863151 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.811043526 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.812773188 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.822804587 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.816647408 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.814192762 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.814078323 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.81030531 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.813367906 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.821101985 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.836355957 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.811390203 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.813034645 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.814884521 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.818440231 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.814221969 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.816492876 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815506502 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.820447591 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.813784974 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.812198724 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.815764116 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.823759832 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812691038 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.812146613 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.812423775 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.817163152 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.814295093 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.812507633 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.816222975 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815238774 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.814246991 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.823672997 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.812540012 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.814127978 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812660217 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.812904059 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.813009246 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.812765167 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.815964111 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.814501183 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.812961143 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.812702608 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.815027488 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.818586579 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.81352194 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816994818 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.82334053 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813555642 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.813425536 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.814225567 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.813705787 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.815964611 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.814620361 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.813481897 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.81627596 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.81349043 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.814871794 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.81820759 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.822223043 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815629261 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.813333371 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.815006995 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.818586604 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.814619864 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.813108221 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.814721527 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.823269073 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817858031 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.82579352 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.824112116 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.813889394 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.817160377 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82198966 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.82267668 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.814649788 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.814614833 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.814990375 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.817978107 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.817747437 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.816044801 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813623221 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.816084681 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.821141848 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.815070445 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.8160188 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.815783975 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.815928596 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.819336522 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.818133429 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.820960415 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.816732559 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.815805085 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.814879099 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.816835629 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.816473029 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.818852015 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.816032201 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.816339981 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.818566736 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.8176675 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.820702362 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.816145414 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.816333688 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.819422138 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.817753554 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.816748171 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.816546424 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.816095705 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.816954235 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.820126108 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.826370905 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.816763662 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.817902779 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.818647058 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.819485513 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.81611726 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.818030606 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816955785 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.816920014 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.824034806 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.816758126 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.816115845 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.818086848 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.818274896 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.823032074 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.818389613 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.823032396 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.817079357 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.818682322 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.81862263 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82106768 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.82723441 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.82207747 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.820859823 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.825309072 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.822125584 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.819085917 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.818557152 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.819491367 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.818609399 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.820071998 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.823068814 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.820236149 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.821147378 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.81977477 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.820550264 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.819688345 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.821618331 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.819912309 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.820204604 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.821645303 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.828481616 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.827389945 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.81983947 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.820651883 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.818703749 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.823112868 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.830216969 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.819070013 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.819068972 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.820247377 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.82016182 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.821144226 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.827129261 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.828501862 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.822703047 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.820062821 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.824808573 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.836790551 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.821808505 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.829624726 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.849305743 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.823130528 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.819311359 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.821143395 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.821913462 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.819614421 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.822716264 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.82103168 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.827681619 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.82043652 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.821170628 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.82883969 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.820942764 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.820763514 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.820515469 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.821685919 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.826453024 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.820635704 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.828332427 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.820071934 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.822124251 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.822710226 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.823402725 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.822622349 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.821049773 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.821441546 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.824433589 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.822378493 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.821984347 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.829806582 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.822532815 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.823518207 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.834751821 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.83218121 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.822433535 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.822277794 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.822237734 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.826149878 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.824444721 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.822685248 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825831763 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.830162545 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.826222865 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.83104575 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.823149388 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.822222859 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.824189614 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.823253534 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.822374467 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.834285565 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.832983026 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.823834272 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.823964848 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.829615448 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.822236636 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.829655497 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.829306063 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821812654 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.824556716 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823115803 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.824317429 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.825328837 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.8229768 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.827522639 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.83175047 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.823223522 seconds)
  done (took 1080.621849584 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.824238333 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824857488 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824211654 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.824629217 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82350825 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824027936 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825463947 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.82456335 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.824850194 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.824705078 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826145534 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823931854 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.824554795 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.824484919 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824440968 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.824605227 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824498755 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825141831 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.825275082 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825379102 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.823841654 seconds)
  done (took 40.073687697 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.82565187 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.825741468 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.825527597 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.827391773 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824840645 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.827201371 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.824488963 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825314188 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82570688 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825213645 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.825082009 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82558978 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.824573316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.826143033 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826123085 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825749613 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.826928275 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.825368173 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.825871783 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.826379073 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.826264493 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.828057861 seconds)
  done (took 41.927554843 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.826249682 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.826613465 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.827454321 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.825954761 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.827845975 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.826808343 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.825787773 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.828614147 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.82699187 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.828409333 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.833239488 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.832453737 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.82495553 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.826915013 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.823976247 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.825793822 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.971196973 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.825265476 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.824889159 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.82498423 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.82394863 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.830984757 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.82484904 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.824583475 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.824744181 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.825731839 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.826208861 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.824848924 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.825878886 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.826049633 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.8291084 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.830805053 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.826353909 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.827363592 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.825384367 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.82485789 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.828417855 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.825618001 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.825798151 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.825322154 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.834263985 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.849561917 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.825064024 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.824977498 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.830929436 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.824395969 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.824983213 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.829181233 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.833826755 seconds)
  done (took 91.448608697 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.823563171 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.824297156 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.824315586 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.824899317 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.828111373 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.822466812 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.822364291 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.823469241 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.822994059 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.82406226 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.822679996 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.822774688 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.82355478 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.822869445 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.825968561 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.817523918 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.817667226 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.818323703 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.81794733 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.8185814 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.819052166 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.818004974 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.816721598 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.81821672 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.818884603 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.817589891 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.819138832 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.818576917 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.817855099 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.818355343 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.819352686 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.820102186 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.818070172 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.818366912 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.818214325 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.818270951 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.818504612 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.819029716 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.817009383 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.81854843 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.818865168 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.817522774 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.819366951 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.816804755 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.818976769 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.818112691 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.818038175 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.81982768 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.819240385 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.817890055 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.819193472 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.818624531 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.818022431 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.819510444 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.818832336 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.817456482 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.818531268 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.818430749 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.818650367 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.819801682 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.816897451 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.817643235 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.817308082 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.819111662 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.818953341 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.812558121 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.813340673 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.813574831 seconds)
  done (took 125.475887029 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.814525878 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.811855161 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.810258713 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.810950997 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809668446 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.809852902 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.810374841 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.810472069 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.80999404 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.80992431 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.80985611 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.81239456 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.810836912 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.810412685 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.810628728 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.811102704 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.811052677 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.811407426 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.810909884 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809986093 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.811004639 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.81142727 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.810683304 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.811068862 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.81034633 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.809618823 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.811418751 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.811662694 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81233823 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.813665124 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.81079758 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.81222128 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.812057104 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.811079607 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.812508518 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.811106466 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.81112962 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811434261 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.81020885 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.811995203 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.811826091 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.812220149 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.812510306 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.811070057 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.813410925 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.81286046 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.81173566 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.811901434 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.811630317 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.811977828 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.812495104 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81187927 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811672473 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.811816022 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.812643777 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.811496208 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813735503 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.812325023 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811683474 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.813163782 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813296388 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.814837838 seconds)
  done (took 114.06470579 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812134756 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.811796897 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.812394332 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.813312802 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.813595294 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.813057517 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.8129773 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.813530894 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.813536935 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.815384142 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813897488 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813324502 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815560271 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814154743 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.814339475 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815843068 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813427596 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.813128043 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.814162153 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.812434278 seconds)
  done (took 38.017334181 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.812930629 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.812354647 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.814900503 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.812790468 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.813981693 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.814309792 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.813866277 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816137571 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812941206 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81321079 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.815878174 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.812556507 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81381456 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.81365858 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.814965249 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.81310604 seconds)
  done (took 30.768003625 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.812769419 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.811963983 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.812626507 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.813508763 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.810639548 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.811590909 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.810831982 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.809788466 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.810296974 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.809860029 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.81259464 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.810059822 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.809180833 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.809719264 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.808601982 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.809546554 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.81028183 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.809820006 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.809208945 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.808254408 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.810198444 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.811775815 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.809300979 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.809828055 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.808902148 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.80859866 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.810655398 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.807927123 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.807762773 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.808200932 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.807858867 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.807905141 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.808092511 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.809417642 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.807513046 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.808078504 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.808833946 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.808615245 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.808546171 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.808458781 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.808475266 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.806596353 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.808718611 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.809300946 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.80827605 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.807625169 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.808798207 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.806535165 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.80786639 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.80800608 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.808208854 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.806490081 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.808120579 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.807394765 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.808779917 seconds)
  done (took 101.254705635 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806407331 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.806834233 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.807838908 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.807148584 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.807559212 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.806817722 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.806808346 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.8071543 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.807108243 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.80748339 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.806793656 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.806873822 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805908766 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.806961793 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.805444453 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806894491 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.805647195 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.80577852 seconds)
  done (took 34.261183936 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.806550611 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.808363361 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.805511947 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.806046256 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.805677098 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.807521339 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806784933 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.809727653 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805835529 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.806984686 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807024103 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.805892763 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805628345 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.808074843 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.807154426 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805990771 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.805355313 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805902403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.808249291 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806082434 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805638904 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805997675 seconds)
  done (took 41.485602964 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.805784918 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.80679981 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.820631081 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.824983631 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.825232158 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.839081977 seconds)
  done (took 12.660005751 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805609053 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805975432 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.806428386 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806784346 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806028696 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807827548 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805899105 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806338658 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805367965 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806564627 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80655589 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806366139 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805170769 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804830449 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805745416 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806607012 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806815205 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805906951 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805016918 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805459128 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805927192 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80699686 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805504227 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805968986 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80497113 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806218872 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805260916 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806892305 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806438635 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805607112 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806118965 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807205674 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806590097 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806646904 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805478515 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806086541 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805864103 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80544249 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807466169 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806285926 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.805929449 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80563159 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806758311 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807051607 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805138938 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805597434 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80596723 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805575714 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805639497 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808427831 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805723346 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806165018 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805704325 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805308307 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805367213 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80801033 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805654908 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80537395 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805637285 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806284545 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805976561 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805256685 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80538561 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805990389 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805409078 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805935784 seconds)
  done (took 120.940757633 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806503827 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805367593 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805648261 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806756169 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807125012 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805605552 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805300444 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805839296 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805136544 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806272403 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805156068 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806299176 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806586648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805923737 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806127109 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805483045 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805421122 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805796728 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804680559 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806091449 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806598218 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807728806 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805244879 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806687782 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806171709 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806271741 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807026903 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80604526 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806002551 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806058501 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80604789 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80509803 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807356018 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.805862936 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806616939 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805726716 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806345461 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807382665 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805760502 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805736502 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805485674 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806645142 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806030061 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805900666 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80566602 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805558077 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804987664 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806313321 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806246665 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807075541 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806600057 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807527225 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806449803 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805988294 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807991554 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806525151 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806557847 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805467393 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806973728 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806023509 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809018477 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80608948 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806348822 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805907793 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805673412 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806601257 seconds)
  done (took 120.950820341 seconds)
done (took 2506.98139368 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.825870502 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.013119441 seconds)
  done (took 15.577692085 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.982189244 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.926464147 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.811669161 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.823240963 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.812813858 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.812782693 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.839588368 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.812278171 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.812559404 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.811787987 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.812070629 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.996966844 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.867051603 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.812432963 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.812947878 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.903957827 seconds)
  done (took 51.401563497 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.818588989 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.817678091 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.82820753 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.817473782 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.819114395 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.836121568 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.847901295 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.822109673 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.877868499 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.832333443 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.941789327 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.830804961 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.822422632 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.88548183 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.836482174 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.838554638 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.920980055 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.900240361 seconds)
  done (took 35.038034992 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.905336266 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.833076058 seconds)
  done (took 10.492879099 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.849165907 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.840438098 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.84773961 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.845662116 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.833363327 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.853635383 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.846606529 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.840378157 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.847660403 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.827015198 seconds)
  done (took 70.183655818 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.825454646 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.82379525 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.823338851 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.819224157 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.816594606 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.822116374 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.81949269 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.823391703 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.517084584 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.863473687 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.83272015 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.829310544 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.821201523 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.820288041 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.817807063 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.846749736 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.926944813 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.817724119 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.81821006 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.82605708 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.821843474 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.879150769 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.834888094 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.822337146 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.853285245 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.509838136 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.83163394 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.82553137 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.947112519 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.817253689 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.821588584 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.031136484 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.825488973 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.28729813 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.097824955 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.82840927 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.832503755 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.827857687 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.820577539 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.944145139 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.821232529 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.826766103 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.8023099 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.073398602 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.919977176 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.868046175 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.171640332 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.825291355 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.820880123 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.854503417 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.824794471 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.825356992 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.838383664 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.341830619 seconds)
  done (took 130.336212492 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.819314944 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.17832878 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.985132258 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.821506378 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102819416 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023806956 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.822448868 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.864806385 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.824124331 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.045640764 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.071272961 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.926420953 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.822018184 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.822036844 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.818874918 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.81845288 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.974478742 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.889659712 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.821891875 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.820186201 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846269809 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.059639188 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.940338183 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.820903179 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.847396526 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.029027556 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.939607618 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.923788704 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.595497645 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.819680262 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.882083194 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.822128951 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.821235594 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.821603739 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.976363178 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.91300616 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.904008709 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.822520774 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819388954 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.819796178 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.562223744 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.019823272 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.913636823 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.949026249 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.07064008 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.022831703 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.599898372 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.820088368 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.55416487 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.981373745 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.049193106 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.047341362 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.940491173 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.824967861 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.156948691 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.820702969 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.821428699 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.068317918 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.04056089 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.919777352 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.821939852 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.822053344 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.820823072 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.106707562 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.823351057 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.915524622 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.823559597 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.822120188 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.91673732 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.921123196 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.04931725 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031592549 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.851395379 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.161632565 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.335566682 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.065797823 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.886196695 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070604273 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.824781279 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.820630815 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898046433 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.666279589 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.076955091 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.102763247 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.066050203 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856266698 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.53706756 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.821677461 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.045570359 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.042180526 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.082472407 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.06969229 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.061487894 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.147562605 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.822697699 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.822153189 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.156374591 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.946372743 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.824933586 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.163951466 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054683064 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.383404 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.849432347 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.125883921 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951509665 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.825681422 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.464559086 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.823163513 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.051961835 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.86304551 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.825179569 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825083935 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.04223972 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.814648347 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.823237077 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.467134476 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.882933103 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.827848558 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054982604 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.82536996 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.092589445 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825546788 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.056334722 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.381707386 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.854278134 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.997392453 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.070651476 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.826414041 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068342937 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.065944691 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.937281177 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.042726462 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.52022438 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.82664136 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110239748 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.82820951 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.825391836 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.993849722 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.827174179 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965678952 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.82861195 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116640801 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846585275 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.063574355 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.828075895 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.079865741 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.858405418 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87424472 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.829926117 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.955011108 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828044702 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.745245393 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.981870636 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.830254252 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.824742021 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.375550155 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.828188667 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.972312987 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.050896615 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84727332 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.897133713 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.492639503 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.826471372 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908206727 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.848541234 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.212623401 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.826729317 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.076307194 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.829431315 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.826492866 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.827537208 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.112206435 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.008287787 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.830666999 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.828862708 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.734938168 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.826679362 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.826657379 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.007017972 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.285001022 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.827609291 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.02685308 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.830399854 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.952876562 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.830910144 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.904438627 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.157931482 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.82881579 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.8277328 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.826694215 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.270716531 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.827893123 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.036270329 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.85373404 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.359903029 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.963434334 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101836692 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.13701085 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.066533383 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.870571061 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.829496411 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.087395609 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.833358571 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.889881216 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.83114182 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.847195717 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058598527 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831567028 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.036785021 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.099246611 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.697675322 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875696711 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.832495858 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.830253825 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.827553091 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.974251753 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912494054 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.833798667 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.828497 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.941650851 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.947485095 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.037818883 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.831659323 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.923999465 seconds)
  done (took 893.38402389 seconds)
done (took 1208.154359804 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.829357411 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.833781336 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.835244805 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.833743246 seconds)
  done (took 29.094384821 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.83505244 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.832516528 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.830610563 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.831322413 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.832847834 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.831470457 seconds)
  done (took 12.757391431 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.903399662 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.833418343 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.832615361 seconds)
  done (took 21.332102232 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.905786436 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.240791257 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.972218001 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.269002546 seconds)
  done (took 10.150763808 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.830697363 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.831871486 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.833099982 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.832367762 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.83265731 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.833963312 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.832302216 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.834328772 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.834767661 seconds)
  done (took 18.260039561 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.61786688 seconds)
done (took 97.976119356 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.002072434 seconds)
    (2/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.017846224 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.003539348 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.965224055 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.760454955 seconds)
    (6/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.846563094 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.009202687 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.183512457 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.230722235 seconds)
    (10/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.963066935 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.847340124 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.956776873 seconds)
    (13/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.955156784 seconds)
    (14/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.354375595 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.164792355 seconds)
    (16/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.202052951 seconds)
    (17/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.834947007 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.172358113 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.937244494 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.997711603 seconds)
    (21/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.911640686 seconds)
    (22/309) benchmarking ("sort", Float32, false)...
    done (took 5.535283668 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.847554573 seconds)
    (24/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.58713077 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.856512814 seconds)
    (26/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.224967964 seconds)
    (27/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.868697175 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.958658556 seconds)
    (29/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.314055607 seconds)
    (30/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.993768059 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.954781692 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.916137575 seconds)
    (33/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.085687746 seconds)
    (34/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.975060043 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.830262532 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.175847364 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.141461244 seconds)
    (38/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.923136184 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.643459433 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.303847864 seconds)
    (41/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.089798617 seconds)
    (42/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.323313478 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.841455457 seconds)
    (44/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.979695049 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.009810696 seconds)
    (46/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.091601203 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.897369187 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.937251204 seconds)
    (49/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.963738714 seconds)
    (50/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.834496217 seconds)
    (51/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.886090954 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.975870345 seconds)
    (53/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.841042867 seconds)
    (54/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 3.592710207 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.135975609 seconds)
    (56/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.257543326 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.834602942 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 3.856294979 seconds)
    (59/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.837034571 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 4.147454115 seconds)
    (61/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.754289635 seconds)
    (62/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.860502446 seconds)
    (63/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.929044454 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.358931583 seconds)
    (65/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.012374526 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 5.4892939 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.836355236 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.44044414 seconds)
    (69/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.974407145 seconds)
    (70/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.716794808 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.072729445 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.933023575 seconds)
    (73/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.112641237 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.990931426 seconds)
    (75/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.989737062 seconds)
    (76/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.855298249 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.153396755 seconds)
    (78/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.537874879 seconds)
    (79/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.916001801 seconds)
    (80/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.922652961 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.154785096 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.841861017 seconds)
    (83/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.10085737 seconds)
    (84/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.053470894 seconds)
    (85/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.951632085 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.963641757 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.851290172 seconds)
    (88/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.922287696 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.007157717 seconds)
    (90/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.120951781 seconds)
    (91/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.183688986 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.149612394 seconds)
    (93/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.839256476 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.182487547 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.086035514 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.718656808 seconds)
    (97/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.057062253 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.9894831 seconds)
    (99/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.896319162 seconds)
    (100/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.914600237 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.835503909 seconds)
    (102/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.069816974 seconds)
    (103/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.843111369 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.694465197 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 3.573705253 seconds)
    (106/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.46823082 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.148171156 seconds)
    (108/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.117244117 seconds)
    (109/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.917075363 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.836654792 seconds)
    (111/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.940714367 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.839031919 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.859526383 seconds)
    (114/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.928609634 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.151707101 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.98182422 seconds)
    (117/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.156443707 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.233706632 seconds)
    (119/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.238266236 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.944504362 seconds)
    (121/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.174627396 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.509374223 seconds)
    (123/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.339398585 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.144817581 seconds)
    (125/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.650937999 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.972712553 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.961910675 seconds)
    (128/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.916479182 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.133087126 seconds)
    (130/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.815375927 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.94597715 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.172091096 seconds)
    (133/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.841397962 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.126569656 seconds)
    (135/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.534603697 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.250721597 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.610874623 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.866885171 seconds)
    (139/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.857022785 seconds)
    (140/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.40628983 seconds)
    (141/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.943389681 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.927136357 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.869130876 seconds)
    (144/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.632748196 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.154078944 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.119740993 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.619089923 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.950914872 seconds)
    (149/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.398466345 seconds)
    (150/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.733036101 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.770360023 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.101940497 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.875424973 seconds)
    (154/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.302671796 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.84097539 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.320176364 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.97657913 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.84250395 seconds)
    (159/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.884916431 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.747303936 seconds)
    (161/309) benchmarking ("sort", BigInt, false)...
    done (took 6.847090849 seconds)
    (162/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.868085091 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.23980672 seconds)
    (164/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.74696541 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.844378071 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.865047885 seconds)
    (167/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.866390926 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.840166136 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.862544729 seconds)
    (170/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.941856145 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.970164948 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.90077935 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.058924406 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.455150669 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.250822329 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.945867865 seconds)
    (177/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.942685437 seconds)
    (178/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.934037621 seconds)
    (179/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.319554101 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.842005772 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 8.338411321 seconds)
    (182/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.158368084 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.161752421 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.03045348 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.850304723 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.45934956 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.07644626 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.877790203 seconds)
    (189/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.981724276 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.854855736 seconds)
    (191/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.920864173 seconds)
    (192/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.048046749 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.106649893 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.477579088 seconds)
    (195/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.679241424 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.915885561 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.865285081 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.235883869 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.844598489 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.920832476 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.088199943 seconds)
    (202/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.131256135 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.140648954 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.172601335 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.845452635 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.930944537 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.84875383 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.999338019 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.736184341 seconds)
    (210/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.98628475 seconds)
    (211/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.106660469 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.112829423 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.870895913 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.071167675 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.100667034 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.165156187 seconds)
    (217/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.495731203 seconds)
    (218/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.353350443 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.243927206 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.521927497 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.164187299 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.843654178 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.845872129 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.980555167 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.94117159 seconds)
    (226/309) benchmarking ("sort", Float64, false)...
    done (took 5.579833426 seconds)
    (227/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.859038269 seconds)
    (228/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.04942657 seconds)
    (229/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.986847299 seconds)
    (230/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.961264606 seconds)
    (231/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.871677512 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.84569836 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.870825824 seconds)
    (234/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.932504954 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.847971185 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.861838679 seconds)
    (237/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.141553827 seconds)
    (238/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.73826992 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.846210226 seconds)
    (240/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.950398033 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.023997875 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.131295591 seconds)
    (243/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.953302446 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.643402562 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.139873354 seconds)
    (246/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.861450032 seconds)
    (247/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.922798556 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.871624889 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.848159394 seconds)
    (250/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.087209552 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.5193542 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.165131839 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.849305636 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.257981749 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.504974406 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.954369773 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.235687994 seconds)
    (258/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.520750294 seconds)
    (259/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.878857289 seconds)
    (260/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.292255501 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.155900283 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.518293285 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.449324959 seconds)
    (264/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.941125656 seconds)
    (265/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.747016205 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.932195027 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.61907503 seconds)
    (268/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.286192972 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.895115396 seconds)
    (270/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.129000637 seconds)
    (271/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.180123471 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.029758085 seconds)
    (273/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.856896976 seconds)
    (274/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.928123449 seconds)
    (275/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.607326493 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.864778699 seconds)
    (277/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.869302227 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.680147864 seconds)
    (279/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.011606415 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.970775771 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.847539098 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 8.377061749 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.177134611 seconds)
    (284/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.993414419 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.877617476 seconds)
    (286/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.923247647 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.848436912 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.9921118 seconds)
    (289/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.15778541 seconds)
    (290/309) benchmarking ("sort", Int8, false)...
    done (took 4.752748857 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.684597081 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.034224084 seconds)
    (293/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.855063934 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.128091298 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.062010525 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.118891157 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.850533345 seconds)
    (298/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.527115873 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.966440621 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.887266949 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.441872842 seconds)
    (302/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.979805265 seconds)
    (303/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.002098866 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.949236539 seconds)
    (305/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.857124725 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.059081638 seconds)
    (307/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.962755324 seconds)
    (308/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.875102585 seconds)
    (309/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.850441128 seconds)
  done (took 1004.300838827 seconds)
done (took 1006.143615637 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.874109655 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869218082 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.851169411 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.873415185 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.9649163 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.897370154 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.865810824 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.854811324 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.903187634 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.901209091 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.8501188 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.892329041 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.853414921 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.852678214 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.852159768 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869172339 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.152568615 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.877439085 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.873391877 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.86456395 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.870749685 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.852750856 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.904269951 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.893224155 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.857287842 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.857584158 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.858028948 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.873410405 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.965847757 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.859612063 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.85855823 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.86594499 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.149813312 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.875095665 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.852451221 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.87396918 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.865401373 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.866455939 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.857396869 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.888049147 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.2916927 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.857895657 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.853768764 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.854376088 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.853042852 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.860184617 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.854341897 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.8628599 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.870229606 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869679197 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.285733655 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.87486706 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.859634147 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.854814337 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.867205912 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.856641326 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.859009587 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.871216135 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.874103396 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.87131522 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.14388144 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.885646281 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.859191142 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.874255931 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.864849346 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.32174857 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.859540505 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.861319935 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.293877612 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.867527595 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.320265552 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.870884376 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.858565218 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.86998063 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.888190415 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.155313464 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.876796378 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.856279144 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.864979405 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.853755603 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.868155225 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.870749023 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.861096175 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.857388446 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.873406747 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.899913358 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.869630887 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.857455764 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.867270642 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.875307624 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.865270114 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.86857397 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.859152114 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.85470165 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.869297398 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.860916013 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.861845521 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.859224716 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.862715658 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.871032169 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.291082414 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.879867147 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.85507751 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.854301239 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.856952683 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.871901464 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.291002137 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.863766066 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.880260092 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.907337382 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.858851312 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.145242251 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.883877335 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.87424539 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.868839289 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.862571027 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.855967108 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.14477352 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.311705146 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.877964838 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.858109883 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.855667829 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.8752165 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.860518941 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.85465529 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.156482127 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.884443546 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.874834489 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.980921959 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.871628168 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.892052272 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.856856044 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.862490696 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.905070251 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.875884117 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.890835031 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.861622628 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.875044637 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.877239895 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.856523125 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.870426239 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.87209255 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.857245967 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.867610297 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.858214417 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.904659102 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.875192037 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.873316293 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.880860945 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.98289549 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.856663777 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.147012463 seconds)
done (took 291.92627585 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.935677711 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.857163169 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.975514736 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.85786815 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.945354045 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.935231349 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.858263132 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.859126259 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.859036938 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.353847109 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.858205534 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.866413465 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.857402137 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.85835762 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.92869261 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.858956053 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.859355659 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.301436305 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.860345995 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.939843314 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.860028789 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.859772142 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.85905685 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.378315295 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.860423471 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.860061638 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.93903108 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.859602399 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.307176808 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.861702693 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.859507867 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.323285583 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.938532764 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.88610003 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.869255191 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.865641866 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.954536461 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.870885043 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.932305887 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.926776667 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.98452037 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.89201879 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.86015059 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.862458253 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.863427266 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.862009431 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.861104904 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.892614268 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.859013346 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.865826773 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.304252341 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.868922773 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.866257575 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.862270075 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.861446411 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.888414752 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.861855231 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.863197936 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.940411469 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.862194218 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.939023705 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.360889437 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.357562075 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.861892623 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.860784161 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.863021414 seconds)
  done (took 184.713251597 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.928033432 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.936363795 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.925930296 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.865932933 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.910375377 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.928716829 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.866648165 seconds)
  done (took 15.153674554 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.868868267 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.863424557 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.910758199 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.910781419 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.861254892 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.038862177 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.874031176 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.86686562 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.889806847 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.86282233 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.496368242 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.913257811 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.869310838 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.861986482 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.87432242 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.920490579 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.864385772 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.863279796 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.979723504 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.012801024 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.868562821 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.869661205 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.888701205 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.874553781 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.864266486 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.863879998 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.861348297 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.873214037 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.864120538 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.864083886 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.864550405 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.915006999 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.864338656 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.865473626 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.863419386 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.863905308 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.864240051 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.863813749 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.864431085 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.863384686 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.865199011 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.863305775 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.863463951 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.864006898 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.864875011 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.886346551 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.864446684 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.864453124 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.864147673 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.864165265 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.892629226 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.865948886 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.864036115 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.869669438 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.909358786 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.871560089 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.865099148 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.864897207 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.864793359 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.864753593 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.866006479 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.014120199 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.915747677 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.866143688 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.914820478 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.019875689 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.866641762 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.864786818 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.865154067 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.955606692 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.865105352 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.915186618 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.865680798 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.979733902 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.866089313 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.04500928 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.888993017 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.870354602 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.870120133 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.864198187 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.873198312 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.866569492 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.867412521 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.873622639 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.870730063 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.866192108 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.866328579 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.867882681 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.874077185 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.865946815 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.913895731 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.866632208 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.867346731 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.007203403 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.867515158 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.98203524 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.894504464 seconds)
  done (took 205.451392044 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.874273342 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.87489137 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.868627634 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.883227002 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.868453697 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.868723114 seconds)
  done (took 13.035573231 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.871151788 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.872274052 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.867670216 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.866887754 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.866969466 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.867597504 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.867961909 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.869811389 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.871489853 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.867138237 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.868302631 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.868833195 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.868272693 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.866274218 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.869120404 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.868664781 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.864532248 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.865814608 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.865939067 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865186397 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.072466423 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.864618942 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865973296 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.869278841 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.869546686 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.865182751 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.878257114 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.865671828 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.865885306 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.873208038 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.869175172 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.865632886 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.868988164 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.872782542 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.870373071 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.869758318 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.86931572 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.867578673 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.866828776 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.866215874 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.867803061 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.868665156 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.865468902 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.867439376 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.869555043 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.874688471 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.871183491 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.878605286 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.866854424 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.867811162 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.867145935 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.866767222 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.866652935 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.867812584 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.871315537 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.872063469 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.871181748 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.867600344 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.866569974 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.87049431 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.871606081 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.867193583 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.870440966 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.872407981 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.875498602 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.868600186 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.871667799 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.871485214 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.867605492 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.867591599 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.869231809 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.867461066 seconds)
  done (took 137.562211023 seconds)
done (took 557.71788012 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.036260674 seconds)
  done (took 8.833559989 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.997735348 seconds)
  done (took 8.88923867 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.458908825 seconds)
  done (took 10.256618518 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.888248102 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.880466563 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.8762421 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.86764203 seconds)
  done (took 29.31874024 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.202228021 seconds)
  done (took 9.000120313 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.881000319 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.869548721 seconds)
  done (took 15.624214868 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.891342311 seconds)
  done (took 8.689092763 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.235803173 seconds)
  done (took 9.04244461 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.88809292 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.903780555 seconds)
  done (took 15.611535777 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.871322069 seconds)
  done (took 8.670225904 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.09760817 seconds)
  done (took 9.981344991 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.874784865 seconds)
  done (took 8.715193637 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.876380014 seconds)
  done (took 8.674845342 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.074034853 seconds)
  done (took 9.873383247 seconds)
done (took 162.979808968 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.873589443 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.867832768 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.869195178 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.868400505 seconds)
  done (took 29.276693904 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.905037652 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.905883349 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.912774827 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.903975942 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.895101827 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.89330558 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.905481695 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.905571923 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.895498877 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.903195456 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.90450666 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.904739813 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.904642609 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.915197873 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.914795734 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.903073215 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.906055964 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.906094613 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.896316079 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.915069226 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.902994279 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.906800495 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.874258123 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.871859598 seconds)
  done (took 47.45172445 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.062231389 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.942034929 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.02574456 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.923126724 seconds)
  done (took 9.752557868 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.870686249 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.93589232 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.922534305 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.919159554 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.922704679 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.974445105 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.924624252 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.028905968 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.999304958 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.9984413 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.880721004 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.892812449 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.897631507 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.920048519 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.976916601 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.872288321 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.872432538 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.987683377 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.934115862 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.05631898 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.872204854 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.928435136 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.923549265 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.925726045 seconds)
  done (took 48.238596853 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.873883632 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.882947329 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.880391546 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.875269267 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.874098062 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.874239918 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.880847987 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.875313746 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.895379515 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.875687412 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.873369274 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.873630181 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.880399789 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.874082773 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.874574967 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.886212692 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.888369872 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.875525576 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.877824623 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.881188362 seconds)
  done (took 39.374688178 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.872684249 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.718542974 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.217391068 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.125116412 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.871540891 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.873629588 seconds)
  done (took 31.482390812 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.885081101 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.878857799 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.874257821 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.931469788 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.010421656 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.879345429 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.874179459 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.883685265 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.9174099 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.93631071 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.895085609 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.900681249 seconds)
  done (took 24.671179091 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.874366515 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.874418815 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.876748807 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.887051154 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.883699079 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.880691669 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.881690797 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.873304216 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.888247584 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.891928804 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.88093409 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.885377172 seconds)
  done (took 44.384739021 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.580863615 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948976597 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.874681142 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.747860517 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33255651 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.426432265 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.767920698 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.588351633 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.342505683 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.799969261 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077961934 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.874929934 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.957600625 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.876832933 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146285822 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.258358149 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071304748 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119018405 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.553102424 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.904490258 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.077981814 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099221749 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.165102584 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876173079 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876949882 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.016839686 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.314457682 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.628338747 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.910602995 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.195153589 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117071087 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.829954558 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932276035 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.878941419 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.888440641 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876945072 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881183737 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14888287 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.022740444 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008803788 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951184675 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12430869 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881792971 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.29415284 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.580009277 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.181187651 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.991638232 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876638123 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87916315 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876298465 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.803174786 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9588196 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.87898296 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882101349 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.577009412 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875989648 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951597957 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.878311704 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080238045 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.684605492 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.566206608 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.879415352 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880093443 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453067115 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.979951511 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.993035573 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.660457932 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26308193 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.294704424 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.974513995 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.878829601 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879504249 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.019670326 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842311552 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.598127497 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916011372 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013662986 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.89528888 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.518789542 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182124536 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.306472088 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.438345918 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798464502 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161972722 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.656938469 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.857872686 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094598484 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.710293837 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.805180116 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099434281 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913336965 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882416287 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.142836386 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.654741835 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989370396 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.893168459 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314057537 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896158116 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.884875985 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880929262 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.093875562 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280418374 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909181844 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999034434 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897251919 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.962919742 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806221879 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.893093161 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.880549875 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.783092157 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.885299152 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823663463 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.92530138 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.559718385 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.918160703 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.819546931 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883643113 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.981008716 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921084713 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.83818458 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135213695 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.187060244 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.562524857 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852063301 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.012261487 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.278330188 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108503183 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.886168588 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.096452641 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407744212 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.319014484 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.930621711 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171046471 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.940292904 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173875622 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307821034 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958042826 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.67188894 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.509038404 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.096281005 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895596848 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.881727231 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.884602658 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887661157 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817516261 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.527781996 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.263734524 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.052106444 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.096252947 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.219535467 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.86288551 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.844088045 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188383779 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019266431 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.883795781 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.538288534 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.298390006 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.693138555 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.909858674 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.023805857 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.056737291 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.842345478 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896771806 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959578559 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899517201 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.894093062 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.258901857 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.248555019 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.884391611 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.884851097 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.831272762 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891189948 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.886256301 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.415471547 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.849475494 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.890888152 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.895282179 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.758427795 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957984668 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.886852411 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.887606419 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.420103127 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.389931346 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.889022956 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.548821622 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.029626233 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963002138 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157868954 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.253697305 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016028395 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.585398044 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.322193322 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.001792608 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.586769228 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812016332 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.885042619 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.825038015 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887748948 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887374616 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889566795 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.074389234 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.162213153 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185370598 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.349957417 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954197427 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089495274 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.613908191 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841370106 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.887703542 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890699793 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.889675821 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886362384 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.395746661 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.180222058 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.991354003 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916220058 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.891236514 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015632805 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.897586332 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.813091158 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.887606717 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888847317 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319413742 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913878181 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.833228816 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.202057448 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.784464965 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00608275 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935237933 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.898819461 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892115396 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.611701458 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.933508283 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814105939 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322778039 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920511567 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.656448591 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377555331 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.474778929 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198752229 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210471821 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.219504639 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.959231385 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.103212211 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.973821089 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.944291385 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.976884152 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826785542 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.81627539 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.546073268 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225062552 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157895902 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900692319 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107363696 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.609778329 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119692102 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919999972 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.565788677 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195382646 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867055968 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907115154 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.228286273 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995150557 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971829874 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89350129 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.841938623 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229653982 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932607638 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.592618598 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905934895 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.243587547 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.319257961 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.104178364 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.26914929 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100516426 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895511944 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246349729 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.087200276 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.927889664 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.897018071 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.878936879 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.107295153 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469510115 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.753092639 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898235739 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.042352281 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185626431 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.797110093 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.894091165 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.03813584 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147907321 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891227302 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.250512765 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266202829 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.995822066 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950898765 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118406685 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.580325654 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195258581 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.445910046 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.374791548 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898281959 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.820183746 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.594747519 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.094663767 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.893362764 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.856890206 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111641924 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128812732 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575496889 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114231868 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136425832 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.903674541 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.164847952 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964834217 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.990156573 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.207260233 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.332502826 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.141089169 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12074821 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432886934 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.112612208 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.354063483 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.060006473 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.89496208 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097432452 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111015367 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.108449892 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.279158008 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066642252 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.604423921 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.900256136 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.101943964 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204638271 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954505046 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.282882138 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.066396924 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.979150503 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90052711 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959336292 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.899555655 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903249965 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.303833342 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.423909426 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.90890813 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972648705 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.002501974 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.399156354 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.898795334 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.901085083 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171003793 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259891974 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.230802349 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879120037 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896094944 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900700217 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025018433 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.821781514 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901813497 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166376607 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.898998821 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305122413 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.044157694 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913371459 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.212713915 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.287691044 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.571920993 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.858360784 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901802458 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119523823 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208893733 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.074045371 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.008095307 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168540102 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.314078998 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.931243116 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.271917148 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141899996 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900337275 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.771778125 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.899621339 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026834316 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.100135779 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174040504 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.40426375 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.672517936 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.164691115 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.766341551 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.901758334 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.621870292 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170199948 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.17039502 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.951308921 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962103389 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903281846 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322113459 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.622005329 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029942468 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.762909226 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824712025 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.908173937 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.231171205 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.139267013 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.607863829 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.902071306 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176628312 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201576426 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175231446 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.950109252 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.763186293 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114451802 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902322232 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.906869147 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.162119805 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121769387 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145078538 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902302513 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.900651347 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.706062479 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825489005 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.901549104 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954125494 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126212061 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921290139 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.415218617 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.600469493 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184288663 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948674072 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903252418 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172849926 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.432184867 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.452456406 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905311393 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120451982 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.897169717 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198322365 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.903610582 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.327764695 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200652127 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.901982446 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431819468 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.143606383 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168260369 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834747622 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909676889 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114322157 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.760078736 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900200953 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.880669852 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32555185 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12451434 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.63066561 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448477381 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.894273365 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.89672074 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.327043254 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92017909 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328632543 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916605099 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907167797 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.409427209 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.599415187 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.178509839 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.129493959 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.416947422 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.467990203 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.886379067 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.883687864 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886176336 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.803111934 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.067647065 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.072509243 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171375942 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919203476 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317039745 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916450921 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.269589743 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020987086 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.057088753 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936859895 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.422182176 seconds)
  done (took 1668.443409368 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903477045 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.937611883 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.937995229 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.906538682 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.91239037 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.927787785 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.99141132 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.915410764 seconds)
  done (took 57.266011165 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.903287589 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.914666246 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.903885365 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.899518752 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.90473888 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.901073434 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.057106771 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.924410988 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.905465752 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.903745898 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.901243482 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.899929342 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.185923789 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.916662113 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.899776647 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.901184663 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.905010716 seconds)
  done (took 74.660420241 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.900507543 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.135852177 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.959905646 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.901003584 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.846370768 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.908507716 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.93465616 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.927712974 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.90539666 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.136748664 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.203154324 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.930113716 seconds)
  done (took 90.519875482 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.908909298 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.902375045 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.903279769 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.902563529 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.90411193 seconds)
  done (took 11.353739752 seconds)
done (took 2178.711618853 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.13438271 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.961052177 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.998685732 seconds)
  done (took 5.789463759 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.050159262 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.093441207 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.207289274 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.967089555 seconds)
  done (took 10.154023108 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.203374539 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.269418867 seconds)
  done (took 6.304028488 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.252795611 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.92161437 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.312601751 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.903777964 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.904473225 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.906276186 seconds)
  done (took 22.550199186 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.90427259 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.904839902 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.904290828 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.902026403 seconds)
  done (took 9.447041016 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.90315938 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.600826684 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.899640553 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.909173226 seconds)
  done (took 21.144736607 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.046949413 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.014618344 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.04030134 seconds)
  done (took 7.927900735 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.038416811 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.733402108 seconds)
  done (took 6.598498785 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.041841972 seconds)
  done (took 3.870036964 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.925550487 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.167575623 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.422730981 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.442844076 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.558916467 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.668099307 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.199224672 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.123561279 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.317640134 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.32896522 seconds)
  done (took 24.982111656 seconds)
done (took 134.219866295 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.235110868 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.908566174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.09420241 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.250142908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.115084821 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.09490594 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.115777322 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.235503101 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.915614845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.902602634 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.244288162 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.10905159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.054322934 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.892852925 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.059463948 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893354893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.095854126 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.228182516 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.912888627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.128558031 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.100893048 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.848710631 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.075692792 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.854093631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.089485594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.016658051 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.41302247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.876764291 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.053259584 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.418625099 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.017306074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.260489969 seconds)
  done (took 168.33738739 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.862069366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.862131186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.862746833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.858870765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.405264851 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.856205343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.854840826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.85343333 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.318258448 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.298955966 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.851197623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.387124071 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.848928154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.84748404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.84562985 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.845312886 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.489216044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.847036409 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.843505455 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.841354486 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.84182598 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.21723156 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.840350882 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.235426429 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.463876111 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.840484442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.836481472 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.835574436 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.837934829 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.835001405 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.835386163 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.833703258 seconds)
  done (took 208.930391922 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.817388167 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.831269679 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.830175293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.831678249 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.830599024 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.831622698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.830296885 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.828018103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.647119941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.63436285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.824356086 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.827382532 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.825065695 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.825674765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.831162912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.826222539 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.831259873 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.831995003 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.82549765 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.827199774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.828018023 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.486223479 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.827596718 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.51030866 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.822853037 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.825379614 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.822272298 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.822606322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.821907217 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.820024497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.81719384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.817578354 seconds)
  done (took 219.177252102 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.058224213 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.814411559 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.816533519 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.804903966 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.815768034 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.81563517 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.789685112 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.06031346 seconds)
  done (took 18.723965661 seconds)
done (took 617.005071638 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.196037542 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.017463897 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.985576711 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.832965358 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.086675583 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.87716309 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.830643186 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.893345116 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.650573726 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.902963964 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.460939686 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.849212797 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.555815388 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.854214398 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.955222368 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.883809719 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.374319637 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.467729906 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.964293185 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.899582197 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.002622909 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.74099642 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.902130277 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.694019728 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.464750722 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.784467782 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.838976899 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.375822787 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.831179505 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.97969275 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.494589478 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.097708666 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.833151957 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.819857003 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.874089756 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.849528549 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.02953411 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.827587172 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.940953001 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.527068443 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.888341285 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.542467988 seconds)
  done (took 99.623709333 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.809330544 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.801986618 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.801535064 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.801920949 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.811929055 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.802061362 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.802736277 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.802267309 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.801947232 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.80275511 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.802592273 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.811393698 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.802831101 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.813226216 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.802145219 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.802808555 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.802626576 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.812271964 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.803281491 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.802540742 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.802815625 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.804049981 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.798508847 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.803165892 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.804063942 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.803163878 seconds)
  done (took 48.655588038 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.79717463 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.964866771 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.034776292 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.815092733 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.799275092 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.802902534 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.81568804 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.80226748 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.800659273 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.800230448 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.890014415 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.803417168 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.821071757 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.037463118 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.81277718 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.798588737 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.799311531 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.800008042 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.974663268 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.813520534 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.817259815 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.802225077 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.817242659 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.811723113 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.801858742 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.800654927 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.803381384 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.243326024 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.806028489 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.892832208 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.841280781 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.819757555 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.181698324 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.045918011 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.851361451 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.808048602 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.799381651 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.896406108 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.804943003 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.801087281 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.816698919 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.804170497 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.040028313 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.323552383 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.811944715 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.799603973 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.25088829 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.903576576 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.839708316 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.809061128 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.044834284 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.813973654 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.8009657 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.801994954 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.837489978 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.811071069 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.801254668 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.110494316 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.811568203 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.817956585 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.803409701 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.802058339 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.980590036 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.808125761 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.968865114 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.809146561 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.809536216 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.802663888 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.042756208 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.814308682 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.346384154 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.813508227 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.801728668 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.895141536 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.973615423 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.277922249 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.811997481 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.981355679 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.198545047 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.822374208 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.809261807 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.232389508 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.827619174 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.808503022 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.803977216 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.804699193 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.803061183 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.846569938 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.817752027 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.249992321 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.335558255 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.125866386 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.826269973 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.813013339 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.804726048 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.111302623 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.808616472 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.802840896 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.032295193 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.348486607 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.814491678 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.811126231 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.320789817 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.815863699 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.820933716 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.810721724 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.049227161 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.816231754 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.84664938 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.803181628 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.812075341 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.806712093 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.821580339 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.816150053 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.803188266 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.309246368 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.910710598 seconds)
  done (took 223.98132388 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.803335453 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.803377486 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.803638488 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.802991267 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.802584447 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.804594254 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.802869126 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.802573604 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.804448473 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.80378276 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.8036183 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.804986692 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.804884768 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.803962989 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.338760441 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.807735031 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.408087102 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.806552387 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.806078349 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.807117418 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.486158604 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.81206987 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.806356928 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.806441901 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.810445417 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.806685325 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.811967677 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.860633307 seconds)
  done (took 166.16460027 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.807287119 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.988551007 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.825803912 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.836994273 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.814664588 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.807157081 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.953161349 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.832844199 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.812449377 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.807777883 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.808741292 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.867555098 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.82258134 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.907497879 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.842534245 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.916384775 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.915511629 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.817395156 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.808786213 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.810400106 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.837553419 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.818546884 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.868814268 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.934362745 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.82517378 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.918724845 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.827117196 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.808101358 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.808169692 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.917178396 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.823548313 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.865646536 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.837061231 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.824895208 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.920516349 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.920656758 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.910365569 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.910782277 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.81208653 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.802670298 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.801363133 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.803063063 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.913399217 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.821214298 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.803145395 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.915031935 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.8191991 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.79972582 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.798859732 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.797787663 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.812103359 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.814143418 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.859625484 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.924867145 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.833651002 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.820484659 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.894631745 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.92642729 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.795274247 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.892779774 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.804132371 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.906944454 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.81387094 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.795842265 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.796773435 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.79808783 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.824237682 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.900017747 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.899650262 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.800676221 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.891560013 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.831704823 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.797732076 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.790744094 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.790426822 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.903749348 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.90787847 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.829438675 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.824617495 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.818224422 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.797631214 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.787906938 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.79377733 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.804746362 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.793505365 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.900378232 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.907203419 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.795126533 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.786866737 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.787040368 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.786611091 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.810810818 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.908068683 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.825635919 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.89562763 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.852930884 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.861718951 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.803079751 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.800156078 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.791111882 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.850033443 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.8038835 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.799172484 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.095832348 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.846563908 seconds)
  done (took 195.397776487 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.167747258 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.834381622 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.843842128 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.105717206 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.178044968 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.731777128 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.83443021 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.836545929 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.869078991 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.060759106 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.910833091 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.853368903 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.821695808 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.810284969 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.832874554 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.868609742 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.843746424 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.189809677 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.053439025 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.316333622 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.828179376 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.119555678 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.166967876 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.426786722 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.884136074 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.235053446 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.41975235 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.003533818 seconds)
  done (took 60.773243279 seconds)
done (took 796.344114848 seconds)
SAVING RESULT...
DONE!
