cset: moving following pidspec: 22287
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.145679306 seconds)
loading group "string"... done (took 0.53050595 seconds)
loading group "linalg"... done (took 9.467398899 seconds)
loading group "parallel"... done (took 0.174787917 seconds)
loading group "find"... done (took 5.736515268 seconds)
loading group "tuple"... done (took 2.121024987 seconds)
loading group "dates"... done (took 1.420487422 seconds)
loading group "micro"... done (took 0.196356739 seconds)
loading group "io"... done (took 0.537874518 seconds)
loading group "scalar"... done (took 59.07023344 seconds)
loading group "sparse"... done (took 14.789287922 seconds)
loading group "broadcast"... done (took 1.41260742 seconds)
loading group "union"... done (took 11.403203031 seconds)
loading group "simd"... done (took 3.825216996 seconds)
loading group "random"... done (took 14.017054976 seconds)
loading group "problem"... done (took 2.300674853 seconds)
loading group "array"... done (took 25.168477494 seconds)
loading group "misc"... done (took 1.193414929 seconds)
loading group "sort"... done (took 3.708216251 seconds)
loading group "collection"... done (took 22.54648654 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.731254024 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.149757218 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199589468 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.211719433 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.285053966 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.169087733 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159726124 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.17216601 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.64355417 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213147431 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14031525 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.44994491 seconds)
done (took 6.305872354 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.270975068 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.252506225 seconds)
    (2/2) benchmarking "String"...
    done (took 0.194678764 seconds)
  done (took 1.169405116 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080531954 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.163683964 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.11391898 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.098658197 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098592643 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114471085 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.098560144 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.114106356 seconds)
  done (took 1.5310083 seconds)
done (took 3.780428458 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.544554464 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.899634922 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.539985437 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.189496866 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.325457591 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.315429684 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.272470675 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.228345576 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.096693706 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088412229 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.201416201 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.413603889 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.398888096 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.982473975 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069456243 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.096304133 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.160839428 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.827144578 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081242224 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110113617 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.547244197 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.22205203 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119489401 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.109451408 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.189631717 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140023667 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.145723275 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111554259 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.67574093 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.137449448 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.21855324 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.086745298 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.143192492 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.167719813 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.215912142 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.11412558 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680622112 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205345629 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099109701 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.1053214 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.713577418 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.121241339 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.207840309 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109377122 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068833632 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.162691268 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117522127 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.081342726 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.096465943 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.105721397 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16656366 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.44337225 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108586229 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.196804217 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095501952 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.70243578 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101799498 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27688689 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128892646 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096876499 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09394789 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.091561349 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.164799175 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095631663 seconds)
  done (took 20.592004361 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.17252874 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.192603643 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.081218288 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.162457039 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.124230198 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102133862 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087634206 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082071473 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.131643918 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181960226 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140124689 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.195131471 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078464782 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.09183598 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.175519289 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.235841515 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126980923 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10632468 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089534005 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111704144 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125888267 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115761263 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093630959 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092357219 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17455026 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209384349 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113328863 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127893756 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095086639 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098985817 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14682425 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.149830371 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09744179 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09247876 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.19436496 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108718874 seconds)
  done (took 5.453109493 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.196739144 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.253365143 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125567944 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.254588734 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.201588778 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.135054933 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.202922331 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.179197302 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.306972306 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.25155491 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166773624 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134282449 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101854432 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082688328 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.13758549 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084027391 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.08186424 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.376240706 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149553562 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.197718818 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.193074957 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117158004 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084050644 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380519996 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088488899 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.109377242 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100622351 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065975674 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.234236846 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.119305686 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.051896288 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109191872 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100633847 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136162896 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196271939 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.144365582 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127460186 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116834653 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.0926046 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.231421742 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107397264 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.183370236 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083031934 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.140361099 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120053915 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137874388 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.114353268 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.115511854 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22778837 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.092074905 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.135778132 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.056201561 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19981186 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.167699195 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.088043682 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.300112825 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.134551033 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106544003 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.116188188 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.798315785 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132560493 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086170538 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081827321 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11920675 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083795442 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.353415108 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114067366 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.311695874 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.101577228 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.146058689 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119549553 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.124953532 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092886619 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090624964 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.132399866 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.090511193 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100611749 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09174164 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084132489 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.112983105 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117019593 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105233596 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085773976 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151856134 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.118509558 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113626983 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127523693 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096022766 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089253364 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134476231 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08738364 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.111401761 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.17424526 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.124575536 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116923266 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121367443 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.150503225 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093283961 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.278991629 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086330789 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127278947 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106850253 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132268201 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106913983 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083924245 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106375661 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.088193276 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082846996 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.103231569 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151397347 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092143604 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.102100484 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.093808167 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.087303344 seconds)
  done (took 29.237252773 seconds)
done (took 56.00705103 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.448933013 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086427892 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085424408 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108417245 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087238616 seconds)
  done (took 1.62574834 seconds)
done (took 2.410224222 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.324537658 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200162391 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104567842 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191597172 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087989903 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198572894 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184786598 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101815277 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207314904 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087179975 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192037613 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089502189 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108490618 seconds)
  done (took 2.886918049 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.107693447 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110973243 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105296156 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.126522654 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090037985 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104760759 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123741986 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113061295 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10395054 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118077924 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090202031 seconds)
  done (took 1.97303497 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10531253 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108066726 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095617542 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122059118 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090105604 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102552552 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121782666 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111430286 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102435066 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118093486 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089922105 seconds)
  done (took 1.950836869 seconds)
done (took 7.591789097 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.239766205 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.013486459 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.193527911 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.247543901 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.359675973 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.302840057 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.617324961 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.204826282 seconds)
  done (took 16.097577461 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.215755337 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.117499531 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101256634 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.094039986 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.11587203 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096449432 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100948131 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.120950275 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09945095 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095909195 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094091853 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.11409885 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095913681 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100309311 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.116728161 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100568332 seconds)
  done (took 2.628668414 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.149870079 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.146831068 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102241642 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.104536623 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.116922998 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101513961 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104060492 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.118694996 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097172385 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097678198 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.123560652 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101280605 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098951992 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.114064947 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102788131 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121953874 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.116088782 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102974045 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120677349 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.121192968 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104608942 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099997359 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.11963494 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104245516 seconds)
  done (took 3.566404379 seconds)
done (took 23.076228739 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154185422 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108314081 seconds)
  done (took 1.050248953 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.173519018 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.191730249 seconds)
  done (took 1.158894938 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.116417464 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094634797 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142244052 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107579538 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094279209 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.110919877 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117988442 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110700984 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092350014 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092994031 seconds)
  done (took 1.876541812 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09885271 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09932062 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126344491 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.176502159 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.123527232 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098114366 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09927957 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.118127698 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101738614 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094112668 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11950045 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.234735249 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.0991677 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.134122677 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099751212 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.119348357 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103908035 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100131894 seconds)
  done (took 2.944052922 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.096845543 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.0973565 seconds)
  done (took 0.992514071 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097855541 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094643534 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09853048 seconds)
    (4/7) benchmarking "year"...
    done (took 0.116260589 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096300698 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093687553 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.111880285 seconds)
  done (took 1.507587476 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.545889469 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.253632568 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.382941246 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075890609 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128804582 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.343862176 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.108780522 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076088833 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096298126 seconds)
  done (took 2.850134578 seconds)
done (took 13.175868472 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095334854 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.251702973 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.6507172 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11381898 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094096752 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.16823421 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.325697938 seconds)
done (took 2.504713585 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353415248 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.168661185 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084427153 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093882339 seconds)
  done (took 1.497510073 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08635411 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104248394 seconds)
  done (took 0.998188172 seconds)
done (took 3.304845819 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092739845 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.127951151 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.114321009 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09376425 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.094711741 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.093106113 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.114072953 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09389528 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092991393 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.113626609 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.093253449 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.093736281 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091976254 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.110163552 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093923148 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092321303 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111044432 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093307736 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092722951 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092588096 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111638937 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095314944 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092367528 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.109933209 seconds)
  done (took 3.249600444 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.116026058 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095715532 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.115306844 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098660652 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.097269114 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.115690237 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098069004 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095000224 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.115865192 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096812006 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100328162 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.115618544 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096558574 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097805433 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114738414 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100592339 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09924076 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094898304 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116051362 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100820139 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096255476 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113683157 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099756535 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097102906 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.116659882 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098407087 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095146417 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.114744627 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099433022 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097541235 seconds)
  done (took 3.915899639 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.103124461 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.091291207 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093609117 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.120938141 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092792513 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.094918846 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.109290914 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096495132 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095769683 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093027748 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.113688634 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094183821 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093437659 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.112890305 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096293613 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098053166 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120517481 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093946926 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09352899 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094024308 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.116152654 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094836022 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093695208 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.113669066 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094806183 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.09198072 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094251059 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.114298644 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095052685 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093050467 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.115441035 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099508613 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094887427 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.123695387 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099356284 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094957188 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.118282115 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093135112 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095824494 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090118314 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.110374109 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096405047 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093825774 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.119555837 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094703684 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094586037 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.094198866 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.115022604 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.0962485 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096819704 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.110305745 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095959792 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096746846 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.113618121 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098449025 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092066484 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094512098 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.110292682 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095783914 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.094504098 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.109051743 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.092615575 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100077063 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094392487 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.128441367 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101806342 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094119211 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.114708109 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096069587 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099197578 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.116579491 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106907546 seconds)
  done (took 8.11324179 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.120389586 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10339294 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.115211894 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098276069 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095034536 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094967227 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.12006215 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095243534 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095314633 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12023985 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096938974 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095955744 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115552381 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097393434 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094685398 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.118050499 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10266091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096017342 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093382732 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114968675 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096441023 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099062223 seconds)
  done (took 3.094445697 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.244941464 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103492258 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138167163 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125900071 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112737852 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.127314148 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102318986 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100859928 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118952729 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106445596 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104052076 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119468672 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113908589 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122781064 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105848707 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105316563 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119847336 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107269985 seconds)
  done (took 2.999060115 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10989217 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09735763 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.161814786 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099484338 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098262762 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.118380751 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103160717 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117004657 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.118692641 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097685683 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.103017418 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116552011 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098487809 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096879152 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116445186 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099429441 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098146927 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115808987 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107312563 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103023901 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.12199112 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10596323 seconds)
  done (took 3.223345408 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111615392 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097496308 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.134430512 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102279899 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097519521 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.116495526 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104181577 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098085314 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.125864327 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097195656 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09914031 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095621336 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.133080949 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09891265 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103025279 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1172133 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097883049 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098474916 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116137955 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097759007 seconds)
  done (took 2.964661024 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.202998842 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133074598 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113892805 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120490653 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133213979 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113341957 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.141428222 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114974254 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112336334 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141970951 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116696146 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112408839 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.141192716 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118321695 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131227123 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123388402 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.141148427 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123841312 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113925243 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132837916 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12676413 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114489844 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.142067225 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113811195 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130622197 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115220271 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109563346 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136033515 seconds)
  done (took 4.394682909 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097008606 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097452943 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094885341 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.115553692 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096511945 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096096338 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095025154 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.116901313 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095381317 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095356907 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.117067053 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097765216 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096647833 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.094800585 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116787555 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096902465 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096490707 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.115969919 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097236986 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096975548 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095798092 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116899893 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096965101 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09502392 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115680261 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097832454 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096771062 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095248941 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116673477 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098276277 seconds)
  done (took 3.872459587 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.110752691 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106381892 seconds)
  done (took 1.04203249 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.103890855 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110158595 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.09642778 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.115749632 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105114871 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096981464 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.125642055 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10400081 seconds)
  done (took 1.686126287 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.173932606 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.195713277 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097519439 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.126056909 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.173999658 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.185692854 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15301532 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100687143 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092461476 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085580013 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.186840843 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.10516935 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093786268 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090483993 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092077859 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120919151 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093305219 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100960885 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.12167692 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09549308 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096461356 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11716079 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095704747 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.122206548 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.090761334 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095974602 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11675457 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106579728 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09007205 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.114784371 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.093026707 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094111965 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095779135 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.118370683 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094025828 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.197777125 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105375509 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09392683 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115820827 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098858274 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124188138 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.114975128 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.094942321 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092345258 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117998818 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100748894 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097157039 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.11612532 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.089860974 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090572128 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.115175831 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091235204 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093441053 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115519927 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.100576867 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100244652 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.11725765 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092824036 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088993964 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.110052574 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093052197 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089191295 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11411941 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09664094 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094315905 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.113065994 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094167666 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093514872 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094914094 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.114911644 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093649375 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106475048 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.116303444 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099640269 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099843212 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.11598767 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094924455 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098630168 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112770567 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095693221 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096286853 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141953789 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095536914 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088113574 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.110249805 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101388291 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.093851659 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.1172354 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087431542 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101160926 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.116514383 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095940738 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086744782 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110405784 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090879339 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096696421 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.106918675 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096163829 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092723479 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.096800038 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118814655 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093053205 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093956131 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119596604 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099960861 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09274901 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.180185636 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089560568 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109882337 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096409399 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097751383 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.109414298 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093939986 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091481187 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11106701 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090731444 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097314342 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113519629 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096993885 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098990877 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094768168 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115646857 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095417141 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092424881 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110335254 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097574389 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100936424 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115787071 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096094012 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094615558 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.115973639 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095399019 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097017039 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110236271 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099728622 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09012644 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.113209586 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095444323 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099415529 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093092796 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.114264691 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09371702 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094421317 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.114441186 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097260963 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093744208 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.110420164 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086407848 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094545164 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110338349 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097895662 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101719964 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.110406193 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097413445 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089014021 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122342241 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.094744165 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100258402 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115615985 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099995374 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099102359 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.106188647 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092758846 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096787745 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114435637 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.092237976 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095185009 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092918753 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.120791454 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097882976 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097027665 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106699119 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091919522 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097864099 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.115344949 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09869443 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089566596 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151237284 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106243332 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098300614 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113826409 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096472197 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097803494 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.113733332 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099480893 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099658059 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.0987985 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113082582 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092846934 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099325873 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110971828 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098143577 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09125323 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115252084 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089803243 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09878717 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.1063228 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099804442 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095598466 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.118634895 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100304067 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095830326 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11323076 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113819822 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091612086 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098015593 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.108497984 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098526491 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103173925 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120301803 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10082482 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094318746 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112507997 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096470674 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102151562 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116150891 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095532047 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095470738 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.107766656 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.091313504 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100553713 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.117616527 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091227469 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09378526 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098205109 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116151955 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093229439 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086300398 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.119393757 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098971873 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090169984 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115695281 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091568485 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091984043 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121831123 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088163487 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089751886 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116489502 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.098608514 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093666198 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.113018695 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097071918 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099366848 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.117106519 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09873689 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09187028 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101142538 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112432794 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09409088 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090514832 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.118026476 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088649183 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095357663 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.114007773 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093044946 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089834576 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117949395 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101983406 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098333584 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112219355 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099422844 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099338387 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.120831958 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093772861 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099779159 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089519046 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.109071213 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091366478 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086143156 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.116576303 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092198862 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099026461 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.113052151 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093888853 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099453627 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117181359 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.093743621 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099530184 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125507775 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088950493 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087363721 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111735554 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095236389 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091079225 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.111803413 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096965821 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095257767 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.118052014 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098116757 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090265903 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.115084981 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.102276743 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090542586 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.09974347 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.119957498 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100382579 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089932707 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.119387857 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092558036 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097274501 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109578131 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094312125 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093235672 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113725356 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092119471 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092557243 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.110940986 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088657825 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090203293 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.120825404 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094101164 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097543661 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113090066 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094104468 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091896307 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109799298 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101991477 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093113415 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099880736 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.115016375 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088087723 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088078596 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121048094 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095799116 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100131302 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110761566 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099368616 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101536255 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.117793231 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096054775 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104396278 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102431782 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.124226842 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100176086 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088028087 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114347336 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099415435 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094105218 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118938809 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097268521 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08918932 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117432766 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101010614 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095465925 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113876093 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089108119 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095211988 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.119842282 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098848943 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099736546 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096503893 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11820053 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090646117 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097488178 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120893978 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096522899 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100185914 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115395456 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100785599 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092488028 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.120290318 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09702221 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089135001 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.108801953 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094596626 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101069089 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089465523 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.120557325 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099754977 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092074607 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.116111845 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100566969 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091769662 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118488562 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100570774 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092457458 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125651835 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097786941 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093091376 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.119436994 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102506361 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088795042 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093615945 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1147574 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102582678 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092460951 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.122032077 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096559646 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100236364 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.119421189 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100849692 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.09995707 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.12238283 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090249747 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10188854 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118564599 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099713774 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092941412 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115188178 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.093099793 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095114635 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101075213 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.114935352 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10360337 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101820385 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.115716759 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093526831 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100150879 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115442287 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10302715 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093091284 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117904224 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090464702 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097170558 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.116281175 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103742676 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092325772 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.109516133 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103330627 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099958802 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098915489 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.120599053 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10194737 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087881612 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.110590625 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100007995 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092059148 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128677166 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099889428 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092689166 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114454994 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09915832 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096252747 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123112063 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091991994 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092297243 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.11796832 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098430658 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094155798 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.112802094 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101057819 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094846472 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117356278 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.095880906 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090625545 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094472925 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.125308657 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095377052 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092306304 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.114348469 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103086032 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095410628 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.113341861 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091473176 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100477367 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.1186688 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104246674 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092294785 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117359771 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094029063 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098761866 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.123869979 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095436426 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095377825 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.11499702 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102977881 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100972094 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109700517 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09552749 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106861306 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100318097 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.120278878 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09990054 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094280531 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124774637 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103635735 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098367189 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.112518011 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.092102997 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094911274 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.110031516 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100637909 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100811484 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114848685 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094606246 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100678811 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120614834 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100916363 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099984646 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090702716 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123191854 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094888695 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099167404 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.11173061 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.092126852 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099592409 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121790347 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097610403 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095775852 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117626556 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100640902 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090921108 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092892569 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.121395905 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100434316 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100916845 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11672073 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095853953 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101624321 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.128328115 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100039462 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095239402 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124120711 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103818481 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09724785 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.117131995 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101554148 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101769894 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.119546662 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104029101 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09399567 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.115152318 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104507759 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10328678 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124648857 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0964123 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090831331 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099581357 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.11785672 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091395854 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099580265 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126194913 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103412276 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095493115 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.115006019 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106309006 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100832006 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117732205 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095742967 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093910025 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.121681919 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095777 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100292942 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.11402743 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105853627 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102725251 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12296233 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107638401 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091242467 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122249099 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100458999 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105134602 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097403638 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.112739848 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092600555 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.0992363 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.124039709 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103098345 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101242316 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.120825807 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10294833 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097839274 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116273395 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095953172 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103366032 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102388088 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.12014395 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099641834 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095932537 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118356814 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099599018 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10253312 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.124676894 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098299672 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106221126 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.123599361 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096339238 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094900284 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117053909 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102095997 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097673176 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122342703 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095621498 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091699503 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102025742 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.1256062 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097968503 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104011477 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126166791 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096944788 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100135854 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.126168982 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103709109 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098569566 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.119491713 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101926932 seconds)
  done (took 62.85008714 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154399375 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105161123 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119959072 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100271327 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116289338 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122093099 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099363056 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101043959 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121704918 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109659326 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098790409 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118842601 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116730951 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142320973 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116315823 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108264672 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122015324 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102651386 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099531566 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122351025 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11486631 seconds)
  done (took 3.292847565 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.122556826 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.1120984 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131747383 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113025241 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105679603 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132495326 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109478776 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132255769 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11344862 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106747709 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136086223 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109933444 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12815288 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108516805 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107035609 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12923533 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112783272 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105650243 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132936208 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111149013 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128400928 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111083965 seconds)
  done (took 3.481601953 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.136077405 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103114745 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096428378 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121292244 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103145137 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099412655 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124144772 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101790438 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109008371 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116356417 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092729312 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096418114 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097602493 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121895295 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094001275 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099970287 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129020476 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103504587 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104874596 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.119918072 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091939906 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101188476 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100620213 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.11319111 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.340089942 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103900934 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120688272 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103502757 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090384825 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.12329315 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102128928 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093598056 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09031162 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111866653 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091918239 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10261625 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.122620455 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101300743 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099752554 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08978413 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.121026698 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10301508 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089313042 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120825737 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101464518 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093475462 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.125113623 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100828789 seconds)
  done (took 6.20242064 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.133549719 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165276132 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103012498 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137762282 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135395885 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109114571 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101656684 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136830189 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100163662 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12434324 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114212241 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112504932 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128635928 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106323408 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.127169554 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104344438 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104069902 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101950295 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129516579 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103220479 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.128370327 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105635128 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11243651 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.13398572 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105590386 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102787919 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124421896 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107070565 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110249236 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12938126 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107231315 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128280108 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.114920001 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102224134 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122605589 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104809095 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113219739 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.126320573 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105646483 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101101165 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126521433 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107045481 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105933805 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136295361 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104228544 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103963685 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124761023 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10152601 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110652527 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.126348129 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109838898 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.13446615 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105943168 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103488662 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127781517 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.113172961 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104199081 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124317981 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107761127 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112616094 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.123580792 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107108161 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113238188 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.125392756 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109458423 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133703747 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106978117 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105066921 seconds)
  done (took 8.902654162 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.140652994 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107339499 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136394173 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115079065 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106479094 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129378661 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109231579 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.128789506 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10910001 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11326102 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127675399 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.227487832 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127112653 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112424847 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128874322 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109021255 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107475258 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128841877 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107925109 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106152539 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128344511 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116001757 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105624826 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136786313 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117854628 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124605347 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108965464 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107924489 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13817934 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10840647 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117902485 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.130046515 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107521474 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136377971 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121709221 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106722081 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124394023 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107887996 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106494968 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129651035 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104878167 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11426308 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12973699 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105851255 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107486668 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131532064 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115623727 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140282488 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113191038 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112110204 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130174689 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115122724 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127972529 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108835388 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115267261 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14487939 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115603367 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137529862 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108424543 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115958372 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137475534 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122561415 seconds)
  done (took 8.408478084 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107334248 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101388338 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100919896 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122638418 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102214736 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099713562 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122637349 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101895318 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10122088 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099949136 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122343544 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102518524 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100911026 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100288557 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123179421 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101377047 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099712784 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122166532 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101803696 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100927211 seconds)
  done (took 3.03104915 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.1176747 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117849824 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124256828 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109928993 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104427643 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128802079 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105133894 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10261018 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102835996 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126596011 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110868801 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.13119749 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104581495 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108155273 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.1334032 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109692938 seconds)
  done (took 2.736612179 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.128112935 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118705778 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.212420307 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10357813 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126899271 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109945905 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102928311 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128050849 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103840471 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107412998 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129588235 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106891559 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102733603 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.125413237 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104733576 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105193605 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100815311 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128907815 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103107956 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.21846008 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106179745 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.127352001 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104928075 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106118278 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104464762 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132286558 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109696647 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103590709 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.129176626 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104712105 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103254609 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133239547 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103420321 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106725846 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.128351435 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105599779 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103450661 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125570975 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106485662 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103299071 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.126333431 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105529974 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104151469 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.127897811 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103766706 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104063469 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101545003 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131891929 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105324795 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104663157 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.127009312 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109031385 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106426773 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.13399783 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111484122 seconds)
  done (took 7.318949449 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1213319 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104440878 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.137055541 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103077907 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104144795 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103790889 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127356144 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105284293 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103581965 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124524287 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106056629 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104589608 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127312377 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10569971 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104701364 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125381889 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103671762 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105009489 seconds)
  done (took 2.921518437 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116730302 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10472706 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107289947 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125915882 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103598487 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103332823 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123650944 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103527457 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104197009 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.125248361 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105019332 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103172187 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102086364 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125181206 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103794916 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103178195 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125889278 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10364969 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103812956 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124005617 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105644714 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10243263 seconds)
  done (took 3.333280539 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.122451224 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.215705988 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108978339 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.224830495 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099786004 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.123072249 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111097499 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099890379 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139543658 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100554057 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098869107 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.121526761 seconds)
  done (took 2.472645211 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13748905 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139755147 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125585102 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104897171 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11216915 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130579419 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107917691 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107550597 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138952059 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119381364 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131120454 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117261803 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115157754 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139345709 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11196723 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134696004 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109207252 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108073348 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127804967 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123793965 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107616847 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138160042 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107768842 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13002738 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109785646 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115495905 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138938117 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119204544 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128391212 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11806035 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112600376 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13098234 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118406015 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118591926 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128419226 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117768056 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129685721 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124970185 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112794063 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138160537 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105816966 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133891377 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117666223 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113713278 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138059204 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109637073 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11313881 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131041785 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108058208 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15042798 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113971339 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116394595 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135948122 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116829656 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139919501 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130394426 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140919207 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116856422 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112956558 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142345497 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117242091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135767127 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118288645 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141770105 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114369792 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117339475 seconds)
  done (took 9.024487961 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150321504 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105119955 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131900609 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120532665 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139367872 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109990978 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109528726 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130900312 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110412272 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105596193 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173437308 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109652095 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138135475 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117896077 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109159827 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13094722 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109961148 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117235237 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128175717 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129476885 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130981238 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118638784 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116956548 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13920642 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121792163 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135674442 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110574277 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108822221 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131698086 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110550945 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113846212 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131232756 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117092892 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127209596 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118427363 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108864952 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132150832 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114994775 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108605328 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136845181 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117973018 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144504688 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110666969 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108992489 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143161944 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109168786 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108637939 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132645973 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110146846 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10515965 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142981355 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120329012 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143299755 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118066665 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130161463 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111156062 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109627794 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131078351 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110778655 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113666147 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13920489 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110343551 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152611743 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110205474 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109009355 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14025958 seconds)
  done (took 9.009082688 seconds)
done (took 172.349465309 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.184340679 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216736555 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.19960037 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157002678 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094310552 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.153969072 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129164823 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.202747791 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096262876 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095807292 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.118271209 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.098424914 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163471136 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094525922 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.120399272 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099026862 seconds)
  done (took 3.129580588 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198905433 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.33448974 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109213935 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122542651 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101483809 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099185391 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123211416 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102443304 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100185725 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130434437 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100571311 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09601948 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129584926 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096883218 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09981425 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122276473 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108640712 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099687615 seconds)
  done (took 3.196201432 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.125251947 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144874123 seconds)
  done (took 1.193264377 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13433735 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.215320968 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280623917 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171681762 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120740922 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141583909 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149728724 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135193948 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190265042 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136130846 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113060232 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097544922 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148682081 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105538809 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138820036 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099729 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127722192 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137360853 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11470858 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101946676 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146479704 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105093679 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106055802 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138564701 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17944623 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136107272 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105095853 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103413957 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12553629 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115463657 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.128542749 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117948913 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111862267 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180595421 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10340799 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177056411 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.129912246 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102149055 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113720998 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.123748873 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105247812 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103238938 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136474817 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100158 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103271043 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.13099709 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105462443 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103268997 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131763596 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107626706 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.131302523 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108131883 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.175797807 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108662358 seconds)
  done (took 7.981289796 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.868251084 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141153208 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100230231 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.019009822 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148610653 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115405858 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.864563861 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14756565 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253288333 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.890063661 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115920247 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132900159 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241015833 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257458133 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.292585757 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361079452 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.726352515 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116289274 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129599878 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163876405 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109139192 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149357415 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121534417 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.516892389 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101180357 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12388055 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111096898 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109829361 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178031409 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102151606 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129025267 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172520614 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293573713 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21076872 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123212269 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102024694 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101130204 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186238177 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272049214 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220221861 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.196429986 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099793483 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101473495 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131214951 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121424174 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098124312 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178571079 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192092187 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189249656 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107250742 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109809778 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13591085 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108118772 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179959905 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099293408 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362246008 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.386484505 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101522554 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109878547 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137934631 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269914382 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102406518 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23647677 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152558928 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218254478 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10097717 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834780323 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186006678 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101135649 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12928007 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109454273 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107250069 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129996359 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168901069 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.499133694 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111669867 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128937555 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103222418 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236063019 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102158761 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10123036 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183195085 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101667779 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134606699 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113184249 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133456596 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166272149 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271815337 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133596155 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112503742 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107992615 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138049902 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102745297 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234989365 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231948162 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177724161 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20683739 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133289027 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180180396 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163777262 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130515997 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.16578303 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.13356933 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114633638 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130112996 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227991101 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136195822 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125824095 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10816187 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111391217 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160494781 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105918286 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13367438 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165551062 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.560211073 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187128963 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098929452 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128517743 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113312496 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180544903 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109988667 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264415509 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132318412 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164196513 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132221923 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.101677857 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110330455 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180637154 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109291665 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135197317 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109436776 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132980429 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258898922 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222309856 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.135145339 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254051105 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.17711514 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130497465 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168748974 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133982648 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189467523 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11329815 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108888458 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126648696 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826270164 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115945274 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132190712 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110126196 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184182174 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12658594 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104518256 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101779685 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12274999 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820824065 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108916628 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099917445 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12668576 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108612215 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110108754 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134436226 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109123267 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180702525 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245002839 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111097695 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.133569252 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102151313 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18227029 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103241518 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103076317 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.128724006 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102485779 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110736304 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.132883557 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104648386 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190741528 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17666796 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234319854 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.656303026 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102904081 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102520535 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266774133 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103699944 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327372972 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13150604 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23883754 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160662851 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123037416 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362526682 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186682067 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184555218 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128767546 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.16869036 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122581889 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11226207 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179823502 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102548922 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110097992 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177744749 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136919432 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.114315596 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.281406288 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102137868 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251858938 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.121546723 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167041346 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125715806 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109609212 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327746004 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101871622 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141153564 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179617797 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109006102 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103529767 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.626824995 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103324006 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139360285 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107895549 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234320565 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185207169 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133358348 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113710489 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111222714 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180440379 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233198379 seconds)
  done (took 48.062495819 seconds)
done (took 64.477117172 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273085012 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178689423 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.282165349 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180555133 seconds)
  done (took 1.933364464 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.283449905 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160049879 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.257524258 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099659416 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.262937698 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09737514 seconds)
  done (took 2.107763525 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.184490074 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170830196 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152894852 seconds)
  done (took 1.45889519 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206706465 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.217284131 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.327706553 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.232427476 seconds)
  done (took 2.022968281 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.302736504 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118360677 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12483803 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.238451578 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254469991 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209264976 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123120386 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177530463 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129757941 seconds)
  done (took 2.677294918 seconds)
done (took 11.148458219 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.283761887 seconds)
    (2/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.407036472 seconds)
    (3/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.41295535 seconds)
    (4/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.21346147 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.240985078 seconds)
    (6/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.319263525 seconds)
    (7/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.24523843 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.245296728 seconds)
    (9/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.164129295 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.111092866 seconds)
    (11/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.21151541 seconds)
    (12/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.259921928 seconds)
    (13/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.218638463 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11485861 seconds)
    (15/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.403522868 seconds)
    (16/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.267583507 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.257007748 seconds)
    (18/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.184072241 seconds)
    (19/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.236622633 seconds)
    (20/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.264176646 seconds)
    (21/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174851386 seconds)
    (22/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.136788184 seconds)
    (23/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.129702596 seconds)
    (24/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116311847 seconds)
    (25/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.201680523 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130249732 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.236586991 seconds)
    (28/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.181365847 seconds)
    (29/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081374743 seconds)
    (30/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.086245095 seconds)
    (31/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.218862533 seconds)
    (32/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121067971 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.243558358 seconds)
    (34/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.083670283 seconds)
    (35/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.290672653 seconds)
    (36/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.087440579 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.12353169 seconds)
    (38/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158808734 seconds)
    (39/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.229054008 seconds)
    (40/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.131768711 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079436267 seconds)
    (42/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128266011 seconds)
    (43/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.077613463 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.232781013 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112600978 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109162461 seconds)
    (47/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.313486293 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.144924649 seconds)
    (49/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.294830599 seconds)
    (50/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.109865058 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104242324 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084487605 seconds)
    (53/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.096449798 seconds)
    (54/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.173705806 seconds)
    (55/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.131726219 seconds)
    (56/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110170671 seconds)
    (57/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.173408884 seconds)
    (58/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.135222719 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120226849 seconds)
    (60/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.202148113 seconds)
    (61/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.186139304 seconds)
    (62/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111341754 seconds)
    (63/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.132107011 seconds)
    (64/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104421351 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122729444 seconds)
    (66/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.10264897 seconds)
    (67/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.178512985 seconds)
    (68/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.136650529 seconds)
    (69/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.106883084 seconds)
    (70/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.081009151 seconds)
    (71/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112062013 seconds)
    (72/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109994041 seconds)
    (73/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.223340995 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105521979 seconds)
    (75/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.17450868 seconds)
    (76/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.077931566 seconds)
    (77/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110398914 seconds)
    (78/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110552358 seconds)
    (79/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.104092263 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122281747 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107030289 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130636997 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.129705624 seconds)
    (84/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079667589 seconds)
    (85/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110324455 seconds)
    (86/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.295380341 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103108789 seconds)
    (88/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.163533323 seconds)
    (89/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107340828 seconds)
    (90/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.192920117 seconds)
    (91/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.176493053 seconds)
    (92/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109773663 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09896183 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.135049538 seconds)
    (95/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.078859567 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111476559 seconds)
    (97/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084945514 seconds)
    (98/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.184820093 seconds)
    (99/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.083926031 seconds)
    (100/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080161912 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12689763 seconds)
    (102/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.161140664 seconds)
    (103/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079967939 seconds)
    (104/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.133669152 seconds)
    (105/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.082044423 seconds)
    (106/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.1786724 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10230376 seconds)
    (108/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084956032 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.127862348 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103801516 seconds)
    (111/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152464242 seconds)
    (112/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.196407129 seconds)
    (113/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080022834 seconds)
    (114/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.080773786 seconds)
    (115/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.08053331 seconds)
    (116/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.109748741 seconds)
    (117/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.149427639 seconds)
    (118/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078810921 seconds)
    (119/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100358865 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.106200924 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111098904 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.102674557 seconds)
    (123/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.173365061 seconds)
    (124/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.132831971 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084517956 seconds)
    (126/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.080913242 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077976694 seconds)
    (128/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.102237303 seconds)
    (129/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079126443 seconds)
    (130/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.084993171 seconds)
    (131/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08498484 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.146916852 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125900586 seconds)
    (134/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.101429108 seconds)
    (135/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080688263 seconds)
    (136/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.175742849 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105568313 seconds)
    (138/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.09232952 seconds)
    (139/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.13922097 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112940283 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101552054 seconds)
    (142/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.108384758 seconds)
    (143/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07900087 seconds)
    (144/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113652379 seconds)
    (145/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.237806368 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085468519 seconds)
    (147/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085015205 seconds)
    (148/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081285469 seconds)
    (149/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.165456511 seconds)
    (150/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082368357 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105279134 seconds)
    (152/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084228334 seconds)
    (153/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.102519373 seconds)
    (154/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.080036195 seconds)
    (155/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.114587726 seconds)
    (156/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.101036641 seconds)
    (157/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.107455037 seconds)
    (158/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086531346 seconds)
    (159/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.080537373 seconds)
    (160/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085111021 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104036037 seconds)
    (162/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.162023759 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086983916 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10204809 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.12831295 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.105216204 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111656371 seconds)
    (168/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085340873 seconds)
    (169/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126560436 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125714275 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103871165 seconds)
    (172/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.104922745 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111773325 seconds)
    (174/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078861537 seconds)
    (175/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110493133 seconds)
    (176/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.174202576 seconds)
    (177/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079261574 seconds)
    (178/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.086180322 seconds)
    (179/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079882136 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.128738633 seconds)
    (181/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11264257 seconds)
    (182/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108631614 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104103331 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.149109235 seconds)
    (185/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082717879 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104330085 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.101205865 seconds)
    (188/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082825944 seconds)
    (189/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.103478535 seconds)
    (190/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.085368298 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.129722056 seconds)
    (192/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079937873 seconds)
  done (took 27.429315997 seconds)
done (took 28.384090541 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.244821751 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129232482 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111812696 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110784381 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.23623459 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118386937 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152751896 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113263991 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121450339 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138088844 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10231611 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124257566 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138230371 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.20642905 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.140173812 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105117574 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102265654 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147416415 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.12720122 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127245402 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.23661556 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.130490072 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121845027 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102822797 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.236246062 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104232801 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.135765856 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112470468 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124458015 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.138277351 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.113123774 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.103395044 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.152185611 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.127791363 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103872223 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112099731 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128500549 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086478185 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111514375 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.137493464 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125137573 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112574472 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137417967 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.105247714 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113963274 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.135776505 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10450225 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.115861677 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.126663101 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11330146 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10527373 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.151750904 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112920115 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.103172159 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101647035 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129069487 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124695565 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10410995 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.149856561 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104272223 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103876227 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128372215 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115031727 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104056241 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.135670876 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104511691 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113607656 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.138015163 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112833168 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10656222 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102631151 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.136193725 seconds)
done (took 10.190387799 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.114444867 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148059991 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.237633194 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.238549736 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130967442 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146171992 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117716909 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12633039 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143714555 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122915788 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.164279582 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13693221 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.243425108 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119406967 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119058204 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141649043 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115073692 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111414623 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.240711011 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.152165088 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.128529646 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120373367 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15665353 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11985558 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107618616 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.165894535 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110070889 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.139072985 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108304959 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115743652 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.152379148 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108452956 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110453127 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.150919327 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125614257 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118037197 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.144904832 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116653079 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10819644 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.131979601 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116211187 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125813555 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131918183 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121409665 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11600528 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.147008013 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11536467 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120120766 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.133820066 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115727648 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10933347 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157701313 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120956772 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.148725943 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.121616629 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120360927 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.1452551 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.121883749 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111425698 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.145937752 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110357588 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108134617 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109369611 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155524182 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110987773 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.1447385 seconds)
  done (took 9.882673044 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.13302828 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137063565 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143022172 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119010701 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112578439 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126991516 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102552903 seconds)
  done (took 1.871581108 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.109833941 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.247571958 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219072095 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.245822061 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.244664891 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.258284564 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125578868 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.129750507 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139548838 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113990047 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.249510782 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.276728499 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113392269 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.145801939 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.250782853 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103998691 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.252855534 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104174383 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117779347 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.252622941 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146456954 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136217578 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116515033 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.130944309 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.216544064 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.131562331 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.296287146 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122124131 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113086747 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143908897 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119406874 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.209411311 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.219648541 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.145096074 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111293464 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.247933707 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.243337478 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118330212 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.261478671 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108292801 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.24654252 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117424263 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.146572339 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119373917 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118332304 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.237483967 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.14863879 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11987828 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116807966 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.256037787 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115078325 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.249585544 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114684966 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.145180972 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115309555 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120300969 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152451759 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118453123 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.256959984 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119627076 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.248874824 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.249841164 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.247329967 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250877662 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128930428 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.25015079 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.209910717 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144311001 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114141074 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119235875 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.2513525 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.14379365 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117313359 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.241945576 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122026089 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.255865839 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.253173452 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115933235 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116443765 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.15410366 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117166649 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104154453 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.242967465 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117305358 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144543456 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122041547 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118174769 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.144955935 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109248661 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152238171 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118386706 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116472196 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.147767913 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118862789 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120017911 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.253985349 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.140403578 seconds)
  done (took 17.307349922 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.112389187 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105651088 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110015702 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131138876 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106015915 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106538459 seconds)
  done (took 1.693450573 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.147571906 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118367191 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152369964 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120862502 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191826548 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.229917739 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.263968975 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138236149 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.137944969 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129642152 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.258086324 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.260287541 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.258114535 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123660932 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.26247171 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121176678 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.265499193 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116504315 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.154115567 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116815256 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116917006 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.149678177 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117344492 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.249951523 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119089163 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146789437 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131895473 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126610474 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154483664 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114016621 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121919787 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146568506 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11174715 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113334269 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.260900151 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.137594185 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115626291 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121841486 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.149028714 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121093702 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.263139989 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116182491 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125992338 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.150631207 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112694029 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.13831765 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123148875 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111590583 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.264871595 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.146856895 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122554114 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120587517 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.146285718 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122521741 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110751759 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139945803 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122777812 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.265704801 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122426444 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.138065727 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121517775 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119973398 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140909755 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.125330668 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119891339 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.147064979 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112194895 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120870281 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142534995 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.121939226 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121158133 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.146129848 seconds)
  done (took 11.928370407 seconds)
done (took 43.679482954 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.590884876 seconds)
  done (took 2.615127246 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.944277126 seconds)
  done (took 1.972768962 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.256968935 seconds)
  done (took 19.316625105 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.445061783 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472098335 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.122359815 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148665768 seconds)
  done (took 3.218783956 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.834170154 seconds)
  done (took 1.887476518 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.32768848 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237277731 seconds)
  done (took 1.596911365 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.739749432 seconds)
  done (took 1.788780334 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.558566729 seconds)
  done (took 2.590642037 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.296325577 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.24189686 seconds)
  done (took 1.586619975 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.650034243 seconds)
  done (took 1.698333392 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.436274558 seconds)
  done (took 21.489019814 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262153451 seconds)
  done (took 1.315770138 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.295111318 seconds)
  done (took 1.352742204 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.619292886 seconds)
  done (took 4.671206273 seconds)
done (took 68.137935646 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.122270924 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118630528 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117313471 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14166659 seconds)
  done (took 1.540162837 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.132868599 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.11906392 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149165087 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119783622 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124987196 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.144134504 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119467303 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120411605 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118358294 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14613463 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119678643 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117394047 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147675833 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118319488 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115670738 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147039253 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121455693 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119778164 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146417614 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120890023 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119962092 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147301857 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122137419 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121505608 seconds)
  done (took 4.132966389 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.122453352 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109941643 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110803081 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134038263 seconds)
  done (took 1.536413873 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.135183496 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130004729 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153296383 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126325499 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130220515 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155087855 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118795476 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114824193 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144761198 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126540235 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134198249 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156857233 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130378319 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.145939811 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.130242987 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113662783 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11914397 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157042055 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125875021 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.152581417 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.12153338 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123739745 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.150685044 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127360691 seconds)
  done (took 4.276675662 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.197487109 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129744599 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.176216046 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161630844 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178377049 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116623524 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145373017 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151866941 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12611732 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.148184638 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121807692 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161931575 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151952456 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12121072 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12007825 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.15069683 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131785959 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.149962763 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.163993611 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122889167 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.152605174 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130350732 seconds)
  done (took 4.271975009 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.131167131 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109684602 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.132100308 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110393193 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120852574 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137919355 seconds)
  done (took 1.807334106 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113973436 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104546892 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104118448 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129863339 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108242893 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10368944 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.128767473 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106860271 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103917991 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103104443 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129828385 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104559232 seconds)
  done (took 2.396425347 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.339014604 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109269465 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135397286 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113030891 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113992575 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106990047 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149050668 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108663978 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.264139402 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104258959 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133830187 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.191595585 seconds)
  done (took 2.935167753 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214423998 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147729323 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283706256 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.656608832 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167134657 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190043294 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285389631 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191777031 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208712824 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137419305 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215980905 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160722164 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183358882 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18569098 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169046219 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157236204 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194940544 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236226262 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143321843 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238532875 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156161418 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202210956 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214507717 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150716233 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138338568 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190502032 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119457482 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155120126 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168932168 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193587023 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20341656 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150736628 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167925685 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191771392 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264566065 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210226065 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270493667 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133800857 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.197964202 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.218384858 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258791157 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142308878 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220360999 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152860106 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155632376 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185131016 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182146104 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184098806 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.16164746 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143619091 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213045419 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205906344 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.177379803 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165104852 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300826429 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163110292 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14225665 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260620595 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215892577 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228604968 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178177982 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.15006648 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17695333 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218570606 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240689224 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142310841 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193217283 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125313399 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193230834 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231907499 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184386607 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189215011 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.241355201 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131414998 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199438912 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169079103 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184348681 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232387462 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171945993 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119487595 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180633715 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134074901 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153892165 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.187911142 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121715924 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243861948 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160168948 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341454479 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181332991 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185468824 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161715444 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190208798 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162537398 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179007922 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101639572 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170959754 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162583676 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18881666 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128346397 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181698196 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142576178 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125892428 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181977625 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122877778 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196057908 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133739001 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19338313 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172005876 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159352217 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177765373 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176655434 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161145084 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198745074 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218923684 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132274493 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132463342 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248152414 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195731543 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136291333 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203143478 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196411461 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.176439943 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134871155 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195280394 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219510902 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143232811 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228636851 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139079691 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161639447 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141628138 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199461737 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16048501 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.182649287 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130379468 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.191038384 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193056592 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.156829551 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140426113 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209788888 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133828984 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124499005 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165736172 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13599621 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171105931 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148992039 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.1672677 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154805983 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195427511 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16432861 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187532392 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135933684 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202055372 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131698272 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196745973 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149252659 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119805907 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.202535085 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225884731 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129213726 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209793535 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163128297 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211669558 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199827365 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130085323 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212153521 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129282537 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120779652 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191208171 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196631028 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164972474 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.218075919 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205910275 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16594069 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193142044 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149293137 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200283413 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.210495594 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160533588 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172305508 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173093437 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198681027 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121302707 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123056644 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.156271769 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138327405 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157863368 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140109293 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211860756 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166247093 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207189756 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193480567 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139228992 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22189776 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126361823 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189351704 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175568331 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165592998 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189133545 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218935729 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176853085 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169104667 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189913193 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120846165 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125384628 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.160835713 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161521875 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164291974 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137029322 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141621612 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22047342 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201844307 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148770758 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219360526 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194469531 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201499275 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.149392646 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162240834 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198906366 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167610894 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.211429089 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134420374 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.188293579 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192233506 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171929746 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192686905 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1965447 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178514933 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224593951 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193304163 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131450858 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175406276 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161819014 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167101581 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163160278 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144949526 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159594437 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151649075 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.167049575 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140665702 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217151042 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14432336 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209384105 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.187449599 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172852181 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154552331 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14372373 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201605719 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146114478 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105149174 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201299739 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225274999 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149504668 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187804536 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17377007 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160731435 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313990393 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2293371 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207008956 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137562005 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139321672 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201213662 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18612918 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16526545 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214067988 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141700041 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23850045 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173204602 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.173525602 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13013928 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177680055 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151878246 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168196978 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152322966 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.190878608 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144999965 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219411527 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136702113 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199149464 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204791644 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147229897 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150359803 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167611135 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254111709 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168587902 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204135444 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164410739 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194464439 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183600569 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152386977 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127156743 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132172978 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213833724 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128715872 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208364607 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191812846 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210007191 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176551124 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192755221 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140931326 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126900839 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197957514 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147732233 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21415863 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164312867 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137977127 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220344114 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128253644 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158995919 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161104215 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316990076 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156307817 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203213272 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106040458 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.312773279 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134912007 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160239815 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162707793 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200860426 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133296745 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184653164 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201920751 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140462368 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196164592 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135799358 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207736944 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212450808 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166914008 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206448466 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.145842597 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192901382 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190762752 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174978977 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175133762 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.148074646 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188129255 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196465261 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.212714472 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1319953 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199029874 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170133384 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2020982 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202104137 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139654649 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182498073 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160909665 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165226548 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169793471 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125170241 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190298523 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.165422043 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160598566 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177535246 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202537041 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131255459 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156480941 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149111301 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1974004 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141394491 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.158864008 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186779306 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.159562425 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182009977 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244387577 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131591661 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19891246 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146995383 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160870722 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140307745 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172570355 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133074661 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17501569 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21171343 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132050416 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209438586 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166209632 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196755612 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187816768 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14508061 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.327499188 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.160043596 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190361056 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18341748 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227405728 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152758256 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205689787 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169819613 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1810263 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165746664 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178578831 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.21964568 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19650745 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166938839 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162676756 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143287522 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168053907 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134295547 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152242339 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199477459 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142367285 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.169972704 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165868951 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177266209 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.147699571 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171460442 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20119593 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184079123 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218084901 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187294495 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167727411 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17634272 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209402491 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129406018 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19653468 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172887072 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175730165 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15155256 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.163642577 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13793719 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244109629 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125281305 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190090387 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173214064 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198510482 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172047686 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.164332689 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177974112 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172960598 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17539911 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157103432 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.153047756 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198486456 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135442962 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126885441 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201913401 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190174437 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165296957 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170693361 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175689483 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198359434 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.152518542 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.631675876 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31299461 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168680927 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225763245 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13444902 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167033716 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146985854 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191272892 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.164227529 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200736473 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129801635 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158146221 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14677554 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183273001 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143110891 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195930264 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184876544 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193337872 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187836591 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.163530107 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253977845 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172392838 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172583726 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115487193 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.160731553 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140546036 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164673239 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144196956 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210217527 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243640749 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164715794 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.177188022 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136862148 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127239823 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158899974 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164980907 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182066266 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168728467 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179160678 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103261545 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140939292 seconds)
  done (took 87.97285916 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170364355 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153067413 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171158087 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.2232687 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195568237 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290847613 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230174357 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247321763 seconds)
  done (took 2.836190908 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.127636323 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162709688 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143042045 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.147160602 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109871129 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.49218592 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159983936 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120614475 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161339755 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154996422 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137984221 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.575414677 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120481252 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14530778 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123079946 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137704776 seconds)
  done (took 4.159802145 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.809875519 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.544065316 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.095068935 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.282198797 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.268537959 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.209333575 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.784374284 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.205018495 seconds)
  done (took 12.34384032 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.173485927 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.158769466 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.46770066 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.315935496 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.182037014 seconds)
  done (took 2.457227025 seconds)
done (took 133.711109634 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.131352808 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12232983 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122092855 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156334107 seconds)
  done (took 1.67331805 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.202959373 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091467251 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092253007 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.118273665 seconds)
  done (took 1.662546907 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.47692474 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091248028 seconds)
  done (took 1.752830511 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.162240838 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13661057 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.171838157 seconds)
  done (took 1.643550192 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.143114381 seconds)
  done (took 1.301753287 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.133764928 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12775171 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.275421389 seconds)
  done (took 1.700819549 seconds)
done (took 10.89994617 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128836662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.922169421 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435496362 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132104435 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710832989 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427042767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.43088783 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178702382 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17420364 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139718429 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131060782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690893804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.451097154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.879843434 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.40333965 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.911694601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696109223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112207939 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148550068 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111942037 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.4094775 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139471704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112975323 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11134941 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.720565973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419680175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109210816 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.919188609 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109014062 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113100809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431357112 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110783388 seconds)
  done (took 21.069716951 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125986192 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167096826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148873349 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112201811 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11445506 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141550941 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122668747 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123795026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206794154 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110151808 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163773905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109961791 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115527815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142075051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135976267 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109323981 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144692847 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114459689 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118442619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142795017 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132418686 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108722366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.143660374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11456234 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110850518 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162763021 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117009177 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123341432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140988167 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116316464 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114718072 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.14202013 seconds)
  done (took 5.368993596 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166580486 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177206011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149449274 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148191806 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189108084 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116904774 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225647033 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152144165 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207670853 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116321927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13173341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140459559 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154791612 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11107473 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166909448 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111058146 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113596364 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143993898 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119047025 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112156962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161442879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110047525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112102161 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142434205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111125746 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16154251 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115612985 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122990318 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139835241 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118709868 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116932336 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139812421 seconds)
  done (took 5.673767952 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.133746291 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125963215 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133450262 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16385902 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120379416 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124340936 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155147001 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120374994 seconds)
  done (took 2.243412331 seconds)
done (took 35.520361118 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.145163985 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132706485 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131558555 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155075429 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.260185197 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118251072 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127442901 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117284944 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.157354954 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132259977 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109879978 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152160256 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130698237 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120862458 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.261363498 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125716073 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.266737271 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.262795631 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.118661296 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125214806 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.155608343 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.265921304 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.12417788 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118941099 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.252068811 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113464816 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.255860613 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120977532 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.151627511 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11632223 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.263918255 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124331881 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118162539 seconds)
  done (took 6.490636411 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.25175792 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.153178615 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121120126 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119204096 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120368223 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149866474 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.280768571 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.120370808 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118766822 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117342061 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150158702 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.230795987 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160436511 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.115815012 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123009822 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.138745431 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.253273494 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.153925964 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.111551338 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.093191976 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115903528 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.151379128 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.263970224 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.148911954 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119321947 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.119649135 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.154164797 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.125593026 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.120853389 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.15190877 seconds)
  done (took 5.740976177 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.13378994 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132221884 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.166381309 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186707089 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148279227 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162884755 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139734944 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134057943 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173573295 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114580083 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128433016 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178713333 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130030848 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123948921 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149125638 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132306199 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135623627 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145315004 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123205683 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130657259 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.164306032 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130655825 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136651013 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.15245299 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113588039 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120751657 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155526794 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.129491377 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121656049 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.161224318 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.11681317 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116925533 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.147830501 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149916918 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114480785 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.160245038 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140642824 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126393664 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.158490657 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.1456688 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116675673 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.145867298 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140142066 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16658248 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.150291442 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127046888 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124451139 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.158391443 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113242201 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131161095 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.188387877 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116916347 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.162824542 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.114477725 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11282988 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122139759 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.147156187 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117453493 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128902504 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.146809432 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.13946475 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121082587 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157569841 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116274003 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124895202 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.143127528 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114181845 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118755131 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171111218 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125837252 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149581534 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11429823 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.159260527 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126421792 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124707872 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.156948036 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114642853 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124625065 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.155977728 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121099367 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126572218 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147923794 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11797233 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130560379 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165897787 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.13042728 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125141547 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15974211 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118603022 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115838776 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162666394 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115736249 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119340796 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.15952203 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117510661 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117619014 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126715961 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.159246591 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111507806 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139965644 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.150408321 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114126412 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138971807 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148791295 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119571067 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12375335 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.18879649 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11427164 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126029626 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.159573129 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114883854 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121510766 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.149178759 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114483706 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131692043 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.160103168 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122025288 seconds)
  done (took 17.193667082 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.369884397 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.34932992 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188884434 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.436360064 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128011871 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.280980977 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.344750154 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.347815463 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113149861 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182268549 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17477336 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.317739933 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.148075531 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143455931 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.349757991 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.441841158 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.14872565 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.179916763 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.151828243 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127393426 seconds)
  done (took 6.12380501 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.142913943 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148533206 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169403595 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142186414 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125111911 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162915325 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11405117 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135726985 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.158918092 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12469195 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117077 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160556726 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128055176 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130501285 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162048298 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146319327 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120807871 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150518862 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137704386 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118961566 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133555956 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140131459 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122903612 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166771587 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133966594 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124200755 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.145558667 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121197703 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120454139 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.15379648 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119329215 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131570788 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153513886 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10617055 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125870457 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.159483344 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122988899 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117169885 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118879019 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151359045 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129094462 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127107789 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153521819 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098856515 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132507811 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109912436 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.162287296 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12707137 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.10590026 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.165491805 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128726716 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128708011 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.154308387 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.143076283 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12141106 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.159880269 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12663056 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129606626 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.150940352 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.11526254 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11324544 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117970721 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.15463218 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128949306 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125958495 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.166619934 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130134436 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115064875 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.14986748 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117634627 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118471369 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.162080317 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135018578 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123320546 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.153133648 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127547219 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122441927 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.124248155 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.12843582 seconds)
  done (took 11.863597815 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.148826362 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125614632 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.161700313 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.156459641 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128694992 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.150556807 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128727288 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134093817 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128887997 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.166777256 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130254458 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128538 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.17186164 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125658125 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124333521 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164147911 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131374411 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.182662097 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137414964 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141495793 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162978538 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121601667 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127242493 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.156632896 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.148118359 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125910902 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.173974266 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130800132 seconds)
  done (took 5.227288371 seconds)
done (took 53.819010646 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.341578958 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.539163766 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.311738242 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.309709515 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.324852041 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.344717579 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.309453595 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.308497764 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.753790176 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.281186014 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.311320066 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.308764811 seconds)
done (took 29.646820463 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.407751376 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.840748949 seconds)
    (2/2) benchmarking "String"...
    done (took 1.598398197 seconds)
  done (took 4.631799925 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.297025753 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.302282055 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.553390868 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.300808101 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.300680134 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.314690137 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.300467393 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.302622054 seconds)
  done (took 16.569590606 seconds)
done (took 27.104242301 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.345245378 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.482384017 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.52525351 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.275209747 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.302967637 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.311828236 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.31623977 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.31988035 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.296992685 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.282483876 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.717446542 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.557488787 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.317082739 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.670755966 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.277818907 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.298224975 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.32102134 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.53713332 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.298157555 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.331530043 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.276880957 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.282500624 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.344453529 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.301968014 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.307497507 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.305905593 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.349347979 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.302065571 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.478846837 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.310061064 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.335882399 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.299180848 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.27883647 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.307637505 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.306249333 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.315652302 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.501515305 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.308301272 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.279043819 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.325638239 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.499584955 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.314871701 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.301415324 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.302501489 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.285371307 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.345756263 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.29864859 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.416762906 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.32347097 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.299752017 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.381630078 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.670415743 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.30786653 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.301974151 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.299972407 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.522491829 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.321069436 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.35649914 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.327346506 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.301800865 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.300383529 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.299688968 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.318210279 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.313724045 seconds)
  done (took 149.908737114 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.304765508 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.302276551 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.300003913 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.308108408 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.300254367 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.299972919 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.304203662 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.305873774 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.30198189 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.304486804 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.304101005 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.302250697 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.306842798 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.286880189 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.316373174 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.327611072 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.299953741 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.301815153 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.317466683 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.306834823 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.316576138 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.30767954 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.301541858 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.304338036 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.306522262 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.390279774 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.320965448 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.307916007 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.316473232 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.304973532 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.301811411 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.308436093 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.931603901 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.157246335 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.322703074 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.331137887 seconds)
  done (took 83.832531111 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.708765771 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.302502074 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.308961105 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.305681604 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.341363655 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.308068057 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.903920248 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.901420296 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.282957818 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.549342796 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.726421434 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561470649 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.305382455 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.399607481 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.304484897 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.319762615 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.305204626 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.326020807 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.333484009 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.310630651 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.308180645 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.904808059 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.32221642 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.334935929 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.486125951 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.318509483 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34255335 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.704251052 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.305348478 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.345948709 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.646208698 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.353105685 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.304929821 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.672466124 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.397237709 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.418792208 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.308850611 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343676235 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.309981233 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.596372112 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.305463947 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.309104765 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.308072008 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.314773568 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.973291343 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.309782805 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.903464336 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.312692012 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.283278895 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.303824765 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.308753591 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.278513597 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.071013184 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.310556019 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.30922589 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.312461474 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.311753932 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.313266663 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.344622299 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.273855577 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.406844351 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.312146147 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.315846204 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342504545 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.311065085 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.434883054 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.308570033 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.981681085 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.371882078 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.419718513 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.906566491 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.312947676 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.406729598 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.426713951 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.308864187 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.313061887 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.312050217 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.313428624 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.4248491 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.305783844 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.014156591 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.486017588 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.3227215 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.72971854 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.412490545 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.308499695 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.676551924 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.312467462 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.314333534 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.027347594 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.403416445 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.307258573 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.313426261 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.312289185 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.009683411 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.900704067 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.568729082 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.312714273 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.018033385 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.310651529 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.182915871 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.880199768 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.973404566 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.310900998 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.420016185 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.487251478 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.321102347 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.309855051 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.309724072 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.711650271 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.311116574 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.368353119 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.304420456 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.308872796 seconds)
  done (took 386.388742799 seconds)
done (took 621.324146697 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.195470474 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.142422823 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.295993311 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.158956398 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.141112947 seconds)
  done (took 12.136182816 seconds)
done (took 13.338104497 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.506141242 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.50258597 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.371439236 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511828181 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.343758364 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.52776022 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.49070275 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.328672335 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425859026 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.396276379 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423950793 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.362454477 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.345369753 seconds)
  done (took 19.737541557 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.598511509 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.318667015 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.375933118 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.584476196 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.356295786 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.605309161 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.627543168 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.322360359 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.460067454 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.338603235 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.330648253 seconds)
  done (took 19.12041812 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.597242686 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.322481031 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.376569045 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.584850757 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.356167288 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.605620552 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.636177224 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.319694173 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.462328398 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.355831461 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.329035393 seconds)
  done (took 19.150546602 seconds)
done (took 59.215972049 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.346027834 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408234642 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.343286911 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.331593533 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.326679552 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.325403423 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.333127968 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.327654936 seconds)
  done (took 11.94252462 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.325121891 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.327255038 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.322361765 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.323149521 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.324857346 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.325435032 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.32455347 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.324581221 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.325970292 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.326538458 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.323826343 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.321363967 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.324664023 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.326415216 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.324729958 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.324662991 seconds)
  done (took 22.39690811 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.327446468 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.322605869 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.323974538 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.324968977 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.325568514 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.3227063 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.326897667 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.326475404 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.327424881 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.325588776 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.328639357 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.326082644 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.326481413 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.325694479 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.327259364 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.327576487 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.325762096 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.325316796 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.328789948 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.327158895 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.327630156 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.327443019 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.326425774 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.324544876 seconds)
  done (took 33.030440373 seconds)
done (took 68.573990965 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.312068985 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.330396727 seconds)
  done (took 5.842324751 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.386043591 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.385270078 seconds)
  done (took 3.976715702 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.326506993 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.32570241 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.328043825 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.32723144 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.327033733 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.330011838 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.3276171 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.327925789 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.325853369 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.327538437 seconds)
  done (took 14.476996253 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.329642249 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.33061389 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.327478502 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.328851543 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.326994042 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.328566502 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.328283929 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.326986902 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.329643264 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.329357038 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.327597572 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.327170199 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.328067408 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.32998877 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.327813322 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.329393985 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.328669215 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.329711955 seconds)
  done (took 25.118224316 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.341226911 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.346702642 seconds)
  done (took 3.891705288 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.456742432 seconds)
    (2/7) benchmarking "second"...
    done (took 1.37113784 seconds)
    (3/7) benchmarking "month"...
    done (took 1.435177767 seconds)
    (4/7) benchmarking "year"...
    done (took 1.42545504 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.370222253 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.350522458 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.369715259 seconds)
  done (took 10.982860238 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.314441083 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.603544256 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.786588235 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.475567003 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.308064074 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.32936698 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.295968727 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.331710065 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.332936259 seconds)
  done (took 14.98297834 seconds)
done (took 80.474859079 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.313573441 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.35375625 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.344083545 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.3287595 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.670871586 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.330028391 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.319196568 seconds)
done (took 16.869077059 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.30064342 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.2943728 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.307521487 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.324073891 seconds)
  done (took 10.429817453 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.324807818 seconds)
    (2/2) benchmarking "read"...
    done (took 1.641278267 seconds)
  done (took 5.173055913 seconds)
done (took 16.810989523 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328361836 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.332023949 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.331070357 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.330424405 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.330247581 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.331292692 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.331777749 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.329746858 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.331271629 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.329167727 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.331274851 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.330462782 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330372402 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.333486762 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.331351119 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329666053 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329027001 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.331975977 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329803584 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.333066368 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330940288 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33057286 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.33448729 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.333252334 seconds)
  done (took 33.150896142 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.330756717 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.33168451 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.335355771 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.330577908 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.333706685 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.331847182 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.334099606 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.330215619 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.330620576 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.334631765 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332395618 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.33210789 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.33512306 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.331791747 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332158657 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.332715565 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.331673102 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332676555 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333942131 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.332948473 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.329618407 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334999115 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.33286508 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333215282 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.333927484 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.331492155 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.333756668 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.333642743 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.334035852 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.333420823 seconds)
  done (took 41.189621506 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.335480962 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.336027123 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.333866127 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.335096369 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.335443065 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.334043523 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.332827639 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.334947197 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.335419092 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.334722242 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.333341437 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.33746438 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.334862243 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.334283323 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.335824629 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.334549686 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.332713815 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.333731714 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.332825272 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.331679544 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.337395977 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.332059596 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.333653076 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.335521008 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.334515432 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.333354924 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.333721703 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.33119611 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.335009141 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.331532612 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.332780266 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.334759508 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.334938174 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.334478543 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.332854741 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.332519229 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.335758311 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.333466536 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.333200259 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.334111921 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.331697566 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.332338063 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.332188463 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.332599308 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.336244925 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.332885367 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.335356852 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.332470593 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.332784225 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.33154903 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.333249291 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.332894729 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.332921881 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.334731438 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.335024221 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.334419403 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.334084687 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.332693854 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.334725163 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.334002127 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.334483981 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.334542314 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.335437725 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.336534421 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.336048037 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.33508469 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.33570278 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.333774457 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.332322136 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.334607031 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.332727468 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.336021582 seconds)
  done (took 97.262691756 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.337204313 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.334473747 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.334472805 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.335499001 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334414248 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.337353029 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.337779518 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335266392 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335115411 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.334877753 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337951131 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.334897218 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335037489 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.339244023 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.334189599 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.337816208 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.335123443 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.333697832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.336045458 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.336293916 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33589345 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.336877287 seconds)
  done (took 30.598071524 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335629751 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.336936767 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.333028325 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.337690307 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.336126952 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.336523585 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.335359833 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.336406885 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336186994 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33913903 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336740288 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334917194 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.338328864 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331666952 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.332892564 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.33600086 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337981956 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.33719911 seconds)
  done (took 25.257205883 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.336626994 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.33679245 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.334021238 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.333342313 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.337565616 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.335860338 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.336495221 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.335574199 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.337999373 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.33554731 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.335559386 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336302022 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.336779958 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336060363 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34221501 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.333465961 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.334319189 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335056727 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.339244394 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.337031815 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.33496436 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.336401312 seconds)
  done (took 30.604326322 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337777643 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.330315532 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.335776768 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.33530868 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.337659117 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.334859912 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.335337695 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.334457948 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.340145245 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.339151271 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.336618668 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.336613917 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.33896867 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.337191118 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.336222395 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337213063 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.336705737 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.337103661 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337540723 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.336396153 seconds)
  done (took 27.941483358 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.337362271 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.338367572 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.336637434 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336854779 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337535331 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.336524278 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.338197116 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.336877003 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.336780424 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.336446161 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.338334609 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.337251892 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.337819075 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.335529375 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.336731958 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339127214 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.335802408 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.339683711 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.338175018 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339045568 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.336101104 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335983027 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.338503399 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.338001596 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.338378332 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.337824565 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339087458 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.33898261 seconds)
  done (took 38.661779949 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337084888 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.337974629 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.340764152 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.338980359 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.338204966 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.337121188 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.33807167 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.337521898 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.338420223 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.33862941 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.338599323 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.337842557 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.340258297 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.337283787 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.337881637 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.338773025 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338198556 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.336837807 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.339300535 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336777527 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.338401287 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337732347 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.341026159 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.337362923 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338831163 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.342568977 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337334 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.337905385 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339567682 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.338065624 seconds)
  done (took 41.364873377 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.356842614 seconds)
    (2/2) benchmarking "in"...
    done (took 1.356699358 seconds)
  done (took 3.923317514 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.340474637 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341496131 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.341018606 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.337836565 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.341171081 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.339981272 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.340165082 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339995854 seconds)
  done (took 11.936864674 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.330777023 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.342391489 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.339392045 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.341227559 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.342439792 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.334072568 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.339021962 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.345271804 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.331279393 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.332116534 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.335722252 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.333084797 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.33455896 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.333378306 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.335609194 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.337016513 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.344160409 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.341311981 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.342559325 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.339627715 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.342506303 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.33530441 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.338617194 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.343476931 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.334865301 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.342600215 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.341425148 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.345278436 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.333071663 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.342587932 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.336605683 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.345364076 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.344227482 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.343975833 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.344578009 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.342252201 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.342523904 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.341966008 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.343600694 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.346381178 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.343419647 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.344487521 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.3364166 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.342045001 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.341257801 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.347053078 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.343210109 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.341159015 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.335785212 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.337623571 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.344767968 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.334813594 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.345696101 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.339944512 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.340894652 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.349269507 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.351982892 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.33657269 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.338028794 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.345784192 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.351832574 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.347275993 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.34342692 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.349506407 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.342694437 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.345865511 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.35036033 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.353482827 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.346946304 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.345089093 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.346846254 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.353147175 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.354885731 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.347729949 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.346089805 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.342866165 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.338634291 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.349134014 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.345138339 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.350660899 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.352237606 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.344818223 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.340595359 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.343726786 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.337434103 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.34762181 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.344684161 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.348831438 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.336164734 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.347010525 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.355301938 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.344785466 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.337623752 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.341173312 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.34338319 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.347628641 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.337413945 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341882545 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.350777489 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.345648265 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.344271138 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33908528 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.34606413 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.351212422 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.344998894 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.34329087 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.353897094 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.339373235 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.350713777 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.356082045 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.346050842 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.339758533 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.345037738 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.348092159 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.339584882 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.344145867 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.350259606 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.345467823 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.35240827 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.345053518 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.342372611 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.349490717 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.353098114 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.347182931 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.343107014 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.347883684 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.34697063 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.344547637 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.355372056 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.345030027 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.346263535 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.342641792 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.354136995 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.339357732 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349302302 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341952125 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.349756491 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.348579455 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.348786568 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.34524118 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.346891751 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.347093833 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.346811832 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.350891367 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.35381498 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.344912696 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.359455352 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.343900121 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.344396531 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.350201447 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.351962651 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.347297841 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.342713043 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.351560175 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.342130523 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.347925792 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.342236557 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.351426644 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.350292268 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.350266697 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.348278259 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.341986529 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.343147533 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.350200075 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.347791774 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.349883751 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.353732637 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.34974915 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.346407768 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.343037924 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.349474048 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.341840499 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.344380821 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.349334742 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.346824794 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.347862437 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.346292347 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.353768565 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.347243056 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.350742955 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.342176026 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.345522603 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.352883543 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.353837541 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.356497979 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.352538872 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.348209736 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.342938377 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.344181199 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.352982551 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.345046938 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.353878628 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.355785227 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.357082711 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.346577482 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.348402328 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.34246812 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.351691819 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.352013918 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.357248482 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.349959872 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.349944928 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.34147094 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35376823 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.343541346 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.353229882 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.345617633 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.347488332 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.350233652 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.34970631 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.349268207 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.343839384 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347946137 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.352876326 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.350537102 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.350568843 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.346049236 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.353554975 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.342717601 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.345359479 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.353142521 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.352785329 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.3514042 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.357157664 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.346625607 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.356277515 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.35085039 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.346500485 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.353041532 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.349940423 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.350748235 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.353995205 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.351212094 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.347400104 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.355920587 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.355274596 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.344362412 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.351100296 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.357474992 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.348162916 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.342345033 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.352200896 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.3495135 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.353718 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.350308415 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.345053516 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.355493178 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.35026999 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.357458521 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.342804261 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.354906685 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.343703137 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.352722434 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.348224686 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.350327426 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.349623445 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.353605509 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357533505 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.349361989 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.343334311 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.354538892 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.351483664 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.352284081 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.3428565 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.354781838 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.351994433 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.351728906 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.348932497 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.345902059 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.353781703 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.341046312 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.353220645 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.344107147 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.359429728 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.36677009 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.351912763 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.353475996 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.353117066 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.351453148 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.352659077 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.347963469 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.346925128 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3510009 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.349194034 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.348340722 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.352986058 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.347462469 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.357071982 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.350029047 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.354609683 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.35195154 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.352321525 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.345764684 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.356285148 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.352352585 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.350770122 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.343507199 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.352441786 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.346127628 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.356221788 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.353536177 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.348300833 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.359302129 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.359034797 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.348086279 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.349684526 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.34687506 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.346169777 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.349099898 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.357863077 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.343918492 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.355461212 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.343496928 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.349049366 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.348117353 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.358196177 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.36103628 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.347709328 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.355921513 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.349465724 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.344317597 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.345317984 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.35495702 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353132217 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.365336308 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.346718223 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.3528493 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.351775274 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.352001521 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.355532079 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.352531039 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.353235928 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.351326381 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.35710529 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.355666012 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.347799366 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.353073587 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.358293213 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.35090878 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.353864505 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.345287916 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.356539507 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.362168003 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.348002514 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.352171475 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.348833355 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.357001243 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.350830732 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.353552101 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.35103289 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.354564548 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.357014761 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.358474735 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357034761 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.35664475 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.358156067 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.36610922 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.357377976 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.36323394 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.349624882 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.35835301 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.352876772 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.350612112 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.349804101 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.348665295 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.357128286 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.347595187 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.355610116 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.353700104 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.35329672 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.357956619 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.361517872 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.351861723 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.352742949 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.360913954 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.34776486 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357150044 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.355288632 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.347144897 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.357017329 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.352684261 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.346653 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.34868173 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.354344518 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.354768834 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.350244107 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.357418748 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.349964119 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.356540914 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.355476187 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.3553274 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.35407135 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.355295988 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.347327885 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.358111922 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353845122 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.362237392 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.349666446 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.353577879 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.350029681 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.360839588 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.36671538 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.351367023 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360106853 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.354474224 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.353100374 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.353029268 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.358944114 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.349903888 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356832286 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.346693267 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348128361 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.350220412 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.357580557 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.358925795 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.357838531 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.348334751 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.349862287 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359517403 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.358071981 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357510878 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.35355223 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.361594081 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.348549821 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.349357129 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.358723702 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.350238839 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.35961776 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.347724575 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.350559703 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.349927113 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.358595307 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.355148192 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.355513221 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.348739246 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.351476897 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.361982063 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.359701155 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.354010347 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.351015428 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.358856989 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.349639453 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.35561682 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.356155722 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.353571879 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.354199184 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.358198391 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.355306974 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.351483408 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.351264966 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.358344845 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.359534301 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.360366044 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.352144619 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.366384972 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.368989467 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.367746426 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.349920361 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.353056385 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.354537323 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.357703343 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.358273088 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.350714254 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.364309977 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.364250566 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.362413062 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.358136988 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.358802081 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.349225406 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361586953 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.35714972 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.351828164 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.362929832 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.355101629 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.3643652 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.360015653 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.357934717 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.350512549 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.352986585 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.352979551 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.357180286 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.35906215 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.359104816 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.363235848 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.357782166 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.363614884 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.357310216 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.360920856 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.359555948 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.352747826 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.360399952 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.353592579 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.361950039 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.363195918 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.353236248 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.362034963 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359356246 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352785897 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.359009627 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.362933963 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.362664729 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.355875028 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.358095792 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.365570395 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.370105489 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.36098131 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.356059945 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.358058695 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.365198653 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362207881 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.36171544 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.35556218 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.370448826 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.376691494 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.357484958 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.358475774 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.366570333 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.373210053 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.36274284 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.360839685 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.358844715 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.360737213 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.365526767 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.362905595 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.368291599 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.367845916 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.360137607 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.365368088 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.356691983 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.360148482 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.363129892 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372793455 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.361435104 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.356599962 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.371866713 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.375669736 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.361333509 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.37593635 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.369778962 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.363324845 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.366527006 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.35581371 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.366152735 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.36037512 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.367846852 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.362959027 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.36329102 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.36376655 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.355889494 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.364867027 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.371318164 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.373858296 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.364354649 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.356324085 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.358546064 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.365135656 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.36372546 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.36396636 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.363971532 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.36368143 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.364030923 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.356794831 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.374798136 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.377219344 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.369356359 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.365877582 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.36273451 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.365405977 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.369114726 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.360973741 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.368115649 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.365126319 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.365182835 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.364605533 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.370466404 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.36594527 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.359531553 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.360158026 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.359280875 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.368841953 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.372060447 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.383901336 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.369412922 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.369817763 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.366451169 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.365944481 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.360391351 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.370326745 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.367947867 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.362534295 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.362949085 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.368753483 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.367054622 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.365997483 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.359644317 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.371671441 seconds)
  done (took 807.346871727 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.364445534 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.367400802 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.367355999 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.367900595 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.367248275 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.365759723 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.363846827 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.36821931 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.367320261 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.368713277 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.367341947 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.365573178 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.366028412 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.368924327 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36870543 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.368664569 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368876233 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.367213123 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.3695281 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.369481343 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.367170303 seconds)
  done (took 29.950511338 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.369298072 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.367887953 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.366640636 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.369042704 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.368273536 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.366677877 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.367391382 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.368911989 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.369154021 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365575129 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.371037 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367941182 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.368915765 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.368766944 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368385685 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.368163763 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.369241366 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.367881576 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.368767879 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.370978521 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.371116805 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.368169518 seconds)
  done (took 31.340170319 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.369253186 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.370631958 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.36595169 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.372058634 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.368624037 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.369665861 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.369351513 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.370722149 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.370111545 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.364135624 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.361597384 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.366915412 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.368455568 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.373666666 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.365862973 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.375554888 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.368328856 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.37336757 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.369682551 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.372406505 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.377017786 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.377355023 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.367042074 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.360989319 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.370233878 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.368429346 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.36980955 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.370474863 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.35913589 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.363019285 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.361467525 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.354131531 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.361922758 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.361363427 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.354096354 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.362953421 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.350979542 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.349118989 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.347080153 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.348255223 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.357729361 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.353090818 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.355381246 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.35967491 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.342338144 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.340413531 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.349484669 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.348182234 seconds)
  done (took 66.662835589 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.343734421 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.346855125 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.346347669 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.347426325 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.346969021 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.347557089 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.347957701 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.346041972 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.347015901 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.347152297 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.349056016 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.347246937 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.349155577 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.346616115 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.346470508 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.348571804 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.348193587 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.345903362 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.34827431 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.349111895 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.346414312 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.348418977 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.349144641 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.348216472 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.348509197 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.347274007 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.348734046 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.350634737 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.350519498 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.348906622 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.34790107 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.347759601 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.349171644 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.349321116 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.347638126 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.346916221 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.35089262 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.349724822 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.346785224 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.349326101 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.347588793 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.349793419 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.350273588 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.350596607 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.350410864 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.349580645 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.349076521 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.348475306 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.350616292 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.349636203 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.350533588 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.350924658 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.352191164 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.35041675 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.348373008 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.351336686 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.352219822 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.352201066 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.351331948 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.353142617 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.351880186 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.351744817 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.351596748 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.350883795 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.35039859 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.353265495 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.350895885 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.35060405 seconds)
  done (took 92.956796195 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352032051 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.351348064 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350261744 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.352010979 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.35086636 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.349702974 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.353567643 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.350918355 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.35131594 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.354084239 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.352587382 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.355613526 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.351743712 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.351511546 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.348494653 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.354570187 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.35349186 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351080797 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.352192989 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35513588 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.35331752 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.353181669 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.354406409 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.354228419 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.355052647 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.35295285 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.355188753 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.355115628 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354239633 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.354141343 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.356064625 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.35396363 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.354280481 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.355517892 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.353327479 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.3531235 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.3545642 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352782286 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.354827671 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.35485505 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.354059388 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.355866409 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.356992448 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.353499548 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.354472639 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.355495938 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.355550529 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.354577972 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.357272854 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.357025604 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.352972224 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.356356473 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354118076 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.357836059 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.355999884 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.355517735 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.357726223 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.356458985 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.356954508 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.357680294 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.356226699 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.355866275 seconds)
  done (took 85.179047 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356582334 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.353154569 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.354144794 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.357146692 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.357524761 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.356292227 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.355344421 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.355989196 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.35568215 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.35740624 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356203446 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.355575713 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356114201 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355744303 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.356971874 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356839139 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.356297846 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.357502587 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.358426275 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.357081808 seconds)
  done (took 28.349812085 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.356533439 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.358475323 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.356027769 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.357310029 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.357116115 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.356894935 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.359018429 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358665141 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.358073292 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359529826 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.359230228 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.358731737 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354193242 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.357946781 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.357421347 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.356640406 seconds)
  done (took 22.947364424 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.356948089 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.361930822 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.354108944 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.353279148 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.349803635 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.35391691 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.352972693 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.353514224 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.350282278 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.35529178 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.347109264 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.345709828 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.348172049 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.347379101 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.344815163 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.348280205 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.347256949 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.344127391 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.342534558 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.344179109 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.343833733 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.343325816 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.344493953 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.3431791 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.344593901 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.34048561 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.339471442 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.343175194 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.341427659 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.343203847 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.340916645 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.343248145 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.335442051 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.337172666 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.336082031 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.337236604 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.336421095 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.335574845 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.336432672 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.337097635 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.333469535 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.33105392 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.333597177 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.333368586 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.332409347 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.334613689 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.334215535 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.327291743 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.328022552 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.327918797 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.327244038 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.329285002 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.331020204 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.328583612 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.323437742 seconds)
  done (took 74.988043798 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.324565472 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.32455357 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.324016081 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.324733722 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.324712257 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.32431754 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.325262279 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.327874001 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.32402772 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.324827504 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.324435653 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.327291999 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325620391 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.325345663 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.326028612 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.32725524 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.325827279 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.32659576 seconds)
  done (took 25.056581787 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.325325232 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.328023179 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.324728919 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.324648238 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.327207587 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.326925458 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.326977647 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.325529404 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32855587 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.325133431 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327370736 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.327278481 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32616725 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.326630611 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.327741174 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325555563 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.326426172 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324773207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.321499172 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322112513 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.324575973 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322200898 seconds)
  done (took 30.368028898 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.315535473 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.314873823 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.312287513 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.326971381 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.32265442 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.313752994 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.311661165 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.313212846 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.330080079 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.339106394 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.328615393 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.318337454 seconds)
  done (took 17.049163863 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322990244 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321862861 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.322529402 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323711461 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320419347 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320912181 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316474777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322183667 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320287277 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319681435 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321089342 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321936332 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321102796 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323131626 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321076433 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321433586 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322503922 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322798555 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318551151 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322929111 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320348416 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321889651 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320461434 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323041275 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321176114 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322833944 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322521181 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321972487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321899748 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322422354 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321819502 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320135169 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320663806 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324093813 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3225222 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322408543 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322963982 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321574739 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322062694 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322638506 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.321519042 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322507126 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321902187 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323617378 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322842936 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323043682 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319387224 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325148776 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324246935 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32476994 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3221372 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32516633 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323241121 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321791761 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323391027 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323296748 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324310542 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324407267 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32315834 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323015935 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323858873 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32257349 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324775914 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321144108 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323007749 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322490798 seconds)
  done (took 88.468470415 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325396681 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.324448042 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325665828 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325234539 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323627128 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331797901 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323710185 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323235245 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323512533 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325291253 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326246655 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322629417 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325392772 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32402902 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326030359 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3262905 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32553116 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324714682 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323942762 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326102628 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324597442 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325760314 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326827541 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325030485 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324149812 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321331822 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324557564 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323857598 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32484291 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322910819 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32556788 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326821404 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326234996 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.326374824 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324816509 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325144114 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325536665 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327652527 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327883089 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328261318 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32809908 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326044235 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325707341 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327202829 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325836163 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327807597 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326894678 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326667045 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328048464 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328471264 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32823845 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328003018 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329461543 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328133488 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329260381 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329578867 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326963917 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329055983 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330389392 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328097304 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326490698 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329288742 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329035495 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32797568 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327351224 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327530262 seconds)
  done (took 88.7392607 seconds)
done (took 1872.503000035 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.483801063 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.439632574 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.316367327 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.328744513 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.315137505 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.318904082 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.327316422 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.314138996 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.318824444 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.320540506 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.316412964 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.503072059 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.347023109 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.307720163 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.312354377 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.412948963 seconds)
  done (took 26.886921176 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.333533542 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.323333862 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.427114789 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.321677985 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.349687365 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.500947962 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.382821641 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.326124705 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.481479783 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.339704527 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.316789824 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.340984189 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.321860582 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.32287701 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.335123975 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.493875952 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.570575035 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.314703531 seconds)
  done (took 29.004296923 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.735266654 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.324915058 seconds)
  done (took 5.266214156 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.341975269 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.322518613 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.322858306 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.32292472 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.324115451 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.310100085 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.325818227 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.328468478 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.315818134 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.436261507 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.326043527 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.335125172 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.325418078 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.324727399 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.331253005 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.369855563 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.4692418 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.332673752 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.326962356 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.331660194 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.322169009 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.417088694 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.360117732 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.335102524 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.437395557 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.327099863 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.326269005 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.332732356 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.437274263 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.333325154 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.324985515 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.326095096 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.327375163 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.243353806 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.844430756 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.319834248 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.346057609 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.33209616 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.334250995 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459249051 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.327803621 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.331500555 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.318001937 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.854116395 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.428078549 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434567489 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.316115967 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.340003397 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.327870873 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.387344855 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.320340402 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.329220299 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.382548567 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.099136454 seconds)
  done (took 84.714036697 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.325388747 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.315969564 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501491597 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.343466008 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324489313 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.32051681 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.321921191 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.586267085 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.335551483 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317321321 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.631302857 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.923957012 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.323671823 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.387979737 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.355425493 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.375145085 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319929132 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.319522151 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.315759899 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.320787909 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87373706 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319219955 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.314331582 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.395184324 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.36348856 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.840016211 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.317070198 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.315457807 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.3305945 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.318877815 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.893744536 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.330368791 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.371654591 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.319110948 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.601953154 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68965115 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.649316326 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.320186162 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350548213 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.322384976 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.339012586 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833349565 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.67077637 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.317535657 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.320329779 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.826508979 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.317743664 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.334641134 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.32820171 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.594249109 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.320872144 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.323755403 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.32387485 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.322892597 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.324999191 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.378339714 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.379717219 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.844834547 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316736905 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.32239143 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.364732115 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.32223629 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.321422567 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323057044 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.32507245 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.673393636 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.563018467 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.326103422 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.677908792 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.881460484 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.317319007 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.969111778 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.322586681 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.330577424 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.359168817 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.324236804 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.332845235 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.848027619 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.350020274 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.317461997 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.662384537 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.32635856 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.618225134 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.337697438 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.323362011 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896361917 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.323887694 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.367009057 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.325332272 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.333921266 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.320182451 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.331067487 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.605518693 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.373958325 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.323917247 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.323841561 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.358022071 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.322880745 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.3341898 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.325084943 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958548333 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.32585578 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.339559489 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.328160009 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324421383 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.319864046 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.323284104 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.328194481 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.607509388 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.324545403 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.342814654 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329535166 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.32148733 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.326279501 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.410113863 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.334518942 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.620753297 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.324832394 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325676237 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.327326761 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.329504297 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.341552127 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320824708 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.34300785 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.321491725 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.629437923 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.336243167 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.334636395 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.329915241 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.325869817 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.344860427 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.323814635 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.381656841 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.324522537 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111704736 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.374619637 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.32896774 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.327259019 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.333085371 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328742008 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.338275362 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.328323793 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628014328 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.607288656 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.55866295 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.326957085 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.327128048 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.130176767 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.368244847 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512132229 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.338994631 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.327026801 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.611372656 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.555607056 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.331135107 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.322340346 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.330183629 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.6137053 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.336697677 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.645103396 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.921268913 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.33018566 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.340447418 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.116306991 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.132211122 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.330906631 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.329258156 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.622956941 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.346068378 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.329050986 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.329385357 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.329340614 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.325014129 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.334602662 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.327176149 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.329996736 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.330053296 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.665646455 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.522738962 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.342579338 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.335825247 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.853234215 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.358018807 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327177945 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.330024258 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.33033599 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.329655197 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38564074 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.334027297 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.363888106 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.336491812 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.344041231 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.879475343 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.325159338 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.334579468 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.525211074 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.05629318 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.329581163 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.334077847 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.33206027 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.388166566 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.88237952 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.385927642 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.629227089 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.328818924 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.371943791 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.333078592 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.354234398 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.878640174 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.338725289 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.329178095 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.065520924 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.3276932 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.773278521 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.329711052 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.336881011 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.975001344 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.329570467 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.332765728 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.327610886 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.347286613 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.662555024 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.333415948 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.345607042 seconds)
  done (took 496.80421247 seconds)
done (took 643.88225708 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.33225731 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.335118665 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.334516757 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.334189331 seconds)
  done (took 10.558364355 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.351162871 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.337946183 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.349748282 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.339211246 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.350344679 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.339900177 seconds)
  done (took 9.290202544 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.332742034 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.329686015 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.335593369 seconds)
  done (took 8.218594926 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.534221921 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.346590676 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.675261631 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.342714451 seconds)
  done (took 9.120528972 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.353864493 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.3508374 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.349531189 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.350334345 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.352981415 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.35180019 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.353092167 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.351447522 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.354880099 seconds)
  done (took 13.389015237 seconds)
done (took 51.797832969 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.489436044 seconds)
    (2/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.811931853 seconds)
    (3/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.414675285 seconds)
    (4/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.428471892 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.445371231 seconds)
    (6/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.314221496 seconds)
    (7/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.347093583 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.34366812 seconds)
    (9/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.445082493 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.402036327 seconds)
    (11/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.316498151 seconds)
    (12/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.535343834 seconds)
    (13/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.645413102 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.374096371 seconds)
    (15/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.316866351 seconds)
    (16/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.436695784 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.678409553 seconds)
    (18/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.41419703 seconds)
    (19/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.312794215 seconds)
    (20/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.350602874 seconds)
    (21/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.481681893 seconds)
    (22/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.382717588 seconds)
    (23/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.422128623 seconds)
    (24/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.379348953 seconds)
    (25/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.317956673 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.418318314 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.576008033 seconds)
    (28/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.573493014 seconds)
    (29/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.311768007 seconds)
    (30/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.315691681 seconds)
    (31/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.493451356 seconds)
    (32/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.347402712 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.457340406 seconds)
    (34/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.492099709 seconds)
    (35/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.549919355 seconds)
    (36/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.576800765 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.423822096 seconds)
    (38/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.607476106 seconds)
    (39/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.328395118 seconds)
    (40/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.451694179 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.316454133 seconds)
    (42/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.431359966 seconds)
    (43/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.419238759 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.316076727 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.409530033 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.376145133 seconds)
    (47/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.368185704 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.578213725 seconds)
    (49/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.537429333 seconds)
    (50/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.318402395 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.37723188 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.815669401 seconds)
    (53/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.318477285 seconds)
    (54/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.465210681 seconds)
    (55/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.421484678 seconds)
    (56/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.380689863 seconds)
    (57/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.341070948 seconds)
    (58/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.497612531 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.488524775 seconds)
    (60/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.313017127 seconds)
    (61/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.633518293 seconds)
    (62/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.372954526 seconds)
    (63/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.519097928 seconds)
    (64/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.370525674 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.430811414 seconds)
    (66/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.322835387 seconds)
    (67/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.316008654 seconds)
    (68/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.519214736 seconds)
    (69/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.323608048 seconds)
    (70/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.521151794 seconds)
    (71/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.413996922 seconds)
    (72/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.379742079 seconds)
    (73/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.329563573 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.448826609 seconds)
    (75/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.457871758 seconds)
    (76/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.375211674 seconds)
    (77/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.377017659 seconds)
    (78/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.372164147 seconds)
    (79/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.437620232 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.432591991 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.41546083 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.45045255 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.427229317 seconds)
    (84/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.350711737 seconds)
    (85/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.368989052 seconds)
    (86/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.557984073 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.586044095 seconds)
    (88/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.420339528 seconds)
    (89/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.429224611 seconds)
    (90/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.623845821 seconds)
    (91/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.505879113 seconds)
    (92/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.375109638 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.457676633 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.374026856 seconds)
    (95/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.320860016 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.453571947 seconds)
    (97/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.492839749 seconds)
    (98/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.404281485 seconds)
    (99/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.548316385 seconds)
    (100/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.489455254 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.421619726 seconds)
    (102/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.519171967 seconds)
    (103/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.319775209 seconds)
    (104/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.555705473 seconds)
    (105/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.459138228 seconds)
    (106/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.475087648 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.489888134 seconds)
    (108/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.345999009 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.496817942 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.470719076 seconds)
    (111/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.546304125 seconds)
    (112/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.611353804 seconds)
    (113/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.323440277 seconds)
    (114/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.451163618 seconds)
    (115/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.747248174 seconds)
    (116/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.684844824 seconds)
    (117/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.685920722 seconds)
    (118/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.321765079 seconds)
    (119/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.411745238 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.638333194 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.383911129 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.452865864 seconds)
    (123/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.584051808 seconds)
    (124/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.60664542 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.624617993 seconds)
    (126/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.615222288 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.32969747 seconds)
    (128/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.401641849 seconds)
    (129/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.537725396 seconds)
    (130/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.548754138 seconds)
    (131/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.67822875 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.479716066 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.438033547 seconds)
    (134/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.526066953 seconds)
    (135/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.521130696 seconds)
    (136/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.335651484 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.590348191 seconds)
    (138/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.657623303 seconds)
    (139/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.517575378 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.410667576 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.455379804 seconds)
    (142/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.318818529 seconds)
    (143/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.337831902 seconds)
    (144/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.434863171 seconds)
    (145/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.437005549 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.525482151 seconds)
    (147/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.326296994 seconds)
    (148/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.481240674 seconds)
    (149/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.373617091 seconds)
    (150/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.494604341 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.358293822 seconds)
    (152/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.463475356 seconds)
    (153/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.327902092 seconds)
    (154/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.438553039 seconds)
    (155/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.41330786 seconds)
    (156/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.450024616 seconds)
    (157/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.551937823 seconds)
    (158/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.345650733 seconds)
    (159/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.37214867 seconds)
    (160/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.514961356 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.448558573 seconds)
    (162/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.325011445 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.332447879 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.413512899 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.486225648 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.487242018 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.382437567 seconds)
    (168/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.595664437 seconds)
    (169/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.433042209 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.461738031 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.450730281 seconds)
    (172/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.497211373 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.379500256 seconds)
    (174/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.325403854 seconds)
    (175/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.412518173 seconds)
    (176/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.588018033 seconds)
    (177/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.328073454 seconds)
    (178/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.494989091 seconds)
    (179/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.426365226 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.477452448 seconds)
    (181/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.386962143 seconds)
    (182/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.463953928 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.373581202 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.547640871 seconds)
    (185/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.325999898 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.357941412 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.334311804 seconds)
    (188/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.440860351 seconds)
    (189/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.456480892 seconds)
    (190/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.685593706 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.365034715 seconds)
    (192/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.437635541 seconds)
  done (took 327.421736214 seconds)
done (took 328.643147176 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376743882 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.451444783 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.358389508 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.357090451 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358168883 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.3520132 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.373020582 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.35716775 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.374587423 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.372320614 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.350119438 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.362066867 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.373543324 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.370107837 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.391022264 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.356931301 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.357693522 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.367222402 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.372539783 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.374282147 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360326522 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361247459 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.38793093 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.359183209 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367891668 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368178343 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.365696821 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.34929077 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.369030663 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.372440836 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.354858026 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.365884942 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.375988722 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371360094 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363193209 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.373637109 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363741365 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.449029294 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.380675457 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.369283923 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.368465393 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.373835218 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364468013 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.363698992 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.371994039 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.390148752 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366917765 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.376791224 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.354436972 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.356989414 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382305994 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.371761182 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.369239346 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.3555152 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.362159543 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.377657173 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.369906197 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3819571 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.365561077 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361999951 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.397216811 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381115875 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.374051398 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368272524 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.369571462 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376142094 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.370914586 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.376919003 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.366964441 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363903279 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363715102 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.368864209 seconds)
done (took 107.938365943 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.486788629 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.360945386 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.518555862 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.369892037 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.530536905 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.482760855 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.36910166 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.369701872 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.370626137 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.159040122 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.368991857 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.368290896 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.358791653 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.371028819 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.484593236 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.368440957 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.366873118 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.062062965 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.373210016 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.496532716 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.360187903 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.37290626 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.370659085 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.169842705 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.36008213 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.356371374 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.500969575 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.371167956 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.068471248 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.35459463 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.359345991 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.070633587 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.500789865 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.392880705 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.382329852 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.378335316 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.531906274 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.371552548 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.486873737 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.487583118 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.521587167 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.411819254 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.354863318 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.364921057 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.374900121 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.372832777 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.372260479 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.399890546 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.360757415 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.370591244 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.064720716 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.382166933 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.380228162 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.372716372 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.373790066 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.393967697 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.374557518 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.37314553 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.500972763 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.372326452 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.489063803 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.17227328 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.168992622 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.37489896 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.359833898 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.37465037 seconds)
  done (took 110.557032236 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.436164658 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.444939225 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.477840958 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.361706668 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.413510334 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.476981265 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.364604058 seconds)
  done (took 11.21802019 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.373255422 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.372507304 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.413028369 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.413603987 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.373408001 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.540592517 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372524966 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.376127546 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.375599161 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.415531438 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.374080021 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374038224 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.383621089 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.36648669 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.415597235 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.377744355 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.484206933 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.367520907 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.37548369 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.513965873 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373678127 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.38617768 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.414551955 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.378683778 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.377183625 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.37577684 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.147545136 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.374097481 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.376557094 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.373076233 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.376775148 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.433388491 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.37641982 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.366146437 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.375950044 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.481671694 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.374250713 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.376109591 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.376710728 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.367621806 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.374045764 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.37323177 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.375911641 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.37836051 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.376813134 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.395307746 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.376238232 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.374798457 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.37558529 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375624614 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.415837128 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.37689994 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.37661155 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.376306905 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.423372767 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.386056144 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.374775007 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.375457513 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.377343246 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3781431 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.520276582 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.414807052 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.378563113 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.415005824 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378199213 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.378726505 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.377817491 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.379195713 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461074453 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.379945325 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.415538009 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.375138348 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.550048788 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393378081 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379581427 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.37134639 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.373731649 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378040917 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.368215123 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.379797133 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.376719122 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.370955806 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.37455522 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380917309 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378408935 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.527913479 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.478486347 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.37814831 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.38597421 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.376571574 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.379515359 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.420640763 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.378698322 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.377549607 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.418793566 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.49080786 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.422837515 seconds)
  done (took 141.410183879 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.384819434 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.382831849 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.372748985 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.399212864 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.371687073 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370782789 seconds)
  done (took 9.526124022 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.374646031 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.383068605 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.378104897 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378238493 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.380130109 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.381262179 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.379905264 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373589953 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.384780008 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.380650343 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.381841651 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.38313483 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.381743228 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.384007733 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.382046219 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.380101856 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.381779327 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.382896292 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.382107606 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382449216 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.372778902 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.382917805 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383479669 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.375502413 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.386477871 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.381430984 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.398873224 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.379520487 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.383174729 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379927883 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.384177714 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.383911324 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.374409752 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.376933376 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.386347239 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.37480084 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387127179 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.380854711 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381831933 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.382757141 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.385027012 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382542138 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.380985408 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383461127 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.375050103 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.378517609 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.38659028 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.39790746 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.382424221 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.384735553 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.383108667 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.385052979 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.383562989 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.384683267 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.376774147 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379174495 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.388987003 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.385553641 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.383857321 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.378425713 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.389882125 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.387428749 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.377367481 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.383960123 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.384378035 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.383292735 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.375363605 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.388837432 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385966294 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384798563 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.384218489 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.384185915 seconds)
  done (took 101.780845259 seconds)
done (took 375.730059073 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.755707289 seconds)
  done (took 4.007320916 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.378407956 seconds)
  done (took 3.630871792 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.386537008 seconds)
  done (took 22.642947971 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.417974057 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.421345798 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.384713913 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.374379191 seconds)
  done (took 10.852082657 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.648399076 seconds)
  done (took 3.902519862 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.380568993 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.387568056 seconds)
  done (took 6.026999253 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.575137965 seconds)
  done (took 3.828709816 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.628638306 seconds)
  done (took 3.882881671 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.386301352 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.404476001 seconds)
  done (took 6.053026344 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.351823848 seconds)
  done (took 3.606835655 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.990466279 seconds)
  done (took 21.245082121 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.39750836 seconds)
  done (took 3.65384087 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.418689702 seconds)
  done (took 3.674190509 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.892996433 seconds)
  done (took 6.149027431 seconds)
done (took 104.408534359 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.373867997 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.370825532 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.371194197 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.373247827 seconds)
  done (took 10.744244417 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.453080529 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.45160721 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.462885997 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.447259492 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.440879414 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.454954204 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.433091478 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.427522151 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.443482243 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.438697903 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.45911565 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.441265267 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.452945505 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.413590526 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.440488126 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.45486629 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.446107593 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.459668726 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.416349045 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.446577798 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.389066654 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.447598035 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.44342745 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.390382058 seconds)
  done (took 35.811879825 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.899502728 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.450897308 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.53660859 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.432826215 seconds)
  done (took 7.576215731 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.497553135 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.495008855 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.510748473 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.556816685 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.595617972 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.508689515 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.415549801 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.413770801 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.396839489 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.496813878 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.578907923 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.496385432 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.710667932 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.392109319 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.711238818 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.389246878 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.390426837 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.496956843 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.54833039 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.571683014 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.391096178 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.496188144 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.501913781 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.497961995 seconds)
  done (took 37.318514435 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.400021132 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.40733124 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.392502416 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.408315605 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.392929454 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.394993021 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.393294852 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.400018643 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.393599516 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.391411365 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.391680745 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.408041616 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.393872962 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.392457706 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.398010147 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.394611179 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.394990584 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.400913415 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.401305594 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.393972468 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.395397551 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.39976008 seconds)
  done (took 31.999237913 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.378297256 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.378453508 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.73126832 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.633988774 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.380409223 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.375177967 seconds)
  done (took 14.137141078 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.45312259 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.58699442 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.381374647 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.728407349 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.813306401 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.384775972 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.387689313 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.625786341 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.913785123 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.901882093 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.440802077 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.453956944 seconds)
  done (took 20.331936677 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.392777712 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.381287193 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.388332232 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.39816962 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.436176652 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.387509729 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.391525466 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.379088455 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.438613329 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.441187502 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392450247 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.439155058 seconds)
  done (took 22.128376392 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46980113 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389998526 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386981411 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461111086 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390895117 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386838599 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46872706 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.081494549 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.390506611 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66706993 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393459748 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47544942 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.636154969 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396734584 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391414947 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.36242915 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621757988 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87478764 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395135988 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392752449 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424954463 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396917315 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404403586 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596814623 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390086131 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390162817 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.653045071 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389745658 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671664664 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646904755 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645325981 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394883754 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669484466 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035743953 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494250411 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593421755 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382365639 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401300073 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.384261808 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.425605219 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403194632 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388097324 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647010437 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397303638 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394869911 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394455589 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111580376 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.399564987 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.393878168 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392568938 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649022397 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478232648 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.398752331 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392107169 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398244489 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394816411 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.401885953 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52136649 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03598425 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394338439 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39698653 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.396321103 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396872339 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398400865 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027700793 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.39854686 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.401510643 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401887492 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395779407 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39248812 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420539136 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396963734 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.410688965 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395246446 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156430535 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400302091 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398004892 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938341265 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407527633 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.399279943 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622545766 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397655064 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39658439 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.392842293 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397385474 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123065822 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40509646 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.365420903 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438085269 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090517788 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.596252907 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416016885 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426230903 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619392511 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.364398374 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396720212 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.397728153 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398649787 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413926668 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09972797 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391569564 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.398688025 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645330368 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.611668205 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405843417 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.367745939 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862835845 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394406095 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.423917545 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404217329 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603827235 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.000476012 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660041478 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402751598 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435898048 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400203345 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194725637 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402621268 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.405514532 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399925317 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693639484 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.207085259 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401995281 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474902657 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401418535 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401511529 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400792006 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403870544 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398811803 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.579392639 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399403007 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.655377819 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.403305779 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401652129 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.398041599 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403560007 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.401233189 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620634087 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39813062 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679052664 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399758603 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401598493 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394822891 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.612993914 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.402263254 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.400854502 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745016118 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402854377 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406414449 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65608033 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434491632 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512912031 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433290188 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.406702241 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648868956 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.403928688 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.408605827 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402585235 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403810572 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407764141 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.410342892 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401400018 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010332929 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380405588 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403131016 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402082563 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.418736569 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476823479 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412972457 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607351702 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.404856712 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401710173 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.406928875 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.402754722 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640665316 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654391439 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.405241634 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57793415 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.866958787 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004518959 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420826221 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.403578071 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.402041731 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.403810385 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404813178 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403379021 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401183784 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607329116 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65752829 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402141526 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014307105 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407280152 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404011176 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.412898602 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65651526 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.415291683 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407250768 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.403756721 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419371484 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408680062 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.672885317 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627372266 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.420094449 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403180022 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.921158488 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413654854 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405932753 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40491616 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432361755 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404732562 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241508377 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741478442 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415616228 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655180011 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408501353 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.424231041 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.404325922 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405501929 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418297636 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.412409133 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428130961 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.608693726 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409777419 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411494 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042132499 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176585282 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964000184 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403358321 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.415338154 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404840686 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.108521584 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401721942 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407104907 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652496599 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108387863 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402575153 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867073544 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.403231083 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155463986 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661085496 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634013864 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406892859 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.418730353 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667505743 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621715583 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435083552 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406410312 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407625817 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.372950158 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946749516 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405190983 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589745684 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111341311 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402980331 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411931225 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.454191352 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.406954827 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802281908 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40395002 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409246939 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411826521 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411904769 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248123094 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408977626 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411261534 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04850408 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413180421 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.878106287 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404799957 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616437941 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.662381599 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.645050575 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.416777484 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.419689761 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.655578035 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.672237199 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409994587 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41825162 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965277748 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.270155436 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.415320651 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410463209 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195796201 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410331086 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706664468 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.417010336 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.416222708 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41470787 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413132089 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411033665 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.409842832 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419356792 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392789873 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887359866 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.404463606 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415465642 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410791867 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412886003 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658971028 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.425999521 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.023014429 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631309023 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402156645 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437401741 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.417399392 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411571526 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.383826867 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410666053 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413927727 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436270066 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634261001 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.413635017 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.382051697 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497561229 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626108486 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411764661 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412558918 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630400789 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.410635789 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.419623829 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187948115 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43974587 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412565183 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415442059 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402752986 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461641299 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489307817 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618672777 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.667617688 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.672739299 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810943248 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408551186 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417652878 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.43048426 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497777082 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421629718 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.426856967 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.415992823 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027656365 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186892233 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034877892 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671664105 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41637413 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427070335 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415219106 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654395233 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415996588 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692094515 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414662617 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.403708718 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434806682 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431509615 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416926508 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64466941 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690757955 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413126452 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420428229 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416970654 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.417630157 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683870323 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.631611601 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903623169 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94976264 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412926313 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425524921 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136118862 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690754224 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416317311 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417562768 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419000405 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.430004053 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.414223307 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.42433229 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425943117 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641084598 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675398912 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073409559 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.668902059 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.591874329 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.346179131 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41681477 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666731586 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247545916 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.624349942 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036347619 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.133581587 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668373173 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491655326 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625810508 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.414473281 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658186726 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.421241583 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420192909 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419260052 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421158625 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.418552515 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.675561097 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042855748 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669998801 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.426382573 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.421732291 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451585425 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.626715662 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6400361 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165691359 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639713364 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682804592 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42774346 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422461809 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048788447 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6789098 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424300592 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.419391971 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637258406 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415885073 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456335477 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.295485464 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.420956629 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975127852 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.630885756 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438977393 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425841897 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.144602348 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041094709 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.430538682 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909788427 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42322906 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430485778 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702970332 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.429011142 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.43571046 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708186356 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.428194231 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.434885463 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633399904 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.031897147 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174509704 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.440410429 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420746482 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.426390784 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424499475 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415531327 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421524852 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419061158 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.821757217 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416214903 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424948755 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431458267 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.430873604 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43554518 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.425799469 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426188715 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.428729935 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.404867827 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.395744155 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.437175673 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552248024 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036320844 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421464274 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.040724033 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.758608954 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.670754247 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.43452847 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.39735876 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.4320554 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426822338 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426486126 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419734852 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421356795 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964078618 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.432315052 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.686091183 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434972595 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.638085165 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637590284 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435693908 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635384231 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433041781 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450120016 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.393918996 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424976643 seconds)
  done (took 997.051081016 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.444361052 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.434162551 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.438393075 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.417299198 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.442917551 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.436471368 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.440366661 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.496270024 seconds)
  done (took 20.842290425 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.419484212 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.421354755 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.430278504 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.42117665 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.429895865 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.904977109 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.424594921 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.422431472 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.440462636 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.420519728 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.428239457 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.047160849 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.430643475 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.421374767 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.419087978 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.425232281 seconds)
  done (took 33.200391206 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.191456431 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.456903329 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.058560836 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.473074843 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.419743179 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.422910281 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.580020462 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.41325205 seconds)
  done (took 26.312403019 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.43447664 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.433316506 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.433761943 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.433464992 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.431253052 seconds)
  done (took 8.459040994 seconds)
done (took 1267.170885084 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.436671417 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.435090327 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.4332045 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.434701537 seconds)
  done (took 7.032132285 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.400560899 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.398132691 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.399490657 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.412865682 seconds)
  done (took 9.904601232 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.10908203 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.958454249 seconds)
  done (took 5.363737405 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.957490177 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.956372103 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.949524241 seconds)
  done (took 7.160023683 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.70340235 seconds)
  done (took 2.999695924 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.386271091 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.421861615 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.426748374 seconds)
  done (took 8.531442854 seconds)
done (took 42.284944983 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.419382672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.175226177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.577000757 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.420911293 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.579579059 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.578737492 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.671118396 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.43561739 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.425174892 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.433948899 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415247179 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.579856953 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.660071628 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.181501184 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.659990345 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.184879324 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.583394252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.432749365 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.42187318 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414176127 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.665225014 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.42242607 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416984999 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.435408443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.578783775 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.566488569 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.430479354 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.178251092 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.422199452 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.430216442 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.560704342 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.423022118 seconds)
  done (took 84.074494544 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.422835873 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.429935297 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.417826864 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.434573707 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.416812823 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.432129939 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.42076087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416717163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.42174313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.41951926 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.418417601 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.418253465 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.419792541 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.418184073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.418591414 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.418804681 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417561178 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.417661755 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.418803642 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.418577405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.420344428 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.431378034 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.418250475 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.434446688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.429434201 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.418794809 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.442498263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.41823209 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419440129 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.428346562 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.418491074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.433472267 seconds)
  done (took 78.830149823 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.423011367 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.417805899 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.421336968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.418312198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.43182506 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.42109028 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.420858615 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.432614572 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.425873361 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.422858115 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.424819912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.420811787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.419090725 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.417181893 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.421475372 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.419669816 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.419997758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.419678803 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.4202732 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.430360721 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.42219625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.434947321 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.418404711 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.419858451 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.419264303 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.418037786 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.43568742 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.426693949 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423820755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.420877464 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.422842609 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.440626796 seconds)
  done (took 78.851008919 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.668763326 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.440337045 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.443537249 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.433731335 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.44439874 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.441120439 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.436825511 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.686558728 seconds)
  done (took 15.296645774 seconds)
done (took 258.349236551 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.437114069 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.931759035 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.462129865 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.435974368 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.44906405 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.464043747 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.642712973 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.464394432 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.630236635 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.444784188 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445991162 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.437802356 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.231028797 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.570474238 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.242491557 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.357579652 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.307331104 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.445690279 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.985370167 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.653799253 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.466425142 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.427493704 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.249081367 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.322802336 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.409746799 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.507998192 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.502102956 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.592774645 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.556585854 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.499427195 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.919263925 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.438967533 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.43634735 seconds)
  done (took 65.670887579 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.435255431 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.446014211 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.444754141 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.443843734 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.446504516 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.445417045 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.434840841 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.448196797 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.447080496 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.447247256 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.445768847 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.446425523 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.447770187 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.447088467 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.447856066 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.416833717 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.437917564 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.449591832 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.436101527 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.419902621 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.447868085 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.445945002 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.444535131 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.442925478 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.446826231 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.446003567 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.447556697 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.446791174 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.445518262 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.446440989 seconds)
  done (took 44.597941359 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.446408691 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.013057843 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.168993849 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.43890798 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.438197388 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.443181982 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.729470717 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.450407565 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.44203161 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.443869831 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.902069378 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.450245971 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470504895 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.179744123 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.437144574 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.450279713 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.44919809 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.439751232 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.026904246 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.450382282 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.728862405 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.451533636 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.726567884 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.452082507 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.443644153 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443001391 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.444764806 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.244634618 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.453677358 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.908693399 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.212513103 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.721219599 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.179661314 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.217831537 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.216235202 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.454129284 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.451607858 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.912158651 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.443429596 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.440495077 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.725860417 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.442751505 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.187744365 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.124654522 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.453345993 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.449202722 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.272153426 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.905831602 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.684871684 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448693999 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.221135618 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.441461686 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.452457862 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.443625372 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.682913523 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.444906439 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.442212172 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.298640771 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444422527 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.729733533 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.452262824 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.442896872 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.023214308 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.444350155 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.017064228 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.445912193 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.452958847 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.443659238 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.19085528 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.446164334 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.144936642 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.452763135 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.450041229 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.909963888 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.021798521 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.326164349 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.446120717 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.029022924 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.207560804 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.742643826 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.447383843 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.226567301 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.749513702 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.448212059 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.456132338 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.45520945 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.452502793 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.55071131 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.723618592 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.061941471 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.143602158 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.299491242 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.726542268 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.452835906 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.447016195 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.29536936 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.447913737 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.453247026 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.186149415 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.147546244 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.454832876 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.455925472 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.13229771 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.457548943 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.735206793 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.450666328 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.226145936 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.447209454 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.542604151 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.456539636 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.449646139 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.450401472 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.732468256 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.449757513 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.457622486 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.129490236 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.929815483 seconds)
  done (took 200.642691478 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.45109247 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.435592151 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.44884859 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.433436712 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.436920399 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.448559161 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.440213574 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.439930425 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.445341666 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.441359778 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.441802255 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.449203787 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.448249411 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.442562979 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.442199063 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.4362445 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.441092878 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.444067189 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.449521623 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.443245516 seconds)
  done (took 46.172712004 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.456367313 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.012045327 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.966889871 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.458259406 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.458091495 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.448809342 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.5050055 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.459531196 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.457463891 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.746588933 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.614448379 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.459198374 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.457972072 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.457532452 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.974810261 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.431085248 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.751428498 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.015799932 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.460210972 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.011456856 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.430986762 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.459243516 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.449168684 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.015356567 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.760842999 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.731809811 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.5070881 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.01591933 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.460195247 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.458905122 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.014689906 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.461786635 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.44980728 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.000133004 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.459724934 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.474094745 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.457010214 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.508029379 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.509631261 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.754415177 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.020826286 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.742630988 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.47375583 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.613133884 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.45778049 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.431304835 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.027261446 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.46197697 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.431347524 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.461738872 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.466229598 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.987299505 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.452696023 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.989954257 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.461673639 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.462539878 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.019261344 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.990854903 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.980861878 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.621849386 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.453380132 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.737156748 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.461796234 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.031441968 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.463378719 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.462883301 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.461893738 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.623119681 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.021052111 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.738364197 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.757042803 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.759610029 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.461771401 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.52039233 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.465035139 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.756797694 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.51896328 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.846593575 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.752983179 seconds)
  done (took 131.144990265 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.728519603 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.564351742 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.840815156 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.038542734 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.955126263 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.585173804 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.568098115 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.699044918 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.471408407 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.567113724 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.116632681 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.540423199 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.186356202 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.513164751 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.565915717 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.577966088 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.860076635 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.407956468 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.090181777 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.085149522 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.45776233 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.567493158 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.961523931 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.649761444 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.449492585 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.007619967 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.389034594 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.976565368 seconds)
  done (took 54.737511744 seconds)
done (took 544.267787147 seconds)
SAVING RESULT...
DONE!
