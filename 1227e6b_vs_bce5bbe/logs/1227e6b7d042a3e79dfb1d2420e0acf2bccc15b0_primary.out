cset: moving following pidspec: 17706
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.671457219 seconds)
loading group "string"... done (took 0.523152264 seconds)
loading group "linalg"... done (took 9.52012628 seconds)
loading group "parallel"... done (took 0.170981462 seconds)
loading group "find"... done (took 5.750361926 seconds)
loading group "tuple"... done (took 2.06512683 seconds)
loading group "dates"... done (took 1.392425216 seconds)
loading group "micro"... done (took 0.193946212 seconds)
loading group "io"... done (took 0.532155476 seconds)
loading group "scalar"... done (took 56.676365533 seconds)
loading group "sparse"... done (took 13.581566874 seconds)
loading group "broadcast"... done (took 1.715602603 seconds)
loading group "union"... done (took 10.482275636 seconds)
loading group "simd"... done (took 3.488962392 seconds)
loading group "random"... done (took 13.011800875 seconds)
loading group "problem"... done (took 2.237893855 seconds)
loading group "array"... done (took 24.133478711 seconds)
loading group "misc"... done (took 1.155473116 seconds)
loading group "sort"... done (took 3.68019241 seconds)
loading group "collection"... done (took 21.592204328 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.702816887 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14683772 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.176671821 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.223160559 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277009633 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166406807 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158442514 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.169512693 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.562813757 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207088259 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137729661 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41460287 seconds)
done (took 6.11811669 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.266223694 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240004685 seconds)
    (2/2) benchmarking "String"...
    done (took 0.186946332 seconds)
  done (took 1.140346496 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077332991 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157378207 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109189569 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093969976 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093720488 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108767491 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093609192 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108508453 seconds)
  done (took 1.489711311 seconds)
done (took 3.6982377 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.513258324 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.889054917 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.520065812 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.178866986 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314682809 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.303564468 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265078232 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.219286885 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092007594 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.083843855 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175246716 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.453664417 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.379812045 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.955897473 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068589784 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093859232 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.154006439 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.782190624 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079483391 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.107935513 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.521418057 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.209790652 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114522229 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106384041 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185277686 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133548352 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.139293381 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103124927 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.669843368 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131322145 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.21945429 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083386664 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137332802 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165719616 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211459273 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109722333 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671784294 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198349864 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095709681 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101593448 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683036122 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.11570508 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.203311396 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105901734 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068157824 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.159708456 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101076414 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.092560558 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094420587 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087276423 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159231795 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.438728355 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105049474 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.190231835 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093024496 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.697421211 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096782595 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273508151 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126882978 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092688781 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090483623 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087690134 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154611695 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093695544 seconds)
  done (took 20.10973971 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.169684855 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.184960441 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078254339 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15491148 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.119647072 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09676753 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084383314 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079283947 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125261603 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178290426 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136311578 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.19039748 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076878339 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089782521 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.169614305 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228865169 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.125295567 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104277221 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088984723 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106810692 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12253456 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096186695 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107323689 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09039751 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171463604 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203817957 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108579387 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123183163 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090210946 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09448352 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14245641 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143771516 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091932434 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088178086 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169272353 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122820876 seconds)
  done (took 5.296825451 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.241186625 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105547027 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.247453336 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.197901011 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.115645297 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152427888 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18608912 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178454183 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.292414463 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.22869893 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181374213 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114329353 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114094843 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080090541 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082492806 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079114929 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.326042021 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.190879362 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150730291 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.186798676 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081540536 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116050842 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098403961 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085505549 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085683926 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113815096 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.11939153 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.32002164 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.226350656 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097148491 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.024780227 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10722366 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100217618 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135621858 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199422625 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.140996476 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122136645 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111417156 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.088270207 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22230413 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102560783 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.176532927 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078039299 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.135606651 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117048799 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131212655 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109530233 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110131078 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221157684 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087974838 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129255361 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.020678396 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196400117 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.162388369 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085201911 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288724003 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.129302818 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101727886 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.110875794 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.77369844 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126687173 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082824746 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079135773 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112816512 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080405594 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.455079285 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125691501 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.557265364 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085754904 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155631146 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097736971 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120431853 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089133386 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085165989 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.127952273 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083692929 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.102569867 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080827504 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087075472 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095415098 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.090954269 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112299713 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102370648 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080448651 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147543568 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112847269 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109595867 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124059129 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091940075 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087382228 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129429594 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083466345 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.106968777 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168629787 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117030217 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112577471 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116129061 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14478257 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08929688 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.249328946 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099431517 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.1240564 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099280366 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113899227 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115523406 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082627059 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083902833 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095498905 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082642573 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147616106 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.102249254 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082434775 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088578684 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109507143 seconds)
  done (took 28.810682443 seconds)
done (took 54.933530274 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.421002493 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080123623 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079019809 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099761414 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080980745 seconds)
  done (took 1.560207121 seconds)
done (took 2.33300873 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.305786167 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.194956763 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103327624 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.184517227 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085937198 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192584938 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179925184 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10178269 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204036892 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085333858 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.188407389 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087070287 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102908836 seconds)
  done (took 2.819006706 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105045533 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107457969 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102544272 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120166638 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085954768 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102621332 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117404232 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107994722 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101448125 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112412015 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087108422 seconds)
  done (took 1.92300719 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102209765 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10391558 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091771662 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115595589 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085571634 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099353393 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116279297 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107940688 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098402076 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112227288 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086757468 seconds)
  done (took 1.896135459 seconds)
done (took 7.41019596 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.090788725 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.544092425 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.162738234 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.236240533 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.350756709 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.281495233 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.570374693 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.198892144 seconds)
  done (took 14.34181261 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.198577899 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.110802841 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093150958 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094752692 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.108962044 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095564974 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093165541 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.109002723 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092876569 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090692153 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093752797 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.109644992 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095229756 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091880166 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.106681144 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091275487 seconds)
  done (took 2.512618306 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143865001 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.124282539 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.114263487 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099426461 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.110802451 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098902593 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102165308 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.11394995 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094566052 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09481969 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102573049 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111860823 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09857171 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09348498 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112365761 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116860081 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093805646 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112563441 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115111915 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.113254238 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09918331 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09681347 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113673345 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099768604 seconds)
  done (took 3.438646841 seconds)
done (took 21.070753226 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147581674 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099110549 seconds)
  done (took 1.030990603 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.166146299 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.181573877 seconds)
  done (took 1.135270319 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111442846 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089006154 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134086127 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101760528 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090755434 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105026668 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113864163 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.090944284 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.105626338 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090206984 seconds)
  done (took 1.824891295 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095294048 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095056149 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12037949 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.169389796 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114322564 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092332724 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094148563 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.10988434 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096195001 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090252231 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.111036553 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.107193268 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095014534 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12310508 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094687097 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095069698 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114345455 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095283938 seconds)
  done (took 2.704692941 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09170797 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092403418 seconds)
  done (took 0.976030381 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093726535 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089675741 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091230581 seconds)
    (4/7) benchmarking "year"...
    done (took 0.225114536 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089187966 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089317922 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104094226 seconds)
  done (took 1.573059771 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.514889167 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.237210282 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.361864017 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071177465 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.100961557 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.308792276 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.119685073 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070012341 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069501844 seconds)
  done (took 2.695740069 seconds)
done (took 12.729950163 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091935359 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241967327 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.621291214 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113126665 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08929908 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159145163 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.305527416 seconds)
done (took 2.42241126 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343387498 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.163327161 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08149029 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09075024 seconds)
  done (took 1.473950555 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083250838 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098698949 seconds)
  done (took 0.984707371 seconds)
done (took 3.261468696 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090968775 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.120377088 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.107041142 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.090276347 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088885192 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088693793 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.105794055 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089645718 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088857787 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.08837463 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.106975378 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.088954623 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.088704105 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102917614 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089116752 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089344084 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089415794 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.103891449 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088821505 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087524386 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103358243 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088208461 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089215137 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087973181 seconds)
  done (took 3.098638265 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107952358 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090132592 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108488304 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095298266 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093109417 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.107840873 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093226739 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090984121 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108476389 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090969255 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093400362 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108839787 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090832894 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093025202 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091378223 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109077058 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09256178 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089948884 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106880348 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093593562 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09205482 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106105074 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092837774 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093199694 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110155514 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093351772 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090192197 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106294633 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094025124 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092600819 seconds)
  done (took 3.731492855 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098685915 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086914774 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08957465 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113139975 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086900728 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089739705 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101235959 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087718092 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08964764 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087794486 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.10790199 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089392023 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085818995 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105741632 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089732232 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092094153 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097179543 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.103452055 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086956147 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090510226 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109282259 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087057341 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089544034 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088734643 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106310351 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087430259 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08988271 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105254435 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090714279 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089784293 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091364592 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.107772131 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090124363 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099615587 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.107911657 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089090403 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095695521 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102621292 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090684719 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086589857 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086018606 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105618365 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086642374 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.0955796 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105170272 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090242526 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086415582 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090117458 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.10633734 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093520288 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086496069 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.102140732 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092184463 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091138373 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.091782506 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.102910421 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089979836 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085777259 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.106995649 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089262592 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086472897 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086059698 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.109726379 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090378979 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104872611 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.112174869 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087441554 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09091648 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106822558 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095919474 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091643208 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.114721243 seconds)
  done (took 7.651990245 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114615448 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098340694 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107475397 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091592905 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090287859 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089370307 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110793046 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090001682 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092127262 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112277642 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089990954 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091395712 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107136764 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092860476 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090839085 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090995933 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111876912 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090146352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08982932 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107885202 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090272677 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094292989 seconds)
  done (took 2.952202492 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217216528 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112761308 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138626322 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119585103 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106704789 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118976499 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095453931 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09685148 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110692172 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09895226 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09975688 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111350763 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108270177 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098710889 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116490515 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101380408 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094322839 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117739447 seconds)
  done (took 2.875350077 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106226935 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092563464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.152509834 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091640323 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093689156 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10885979 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097267914 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110673348 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.11078673 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092549986 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098084451 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108558748 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092285659 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094306898 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107512084 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094416999 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092269409 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092625881 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115179797 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097767504 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096746323 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114840126 seconds)
  done (took 3.073745223 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105973376 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091236576 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125668857 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096093667 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092547099 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090354241 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112805003 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091418387 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09671064 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.109563074 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093178561 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091315719 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.12165193 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093171211 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097451385 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108632373 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092370324 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091330727 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10810996 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091867391 seconds)
  done (took 2.818596308 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195151274 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124018073 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107581921 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114482591 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124360718 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107512366 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130184148 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106965525 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107089319 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134536515 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11018873 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107688259 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131052704 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111888927 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123192746 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115534438 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11392451 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130873721 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107636408 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124974385 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119197906 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10644932 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130371784 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108080694 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10746409 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124305247 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108434636 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129319388 seconds)
  done (took 4.180782956 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093328904 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090733582 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090577778 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106515169 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090827405 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090317059 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089523215 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106970697 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090919737 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091188387 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.106898764 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090928938 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091001544 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090058702 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108057063 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091718845 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089761324 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107081487 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090603825 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090791542 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090292711 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107495511 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091630534 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090840442 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106710784 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092108242 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09110453 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090209213 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107273481 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091413583 seconds)
  done (took 3.671901219 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104752755 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100766389 seconds)
  done (took 1.024318176 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100206348 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10371097 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090081593 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108136479 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098051695 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092626749 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116366216 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097735637 seconds)
  done (took 1.623425665 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.168540805 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.187967352 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09518342 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.120081186 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170572653 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.180286722 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.148988334 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096444842 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091240807 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083725386 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.18350246 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083509403 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110240922 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08972806 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09091064 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116413037 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093577649 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100535178 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.114906767 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.093888401 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096310616 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112212151 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094022403 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10174697 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102886496 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094670717 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094706557 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.120647621 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088889546 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092976992 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107309281 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094501963 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095032763 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.111908853 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092808917 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.187370561 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098728192 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08858088 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110308202 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096367428 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123842941 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092054904 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.11211083 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091582126 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110769171 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.097228932 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096506733 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091524064 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101740433 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087452213 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092392317 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104350321 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09204507 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093070718 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10840245 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098555975 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095183195 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104793677 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088943789 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088456193 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107333557 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089656778 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09499669 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094192287 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109680551 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094833234 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090455576 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.108900171 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094493173 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092785554 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108146877 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107780478 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092932497 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.113351752 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096901977 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092687382 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106424581 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097197379 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091112445 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10912428 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096118686 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11973633 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109722282 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088387156 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088123079 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.114047099 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094176545 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095215601 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08501945 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116932334 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094463975 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092000181 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.101460853 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091114633 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087817016 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.111211162 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085933426 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092927571 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090619223 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113071167 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097359102 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090070776 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110214146 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09700879 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096097716 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106941332 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.158610001 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10671545 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088987091 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09402502 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114050005 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08693563 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092394187 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091106988 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107685042 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087511003 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.094967889 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109100383 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093022998 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095337785 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111125854 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093876807 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094009106 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.108012071 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08958915 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095790502 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115435188 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094403822 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094526519 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092031524 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.110464051 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09216456 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095142878 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106845651 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097443936 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090189467 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.108689646 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093586187 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096071341 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110278968 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088855311 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090883149 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109974125 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092097403 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095303417 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109255688 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089799522 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085490018 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110320653 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089336355 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093235367 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099529763 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106108541 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095775317 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088773888 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11671692 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090159917 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098997181 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111954262 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099719377 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097419589 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101592234 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090144968 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095609612 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094366996 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106041652 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096660793 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091485824 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.116072927 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08670076 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095011884 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102266674 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091422478 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097043551 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.110890311 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096154108 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08878509 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.129724992 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121127143 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106620991 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090473572 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109466967 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096640609 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090629538 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.115059899 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099080093 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097330819 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.107127972 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09144365 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098028142 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105801544 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097088183 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090691228 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110453079 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085716899 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094356752 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084940049 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.11447807 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094840715 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097262695 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.113576989 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095226845 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092211922 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116912346 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090536871 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096931769 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085469557 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.115463295 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103492526 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098375388 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115334454 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095098661 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099428735 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.111363743 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10107086 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095688453 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110548706 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094270573 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085884534 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10353331 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.09920212 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097050657 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089195996 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.11032086 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09653609 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095012684 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.108077722 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087460971 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096943195 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113581603 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089733571 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093562713 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106087022 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093133717 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098884977 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103273567 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091329625 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094940122 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.115318481 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093748622 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093363302 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095821766 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.116506918 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097128557 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095691586 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109250516 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10138073 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091213151 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.110425064 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091429194 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096611636 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086889938 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.112809916 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093549683 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090435616 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107226298 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097128571 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099104857 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.115415101 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092540441 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097063611 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.116080676 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099984443 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091829148 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.116697501 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090964036 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086982887 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089883186 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105562016 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09549726 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089137612 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.114743807 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093240303 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092230318 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.115046621 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095932837 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091110089 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.114764015 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105294043 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087705253 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104478504 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092811428 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092953934 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106944791 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090644758 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095998486 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111525449 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098400364 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09625556 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090497394 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.11177787 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099461278 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08988309 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.116693252 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.09986183 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099475811 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.106829091 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098481529 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091175591 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11440395 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088739598 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094567292 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110405201 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095528195 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091037169 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091675512 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107976933 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087761603 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089895074 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116992413 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09367583 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098249682 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110669773 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092628884 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09139213 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107506053 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100891192 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09312311 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.115987004 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095905675 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087693715 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087679308 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.115382293 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094968031 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098994584 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107483691 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09824842 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100545454 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.115108872 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095913404 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102741558 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101617924 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.118146612 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09928263 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087762417 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109642309 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098992413 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094584864 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.114707885 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097146636 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088120264 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112916504 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102355152 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096021915 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.109960084 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088304325 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094931939 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099684616 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.11463503 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098482979 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096372698 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112424535 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091126091 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098252056 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.116567523 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096535431 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101174334 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093259735 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.115094354 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091594418 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098512522 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.112717506 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08902372 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087068104 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109218892 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101319195 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08853098 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098173905 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.117730564 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091664058 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092068744 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.116584525 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09209941 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096168371 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11620622 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093407124 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102246767 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111613888 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092992613 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098357891 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.115977134 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08864139 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092635127 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092795068 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118607391 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092992215 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099373813 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111813541 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100995744 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095972962 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.116204288 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100010628 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099304955 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08715505 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.119661933 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098432842 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095498574 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109223974 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09371139 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090071824 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111574359 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100603424 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091348465 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120748845 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10118191 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092457271 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109480459 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10088191 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093211946 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099874285 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.109714334 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096035281 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08713337 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115626796 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09460366 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100381014 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109937065 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091076878 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099392957 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.116042278 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100114142 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097253198 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.119482592 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089384678 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087955838 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096561069 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109705729 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103089684 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097025832 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110483043 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094495559 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096287659 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.113418795 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101819658 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089685097 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.10943075 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097029324 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096526266 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109892316 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090871304 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099364954 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092806874 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114406883 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09412937 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089611861 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111422398 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10175246 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092409974 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10882237 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092678886 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101150926 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111170926 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092683013 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089207988 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117843663 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098602996 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10159418 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090948543 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114007698 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092949325 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095781293 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.118418099 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093160923 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094210245 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.111371936 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100540117 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099187995 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107463845 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094610119 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10393138 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117163867 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096959614 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098001045 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.11140421 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101970701 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102484485 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096683238 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106954511 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089855916 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093360168 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108030987 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098777703 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100430495 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111607776 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093322048 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09955722 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098139814 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.115720473 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09804275 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089261303 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119327668 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093019687 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098333421 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106600208 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.09021452 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097078584 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099451777 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112136364 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096181233 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096643285 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.115112079 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091476663 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092176107 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116903403 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099846197 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10018793 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111305842 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094514067 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101128194 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103374482 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.114667261 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094441007 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101608299 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.121462904 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095839502 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094453438 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117002707 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101339044 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097621279 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.118924379 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094352147 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094908555 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.119705768 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102246725 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103878744 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112131867 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089804076 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099536535 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110799306 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090331077 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099447569 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102234011 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.122110025 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095645248 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092071059 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121602401 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100864338 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094830737 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112156062 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093707825 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099040834 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111314438 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099461392 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091587894 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120630881 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102320618 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101473822 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103402583 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.108911969 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100314183 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096234872 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.122968966 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097774542 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089791861 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109442007 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099308221 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101626722 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.120895688 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099727003 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099295974 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100108824 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.114744419 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097525091 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093068066 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.120621833 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101224059 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097175248 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11535008 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096049963 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096672485 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097238433 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.120734546 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102568742 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09705969 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124264107 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102118137 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094065383 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.112058862 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096637431 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097733793 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114503028 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101006275 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094043393 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108689449 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102144869 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104181577 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094705904 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121905187 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103376802 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094119367 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117793631 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103281347 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100828082 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.115223591 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098205793 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098754249 seconds)
  done (took 61.33815959 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146316102 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104168443 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117328961 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098719857 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114140129 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118333324 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098352188 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099076672 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117484703 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108629577 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097532093 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115895763 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113648333 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116856549 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133646816 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10804403 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117047076 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099918229 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098452294 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09833336 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130383774 seconds)
  done (took 3.224164182 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117142084 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11047205 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127351891 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110626201 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103645712 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127760213 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109861656 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127808341 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112153091 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105838585 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129563613 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108740516 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124296847 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107561736 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105785819 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125066576 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113617947 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10379503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130017994 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109696369 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10567007 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.128987682 seconds)
  done (took 3.416064759 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.131027978 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102269453 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096705263 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117602531 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102127929 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097325757 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121320563 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099061733 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105225284 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.112457415 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090512471 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093361121 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097379034 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117624544 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092650954 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098609878 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126093307 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103598726 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102870999 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.099020789 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110473012 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098659769 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098422241 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108876792 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104043326 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103110988 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.117606977 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101944958 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089420295 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100342758 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117933292 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092158269 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089917405 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.108512021 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090390095 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101562318 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100732752 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118815346 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099444327 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090803362 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.118560365 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104112264 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089621254 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097603921 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117977785 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093225379 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102281031 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.117351208 seconds)
  done (took 5.865967073 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127590949 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161912405 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102494918 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135129671 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132064652 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107726396 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101263705 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138327442 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100262874 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122132948 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113278619 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111060061 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125345334 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105667165 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.335747381 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124114739 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105082176 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10162374 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125485394 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102473468 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107046932 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.123684346 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110845452 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12963675 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105321893 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101502732 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101227439 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.124865731 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109666258 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125157383 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105342337 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104888988 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130237256 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102577466 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101994873 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.121143737 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111815923 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102732038 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123119427 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102121912 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103156182 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12435183 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105252053 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.113083001 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12334192 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104389123 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102610639 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.119279701 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111697592 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.10278185 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.126150949 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11230418 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12280324 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103957117 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104424842 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.130548201 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104115947 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101852967 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.122823844 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111917331 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10132781 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123123268 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111950525 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.100698351 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.127234302 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111759031 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103407736 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123715477 seconds)
  done (took 8.982944568 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134543604 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104478833 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132693523 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113015732 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104971028 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124919059 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105489135 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105868892 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125450472 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110383186 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123788909 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.224346831 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122994481 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110792946 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105472759 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126451434 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105380129 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104554659 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126669561 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105466664 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.105252749 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132813177 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106904474 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131762299 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116197983 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102673595 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124814589 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106278905 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112653619 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127609532 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115961499 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126454253 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107163175 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113793648 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13948828 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106246635 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099592178 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12614594 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106802189 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105823126 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.12286606 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114288074 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125637825 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104525137 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105903974 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12541644 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114201015 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116188745 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128928575 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110816646 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.106317542 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134547291 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105898392 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125176183 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114592426 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.119617041 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133582296 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113244507 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12516483 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113135109 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112644712 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.139220114 seconds)
  done (took 8.226372415 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102675094 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099495375 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098067904 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119308748 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09954629 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099064358 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098633426 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120037975 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100083522 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099348372 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119144526 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100371567 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099790579 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099393358 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119060337 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100249431 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099122172 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118796189 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100863269 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099717577 seconds)
  done (took 2.979129666 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.113608594 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115714228 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121584503 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108772215 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101614021 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127214992 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102969121 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101749331 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102682109 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122589115 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109852742 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108151181 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122765858 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107108179 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129282718 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108694755 seconds)
  done (took 2.692169359 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122996655 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117513733 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.212055332 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103630954 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124523647 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108053358 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101478448 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126186696 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100961466 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106928148 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126560136 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105049936 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10102713 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102209958 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.1227323 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10400778 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100217675 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12483897 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102190576 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.21389109 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106129774 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103020682 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124890068 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10585184 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103760179 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129702648 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108083186 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101455588 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.12592165 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10327855 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104222399 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.128454 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103396425 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106545215 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123501559 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105859634 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101656752 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102204299 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125446182 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102999175 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103683748 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123935807 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103174468 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10426551 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.120830745 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102875015 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10128422 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.126874409 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104710113 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103579338 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103055335 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129730919 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106960215 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108825694 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129675993 seconds)
  done (took 7.210185598 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116084186 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103881869 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132686417 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101410749 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102123226 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103187362 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123667056 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105540783 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102475285 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120969595 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103756704 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10329422 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123873719 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10401008 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103590363 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102449987 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.120708578 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105026361 seconds)
  done (took 2.871786825 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111130473 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102471916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106424864 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123982923 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101442163 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101868701 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121100581 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10124834 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101140781 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101439699 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124011735 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102264607 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100447161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122190891 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102384431 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102649606 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123056481 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101762991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10208816 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10195043 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122933678 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10117917 seconds)
  done (took 3.276518126 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115541847 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.2115631 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10789346 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.220307352 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098347485 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096872188 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130915875 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098396793 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.135685072 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099564239 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097787234 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.117874677 seconds)
  done (took 2.427312051 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131331037 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13916644 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122893708 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104391046 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111691193 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127491552 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107279327 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10596659 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134181569 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116897584 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127230504 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112968527 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112519252 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134011839 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110265175 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109511532 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126911831 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105908401 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10230711 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141835571 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106252395 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134331975 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107145033 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106923303 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127284955 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113915188 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112169206 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139158628 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106638054 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13315318 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111534812 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106630009 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134706637 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116853996 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123423788 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113713312 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107080559 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139617706 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111374335 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112261385 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124497437 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111338575 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133502925 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112488237 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113083147 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127032322 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112460953 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106225215 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126944931 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126991844 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131405635 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115311656 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110762978 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134173504 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114504197 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146897421 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118289719 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13521025 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112527841 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117539354 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134750517 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1104466 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134416371 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118422146 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11073344 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135152471 seconds)
  done (took 8.821383685 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143240079 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105213892 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128624556 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118301628 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113792522 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129341058 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107301916 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127398353 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108675495 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105310107 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170205209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108099295 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113164667 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139233946 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10765597 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126618496 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108821786 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114680226 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124762008 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127621404 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107094901 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135143882 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115001378 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135009413 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118065494 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110187312 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12852106 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108251847 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128121284 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108500244 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11236387 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127841361 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115584696 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105164502 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135083809 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108033998 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107653478 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133218666 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108155754 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110909758 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137647802 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121724537 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128784758 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108742519 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118127716 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128187529 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109311289 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107183617 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128835372 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104659663 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138267389 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119636066 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118540462 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135366412 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107831352 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12887178 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109320621 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109252145 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128076029 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112851137 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114556086 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129436774 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127673728 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127997834 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109568627 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11551243 seconds)
  done (took 8.816525655 seconds)
done (took 167.650141214 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.178492212 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.212526688 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.195940043 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155960883 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095120452 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.150657714 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127175007 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.196748739 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093871373 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094093807 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09325351 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.118567971 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.162302847 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094023811 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.116033529 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097207783 seconds)
  done (took 3.083128774 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194529671 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.329267715 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107917977 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119652792 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10047332 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099521455 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119177731 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10114946 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098996897 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127443431 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099518687 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095883774 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127235835 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095615524 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098757461 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119580739 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106447931 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098840903 seconds)
  done (took 3.154173842 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121746802 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14272251 seconds)
  done (took 1.178707589 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132928049 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.208787297 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27772262 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167292262 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119856699 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138167887 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14794844 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13132654 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186342128 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132906751 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112575368 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097377351 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146391834 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104067167 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114355561 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119156409 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128050533 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11274982 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.135031887 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10191034 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142593519 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103634477 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10430108 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133666641 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.177615636 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131699881 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104678618 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10375197 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121881097 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112959434 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104988914 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137380001 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111148146 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175994125 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103070036 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174418023 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106482362 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120824364 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114306488 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099290048 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123971578 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103069943 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.11170345 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119013658 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102916756 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105152287 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.124377361 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102381325 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.127709714 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107298476 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107427387 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.12775091 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15143117 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128687719 seconds)
  done (took 7.855431328 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.86121414 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.13962588 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099238135 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.003805316 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14323585 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112591929 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.845670633 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143877061 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226901676 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.900177118 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116772223 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108211233 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234659565 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.277751764 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.256362878 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.352552366 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.716473577 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133413634 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129353391 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159498947 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109304594 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121489094 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141865674 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.493201692 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.121641944 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100716092 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106134765 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131355377 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152069168 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123723259 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103010023 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19375944 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.288348622 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206576278 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101088485 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098394698 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119664731 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.160651859 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266875158 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212814655 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.194454538 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096613747 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120362387 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108571176 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118024709 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117955553 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.154068525 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187441851 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.186428348 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103147443 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129866488 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111716012 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10550579 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175371921 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097591582 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.352143552 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.379026525 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10094016 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107694956 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135374342 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262426388 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101892501 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230151767 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147453331 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210727676 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101125555 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823012224 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.180553391 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1000921 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105165243 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12958567 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105966074 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104752351 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190363482 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.496496576 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111224506 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103164614 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120063876 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208030831 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122864514 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100042597 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.177894348 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101122401 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10699311 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13330579 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10982141 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.18615398 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265479736 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10995973 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130066881 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105515159 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112751855 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.121372333 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207518541 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222513658 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171457125 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.225869958 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107160674 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.177095911 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.180901438 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106701049 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186562395 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106682044 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133224312 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107862125 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220758202 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153108267 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103278231 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10485214 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130951442 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135492721 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103719038 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131617256 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.182706443 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.526875675 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182048051 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097957193 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127013166 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109905413 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177899497 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106643298 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258889915 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129627591 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.160927835 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129020145 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099107958 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107644958 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.177310354 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107676583 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13097773 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10848984 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129825244 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.25564851 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214928938 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131881766 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251808737 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176504087 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128602368 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.166766542 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129848404 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163231281 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133235137 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106840123 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10060775 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813211564 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137920781 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108582635 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126066364 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182631172 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099838327 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125249171 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101237076 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097969208 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803723434 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127587467 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100161217 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103295519 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126390772 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109151277 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108605207 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127306894 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.153818701 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.258084907 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111352892 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107436601 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121217813 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.154448914 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123664142 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102031611 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102681458 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122505042 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110500711 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105488989 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125278318 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167029089 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.173350826 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.225722677 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.649610936 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101449221 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123993769 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238114665 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100690624 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32069582 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132054686 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233657563 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179594449 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100015172 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.354446233 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.181518911 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183590683 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125932404 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.164957346 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119827683 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110061924 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.175539197 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102820197 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107789015 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.173510258 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111108984 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133361811 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.273736924 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10069488 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247737595 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098631436 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.185246757 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101610953 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129591801 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322239067 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10091639 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136251683 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.15366447 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126393849 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104071878 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.615002037 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102148156 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134485972 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107244354 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226682646 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.180817205 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109225789 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131629034 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112023316 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.176848526 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20872827 seconds)
  done (took 47.139421166 seconds)
done (took 63.321766254 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266532718 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177440402 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.27849454 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.175853757 seconds)
  done (took 1.90425499 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.273443447 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156036005 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.253330118 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098184792 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.25949319 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097533636 seconds)
  done (took 2.078484058 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.18119763 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167770432 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145411095 seconds)
  done (took 1.439183385 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198588477 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213374653 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.321546708 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.230369022 seconds)
  done (took 1.991580653 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.294766938 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116026304 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123677047 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.235528365 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.251169503 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.204940763 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122104097 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173229259 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127751821 seconds)
  done (took 2.637341542 seconds)
done (took 10.992801719 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.40742425 seconds)
    (2/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.320870316 seconds)
    (3/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.253772533 seconds)
    (4/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.198403942 seconds)
    (5/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.223374888 seconds)
    (6/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.221501044 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.220814633 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109215278 seconds)
    (9/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109568661 seconds)
    (10/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.187702189 seconds)
    (11/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.368971343 seconds)
    (12/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.218732514 seconds)
    (13/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.293537241 seconds)
    (14/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.372730445 seconds)
    (15/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.276250931 seconds)
    (16/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.222234544 seconds)
    (17/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.202120961 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.151879017 seconds)
    (19/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.162084366 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.288773193 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.130653572 seconds)
    (22/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.231575523 seconds)
    (23/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.143653181 seconds)
    (24/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.363313548 seconds)
    (25/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.135808003 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120793302 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.128934368 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.208360946 seconds)
    (29/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125652075 seconds)
    (30/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.170513873 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111525768 seconds)
    (32/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.204860055 seconds)
    (33/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.136343174 seconds)
    (34/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.188842779 seconds)
    (35/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.188512906 seconds)
    (36/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.129037777 seconds)
    (37/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.205583505 seconds)
    (38/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.150085667 seconds)
    (39/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.121801759 seconds)
    (40/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.082305909 seconds)
    (41/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.187188039 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.200636785 seconds)
    (43/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.138631826 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.103436784 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.389268155 seconds)
    (46/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.077592494 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.141834532 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113677426 seconds)
    (49/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.330637607 seconds)
    (50/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.149595345 seconds)
    (51/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.122445834 seconds)
    (52/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.107354242 seconds)
    (53/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.133356571 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083829518 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08175735 seconds)
    (56/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.176899981 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.083491517 seconds)
    (58/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.172642192 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.129902591 seconds)
    (60/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112608178 seconds)
    (61/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076150542 seconds)
    (62/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.144215179 seconds)
    (63/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.136803167 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.164900711 seconds)
    (65/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.241123422 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.11032744 seconds)
    (67/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.099360104 seconds)
    (68/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.214890499 seconds)
    (69/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121345711 seconds)
    (70/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.176445269 seconds)
    (71/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106127448 seconds)
    (72/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.129149424 seconds)
    (73/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.143936898 seconds)
    (74/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084270979 seconds)
    (75/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.177607255 seconds)
    (76/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.142707366 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.143403573 seconds)
    (78/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116451459 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099046809 seconds)
    (80/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.134018781 seconds)
    (81/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079618999 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103713565 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.12572036 seconds)
    (84/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.146047012 seconds)
    (85/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109404373 seconds)
    (86/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.147649914 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104817988 seconds)
    (88/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084566104 seconds)
    (89/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.171736292 seconds)
    (90/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.103030583 seconds)
    (91/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.131814995 seconds)
    (92/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.153222381 seconds)
    (93/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.150466272 seconds)
    (94/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084168065 seconds)
    (95/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079921654 seconds)
    (96/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109774364 seconds)
    (97/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.131101428 seconds)
    (98/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085457262 seconds)
    (99/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.151664742 seconds)
    (100/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110462462 seconds)
    (101/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.106430616 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104487873 seconds)
    (103/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080129681 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.102836023 seconds)
    (105/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.167457243 seconds)
    (106/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103448976 seconds)
    (107/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08657734 seconds)
    (108/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.082114154 seconds)
    (109/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.152124002 seconds)
    (110/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109657848 seconds)
    (111/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.078979691 seconds)
    (112/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.122942307 seconds)
    (113/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.207105839 seconds)
    (114/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108763223 seconds)
    (115/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.131391653 seconds)
    (116/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.081681335 seconds)
    (117/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.07783229 seconds)
    (118/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099941342 seconds)
    (119/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129362359 seconds)
    (120/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08539908 seconds)
    (121/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.078568541 seconds)
    (122/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.080472054 seconds)
    (123/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.082671174 seconds)
    (124/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.10683986 seconds)
    (125/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123567668 seconds)
    (126/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122818006 seconds)
    (127/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077599812 seconds)
    (128/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.126461561 seconds)
    (129/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084964215 seconds)
    (130/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077456284 seconds)
    (131/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.143655786 seconds)
    (132/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.098466545 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103845683 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110750178 seconds)
    (135/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.076917955 seconds)
    (136/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.125125711 seconds)
    (137/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.080828584 seconds)
    (138/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080595441 seconds)
    (139/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085149263 seconds)
    (140/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077103343 seconds)
    (141/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.107354154 seconds)
    (142/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081278184 seconds)
    (143/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104256972 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.101953215 seconds)
    (145/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.171105255 seconds)
    (146/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077739465 seconds)
    (147/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.103014265 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.101418861 seconds)
    (149/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.10892965 seconds)
    (150/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101547898 seconds)
    (151/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078412483 seconds)
    (152/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077476893 seconds)
    (153/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.100183631 seconds)
    (154/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078673391 seconds)
    (155/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.078527795 seconds)
    (156/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.0800987 seconds)
    (157/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.086255827 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.122647025 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101617795 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08436552 seconds)
    (161/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.082115417 seconds)
    (162/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077206216 seconds)
    (163/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.100654498 seconds)
    (164/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113130011 seconds)
    (165/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085572726 seconds)
    (166/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084798009 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.132145062 seconds)
    (168/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102301382 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123676554 seconds)
    (170/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108677437 seconds)
    (171/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.103570348 seconds)
    (172/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.125746817 seconds)
    (173/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109737727 seconds)
    (174/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.133386703 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104859929 seconds)
    (176/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078033786 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110329765 seconds)
    (178/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.136909064 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085075818 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102436495 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.125769894 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122936545 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10314017 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.125859915 seconds)
    (185/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079108772 seconds)
    (186/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080262849 seconds)
    (187/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.077526969 seconds)
    (188/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.0805459 seconds)
    (189/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.132339402 seconds)
    (190/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079373525 seconds)
    (191/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085094987 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103034914 seconds)
  done (took 26.797786806 seconds)
done (took 27.745753467 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.239924902 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128191818 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111051196 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109201774 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.232467998 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116278504 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.150282903 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110982404 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118817636 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134769935 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100713067 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121189229 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133881103 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203509966 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137956985 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.10287887 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099748699 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.144511581 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.124599338 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126389235 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.232613135 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10266851 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.145019536 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102821948 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233270663 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104211186 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.10938647 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.137657667 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.122358779 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11048161 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.135255276 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102959221 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.124445495 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.148080534 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103580845 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110188178 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123953713 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085268093 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112268267 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111632417 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.14554014 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111762287 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110574754 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.126871098 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113140498 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110185372 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125963052 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11615445 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100114088 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.135619317 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105430412 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12797612 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109429212 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125481013 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100252445 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102303219 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144501647 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10260548 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123531729 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124993342 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104332819 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102453909 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.135911525 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104811644 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110786112 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101554454 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.135315034 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11265087 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109041827 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128498741 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103825407 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110924283 seconds)
done (took 10.012526838 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112543908 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146327218 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.231597685 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237575054 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128883279 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142687765 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116699474 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125207825 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.140266607 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12132917 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139713865 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159316937 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.240776165 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.11830069 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116365749 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.13919492 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114145835 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110135571 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.236427838 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125280343 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15145419 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.117270672 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.152847991 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11935377 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105605541 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.162423667 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111268198 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113274379 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129168615 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115909943 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125667262 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130328677 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110134389 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.1247734 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.147189487 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116739284 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116902421 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139040021 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106885205 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105890717 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141093295 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121170885 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10591978 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143615589 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114234167 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12078646 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137543805 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119330758 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107284864 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138194965 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108849963 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130134165 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142931151 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122679425 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.14153248 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120259559 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119992456 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118767902 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133905335 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120309764 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106696386 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.130959108 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108774247 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126974004 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.133847538 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.1205349 seconds)
  done (took 9.719969993 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130140885 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135642272 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.1406749 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117240336 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111367771 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125285826 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101118062 seconds)
  done (took 1.859099576 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.106995407 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.243014785 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.216855749 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.242287866 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.24189523 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.254970201 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124852878 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101225324 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165126061 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112227432 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245703199 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.273664654 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112210725 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143572461 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.221767001 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127879049 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.24711041 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103237723 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116615889 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.246461599 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118761391 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.15834742 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115422713 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103515913 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.239333645 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103244004 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.29178238 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146889256 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113235174 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115265132 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143283824 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.179456032 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.241067022 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116313094 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137645208 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.24370476 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.215678807 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142572209 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.256153604 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107523261 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.242173005 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117632841 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118507969 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.143565896 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120141827 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.233766572 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121738827 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117072899 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.143202462 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.252649104 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114947622 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.245283926 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115022546 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116194841 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.1389188 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12021114 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124671706 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.144106948 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.226088128 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146554063 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245273952 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.221032661 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.244737248 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.249087967 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125641915 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248034149 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.23472804 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115940877 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110096294 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.145618058 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.248582643 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116581752 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114757788 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.238416724 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119730172 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.250684764 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.249928511 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114234469 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.141685056 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107798967 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114641807 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.129232638 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.213437953 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143307712 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114846764 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119782745 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.161819896 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11705852 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.106985011 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152921258 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116609341 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.138808991 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.124245011 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116493235 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143332789 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.227946889 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.14046572 seconds)
  done (took 17.062420894 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.109986477 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104088522 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107595297 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129135165 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105034003 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104808907 seconds)
  done (took 1.677359147 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144747682 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117253686 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151125271 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119658055 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159746154 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.251118639 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.257174185 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11092101 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159782071 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125808131 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255120784 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.258018581 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256459766 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125309703 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.259906474 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119461981 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.259673436 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115121667 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.152053665 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116370551 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.11635826 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.14697228 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116199994 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.247263089 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118001183 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118253955 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138788066 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126401591 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149966924 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113107512 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120116297 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.142223782 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111650875 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111696564 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.258149952 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108940329 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.161137316 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120340494 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118723832 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145521832 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.258346029 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117100982 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122949197 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146337578 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112702043 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110578885 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146213396 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111782157 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.261515705 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119900148 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.146451017 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119783881 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118618973 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.145766023 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.111472527 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112050168 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.145910759 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.236526635 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.148172976 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111475204 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117901009 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.146227456 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112304279 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121072338 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14429873 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12044409 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109091817 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146813269 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114688534 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11774756 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145193617 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119330825 seconds)
  done (took 11.741283629 seconds)
done (took 43.046750641 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.617676526 seconds)
  done (took 2.634059933 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.92834662 seconds)
  done (took 1.943614289 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.293022399 seconds)
  done (took 18.340319324 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.418807011 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.463482394 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.088076307 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148216302 seconds)
  done (took 3.134221449 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.816584503 seconds)
  done (took 1.848140833 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296474518 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259191053 seconds)
  done (took 1.574004591 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.723438277 seconds)
  done (took 1.753520055 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.54479447 seconds)
  done (took 2.561787501 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.28390839 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.238009241 seconds)
  done (took 1.556297943 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.644023191 seconds)
  done (took 1.676215599 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.046068854 seconds)
  done (took 20.085941688 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25892488 seconds)
  done (took 1.295943657 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288070107 seconds)
  done (took 1.326909525 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.439706825 seconds)
  done (took 4.479801649 seconds)
done (took 65.240081103 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.117303592 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116575527 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116015691 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138867684 seconds)
  done (took 1.51423137 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.128422288 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117557335 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.144838082 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117633827 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123846922 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.141416088 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.118698907 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120736518 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11784671 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144234136 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117490517 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117077987 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145050185 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117112266 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114932217 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145588558 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120896461 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117218741 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143160576 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.11951197 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119120698 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143862163 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122772237 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120289316 seconds)
  done (took 4.078205204 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119377781 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108866127 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110197322 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132318493 seconds)
  done (took 1.513697358 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130043052 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129709917 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152535911 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126124889 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128724409 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153421169 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116021311 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114447385 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14009305 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126062602 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132123207 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155421183 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130757196 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117905737 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153872334 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11203606 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117569541 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154470905 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124552554 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124795142 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.14381436 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123952981 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121378523 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151544204 seconds)
  done (took 4.218055997 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.195751721 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128696936 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173806813 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159953477 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.176841127 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115307375 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142786802 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149213542 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123782702 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.118377366 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145846398 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16026172 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148529194 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120097963 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117943616 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148465836 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129544057 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123029354 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188820359 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122870029 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149344469 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129597962 seconds)
  done (took 4.207224054 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.125991047 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108809293 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.105929036 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134204739 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120582688 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111462701 seconds)
  done (took 1.753511062 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.114333189 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103468657 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103264863 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128186073 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108224554 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103015937 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.125802463 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104611964 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103699508 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102918986 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128457568 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103722173 seconds)
  done (took 2.377184407 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.326999568 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109737053 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134040638 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112118261 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113845537 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106558238 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145324136 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106709856 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.26370009 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10341612 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.131999155 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.192131377 seconds)
  done (took 2.893791119 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20304777 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145162088 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248719031 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.664560192 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158961322 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18598223 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275682794 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188080359 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174491916 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160614646 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210048544 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158340517 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178166601 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181891519 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165934848 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156367358 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158777175 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232747476 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165989801 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206192405 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180935586 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195620904 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185461816 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173023971 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138956976 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184580729 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120514723 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1261879 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189520201 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160789446 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194447233 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172593504 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139674957 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213939434 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22421814 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197481265 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266708483 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157537442 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167781864 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.214537888 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254873314 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140244918 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212765605 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150142136 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156083639 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181997252 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1772304 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.179396253 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.158374658 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143109519 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207100351 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198586357 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172483501 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160925037 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28900931 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157240918 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1394427 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254372898 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211449252 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19524254 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201815123 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124696469 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200771096 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213467811 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23414958 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140084726 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188782186 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124456601 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185846349 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202211244 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204522763 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155997075 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.231760782 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159051912 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167558587 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193863148 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150838043 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227534918 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191754829 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118872585 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14634948 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159100648 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125020722 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.212793184 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121077813 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23880016 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130594436 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.335693708 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203572028 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154486297 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184730492 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155789805 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186676589 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144733136 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.100516193 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169528475 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159507817 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180980071 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126951678 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180276083 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138198928 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123514577 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174489552 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122540578 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192206072 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.1310706 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189632259 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166008999 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.157308976 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175340107 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173611991 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.159436237 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192403057 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188057148 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155466314 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130958027 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239333868 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191249368 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135280622 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197545083 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191892619 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.173075097 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133281623 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189683642 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189383262 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169591966 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194446392 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165104315 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13272059 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.162671233 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168620118 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185171425 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151895336 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152283563 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.161359011 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214062161 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125562298 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165450053 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177265369 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158308686 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123820813 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133722277 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160518976 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139458346 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173786895 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136538575 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175662558 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16363123 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187634124 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155081197 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158259404 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171234695 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156780197 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167559604 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171948812 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119018115 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168257433 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221848582 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153297073 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177195377 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185774717 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180388 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194902914 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126949291 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207683619 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125639257 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.145405692 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159493971 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192936409 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159891281 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211205514 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202474652 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162899815 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187482925 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145577684 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193283486 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.209397046 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154291062 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.167768976 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171254987 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192332005 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120249453 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121106143 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.154545266 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136157931 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127478283 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163072395 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172069446 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190245273 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201214654 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164279069 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16309619 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187326603 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152046705 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15778312 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199377854 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137745259 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212797965 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212510898 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175563377 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164944554 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160679805 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.145399369 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125842814 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131266106 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18699065 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1359263 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159953738 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139816229 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214862906 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168273385 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174076922 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21448208 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162335821 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225530842 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119503223 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.186930513 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166031707 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1919945 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181987624 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133698336 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.184199525 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215654834 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14185387 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21737747 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164439607 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203730788 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217400848 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163764208 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129089907 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173735826 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157571059 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165544913 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160231705 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170997908 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130026001 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175657993 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13766241 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138468116 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209622936 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167476761 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176563823 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.183164845 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168032477 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151673598 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140680585 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197739092 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142554191 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103075611 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194019799 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217355496 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148258658 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179222589 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170979925 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154959838 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305689766 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211510358 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171960319 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163481583 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136504519 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195914283 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15946673 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187867005 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182641662 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168444054 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229372266 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170560542 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140785672 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158590075 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147354356 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177360263 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136081874 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.17693128 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160559747 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.169022921 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182575452 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163391815 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167112794 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200897073 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14423196 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.176089317 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137687516 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247884605 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163853447 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197584084 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.188090814 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163291037 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20638046 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122626906 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125044537 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.157858725 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182125863 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155759187 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17366276 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190553806 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207582963 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173904697 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187020794 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138505567 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.152917977 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165641311 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172255213 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183925363 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160749977 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136212991 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213257561 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.123935169 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155674164 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159274517 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303393975 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145260244 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197880048 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105961486 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.29860556 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128622603 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130491377 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186459798 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19234911 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131962023 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180508545 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197821832 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13831797 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18811832 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133334359 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203487679 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182081553 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1920489 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198590275 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143135007 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187151457 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157950737 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200019638 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14416053 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.174078802 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156715914 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218019979 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177173727 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15847444 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165610257 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192216538 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169927946 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198691529 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137370845 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207691868 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125845319 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190376273 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137013713 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149976443 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157282807 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189544909 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129881866 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200612553 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167914664 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156627869 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128408537 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143920359 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189981105 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138003898 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.15586828 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208544324 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128977674 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177336968 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2338168 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128673493 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191369625 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144103385 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156136875 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136507302 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168198144 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131597362 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172682553 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203094239 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129996058 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202468736 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162115364 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188948606 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153160846 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169228841 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.327433172 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154819667 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187833433 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176293829 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193505786 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175361786 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171746489 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194439655 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146247454 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191827857 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144588488 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.24710415 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161404798 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.193412885 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130670676 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169312856 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136810565 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.159799791 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151435356 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192679386 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139407147 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13352536 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192027631 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143729086 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.173079804 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140460357 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22412083 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148334848 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210328474 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21214985 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137226146 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198502489 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173220376 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154716175 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.162921091 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19824228 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143429646 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176798993 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133533798 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135680881 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237693905 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124588547 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184736167 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170623723 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193794735 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168351677 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.162900327 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173733248 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166504108 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172529765 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154165899 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150450456 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194763672 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132674229 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124869271 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197582645 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182604927 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162891345 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140769139 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.198762423 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19258277 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.15013434 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134666846 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299965111 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157888535 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219781321 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133363526 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164063387 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144337101 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182895154 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161825553 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194821457 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130302785 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1277253 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.171914821 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.155631959 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.163751355 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167312802 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208899615 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157583375 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210171849 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132601346 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279168795 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141551176 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195773706 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115579174 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127197603 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16743904 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13495745 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1402181 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207755163 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238134401 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.186493155 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.148093399 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135040554 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.154248663 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131022318 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161489103 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176600251 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191060347 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147436894 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102090603 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16664147 seconds)
  done (took 85.296096764 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164571654 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150134526 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166291335 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220008095 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192269615 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289677837 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227199014 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245414324 seconds)
  done (took 2.785882344 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122153503 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157850439 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142170554 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141253691 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109915977 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.485488448 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160791386 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118971322 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.15944153 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150905924 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132536224 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.561176335 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114728952 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143464383 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12014873 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132619018 seconds)
  done (took 4.077252199 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.575382698 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.526477179 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.733838129 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.288092319 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.254859518 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.199163694 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.714434116 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193189579 seconds)
  done (took 11.613373617 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.651192951 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.157420999 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.44857085 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.308167922 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.18089792 seconds)
  done (took 2.883083474 seconds)
done (took 130.239597947 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.127627466 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120783362 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12117463 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151573161 seconds)
  done (took 1.6457099 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.200570098 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.08898348 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091391297 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115931856 seconds)
  done (took 1.630279336 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.459228586 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090012462 seconds)
  done (took 1.714549325 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.156032689 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135112337 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162488701 seconds)
  done (took 1.605813728 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.139650998 seconds)
  done (took 1.27999322 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128181093 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123326828 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.275168794 seconds)
  done (took 1.671179981 seconds)
done (took 10.691609266 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124272511 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.922940186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430029166 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131998475 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710533049 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424255952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.397209302 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171184415 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173391956 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135426156 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131049922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688048031 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.408321197 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.871045651 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.367051903 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.899530842 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692290566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111129261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142260099 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112628962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.376066961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133167618 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111747801 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11033865 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.712892826 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419327723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108862676 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.910607222 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110133026 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11351599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.437653274 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110760038 seconds)
  done (took 20.827383446 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121998631 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165634661 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144393959 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111612496 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112396283 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.13746968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120509085 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121289102 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199711836 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108783399 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158828135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.10955647 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113987575 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136394394 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135917082 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108706423 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111271531 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140577769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117585273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111209993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.157872697 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108590052 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1111733 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138145442 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109644808 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130644792 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136571858 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121411765 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109586207 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14065745 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114446134 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109634933 seconds)
  done (took 5.226618518 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.163062371 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174955246 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146632743 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147672873 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185483042 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112555718 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19482789 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175173815 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202080673 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110786925 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130731853 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135687315 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149752003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110013688 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162202481 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109970508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112398511 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139365027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119668424 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111971319 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158679789 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110134473 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111402852 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138986006 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111206059 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13261114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137457637 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122876452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109298432 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141717122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116111391 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109984215 seconds)
  done (took 5.546907476 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129945604 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125388222 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131988626 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.159871983 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119974373 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123447828 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152687289 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119763161 seconds)
  done (took 2.216690864 seconds)
done (took 34.962157087 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142802907 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.12889586 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129884799 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152835871 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.256896128 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.117202969 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127093169 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116851324 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.153494496 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130811191 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109004888 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.146952243 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130430779 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120531359 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.256489791 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124396363 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.262550167 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.260586077 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.117736351 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125297684 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.148982791 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233766258 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.152918384 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119444993 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.25019754 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112137871 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.251866992 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121501342 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.12038072 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.140675118 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.230554207 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.152181799 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117913742 seconds)
  done (took 6.399165387 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.248375387 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.149443682 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.120829501 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116733207 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120045244 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146271184 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.27718972 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.119973169 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.11836907 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116756084 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.147767876 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.230239525 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.154762814 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.114577303 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120571999 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107310196 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.281167014 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.149209151 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.111399894 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.091690394 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113464872 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.146586319 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.262269499 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.144308753 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119085819 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.117630604 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.149191256 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123579567 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.12023051 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120006075 seconds)
  done (took 5.620851589 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.130962306 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132378318 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137018589 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214078491 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14618708 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159566305 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138351796 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134373754 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.168393967 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113711018 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127431148 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176751379 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129116998 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122227854 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145853937 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131540468 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13536356 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142476442 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12078155 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130098122 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160658445 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131146607 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135701913 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148722109 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112098246 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12040965 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15129714 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128418064 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121091566 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126564756 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.14281116 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116202027 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114786797 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176421009 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115146321 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154902927 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139555117 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124955562 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.154172886 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146402132 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116941298 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115066704 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.166829377 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167053212 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.142857967 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127288002 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12415481 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127576643 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.141107957 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131267202 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154461437 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.142100322 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133913861 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112873847 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140725013 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122010157 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113673364 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.144697491 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12942767 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115920271 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.16689894 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120729614 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122659556 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.14340159 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125413358 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111971419 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112119812 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.14562586 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139846781 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121471864 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.178396587 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113514738 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123871073 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.153255971 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12403131 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123882593 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.140884431 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124879345 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123735505 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.146984271 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127356582 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115124074 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115448669 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.157976611 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134027892 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127642476 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.152840831 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126892365 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116075692 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.143372165 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131015066 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113914782 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.146631083 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126976041 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.113062505 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.14536145 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12702006 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124403494 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.138578572 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139825955 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.117288062 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112563748 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.166054687 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11654318 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118324583 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.152354172 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154675121 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113864672 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.153360869 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126570053 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113490045 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.150637909 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.11858798 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11238912 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.159193561 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128663919 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120301662 seconds)
  done (took 16.91797047 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.362834866 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.345290856 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.186263711 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.427584278 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125579995 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.275751106 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.340545586 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.345539698 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112977173 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175879333 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174765512 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.31391608 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144553417 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142199045 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.345404283 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.402139158 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.174500067 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.147939802 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179061487 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126843848 seconds)
  done (took 6.026958635 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138868998 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147966578 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163454594 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140365915 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123669184 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.1585817 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114362355 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134077523 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152664884 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124239736 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115353837 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.155720753 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126949129 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130300531 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156248302 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.143921812 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121547085 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147869409 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135327053 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117893332 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.127072741 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138704417 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121744591 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164874271 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132640647 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124234003 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.139074857 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119189238 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120116714 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122187176 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.145592574 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131692041 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120174572 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.131945193 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124612355 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127664604 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.146930405 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116601339 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118236352 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.143058291 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129134128 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126847117 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120819255 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12499715 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131957376 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108753637 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12707376 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.154512565 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.1051162 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132138179 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155291268 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129021261 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12042685 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.162871068 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121175121 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129669178 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151931064 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128959773 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118137803 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.139042239 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113424985 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117825756 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.121821937 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.155974881 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126022411 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132231564 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.157226048 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113476892 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117288991 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.145317562 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117968705 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127762969 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.162017405 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123499185 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120135604 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153378724 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122515225 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093613253 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124383724 seconds)
  done (took 11.617523011 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144844484 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125272602 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131413748 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176099489 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127160168 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119305192 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153452453 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133383792 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128343803 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161585104 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129796713 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126600954 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164632052 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124624555 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123293057 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158577185 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127834246 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150717522 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161050534 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142374757 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128960486 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.147692682 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12681274 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124727818 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171252065 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126108655 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140111047 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.156697262 seconds)
  done (took 5.126912457 seconds)
done (took 52.86339647 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.323465126 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.499647009 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.286143752 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.288090473 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.310106972 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.294507889 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.305972533 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.290851666 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.564062796 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.259792619 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.286727327 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.28684325 seconds)
done (took 29.176073718 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.360736859 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.793743585 seconds)
    (2/2) benchmarking "String"...
    done (took 1.578726765 seconds)
  done (took 4.548021594 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.27595923 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.277898857 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.52921055 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.278033198 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.292132438 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.277749161 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.281781447 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.277654193 seconds)
  done (took 16.387535181 seconds)
done (took 26.746193069 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.296519472 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.464006685 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.520735692 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.255581337 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.27489785 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.273531217 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.274240559 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.290716597 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.276395444 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.256642989 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.658353301 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.539708719 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.281754958 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.651558881 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.254206391 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.304582064 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.284723262 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.527437571 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.273274278 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.316895198 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.253363391 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.256261167 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.276156049 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.280546582 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.277108805 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.284697651 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.265833202 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.288032406 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.467459096 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.27645704 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.302668095 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.273125701 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.279238101 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.273015262 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.275826234 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.294847083 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.472859174 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.281407072 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.257300819 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.300599675 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.47112144 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.284147472 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.283614309 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.280077553 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.256482147 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.275144848 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.268519032 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.380155312 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.293966274 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.294018412 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.356338138 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.655627069 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.288757654 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.291294348 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.278375399 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.504100263 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.279150331 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.314487976 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.294300193 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.293257365 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.279608363 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.277072749 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.308118112 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.276695646 seconds)
  done (took 148.169915029 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.27553262 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.280548134 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.276636219 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.334819703 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.282369731 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.280083232 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.277987552 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.278017145 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.282655114 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.309700722 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.279608165 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.272164671 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.278355899 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.214072138 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.286423774 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.296042578 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.278675593 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.277310038 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.280526595 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.277114081 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.278460125 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.279953112 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.286433071 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.272982971 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.308990425 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.339574737 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.283925516 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.286941071 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.289250731 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.278867684 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.309921076 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.277939372 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.825387381 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.12945878 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.289025509 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.308937645 seconds)
  done (took 82.840941642 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.276331949 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.277210051 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276204261 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.307676644 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.278473827 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.279214416 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.784499785 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786163585 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.236478783 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.399910239 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.471417945 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.475405156 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.278639289 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.365140002 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.287957782 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.275117362 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.295701963 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.30253876 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.281671292 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.281225074 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.276036144 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.781582015 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.290081859 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.441287541 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.287597745 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305843527 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.666408633 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.331808276 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.272005975 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305407155 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.598644574 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.316444843 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.274294168 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.557788485 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.557398143 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.380051526 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.273184671 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303540061 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.279195723 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.553346895 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.275481102 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.276325009 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.277061585 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.281699367 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.852682259 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.28109911 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.769316311 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276203032 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.179227571 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.276708632 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.278542281 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.175677509 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.805654531 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.27222007 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.277766838 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.281210853 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.27550897 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.276707611 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.304175234 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.181645069 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.365394416 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.275136265 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.282058156 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303840165 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.277622004 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.328268374 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.2775876 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.612133089 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.332790426 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.372663146 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.761259458 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.274426084 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.366056243 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.385375661 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.274577492 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.275605578 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.274468795 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.276580981 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.274738107 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.384886777 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.272205148 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.91430777 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.434112111 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.287840888 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.404427549 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.365576628 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.273046577 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.540699177 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.275802979 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.279541635 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905958202 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.366292451 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.27192309 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.277896429 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.278400679 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.908188628 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.758812321 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.445613269 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.277091838 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.746517855 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.277797373 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.088522363 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.753573131 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.849080276 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.276059666 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384735358 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.435326635 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.288794804 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.280111607 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.369079514 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.278025234 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.337338089 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.273084484 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.674557783 seconds)
  done (took 379.148238995 seconds)
done (took 611.336363471 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.157454488 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.10605776 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.245705525 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.111687999 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.099388533 seconds)
  done (took 11.893231359 seconds)
done (took 13.066870142 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.453503297 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.447973533 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.330182766 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.455029314 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.308624419 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.466927941 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.434456148 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.295323052 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.381810844 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.348983967 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.380618765 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.323642105 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.308618796 seconds)
  done (took 19.109853987 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.546057999 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.290345211 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.349825703 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.52214038 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325397875 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546204857 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.580769263 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.292127933 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441589783 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.325420472 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.301375142 seconds)
  done (took 18.697657111 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.544026016 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.291087676 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.348649897 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553089216 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325301739 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.544136123 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.576318839 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.291524496 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433557799 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.33502472 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.304053802 seconds)
  done (took 18.723132914 seconds)
done (took 57.706615593 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.313891636 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.373192423 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.311373617 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.301631265 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.297307989 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.299094248 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.303476839 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.299116768 seconds)
  done (took 11.673518636 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.297257971 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.297384698 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.296799752 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.298223838 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.296161238 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.299639614 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.297328164 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.299271013 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.297435276 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.298593452 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.301309952 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.300055479 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.29784013 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.298337253 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.296744711 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.298398244 seconds)
  done (took 21.949484993 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.298942857 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.298390275 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.297656627 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.298861102 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.299238761 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.299562443 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.29938557 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.298310864 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.299864456 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.297670989 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.298946072 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.297503563 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.297106756 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.298468971 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.298973205 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.302197041 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.300084567 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.300263029 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.303393994 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.297255446 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.301317623 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.299101803 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.298362847 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.300022594 seconds)
  done (took 32.359059617 seconds)
done (took 67.158261662 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.292870903 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.279135684 seconds)
  done (took 5.749305528 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.35687114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.36107473 seconds)
  done (took 3.896934549 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.302094278 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.300274898 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.30122899 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.300994374 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.301735773 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.302882182 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.30210295 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.299446236 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.301031367 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.300578182 seconds)
  done (took 14.189428722 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.30088323 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.303338519 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.300530408 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.300780838 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.301386793 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.300077407 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.301183087 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.300451194 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.300544108 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.301055652 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.298206616 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.299082781 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.302805482 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.300438203 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.302090912 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.303473165 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.301389387 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.302229397 seconds)
  done (took 24.597747684 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.313031546 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.30964244 seconds)
  done (took 3.801581976 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.417887287 seconds)
    (2/7) benchmarking "second"...
    done (took 1.333612825 seconds)
    (3/7) benchmarking "month"...
    done (took 1.395252399 seconds)
    (4/7) benchmarking "year"...
    done (took 1.389554495 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.335071256 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.303868106 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.325008719 seconds)
  done (took 10.675254116 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.270657156 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.558233684 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.730910412 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.423641573 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.255233416 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.280930057 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.24186741 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.278981912 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.27968273 seconds)
  done (took 14.491716445 seconds)
done (took 78.5787969 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.263434554 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.277433461 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.284514116 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.27818362 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.616937879 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.290895283 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.263126546 seconds)
done (took 16.441473949 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.248763211 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.243088747 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.246903881 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.248433818 seconds)
  done (took 10.151973236 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.23134808 seconds)
    (2/2) benchmarking "read"...
    done (took 1.585241688 seconds)
  done (took 4.977935766 seconds)
done (took 16.294083923 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270611674 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.26962933 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.271949928 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.268956394 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.271317461 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.271613443 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.269114737 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.269279287 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.268234039 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.267644035 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.26893394 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.267969805 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.268200955 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267856026 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264660099 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267286639 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266269647 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.266589896 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264417159 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.265958636 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264349022 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266358985 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.262213887 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.262780465 seconds)
  done (took 31.581994142 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.263560912 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.26267115 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.263855454 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.26416566 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.263140513 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.261545894 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.262626963 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.262012573 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.260386526 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.26171256 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260736828 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.263405756 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.261455956 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.259135754 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260067534 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.259353879 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.260265916 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258909588 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257629034 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.259051102 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.258614336 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258895531 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.261079424 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25805842 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.259971211 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259140615 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.259881012 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.2587644 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260065075 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.261073382 seconds)
  done (took 38.974635674 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.261255743 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.262844422 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.260385113 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.258910258 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.260826628 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.261870076 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.260072957 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.260686929 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.2599037 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.261825742 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.260987229 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.260548042 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.260800072 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.260581965 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.261375736 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.261179055 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.261547877 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.262186345 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.26156481 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.260025219 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.261663148 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.26184384 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.264295706 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.261527607 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.261872453 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.261250565 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.262974809 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.260951006 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.261787818 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.262893517 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.261983503 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.262248695 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.260818535 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.261028627 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.262177829 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.264231226 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.263953388 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.261093936 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.262656317 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.261214602 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.262514139 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.263280248 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.263153129 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.261846076 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.264189157 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.262570263 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.261913089 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.261246657 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.263198507 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.262601876 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.262934385 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.262932898 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.26224328 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.264475583 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.263449745 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.265984932 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.264735728 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.263523022 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.263694168 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.263465046 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.262787673 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.263825326 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.263353278 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.264202555 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.264394614 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.26302417 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.264298533 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.261928881 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.26300863 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.264923469 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.262356348 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.264711813 seconds)
  done (took 92.042630384 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.265387579 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266608563 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.263742797 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.265205319 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264787655 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266456701 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.265203187 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265106964 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263552587 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.265559552 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264483015 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266318879 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264904801 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265888614 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266794275 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.264138672 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.265004029 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266579685 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.26515667 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266719771 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266472467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.265210621 seconds)
  done (took 28.995345341 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267561019 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267317946 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.266106022 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.26851966 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.27008979 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267677577 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.265797143 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.268510973 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266395199 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265729838 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267049016 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267064055 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.268947522 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267582718 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265855794 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268335703 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265688471 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.26840241 seconds)
  done (took 23.969945443 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.267907646 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.268044007 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.267875011 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.266173646 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.267154176 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.271654274 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268712266 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.267290741 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.267508791 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.267343561 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.269020957 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267615717 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.267771816 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269456153 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269145316 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.268358227 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.269488098 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26932961 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269272562 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268722113 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.269246194 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270431775 seconds)
  done (took 29.064295628 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269038121 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26943926 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.268840553 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.267536073 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.267928822 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.271250915 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.269386671 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.268247176 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.27129835 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.269199776 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269147346 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.269762511 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.269740219 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.270297367 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.269625135 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268686037 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268588905 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269247437 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268434876 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.269145507 seconds)
  done (took 26.544685579 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270298605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26915313 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271252946 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271129857 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271150659 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.270042255 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268782311 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.267139558 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268819406 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267080516 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268451373 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268545195 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26985525 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.264254146 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262784429 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2629866 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261717933 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260236947 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261413311 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261276177 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.264813296 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256224129 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2567493 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.256441832 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.256389978 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256119164 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258759693 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256498139 seconds)
  done (took 36.557275642 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251660613 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251313909 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.252129342 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.251604167 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.254258718 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.251474972 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.253564393 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.25090515 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250002446 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252682824 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.252242461 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.249951931 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250901028 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.251113735 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251661428 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.250853306 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251873549 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.251092791 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25112024 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250561967 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.251971104 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252057603 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.250540858 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.251306397 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250061116 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.25181894 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253286314 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253780178 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251497037 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.253804217 seconds)
  done (took 38.703429585 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.271364896 seconds)
    (2/2) benchmarking "in"...
    done (took 1.271072969 seconds)
  done (took 3.686933401 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.252157705 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252306807 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.255922785 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.251976116 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252687413 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.251364916 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.251893913 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251281694 seconds)
  done (took 11.16513534 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.244668281 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.252590446 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.253328846 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.252468223 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.252317294 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.245035409 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254380513 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.255952953 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.244730487 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.246065743 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.246402507 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.244415967 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.248520059 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247984526 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.247178236 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250333885 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.256975369 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.254911971 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.25522475 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.254981421 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254109488 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249670134 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251342338 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.258670047 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246799898 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.253880079 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.256260587 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.258677609 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247582244 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.253386968 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.251359718 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.258204116 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.254647335 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.256523413 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.255463954 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.255105125 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257548218 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254306074 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.255715189 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261018613 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256593677 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.256876846 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.250831735 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.252588538 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253153902 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.260695357 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.256587144 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.257644948 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.247888878 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.250201867 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.262247621 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250992775 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.257010817 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253789323 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.255238966 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26163452 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.265657851 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.248454473 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.249800105 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.258477296 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.265056794 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.258468745 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257010968 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.263355607 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252520791 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.258318028 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261316234 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.264675335 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.259101413 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.260384898 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.259874607 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269391012 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.262613718 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.265383809 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261359329 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.26137505 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253390865 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263700242 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260910648 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.263439228 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.265643856 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260690625 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257937191 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258345649 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.255566249 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.261645961 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.261559001 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.261250555 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.252040376 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260971467 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.269620996 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.260570093 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.254728095 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.255943258 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.256824099 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.26727831 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.252123078 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255780495 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.263100975 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.262801302 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263647393 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256110028 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260549579 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26589834 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263494513 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.263285259 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.268016395 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25607028 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.266264741 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.269093445 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262625406 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.254021811 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.258978242 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.266573951 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256103304 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.260251184 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.270480633 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.255113534 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.264700704 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.260239284 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254169596 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.263407254 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.265309215 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.260147329 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.250142092 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.263233077 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257842042 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.255705968 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.262870482 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.25649624 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.258111709 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.254813585 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.266027887 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.250242428 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259283853 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250339738 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.258626792 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.25277686 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.25450252 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.249861143 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.253445149 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.247458002 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.24904978 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.249997735 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.257261772 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.249847711 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.255828955 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.251549391 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248586785 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.254271393 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.251591927 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251480073 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.241584307 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.254885666 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.245250971 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255329925 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246508615 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.256330962 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249079084 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.253741985 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254308919 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.241476538 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246195872 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.256464913 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25027485 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246926672 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.253242691 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.25220718 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.252501719 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.246738893 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.254836814 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.242423813 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247206977 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.252391436 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.251977973 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.254277701 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.246380472 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259363464 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25247184 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255189891 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.246325963 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25077293 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.25557239 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.256667393 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.263093238 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252258194 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.250518771 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.249053489 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.248880514 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255875792 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.248430867 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259144519 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261089789 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260357746 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.250168594 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.257635214 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.250134973 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.256743751 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.251942998 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.262983515 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.257831533 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25460888 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247999198 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260836339 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.25119568 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.259095183 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.244002759 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.256585342 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.255983907 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.255015819 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259620105 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.249302663 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253634546 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.259590979 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25547981 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257675585 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.249545694 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257775931 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.248916188 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.245445758 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.257829942 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256908468 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258196724 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.264298159 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251991565 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260251384 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.256377634 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.250493467 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.258931447 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253735196 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.252459315 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260326632 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.257604353 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.25310309 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261865611 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.256965661 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251981297 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.256567574 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.266311119 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.256331156 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.249775962 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.261152368 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.258434225 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.260672764 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.257781847 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251123243 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25951563 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.258876856 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.268807427 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.252400053 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.262813053 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.252372072 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.259972024 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.25493661 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254624101 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.259557975 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259855742 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268417226 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.25831363 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25108177 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.262114363 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.259974527 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.258428752 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250944441 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.26216719 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.259769156 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.259279577 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.256286573 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.254342581 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.260329865 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254123961 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.260123767 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.254091038 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266210835 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.274187116 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259972183 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.260466467 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.263959546 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261844158 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.259870498 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.25066316 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252483724 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25796302 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.25622982 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.254328405 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.264591235 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256728432 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.263690503 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258968719 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.261550432 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.261513261 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.261692138 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252401859 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.264910526 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.260705434 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259973085 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.252878355 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257817029 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.257467968 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263177948 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.261532847 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.257277981 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267064219 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266998198 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259553859 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.259376536 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.256028857 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.254694186 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.259428081 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.261248454 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.254746462 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.26880008 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.255470212 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.259812392 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.257606544 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264977212 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.271336092 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.255618217 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.264524542 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.262225104 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.254796292 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.259930653 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.261256762 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266843868 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.273620117 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.256840878 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.264839378 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2642112 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262957985 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.262940971 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.263581129 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265585422 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.263664557 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267323942 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.267724521 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.261059856 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26569217 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.273918993 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.262638042 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.265557157 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.254398914 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265429899 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.272348742 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.258432324 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.264149329 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.260221988 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.268480742 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.263884643 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.264027548 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.265643709 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.265196506 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269532686 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.270023354 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267004859 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.265608208 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.269665325 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276711599 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271456909 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.276315429 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.260325259 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.270333618 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.265902496 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.261855658 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.260914321 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.262813823 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.270194164 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.258930689 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.269812103 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.265230123 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.262364835 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.266302505 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.27466047 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.258917868 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26723769 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272554196 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.256711819 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267500182 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.264789369 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.257664915 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.269335522 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.269537766 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.258151587 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.260979508 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263934002 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269403351 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.26212506 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.268758727 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259668672 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271527212 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.265519035 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.264005755 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.268077717 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.267160313 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.260630724 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.267567766 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268080778 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.277241667 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.262895829 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266289582 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.263646242 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.272860074 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.27772545 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.264462144 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270722015 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.269421889 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.260617636 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.26261612 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.274754507 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262743995 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268028913 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.259227096 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262958228 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.261785455 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.269979786 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.266377687 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.274361955 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.26240223 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.264340618 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272330181 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.262242322 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270264806 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.264849969 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.2765685 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.261476153 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.261891068 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26997128 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.26186066 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27384449 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262739607 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.261716266 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264622502 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.27218129 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.265281152 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270475575 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.262988242 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.261794718 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.275291377 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270442569 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.265765589 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.262179847 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.270717931 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.265227312 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265768925 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.264203052 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266594273 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.262991712 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.275101835 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266499752 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.264318545 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.261089854 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273415697 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.274709031 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.273063622 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.264179347 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274331872 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.280770414 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274809652 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.260608073 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.267238203 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.269368973 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.273532511 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.271139792 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.262677745 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280151969 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.274435375 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273077348 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268779109 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.269765453 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.26167411 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271878462 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273705527 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263506263 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.277720155 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.268005627 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27743041 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271836719 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267151037 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.260741308 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.267904206 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.266124739 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.267144158 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.273662825 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275633512 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.274202466 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.269838317 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277082732 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273828728 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.270908729 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.272544478 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.259759494 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275529289 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.265697657 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.273410705 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.275110044 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.267280589 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.277428491 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270032271 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264922483 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.268705653 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.274233451 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.27136227 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.265223615 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270677124 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.278591375 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281705853 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.274386181 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266258548 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273805507 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.277724888 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27492874 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.275373732 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.268274803 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285725959 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.283323255 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267721426 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.272955727 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278578402 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.28555322 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.27543995 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.272075295 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.27150897 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.271878956 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.278732163 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.274786285 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279203809 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281471808 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.267966039 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280137997 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.270255957 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267859801 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.278153275 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284624326 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.276172969 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268960588 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.285463717 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289950788 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273895787 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282657137 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.283894754 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.278557347 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.281288425 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267772984 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.276881877 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.271110673 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.281399753 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.273980421 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278135705 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.277975805 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.268213889 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276426538 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.286083549 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.286124137 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279644656 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.270508038 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.271734662 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.280825687 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.275852194 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.278104108 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275890653 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.276409464 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278696116 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.270139194 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286852721 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.293302976 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.284246536 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.279443759 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.280460355 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.278563491 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.281904186 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272458524 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.283164956 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.279548724 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.279144952 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.276875763 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288253528 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.279837369 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.272592976 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.276403816 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276004437 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.280967442 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.288372278 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.294362488 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.280084456 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.280378368 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283635463 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.277894539 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276545065 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28319402 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278210778 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.275706357 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.276622081 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284454806 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.282572695 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.281465318 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.272099591 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.286034617 seconds)
  done (took 754.062042784 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27751645 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280882042 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282037448 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279673507 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281584767 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281765126 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283438308 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282159163 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282237024 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284372555 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.283711556 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282590747 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280002587 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28165507 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280876836 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280390479 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278999121 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284152288 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281513181 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280271819 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280612102 seconds)
  done (took 28.078421073 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.280197651 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.281077612 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282881412 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283581676 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282194005 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282247773 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282608996 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282556288 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283172162 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280716142 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.283501089 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280408101 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.282888989 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283338043 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281482185 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284921189 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.283767087 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283496564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.283137445 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281199521 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282271443 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.282147092 seconds)
  done (took 29.381901775 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.283030911 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.280813561 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.277379496 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.283944708 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.285208497 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.281393915 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.286435189 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.28502582 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.283938224 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.277000927 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.276133447 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.277891746 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.276169116 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.288552411 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.279204879 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.289361457 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.284630304 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.284825007 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.284859329 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.285544939 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.284947887 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.293970357 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.286563617 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.277757973 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.284246246 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.28391002 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.287546462 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.286503188 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.27229515 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.285324895 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.286295928 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280125445 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.287423492 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.288979375 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.28022311 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.289425817 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.286772394 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.286356928 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.28652053 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.284004673 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.294120549 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.286385962 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.289793559 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.296463835 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.285163105 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.278503879 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.289587822 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.283921398 seconds)
  done (took 62.826195312 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.286758834 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.28658372 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.286151499 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287267845 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.286668905 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.286248641 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.288341357 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287201399 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.28576888 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.28834963 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.287750466 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.287414317 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287300867 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.285726611 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.288839856 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28688238 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288754456 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287848339 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.287618575 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289565253 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.286097022 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.284412734 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.288782176 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.285656256 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.288692948 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.288731317 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288440947 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.287293426 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.289508278 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.286469233 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289056776 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286594074 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.288094276 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.28991189 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.287792926 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.288339619 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.28954005 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.28917403 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289931815 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.28942249 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.288886085 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290328002 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.289974268 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.289192322 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.288830427 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290006969 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289013044 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.290469514 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.291328508 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.288084174 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.291127814 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.290609143 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.289875725 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.28929864 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290964021 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.290712756 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.289090174 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.288409096 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.289378747 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.289148027 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.287639228 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289797337 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.289417604 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.28896927 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.288836841 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.28973331 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.28702711 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.290773609 seconds)
  done (took 88.79227456 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291935583 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.288964475 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293935032 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290882901 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293386224 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.28986058 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291536301 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.29149875 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289739504 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293240731 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293369918 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.293681229 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.292056907 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292107116 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291558378 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292148338 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292748629 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291363888 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29389414 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29267407 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.291086133 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292021626 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.293036689 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.294235783 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293373272 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293704201 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.294645357 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289872974 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292253794 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293078499 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293695204 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.292112563 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293594089 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293727838 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293536192 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.292321477 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294047916 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293641262 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.293329744 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.294921076 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294242022 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291585715 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.294053155 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.291478905 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293425415 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293426632 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294880245 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.295758981 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293447941 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291667028 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.293461865 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296378432 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293705611 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294679415 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.295025409 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.292272235 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293323849 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293221963 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293309246 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292705004 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294670101 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.293572944 seconds)
  done (took 81.342674601 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294984528 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292362142 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.294072562 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.293499929 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294001376 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292597564 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.29561398 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.291037898 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.294414827 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.293920377 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294773757 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292932029 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294964145 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294275588 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296662021 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294644658 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293939572 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292716867 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294197228 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294523541 seconds)
  done (took 27.059321248 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.293194904 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295946377 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.295423296 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290908715 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.294435564 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293832698 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.292223424 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294111869 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292689419 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29359482 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294535877 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294770705 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294508426 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293065913 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293198102 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293927878 seconds)
  done (took 21.882886923 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.291748278 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.293521384 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.29461663 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.294397824 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.293136616 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.294466228 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.294953942 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.294631601 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.294790093 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295584125 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.294438626 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294377343 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.294401847 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.294581913 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.293355168 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.294224693 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294405748 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.294064696 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.29311236 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.293747702 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.295450514 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.2939623 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.294877309 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.295852539 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.295316689 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.295437753 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.295311685 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.295622408 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.294160379 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.297031571 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.295645114 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.296755025 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.298184009 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.295565281 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293997965 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.295265118 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.296772962 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.296187874 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.297597957 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296929192 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.29736819 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.294801995 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.29844648 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.295891983 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296073621 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.296239593 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.297756991 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.298501958 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.298366667 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.297971587 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.297837663 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.299779752 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.294662621 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296559385 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296446802 seconds)
  done (took 72.435835384 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295590466 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298757062 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.297405676 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297878918 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297272797 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.297472051 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295457027 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.298714495 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298170605 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.298013797 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297492707 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297987621 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295483285 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299050775 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.299788774 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29844848 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296590704 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297939207 seconds)
  done (took 24.539368188 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.300688332 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.297140482 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.300101836 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29682645 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.298744834 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.2999411 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29980051 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297359429 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297596911 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.297756577 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300022625 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.300258311 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298414859 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.301268672 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300680541 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296429317 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.298063105 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298996785 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.299211315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301448206 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300823545 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302680963 seconds)
  done (took 29.7669874 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.290208951 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.2893768 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.289455363 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.301659869 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.300349419 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.291306307 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.29225373 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.290065024 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.308802238 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.312112122 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.311101123 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.29867271 seconds)
  done (took 16.761207726 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301919415 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302073287 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30141052 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301966783 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303502795 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302669221 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302013852 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301535854 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298891428 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303429892 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301522168 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300978539 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304530375 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300825257 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303697567 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303169151 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302278477 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29990682 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300638825 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303133806 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301601476 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304747784 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302733254 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302334663 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302062239 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304241549 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303390796 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301549309 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300663965 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30161574 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303257722 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301547233 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304709039 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304767027 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303572114 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303044268 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30609875 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305192996 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306761719 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303009527 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30425229 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305063724 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303620201 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302747303 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30475551 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30623043 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304157641 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304334965 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302386405 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305437884 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305838525 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305707118 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305004845 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305180015 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30325853 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305144849 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304205208 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303841181 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307185092 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306102303 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304815016 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305069208 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302888647 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306199294 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304876539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305535725 seconds)
  done (took 87.219756169 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305225665 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306571549 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307761111 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309809762 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306624001 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305092432 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306284189 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303950374 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304942746 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305275294 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307223509 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30645502 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308565634 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307813594 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308530482 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30703596 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306833203 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308180989 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305523648 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305606701 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308416052 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30869305 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307285922 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307267439 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306703074 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308007503 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30782792 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30680715 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308099059 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305420719 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3060638 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306216752 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305035598 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306015218 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309552853 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306694148 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307016045 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308797138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305341289 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308520336 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30715807 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31079147 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306416464 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307012397 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307638354 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308861329 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307901193 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306155804 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308936231 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308446059 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306078778 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307310346 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309906043 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309241842 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309248675 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309572116 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305374861 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307238773 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311556365 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311376577 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311008578 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310125987 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312619782 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310919299 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308608692 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309503888 seconds)
  done (took 87.497465579 seconds)
done (took 1774.093247142 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.470389171 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.424524331 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303090387 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.316987941 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.302596893 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.299143665 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.313909467 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.300761669 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.30312949 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.300557719 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301443477 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.492789611 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.336263749 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.299085434 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.3019403 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.397604391 seconds)
  done (took 26.662710555 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.324707292 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.312831439 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.413294292 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.313128639 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.331963934 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.486613877 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.362404229 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.308987243 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.467243098 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.328771272 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.299957447 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.329152467 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.311386418 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.299984593 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326015596 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.484662803 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.54681452 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.303354031 seconds)
  done (took 28.747667674 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.724089762 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.305812805 seconds)
  done (took 5.228781392 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.328399746 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.310365294 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.312234217 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.308521304 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.301519941 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.302914016 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.310009887 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.309533034 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.303318935 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.429579698 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.313405776 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.32411887 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.310454987 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.31000259 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.319047463 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.353833619 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.455191064 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.320992748 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.31794132 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.316355 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.310012063 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.397143955 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.350272593 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.320715427 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.425242759 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.309327465 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.318142448 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.318402322 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.42486146 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.323409829 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.310879216 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.312244665 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.311752301 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.206977046 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.832931239 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.304991087 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.33607583 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.321358889 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.319286334 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.441316124 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.312260114 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.318941831 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.304204104 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.828954176 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.41405983 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.426350838 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.315603525 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.314375313 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.314422663 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.373633949 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.313278028 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.315794622 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.370405976 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.079288811 seconds)
  done (took 83.957995243 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.363851308 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.307649509 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488834289 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.319763054 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.305109076 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.305508273 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.305542678 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.572666332 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.316844145 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.307648291 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.609667253 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.908936912 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31547342 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.370735198 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.344206961 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.360206984 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308559683 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.304952868 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.306893874 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.311513222 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862661591 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307619258 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.306646754 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.383006565 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.347047083 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.82767385 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.307623392 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.307089604 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.321266521 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.306514026 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.881562087 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.319978505 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.352757725 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.309904934 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.58961117 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.682419112 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.63834517 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.315970544 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.329094354 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.310681372 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.33381982 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.818850037 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.662650633 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.308805887 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.310005292 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818895867 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.308211327 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.316315853 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.308674969 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.57826726 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.309570134 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.308662961 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.309652135 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.307774328 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.3093398 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.360698084 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.363393578 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830686728 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.3119498 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.309342145 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350673379 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.316369437 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.318561108 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.312707319 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.307520433 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.665647206 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.557189124 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.315416891 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.662787039 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.872834155 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.310714023 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971398205 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.309593019 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.31490931 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.337240154 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.309657131 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.325218522 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827687772 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.335313885 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309392113 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641549967 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.312658035 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.609306406 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.332012007 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.31435301 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879470138 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.318365246 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.351886147 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.311756231 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.319173999 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.310841207 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.316189911 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.593022781 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.351568276 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.311114077 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.312664997 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.3365654 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.311127374 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.325946298 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.311415148 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9592594 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.31811177 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.326361938 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.314560174 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.312126226 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.312301115 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.313204038 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.314982759 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.591538649 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.312869605 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.330387489 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.313490067 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.311736788 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.311408129 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.386769424 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.31372577 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.607340307 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.318764512 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314781012 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.314662975 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316277176 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.318735986 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313327073 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.327824885 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.274090151 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.624109626 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.32862626 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.32749418 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313570773 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.315548994 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.330427567 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316072942 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.369838818 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.316725196 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102195959 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.353421089 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.361712174 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.313615798 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.323281834 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.315837089 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.335422249 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316736322 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.610309821 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.597145402 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.539299391 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.320012623 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.316145931 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.119088853 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.348412422 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.496762681 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.330151607 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.315760957 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.593260917 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.528479072 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.316518955 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.318128111 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.322132563 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595203416 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.325682851 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.627837359 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910820688 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.31613664 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315025373 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.103907107 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.12338168 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.315427927 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.319441983 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.609385627 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.33615606 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.316420144 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.316873679 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.318721408 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.315314393 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.32136619 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.324965009 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.316201312 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.315619388 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.659406665 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.510204334 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.333037272 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.321758628 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837916385 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.339441522 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317516844 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.321950718 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.319753636 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.317231679 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.366981417 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.321036577 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.343701945 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.315713054 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.326652189 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.865291119 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.31711675 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.319673552 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.509656063 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048272213 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.319414651 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.317752018 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.317940136 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.374074356 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.869285041 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.341158513 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.612434426 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.328963663 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.360584639 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319806098 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.325218035 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.867220981 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.332097992 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.319692293 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.053722357 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.320524529 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.757876475 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.318194976 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.328610414 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963672795 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.319103525 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.322352462 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.327954088 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.322750767 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.636944566 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.320995371 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.36412271 seconds)
  done (took 494.048193702 seconds)
done (took 639.840860369 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.319966128 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.319320409 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.322657278 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.325533902 seconds)
  done (took 10.504330535 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336444918 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.328306829 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.337127771 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.327465526 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.337099382 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.326582696 seconds)
  done (took 9.209906793 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.321949899 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.321368373 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.324903909 seconds)
  done (took 8.185906915 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.517995562 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.341399251 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.664651854 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.335697536 seconds)
  done (took 9.077964609 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.336821859 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.335505482 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.337984484 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.338847864 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.339056311 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.340613127 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.338500501 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.337957676 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.339985558 seconds)
  done (took 13.261377596 seconds)
done (took 51.457777288 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.385984747 seconds)
    (2/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.520011846 seconds)
    (3/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.389016278 seconds)
    (4/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.401005743 seconds)
    (5/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.383683655 seconds)
    (6/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.300093675 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.393830476 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.358627052 seconds)
    (9/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.356426639 seconds)
    (10/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.306249147 seconds)
    (11/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.312929868 seconds)
    (12/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.407160429 seconds)
    (13/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.415450494 seconds)
    (14/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.60439453 seconds)
    (15/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.450112378 seconds)
    (16/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.312776516 seconds)
    (17/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.507031999 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.405657015 seconds)
    (19/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.457968826 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.52978873 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.480866761 seconds)
    (22/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.400068694 seconds)
    (23/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.30663911 seconds)
    (24/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.564088874 seconds)
    (25/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.367358522 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.563357933 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.414171688 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.609807583 seconds)
    (29/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.327193656 seconds)
    (30/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.420842425 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.395914627 seconds)
    (32/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.476834301 seconds)
    (33/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.359971838 seconds)
    (34/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.303227575 seconds)
    (35/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.486628128 seconds)
    (36/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.416158614 seconds)
    (37/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.304341561 seconds)
    (38/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.39749424 seconds)
    (39/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.457846371 seconds)
    (40/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.449819895 seconds)
    (41/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.543300849 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.30546814 seconds)
    (43/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.373503643 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.577550103 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.303607456 seconds)
    (46/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.5515082 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.448849451 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.433318418 seconds)
    (49/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.305202693 seconds)
    (50/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.442379842 seconds)
    (51/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.428467961 seconds)
    (52/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.605943867 seconds)
    (53/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.483237368 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.316803329 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.599855626 seconds)
    (56/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.440586082 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.482083688 seconds)
    (58/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.343126343 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.447575467 seconds)
    (60/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.394816999 seconds)
    (61/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.306886359 seconds)
    (62/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.419558658 seconds)
    (63/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.403741028 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.307873191 seconds)
    (65/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.332124265 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.446620529 seconds)
    (67/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.307114999 seconds)
    (68/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.429709755 seconds)
    (69/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.415748117 seconds)
    (70/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.512966615 seconds)
    (71/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.435495279 seconds)
    (72/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.414471627 seconds)
    (73/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.347177032 seconds)
    (74/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.495632034 seconds)
    (75/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.308683066 seconds)
    (76/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.443928469 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.472222276 seconds)
    (78/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.356346141 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.446221393 seconds)
    (80/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.36258073 seconds)
    (81/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.544700948 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.353351713 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.446106965 seconds)
    (84/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.5406244 seconds)
    (85/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.368772289 seconds)
    (86/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.402084436 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.471300778 seconds)
    (88/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.56745556 seconds)
    (89/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.673314598 seconds)
    (90/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.431157831 seconds)
    (91/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.55032531 seconds)
    (92/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.573433778 seconds)
    (93/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.388783308 seconds)
    (94/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.540415037 seconds)
    (95/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.42314326 seconds)
    (96/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.371704649 seconds)
    (97/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.362254008 seconds)
    (98/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.307541429 seconds)
    (99/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.590137854 seconds)
    (100/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.404210004 seconds)
    (101/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.321009995 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.434264508 seconds)
    (103/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.474240871 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.478147535 seconds)
    (105/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.445207145 seconds)
    (106/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.333902619 seconds)
    (107/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.318891769 seconds)
    (108/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.53856024 seconds)
    (109/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.563996609 seconds)
    (110/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.36803026 seconds)
    (111/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.35907522 seconds)
    (112/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.412346628 seconds)
    (113/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.508598637 seconds)
    (114/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.370699081 seconds)
    (115/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.36146594 seconds)
    (116/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.463575033 seconds)
    (117/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.51846692 seconds)
    (118/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.440004368 seconds)
    (119/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.440135041 seconds)
    (120/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.308479116 seconds)
    (121/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.376560986 seconds)
    (122/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.453976492 seconds)
    (123/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.541240458 seconds)
    (124/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.531698208 seconds)
    (125/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.4630603 seconds)
    (126/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.425821734 seconds)
    (127/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.458711919 seconds)
    (128/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.328606286 seconds)
    (129/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.487933594 seconds)
    (130/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.310676981 seconds)
    (131/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.499784361 seconds)
    (132/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.313854223 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.436344901 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.397808604 seconds)
    (135/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.336464522 seconds)
    (136/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.395625618 seconds)
    (137/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.58623703 seconds)
    (138/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.674017282 seconds)
    (139/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.751497286 seconds)
    (140/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.312977277 seconds)
    (141/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.539990202 seconds)
    (142/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.487061661 seconds)
    (143/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.510121909 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.460974023 seconds)
    (145/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.3107289 seconds)
    (146/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.446245414 seconds)
    (147/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.364193674 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.484640155 seconds)
    (149/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.608679389 seconds)
    (150/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.443557419 seconds)
    (151/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.3327717 seconds)
    (152/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.314593272 seconds)
    (153/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.412448975 seconds)
    (154/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.31272836 seconds)
    (155/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.364688059 seconds)
    (156/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.48560195 seconds)
    (157/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.314394299 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.396079822 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.414010499 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.313521208 seconds)
    (161/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.511372815 seconds)
    (162/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.31231905 seconds)
    (163/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.321588068 seconds)
    (164/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.413405236 seconds)
    (165/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.312326597 seconds)
    (166/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.513111071 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.371438318 seconds)
    (168/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.450127333 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.442439063 seconds)
    (170/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.371558 seconds)
    (171/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.312561001 seconds)
    (172/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.47188276 seconds)
    (173/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.369724782 seconds)
    (174/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.363531308 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.484840277 seconds)
    (176/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.32333108 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.441949139 seconds)
    (178/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.482607841 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.31308105 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.358982443 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.434483636 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.527495917 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.438435358 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.363844288 seconds)
    (185/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.316620365 seconds)
    (186/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.548344332 seconds)
    (187/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.367673986 seconds)
    (188/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.42914155 seconds)
    (189/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.36679853 seconds)
    (190/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.402432477 seconds)
    (191/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.745228386 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.582533142 seconds)
  done (took 323.357565196 seconds)
done (took 324.577077419 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363711558 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.429641866 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.342598494 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.341546014 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344272697 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.342786076 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.370347599 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.345208696 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.356286352 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.359229606 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.342953702 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.353797554 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.359761755 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.35618211 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.378401086 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.34316159 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.344541111 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.35298651 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.358352188 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.363257775 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341303261 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344487274 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.374245019 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.342990455 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354922796 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351238797 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.348854409 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.345089375 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.352804112 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.359639469 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.34604841 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.351019726 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.362426991 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.356936163 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347685582 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.354002044 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344003276 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.430301997 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.36418688 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.357399063 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.355114793 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.362382072 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.351189318 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.349398587 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.357345981 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.373147352 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352872873 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.359779477 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.346838861 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.337187715 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367790592 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.360754971 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.355415183 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.336263638 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.34799524 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.360167601 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.355481242 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366563466 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.353744511 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347049837 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.378941843 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365998199 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.358751361 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354471756 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.354563472 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.360795116 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.355729372 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.362496515 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.354625765 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348910904 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348641859 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.356432044 seconds)
done (took 106.90777159 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.473095049 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.346714839 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.510305693 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.352930434 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.509209442 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.466357567 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.353406136 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.353966151 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.353580956 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.151978106 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.353093532 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.353604129 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.345149347 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.356095578 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.465808309 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.355052676 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.355833758 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.050693878 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.356920973 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.484535272 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.34686449 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.355102262 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.35439501 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.15139545 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.347700908 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.338855089 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.483281809 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.353474404 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.051504484 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.336341966 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.342484598 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.054248641 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.48287576 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.376826743 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.367074008 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.365705596 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.511405685 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.357541702 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.47676392 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.472557474 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.510905598 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.395304204 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.34301059 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.344446964 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.357337159 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.357349011 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.355377106 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.386929034 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.347865461 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.355833526 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.054288282 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.368113557 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.366293777 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.355163083 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.356120956 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.37564008 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.357748028 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.355942046 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.483944237 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.355734784 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.476007198 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.157075295 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.15968444 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.357250962 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.343201954 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.358674905 seconds)
  done (took 109.545138778 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.415168738 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.424603016 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.458507646 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.353718576 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.39794109 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.462078943 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.351997949 seconds)
  done (took 11.09595882 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.356258144 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.359292987 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396638568 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396531793 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.356708535 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.522852689 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358739048 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.359964267 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.35926789 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.398791396 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.360390681 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360038897 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.367190439 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.347359456 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396441172 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.359128882 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.472798879 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.350975753 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.359297559 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502553005 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35630905 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.36568313 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.399835526 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.362402869 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.355985363 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.356405533 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.129052763 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358565127 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359908814 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.35961215 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357321013 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.418311881 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.358763968 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.347027108 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358801346 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.462577699 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.358432258 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359366588 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.360269756 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.352181294 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.359357378 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.357693138 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.358080471 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.360176322 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.358371515 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.374821694 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.356704434 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.358569366 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.36029663 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359759592 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.400237546 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.35984084 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.360841295 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.36033112 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.404301737 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370461325 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.361301866 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.36006833 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.356410909 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359632309 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.50424388 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.399473177 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.36197718 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397032168 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359286191 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.35995222 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.36112989 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.361730935 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443526241 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.359109858 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.400273859 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.360535508 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.532266388 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.37682643 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.363642808 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.356373538 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.354290667 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35952863 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.350763729 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.358634206 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.360123279 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.352413408 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.359185995 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363783958 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361609391 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.510480927 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461020586 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.361745657 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.369476775 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.358616304 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.360867994 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.403870611 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.362120573 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361984239 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404307228 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.470992687 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.408668973 seconds)
  done (took 139.765185639 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.366536731 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.364595987 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357282726 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.38199744 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.356185296 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.354208472 seconds)
  done (took 9.420545522 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.355536159 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.366529222 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.36451137 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.364562341 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.36189401 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.36259254 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.362492864 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356494848 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.368457915 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.365585055 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.364624554 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.365783907 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.365703333 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.364868491 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.364490296 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.365230247 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.363691318 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364234361 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.365060144 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367943673 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.353788262 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.367690981 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365330047 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.357468634 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.3664942 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.367680791 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.380969233 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.365414937 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.365360421 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.365177366 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.368408354 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.365824313 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.36004924 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.363837536 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.372037093 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.357770964 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367482474 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.368358749 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.367983687 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.366747738 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.367082802 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365958415 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.365660227 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.366736793 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.359015058 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.363294074 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.371485356 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.382854694 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.368619605 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.367583521 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.367700465 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.368331014 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.367680906 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.367043768 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.361477999 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362908651 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.372286135 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.365885784 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.368261923 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.361259655 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368978004 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.368924412 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357686107 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.37077184 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.368053894 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.368636548 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.360945493 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.37261304 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369964682 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.36873444 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.368165169 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.370161333 seconds)
  done (took 100.589024605 seconds)
done (took 371.645599219 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.600589775 seconds)
  done (took 3.846263669 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.355046066 seconds)
  done (took 3.602134939 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.301846364 seconds)
  done (took 22.548463853 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.394185775 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.388690183 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.363965702 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.360058687 seconds)
  done (took 10.752192334 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.629150788 seconds)
  done (took 3.876459915 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.378107951 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.367847998 seconds)
  done (took 5.994020397 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.553450011 seconds)
  done (took 3.80036608 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.595572644 seconds)
  done (took 3.843053024 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.393872497 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.37344446 seconds)
  done (took 6.022399974 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.335610544 seconds)
  done (took 3.581029576 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.728603728 seconds)
  done (took 20.977294759 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.385856139 seconds)
  done (took 3.633861801 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.402862356 seconds)
  done (took 3.650010481 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.86252195 seconds)
  done (took 6.107031047 seconds)
done (took 103.479962423 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.355899651 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.360491123 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.36285296 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.360679387 seconds)
  done (took 10.685610365 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.437219625 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.436927437 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.442911936 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.427956662 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.431551666 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.434957507 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.409177822 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.412316344 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.427804095 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.425521708 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.439462932 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.431782917 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.437656387 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.399133677 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.423723321 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.441821384 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.426421791 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.444579308 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.410318015 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.430876172 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.372202494 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.431522148 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.423636597 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.373496673 seconds)
  done (took 35.422280521 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.856985527 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.435400408 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.517011155 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.415053199 seconds)
  done (took 7.471628068 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.476868466 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.481580896 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.498499158 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.539083345 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.580941926 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.505896483 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.401617921 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.3975695 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.384403867 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.480497207 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.565608092 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.478192679 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.693102015 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.375327435 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.691465003 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.372570278 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.373687316 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.477483924 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.530747672 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.556884996 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.372751726 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.479633822 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.482676652 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.47953809 seconds)
  done (took 36.925883207 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.386034261 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.389907758 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.376554795 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.389502275 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.373758472 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.374637017 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.377797924 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.383139234 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.376572449 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.376612547 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.375303311 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.391129021 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.375773959 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.376633859 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.382699447 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.380183526 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.378323118 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.383849037 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.385631688 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.378749579 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.376757226 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.382788624 seconds)
  done (took 31.621963752 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.359503619 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.358751934 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.710606533 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.619117119 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.36118782 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.360701784 seconds)
  done (took 14.020811772 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.432373428 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.573444718 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.372683111 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.707788077 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.79928335 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.373991321 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.366478334 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.604538028 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.90366196 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.888577411 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.42772771 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.441461808 seconds)
  done (took 20.143782503 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.372336676 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.367694477 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.374567586 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.382957216 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.421720556 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.375805192 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.376385785 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.363090287 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.428321096 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.424086836 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.375876237 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.42428191 seconds)
  done (took 21.942558508 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454398185 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37330409 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.389699294 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429817815 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377707197 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372917572 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.44759797 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101462349 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.38359543 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64965129 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373944207 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462060857 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.621590445 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373465615 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380564572 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.328474979 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607455091 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853596316 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380996427 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375137797 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427315464 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377333691 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385911124 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.58209035 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381102333 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372080997 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.635701686 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374881014 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651326756 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626406578 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627165531 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375954843 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65082812 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019050656 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483979632 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578066669 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380946835 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374533319 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.345344777 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.402565425 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385675389 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380691151 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627457993 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376323122 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374938767 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387739233 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105129705 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.389221229 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.377946584 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375079558 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630493426 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459252762 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.382500562 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373539035 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428346017 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379189976 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.38109612 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497524021 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018923276 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374565218 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395524578 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.380291117 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377072102 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378825232 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019322231 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.389583807 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.383624406 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38197953 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377403534 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37754319 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403541536 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375767576 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.39985248 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376250611 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129476223 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384888816 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397921476 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911983879 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383889291 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.38425657 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60350912 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37814791 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377891603 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.378121996 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377024478 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105874598 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391194594 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.347768011 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442335211 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094607485 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.585154339 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402216931 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407986534 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601242373 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.347656135 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378249106 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.38140858 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388674874 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402100497 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.101594633 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381562877 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.387167358 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627133062 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.590586466 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380615715 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.340971285 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854657017 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384529461 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.407303463 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381673058 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.589118479 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.988875645 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648213075 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393808623 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417865318 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381381738 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16993034 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387562387 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.407632449 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39249513 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658814408 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.192599866 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385587629 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453834766 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38288976 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379182659 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3785362 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38862647 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38044385 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.563385986 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392023551 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.64087474 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.38162808 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38241991 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.383083452 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388461999 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.388893446 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604642444 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382952842 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663133501 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379092251 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384699072 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382442847 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.601583217 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.386999888 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.389776549 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721397191 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386533483 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386785154 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644232763 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415720487 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494322722 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41372066 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.385295968 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.635085784 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.38789757 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.389498976 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382661802 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388311568 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387841026 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.391649848 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381041184 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9899974 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364739148 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391209993 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385632877 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.399628468 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458426409 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39234668 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590476425 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.392214992 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379482497 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.392294364 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.383553801 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609673159 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639770246 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.399773823 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566585694 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.854800046 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.995425079 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403954815 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.382861193 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.384309461 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.382754054 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384576213 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382284807 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384375743 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590242157 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652776532 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384171628 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.99806188 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393959378 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386344235 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.416401002 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643979919 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.395143306 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384376937 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.386166035 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420597221 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402813712 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646694426 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607107197 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.400999521 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384602089 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.905227426 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393566664 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387487615 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386219676 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41538782 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386911986 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287833473 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730501834 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378363407 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644974331 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40310766 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.406924917 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.384764119 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399658266 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399445969 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.39434839 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395659274 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.593132259 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394118239 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395998584 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023535211 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146929518 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946908004 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39456699 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.41402251 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391518932 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116138325 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388740442 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388663734 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63026731 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114956173 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395566016 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862726464 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.405718045 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143281083 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650539365 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613801925 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402327507 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.39218512 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653258432 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601227949 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414345434 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387876853 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393567986 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.356316491 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944781556 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391040163 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571790116 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116459089 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392654335 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395174824 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.384831096 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.394702427 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805863665 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393322005 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388608164 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393011359 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393254667 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289515937 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399703565 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389302887 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029178336 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396801923 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.869129889 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392849706 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.596252424 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65362904 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.625376689 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.393761102 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.400506927 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.638257906 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650012261 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3923047 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396215969 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950322584 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.252431653 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.39828237 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392760889 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182466941 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408549313 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678613289 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.406340278 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.400487441 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404024825 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393586932 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39458363 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.389201101 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39956899 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363783111 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877748365 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.401563374 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387622284 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406382213 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396295791 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639452042 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.408541218 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.003930323 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629386876 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397527109 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423701256 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.397361864 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40624474 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.368806257 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391238228 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390959803 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408021075 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618465517 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390032766 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.366364055 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388958121 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608513968 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389767022 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392089936 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617932413 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.397694683 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.401613684 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158406919 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431367918 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400067702 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400647775 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386228043 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432140387 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465879691 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601561445 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.65724931 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654292044 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789809798 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398168027 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39899819 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.41147207 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47572911 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400128284 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.410271513 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.39876204 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005250026 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167820774 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.019520276 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662547853 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395318149 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40666025 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393345652 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636069252 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394364165 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673915895 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39520895 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.387965549 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416915676 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401876211 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401300306 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62880999 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66928199 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394274935 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395347726 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400522546 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.394908483 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659451207 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.610006204 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886578978 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95676789 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403351006 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398945947 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133029102 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677393397 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39669251 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395722121 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397004969 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.413888755 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.397670418 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.40803529 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409219498 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627697524 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655865386 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053044853 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.659044955 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.570115266 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.321369822 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408487743 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648461343 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228385737 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606291625 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021368803 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120487338 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655455952 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46951598 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607353565 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.404351617 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637011358 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.397228378 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403197238 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398081624 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399522005 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.39669474 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.657182213 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017126985 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657892516 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.402943967 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.395756241 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434544627 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.608057646 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62803183 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129728727 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624545931 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664046091 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406615052 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39764292 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022268324 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667523088 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400392423 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.405357764 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617807687 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40505056 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437810191 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.276701333 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.399533757 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943992574 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.61797993 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420857823 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403158683 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.123414699 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02801811 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.407901794 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903904225 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408330922 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405434106 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681422479 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.408884929 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406113709 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691160368 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.410303171 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.4076352 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61891979 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.020216647 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176727854 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.424210331 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403647286 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.409890733 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40377321 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392822246 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405445363 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40172822 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.803579915 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407247941 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404429681 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418910178 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.415681435 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412058145 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.407648835 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404527356 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.410142155 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.39193636 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.393342123 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417258027 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529976095 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968058621 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408372698 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.020553905 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.742001606 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65323683 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410892732 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.379255238 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.408927617 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404534456 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404533622 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404648961 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399570665 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958429465 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.413957564 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.669230165 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412463265 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.616229457 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614908727 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404533231 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619655799 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41766479 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430382556 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.373731537 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403951749 seconds)
  done (took 989.053997001 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.418403418 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.395043108 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.413713383 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.395628263 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.427358143 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.416241488 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.421944198 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.481808743 seconds)
  done (took 20.650342068 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.403947776 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.404699236 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.408144661 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.408739437 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.404139721 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.88442761 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.400170229 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.404972392 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.417809057 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.405759508 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.407477015 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.028599075 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.405054194 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.408050808 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.416443613 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.406830696 seconds)
  done (took 32.897151895 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.144317964 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.435658695 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.026302153 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.448642118 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.395344569 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.406247942 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.559429924 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.400854409 seconds)
  done (took 26.099282814 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.410728916 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.411107181 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.410872633 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.413836144 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.415183454 seconds)
  done (took 8.344263486 seconds)
done (took 1256.527765673 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.41372644 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.414046715 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.411659172 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.413743957 seconds)
  done (took 6.93694921 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.376769235 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.376523118 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.379055761 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.394339667 seconds)
  done (took 9.811393291 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.078274999 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.929274585 seconds)
  done (took 5.294250666 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.941063243 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.934681811 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.929639009 seconds)
  done (took 7.090039043 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.697378287 seconds)
  done (took 2.981987797 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.38095538 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.402535721 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.400860177 seconds)
  done (took 8.471051105 seconds)
done (took 41.869788921 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.397740262 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.160754151 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.556443632 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.400387463 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.560964143 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.579972914 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.651669061 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.408730259 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402285971 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.428593374 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.39937222 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.582922572 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.635517291 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.163754497 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.639795181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.166315419 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.562992786 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.407082456 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400331388 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.400725074 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.654350993 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.401061905 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412570934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.411976452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.569253233 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.559428235 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.409259455 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.165503331 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.399257672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.409153988 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.546968698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.400918441 seconds)
  done (took 83.533733765 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.400247687 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.413847677 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.412284566 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.40100722 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.422496842 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.408030594 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.401058006 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.400719067 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.41669406 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.412316332 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.403533145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.41769972 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.405292504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.404029495 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.418622193 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.403118479 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.425857974 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.409371435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.404516248 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.418319147 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.402275149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.414152525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417264129 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.405432064 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.419858877 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.402845422 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.420056138 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.401058954 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.404181213 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.404606734 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.406003316 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.423821967 seconds)
  done (took 78.410288653 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.409304796 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.403999508 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.410937045 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.40577804 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.419061114 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.431162168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.404072524 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.401987923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.414836535 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415090566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.402132318 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.433866977 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.405324572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.405534325 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.408212278 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.403457153 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.404446652 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418442887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.410048308 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410830971 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.40753404 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.404692478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.406658152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.404887117 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.411495031 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.407704208 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.405537318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.407412926 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412553342 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.405387902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.412776064 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.408772357 seconds)
  done (took 78.403499444 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.645874946 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.421691797 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.425175479 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.416192186 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.42654956 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.422233408 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.419090486 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.653404423 seconds)
  done (took 15.120162112 seconds)
done (took 256.751906866 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.417796711 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.901335231 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.446211641 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.424684554 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.433652214 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.445670337 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.622114462 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.446708185 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.608019438 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.422080038 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.434517545 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.43215446 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.217423261 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.560832417 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.209294986 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.336675807 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.291896877 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.407491816 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.98748549 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.643856961 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.446792562 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.424168607 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.227142735 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.304815658 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.386036518 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.478510385 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.478893449 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.573958476 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.533795669 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.476019143 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.897656749 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.427563882 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.421123499 seconds)
  done (took 65.059945471 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.415954266 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.423873539 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.425927547 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.42426782 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.42493203 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.425719496 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.415730035 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.424873548 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.428010959 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.42587553 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.427052963 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.427287274 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.427194956 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.426369222 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.425681804 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.404869857 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.415635253 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.427183515 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.417730053 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.398760333 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.427180954 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.426430452 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.428867512 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.427604008 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.428086465 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.427572704 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.429257388 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.42819905 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.425658853 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.428622662 seconds)
  done (took 44.005930537 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.428920443 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.987477705 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.149584014 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.429393246 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.420242949 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.423710364 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.7104005 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.432679169 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.421785826 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.421911434 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.890850643 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.433129481 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.451780885 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.160495969 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.422216467 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.432323773 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.426982402 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.420518007 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.000373621 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.437595182 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.704264509 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.433239719 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.707222164 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.436578892 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.424543469 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420290711 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.422150936 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.237346019 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.44602613 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.894385292 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.19573819 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.707919793 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.158897581 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.211549503 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.195993466 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.435005833 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.430881191 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.89957068 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.428528567 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.423322415 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.703555604 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.42950456 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.167587508 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.111772993 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.438758837 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.430852481 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.265052903 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.895860615 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.660590717 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.433603783 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.200466583 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.430723248 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.432126854 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.423866239 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.663488091 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.425120012 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.420183603 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.269141763 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.427980131 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.707345689 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.438966035 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.423984423 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.000088727 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.430001573 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.996153418 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.426865358 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.429734732 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.42453566 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.165679425 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.426825329 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.122860243 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.443802457 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.432499452 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.897448296 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.001115809 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.309223854 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.424319649 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.005741753 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.186020061 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.722925446 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.432092711 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.21539027 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.725003791 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.432723128 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.436598587 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.435691896 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.433705637 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.542134507 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.707393805 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.047504617 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.124373891 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.27211341 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.712094704 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.436105669 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.426236807 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.271234519 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.435783528 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.434338307 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.16981096 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.128975143 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.448588091 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.430800532 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.114734476 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.448156694 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.712341329 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.436133946 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.214879384 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.426041745 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.497370766 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.434707906 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.432144409 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.428637486 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.711211359 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.435903149 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.434816511 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.115965394 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.934367992 seconds)
  done (took 198.540433982 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.423285421 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.422463878 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.422387628 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.41832121 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.421149618 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.429259168 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.419225243 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.421754954 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.424970916 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.420420375 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.422937284 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.430624188 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.426409719 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.420994514 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.420259908 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.424833709 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.420514755 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.433236409 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.422931579 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.425919589 seconds)
  done (took 45.775456202 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.439393279 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.986445889 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.951882748 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.447029663 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.438503107 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.428428401 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.483303881 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.439818011 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.441091572 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.726309158 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.606118277 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.43963423 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.439057199 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.436442169 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.949505158 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.418697448 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.725427243 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.990856689 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.447169239 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.987456709 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.416102187 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.438175726 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.428931743 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.983251883 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.742550612 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.714682081 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.491981614 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.986867247 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.447409576 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.438265092 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.984512399 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.444687046 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.42985822 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.972511409 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.44668104 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.453684249 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.439274042 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.486567361 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.489717747 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.726035146 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.987407751 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.715995262 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.458327295 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.595073963 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.443350543 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.412107064 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.990966275 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.438650572 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.412518345 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.442492051 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.446017733 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.957595984 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.438259173 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.961417301 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.446798392 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.44225719 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.978562041 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.959998951 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.950553763 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.604906164 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.4293696 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.708007589 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.447403641 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.993935107 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.44617174 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.443942951 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.442764347 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.599919253 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.983624093 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.714158223 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.73008259 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.730638413 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.443786424 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.496403202 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.43863553 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.724601969 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.501168567 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.821437789 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.728700824 seconds)
  done (took 129.400530724 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.691006566 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.550820675 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.807426848 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.011216838 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.932437187 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.570960075 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.55108492 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.668754161 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.45428859 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.552770631 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.082334051 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.528848185 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.141459973 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.496068283 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.542462803 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.57141421 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.823319939 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.385454138 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.055843864 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.046911994 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.458349411 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.538569469 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.983364948 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.629455783 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.447638855 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.013132424 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.355062589 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.949048909 seconds)
  done (took 54.1476113 seconds)
done (took 538.221767505 seconds)
SAVING RESULT...
DONE!
